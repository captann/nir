{
  "functions": [
    {
      "id": "func_001",
      "name": "SystemInit",
      "description": "яя головка от патифона заря",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 15,
          "context": "extern void SystemInit(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 99,
          "context": "SystemInit();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 84,
          "context": "void SystemInit(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "Тайлер ",
          "type": "Дернер",
          "description": "Бойцовский клуб"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": [],
      "is_deleted": true
    },
    {
      "id": "func_002",
      "name": "SYSCTL_RCC2_R",
      "description": "er",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 29,
          "context": "#define SYSCTL_RCC2_R            (*((volatile uint32_t *)0x400FE070))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t",
          "description": ""
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define",
          "description": ""
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_003",
      "name": "SYSCTL_RIS_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 30,
          "context": "#define SYSCTL_RIS_R             (*((volatile uint32_t *)0x400FE050))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_004",
      "name": "SYSCTL_RCGC2_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 31,
          "context": "#define SYSCTL_RCGC2_R          (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 80,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 85,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 759,
          "context": "savedPeripheralState = SYSCTL_RCGC2_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 765,
          "context": "SYSCTL_RCGC2_R = savedPeripheralState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 768,
          "context": "volatile uint32_t delay = SYSCTL_RCGC2_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 12,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 17,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 24,
          "context": "SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 236,
          "context": "#define SYSCTL_RCGC2_R       (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 26,
          "context": "#define SYSCTL_RCGC2_R         (*((volatile uint32_t *)0x400FE108))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_005",
      "name": "GPIO_PORTF_DIR_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 61,
          "context": "#define GPIO_PORTF_DIR_R       (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x400)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 168,
          "context": "GPIO_PORTF_DIR_R |= (GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_006",
      "name": "GPIO_PORTF_DEN_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 62,
          "context": "#define GPIO_PORTF_DEN_R       (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x51C)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 171,
          "context": "GPIO_PORTF_DEN_R |= (GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_007",
      "name": "GPIO_PORTF_DATA_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 63,
          "context": "#define GPIO_PORTF_DATA_R      (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x3FC)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 187,
          "context": "uint32_t ledState = GPIO_PORTF_DATA_R & LED_MASK_CLEAR;  // Очищаем биты LED"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 221,
          "context": "GPIO_PORTF_DATA_R = ledState;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_008",
      "name": "цикла",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "основного"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_009",
      "name": "телеметрии",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "отправки"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_010",
      "name": "диагностики",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 248,
          "context": "* @pre Система диагностики должна быть инициализирована"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "Частота"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_011",
      "name": "watchdog",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 76,
          "context": "uint32_t watchdogTimeout;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 88,
          "context": "bool watchdogEnabled;   // Добавлено: флаг watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 166,
          "context": "diagState.watchdogTimeout = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 182,
          "context": "diagState.watchdogEnabled = false;  // Инициализируем флаг watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 188,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_WATCHDOG_RESET, \"System reset by watchdog\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 691,
          "context": "diagState.watchdogEnabled = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 692,
          "context": "diagState.watchdogTimeout = timeout_ms;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 710,
          "context": "if (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1991,
          "context": "if (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2022,
          "context": "diagState.watchdogEnabled = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2023,
          "context": "diagState.watchdogTimeout = 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2032,
          "context": "while (diagState.watchdogEnabled) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "Таймаут"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_012",
      "name": "IsPeripheralReady",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 79,
          "context": "bool IsPeripheralReady(uint32_t peripheral) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 87,
          "context": "while(!IsPeripheralReady(peripheral)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 165,
          "context": "while(!IsPeripheralReady(SYSCTL_PERIPH_GPIOF)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 15,
          "context": "bool IsPeripheralReady(uint32_t peripheral);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "peripheral",
          "type": "uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_013",
      "name": "EnablePeripheral",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 84,
          "context": "void EnablePeripheral(uint32_t peripheral) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 162,
          "context": "EnablePeripheral(SYSCTL_PERIPH_GPIOF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 16,
          "context": "void EnablePeripheral(uint32_t peripheral);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "peripheral",
          "type": "uint32_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_014",
      "name": "while",
      "description": "Ждем готовности периферии",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 87,
          "context": "while(!IsPeripheralReady(peripheral)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 102,
          "context": "while (1) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 165,
          "context": "while(!IsPeripheralReady(SYSCTL_PERIPH_GPIOF)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 70,
          "context": "while((SYSCTL_PRGPIO_R & (1U << 0)) == 0) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 105,
          "context": "while (count < maxLength) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 124,
          "context": "while (UART0_FR_R & UART_FR_TXFF) {}  // Ждем освобождения буфера передачи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 169,
          "context": "while (processedIndex + sizeof(CommPacket) <= commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 143,
          "context": "while ((GetCurrentTime() - start) < ms) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 205,
          "context": "while(!(ADC0_RIS_R & ADC_RIS_INR3)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 293,
          "context": "while(!(SYSCTL_PRGPIO_R & SYSCTL_PRGPIO_R4)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 294,
          "context": "while(!(SYSCTL_PRADC_R & SYSCTL_PRADC_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 373,
          "context": "while(!(SYSCTL_PRGPIO_R & (SYSCTL_PRGPIO_R3 | SYSCTL_PRGPIO_R4))) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 374,
          "context": "while(!(SYSCTL_PRADC_R & SYSCTL_PRADC_R1)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 665,
          "context": "while(!(SYSCTL_PRWD_R & SYSCTL_PRWD_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1305,
          "context": "while (GetCurrentTime() - startTime < RC_TEST_TIMEOUT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1339,
          "context": "while (GetCurrentTime() - startTime < TELEMETRY_TEST_TIMEOUT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1454,
          "context": "while((ADC0_RIS_R & 0x08) == 0 && timeout > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1596,
          "context": "while (elapsedTicks < ticks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1915,
          "context": "while(!(ADC1_RIS_R & (1 << adcChannel))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1964,
          "context": "while (GetCurrentTime() - startTime < 100) {  // Таймаут 100 мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2032,
          "context": "while (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 295,
          "context": "while (heading < 0.0f) heading += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 296,
          "context": "while (heading >= 360.0f) heading -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 172,
          "context": "while (filteredYaw >= 360.0f) filteredYaw -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 173,
          "context": "while (filteredYaw < 0.0f) filteredYaw += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 131,
          "context": "while (yawError > 180.0f) yawError -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 132,
          "context": "while (yawError < -180.0f) yawError += 360.0f;"
        }
      ],
      "comments": "Ждем готовности периферии",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "периферии"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": [],
      "is_deleted": true
    },
    {
      "id": "func_015",
      "name": "InitializeGPIO",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 91,
          "context": "static void InitializeGPIO(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 160,
          "context": "static void InitializeGPIO(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": true,
      "scope": "static",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_016",
      "name": "UpdateWatchdog",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 92,
          "context": "static void UpdateWatchdog(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 104,
          "context": "UpdateWatchdog();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 175,
          "context": "static void UpdateWatchdog(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": true,
      "scope": "static",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_017",
      "name": "HandleLEDs",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 93,
          "context": "static void HandleLEDs(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 180,
          "context": "static void HandleLEDs(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 401,
          "context": "HandleLEDs();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 423,
          "context": "HandleLEDs();"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": true,
      "scope": "static",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_018",
      "name": "UpdateTelemetry",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 94,
          "context": "static void UpdateTelemetry(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 147,
          "context": "UpdateTelemetry();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 314,
          "context": "static void UpdateTelemetry(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": true,
      "scope": "static",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_019",
      "name": "main",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 1,
          "context": "#include \"include/main.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 72,
          "context": "static uint32_t mainLoopCounter = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 97,
          "context": "int main(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 146,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / TELEMETRY_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 151,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / DIAGNOSTIC_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 155,
          "context": "mainLoopCounter++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 215,
          "context": "if ((mainLoopCounter % 10) < 5) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "int"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_023",
      "name": "if",
      "description": "Обновление состояния датчиков",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 107,
          "context": "if (!Sensors_Update()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 119,
          "context": "if (currentState >= DRONE_STATE_ARMED) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 124,
          "context": "if (!Navigation_IsActive()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 131,
          "context": "if (Stabilization_IsEnabled() == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 139,
          "context": "if (actState.all_motors_enabled == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 146,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / TELEMETRY_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 151,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / DIAGNOSTIC_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 215,
          "context": "if ((mainLoopCounter % 10) < 5) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 230,
          "context": "if (Communication_Receive(&rxPacket)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 232,
          "context": "if (rxPacket.type == PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 234,
          "context": "if (rxPacket.length == sizeof(CommandPacket)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 240,
          "context": "if (currentState == DRONE_STATE_FLYING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 261,
          "context": "if (currentState >= DRONE_STATE_ARMED) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 357,
          "context": "if (sensorData.imu.temperature < MIN_BATTERY_VOLTAGE) { // Временно используем temperature как voltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 363,
          "context": "if (sensorData.baro.altitude > MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 369,
          "context": "if (fabsf(sensorData.imu.accel_x) > MAX_ANGLE ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 376,
          "context": "if (!Communication_IsConnected()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 384,
          "context": "if (!isEmergencyMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 407,
          "context": "if (isEmergencyMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 32,
          "context": "if (motor_index >= MOTOR_COUNT || emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 48,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 55,
          "context": "if (motor_index >= MOTOR_COUNT || emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 62,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 70,
          "context": "if (emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 87,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 95,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 103,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 117,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 131,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 146,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 152,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 159,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 167,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 176,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 185,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 194,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 201,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 228,
          "context": "if (actuators_state.motors[i].is_running) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 234,
          "context": "if (actuators_state.motors[i].temperature > 25.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 243,
          "context": "if (actuators_state.motors[i].is_running) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 250,
          "context": "if (*pwm_value > PWM_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 101,
          "context": "if (buffer == NULL || maxLength == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 106,
          "context": "if (UART0_FR_R & UART_FR_RXFE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 119,
          "context": "if (data == NULL || length == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 132,
          "context": "if (commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 145,
          "context": "if (!UART_Init(commState.baudRate)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 154,
          "context": "if (!commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 164,
          "context": "if (bytesReceived > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 174,
          "context": "if (processedIndex + packetSize > commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 179,
          "context": "if (ValidatePacket(packet)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 191,
          "context": "if (processedIndex > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 192,
          "context": "if (processedIndex < commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 205,
          "context": "if (!commState.initialized || length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 214,
          "context": "if (data != NULL && length > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 222,
          "context": "if (UART_Send((const uint8_t*)&packet, (uint16_t)sizeof(CommPacket))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 232,
          "context": "if (telemetry == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 249,
          "context": "if (message != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 261,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 302,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_CONFIG) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 319,
          "context": "if (baudRate != commState.baudRate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 321,
          "context": "if (commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 349,
          "context": "if (commState.currentTime - commState.lastPacketTime > COMM_TIMEOUT_MS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 378,
          "context": "if (currentTime - commState.lastPacketTime > COMM_TIMEOUT_MS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 379,
          "context": "if (commState.connected) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 385,
          "context": "if (!commState.connected) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 403,
          "context": "if (packet == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 408,
          "context": "if (packet->length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 452,
          "context": "if(length) *length = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 11,
          "context": "#ifndef NAN"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 13,
          "context": "#endif"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 30,
          "context": "#ifndef ADC0_SSMUX1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 32,
          "context": "#endif"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 33,
          "context": "#ifndef ADC0_SSCTL1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 35,
          "context": "#endif"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 150,
          "context": "if (diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 187,
          "context": "if (NVIC_APINT_R & 0x10000) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 197,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 220,
          "context": "if (voltage >= 12.6f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 222,
          "context": "} else if (voltage <= 9.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 229,
          "context": "if (voltage <= 9.5f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 231,
          "context": "} else if (voltage <= 10.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 253,
          "context": "if (state == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 272,
          "context": "if (state->batteryLevel < 20.0f) {  // Порог низкого заряда 20%"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 348,
          "context": "if (voltage <= BATTERY_CRITICAL_VOLTAGE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 352,
          "context": "else if (voltage <= BATTERY_LOW_VOLTAGE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 357,
          "context": "if (temp >= BATTERY_MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 439,
          "context": "if (mcu_temp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 443,
          "context": "else if (mcu_temp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 448,
          "context": "if (motors_temp >= TEMP_MOTORS_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 452,
          "context": "else if (motors_temp >= TEMP_MOTORS_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 457,
          "context": "if (board_temp >= TEMP_BOARD_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 461,
          "context": "else if (board_temp >= TEMP_BOARD_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 476,
          "context": "if (diagState.thermalState.mcuTemp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 481,
          "context": "} else if (diagState.thermalState.mcuTemp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 490,
          "context": "if (diagState.thermalState.motorTemps[i] >= TEMP_MOTORS_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 495,
          "context": "} else if (diagState.thermalState.motorTemps[i] >= TEMP_MOTORS_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 504,
          "context": "if (diagState.thermalState.boardTemp >= TEMP_BOARD_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 509,
          "context": "} else if (diagState.thermalState.boardTemp >= TEMP_BOARD_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 521,
          "context": "if (!isnan(temp)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 528,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 534,
          "context": "if (!diagState.initialized || diagState.logCount >= DIAG_MAX_LOG_ENTRIES) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 544,
          "context": "if (level >= LOG_ERROR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 548,
          "context": "if (level == LOG_FATAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 567,
          "context": "if (!entry || index >= diagState.logCount) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 583,
          "context": "if (!diagState.debugEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 596,
          "context": "if (len < DEBUG_BUFFER_SIZE - 2) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 654,
          "context": "if (diagState.systemState == SYSTEM_STATE_ERROR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 710,
          "context": "if (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 788,
          "context": "if (!diagState.lowPowerMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 807,
          "context": "if (diagState.lowPowerMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 831,
          "context": "if (diagState.perfCount == 0 || elapsed > diagState.perfMaxTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 834,
          "context": "if (diagState.perfCount == 0 || elapsed < diagState.perfMinTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 853,
          "context": "if (diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 859,
          "context": "if (!diagState.debugEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 895,
          "context": "if (diagState.perfCount > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 905,
          "context": "if (diagState.logCount > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 951,
          "context": "if (batteryVoltage < POWER_TEST_VOLTAGE_MIN) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 960,
          "context": "else if (batteryVoltage > POWER_TEST_VOLTAGE_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 972,
          "context": "if (batteryCurrent > POWER_TEST_CURRENT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 984,
          "context": "if (batteryTemp > POWER_TEST_TEMP_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 994,
          "context": "if (!TestSupplyVoltages()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1011,
          "context": "if (sensorSupply < POWER_TEST_SUPPLY_MIN || sensorSupply > POWER_TEST_SUPPLY_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1058,
          "context": "if (accel_magnitude > IMU_TEST_ACCEL_MAX || gyro_magnitude > IMU_TEST_GYRO_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1069,
          "context": "if (!TestBarometer()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1080,
          "context": "if (altitude < BARO_TEST_ALT_MIN || altitude > BARO_TEST_ALT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1091,
          "context": "if (!TestMagnetometer()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1111,
          "context": "if (mag_magnitude < MAG_TEST_FIELD_MIN || mag_magnitude > MAG_TEST_FIELD_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1121,
          "context": "if (HasGPS()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1122,
          "context": "if (!TestGPS()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1169,
          "context": "if (!TestESC()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1185,
          "context": "if (!TestMotorResponse(i)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1208,
          "context": "if (motorData[i].current > MOTOR_TEST_CURRENT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1220,
          "context": "if (motorData[i].rpm < 100.0f) {  // Минимальные обороты для теста"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1232,
          "context": "if (motorData[i].temperature > MOTOR_TEST_TEMP_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1242,
          "context": "if (motorData[i].vibration > MOTOR_TEST_VIB_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1306,
          "context": "if (IsRCTestResponseReceived()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1313,
          "context": "if (!rcResponded) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1324,
          "context": "if (rcQuality < RC_TEST_MIN_QUALITY) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1340,
          "context": "if (IsTelemetryAckReceived()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1347,
          "context": "if (!telemetryResponded) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1357,
          "context": "if (HasBackupComm() && !TestBackupComm()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1378,
          "context": "if (!TestWatchdogReset()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1389,
          "context": "if (!TestEEPROM()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1400,
          "context": "if (!TestFlashMemory()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1411,
          "context": "if (HasParachute()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1412,
          "context": "if (!TestParachuteSystem()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1424,
          "context": "if (!TestKillSwitch()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1444,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1459,
          "context": "if (timeout == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1477,
          "context": "if (adcResult.error != ADC_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1485,
          "context": "if (adcResult.value == 0 || adcResult.value >= ADC_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1513,
          "context": "if (isnan(temperature)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1525,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1542,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1553,
          "context": "if (!status.complete) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1555,
          "context": "if (conversionAttempts >= MAX_CONVERSION_ATTEMPTS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1576,
          "context": "if (result.ticks == 0 || result.ticks > NVIC_ST_RELOAD_R) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1589,
          "context": "if (startTicks.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1599,
          "context": "if (currentTicks.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1604,
          "context": "if (currentTicks.ticks <= startValue) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1625,
          "context": "if (currentTicksResult.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1632,
          "context": "if (currentTicks <= startTicks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1678,
          "context": "if (selfTestResult.powerTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1683,
          "context": "else if (selfTestResult.powerTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1690,
          "context": "if (selfTestResult.sensorTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1695,
          "context": "else if (selfTestResult.sensorTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1702,
          "context": "if (selfTestResult.motorTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1707,
          "context": "else if (selfTestResult.motorTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1714,
          "context": "if (selfTestResult.commTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1719,
          "context": "else if (selfTestResult.commTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1726,
          "context": "if (selfTestResult.safetyTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1731,
          "context": "else if (selfTestResult.safetyTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1738,
          "context": "if (selfTestResult.totalErrors > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1767,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1824,
          "context": "if (adcResult.error != ADC_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1852,
          "context": "if (isnan(temperature)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1865,
          "context": "if (type < 0 || type >= THERMOCOUPLE_TYPE_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1891,
          "context": "if (temperature < MIN_TEMP || temperature > MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1904,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1947,
          "context": "if (currentTime - lastBackupCommTest < 1000) {  // Тестируем не чаще раза в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1956,
          "context": "if (!success) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1965,
          "context": "if (ReceiveBackupCommPacket(response, sizeof(response))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1967,
          "context": "if (response[0] == 0x55 && response[1] == 0xAA &&"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1991,
          "context": "if (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 45,
          "context": "if (waypoint == NULL || waypoint_count >= MAX_WAYPOINTS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 49,
          "context": "if (!Navigation_IsValidPosition(&waypoint->position)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 61,
          "context": "if (index >= waypoint_count) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 73,
          "context": "if (current_waypoint_index > index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 91,
          "context": "if (index >= waypoint_count || waypoint == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 100,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 111,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 126,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 132,
          "context": "if (position != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 182,
          "context": "if (nav_state.current_position.altitude < NAV_MIN_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 185,
          "context": "} else if (nav_state.current_position.altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 194,
          "context": "if (!pos1->valid || !pos2->valid) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 212,
          "context": "if (!pos1->valid || !pos2->valid) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 228,
          "context": "if (position == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 233,
          "context": "if (position->latitude < -90.0f || position->latitude > 90.0f ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 243,
          "context": "if (!position->valid || !home_position_set) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 253,
          "context": "if (position != NULL && Navigation_IsValidPosition(position)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 260,
          "context": "if (!home_position_set) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 271,
          "context": "if (!nav_state.navigation_active || waypoint_count == 0 ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 284,
          "context": "if (nav_state.distance_to_target <= NAV_WAYPOINT_RADIUS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 286,
          "context": "if (current_waypoint_index < waypoint_count - 1) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 52,
          "context": "if (!sensor_state.mpu6050_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 61,
          "context": "if (!sensor_state.bmp280_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 115,
          "context": "if (sensor_state.current_altitude < 0.0f) sensor_state.current_altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 125,
          "context": "if (sensor_state.rotation_angle >= 360.0f) sensor_state.rotation_angle -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 144,
          "context": "if (data == NULL) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 150,
          "context": "if (orientation == NULL) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 182,
          "context": "if(data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 196,
          "context": "if(data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 106,
          "context": "if (!stabState.enabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 145,
          "context": "if (orientation != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 151,
          "context": "if (setPoint != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 190,
          "context": "if (pid == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 213,
          "context": "if (value < min) return min;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 214,
          "context": "if (value > max) return max;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 1,
          "context": "#ifndef ACTUATORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 76,
          "context": "#endif // ACTUATORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 1,
          "context": "#ifndef COMMUNICATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 112,
          "context": "#endif // COMMUNICATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 1,
          "context": "#ifndef DIAGNOSTICS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 567,
          "context": "#endif // DIAGNOSTICS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 1,
          "context": "#ifndef GPIO_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 49,
          "context": "#endif // GPIO_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 1,
          "context": "#ifndef MAIN_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 91,
          "context": "#endif // MAIN_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 1,
          "context": "#ifndef NAVIGATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 83,
          "context": "#endif // NAVIGATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 1,
          "context": "#ifndef SENSORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 55,
          "context": "#endif // SENSORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 1,
          "context": "#ifndef STABILIZATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 56,
          "context": "#endif // STABILIZATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 1,
          "context": "#ifndef TELEMETRY_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 14,
          "context": "#endif // TELEMETRY_H"
        }
      ],
      "comments": "Обновление состояния датчиков",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "датчиков"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_024",
      "name": "Sensors_GetAllData",
      "description": "Получение данных с датчиков",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 113,
          "context": "Sensors_GetAllData(&sensorData);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 318,
          "context": "Sensors_GetAllData(&sensorData);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 181,
          "context": "void Sensors_GetAllData(SensorData* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 52,
          "context": "void Sensors_GetAllData(SensorData* data);"
        }
      ],
      "comments": "Получение данных с датчиков",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "датчиков"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_025",
      "name": "ProcessCommands",
      "description": "Обработка команд и обновление состояния",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 116,
          "context": "ProcessCommands();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 225,
          "context": "void ProcessCommands(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 85,
          "context": "void ProcessCommands(void);"
        }
      ],
      "comments": "Обработка команд и обновление состояния",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "состояния"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_027",
      "name": "Navigation_Update",
      "description": "Обновляем навигацию",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 121,
          "context": "Navigation_Update();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 252,
          "context": "void Navigation_UpdateHomePosition(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 267,
          "context": "void Navigation_Update(void) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 52,
          "context": "void Navigation_Update(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 76,
          "context": "void Navigation_UpdateHomePosition(const GPSPosition* position);"
        }
      ],
      "comments": "Обновляем навигацию",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "навигацию"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_029",
      "name": "Stabilization_Update",
      "description": "Обновляем стабилизацию",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 130,
          "context": "Stabilization_Update();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 105,
          "context": "void Stabilization_Update(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 37,
          "context": "void Stabilization_Update(void);"
        }
      ],
      "comments": "Обновляем стабилизацию",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "стабилизацию"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_037",
      "name": "LED",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 93,
          "context": "static void HandleLEDs(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 180,
          "context": "static void HandleLEDs(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 182,
          "context": "#define LED_MASK_CLEAR     0xFFFFFFF9  // 1111 1111 1111 1111 1111 1111 1111 1001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 183,
          "context": "#define LED_RED            0x00000002  // Красный LED (PIN_1)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 184,
          "context": "#define LED_BLUE           0x00000004  // Синий LED (PIN_2)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 185,
          "context": "#define LED_GREEN          0x00000008  // Зеленый LED (PIN_3)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 187,
          "context": "uint32_t ledState = GPIO_PORTF_DATA_R & LED_MASK_CLEAR;  // Очищаем биты LED"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 192,
          "context": "ledState |= LED_BLUE;  // Синий - инициализация"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 196,
          "context": "ledState |= LED_GREEN;  // Зеленый - готов к работе"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 200,
          "context": "ledState |= (LED_GREEN | LED_BLUE);  // Бирюзовый - калибровка"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 204,
          "context": "ledState |= LED_RED;  // Красный - вооружен"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 210,
          "context": "ledState |= (LED_RED | LED_GREEN);  // Желтый - в полете"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 216,
          "context": "ledState |= LED_RED;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 401,
          "context": "HandleLEDs();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 423,
          "context": "HandleLEDs();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 54,
          "context": "ADC_ERROR_CONVERSION_FAILED"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "Красный"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_040",
      "name": "switch",
      "description": "Устанавливаем состояние LED в зависимости от состояния дрона",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 190,
          "context": "switch (currentState) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 238,
          "context": "switch (cmdData.type) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 289,
          "context": "switch (param) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 266,
          "context": "switch (cmd) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 422,
          "context": "switch (packet->type) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 608,
          "context": "switch (level) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 621,
          "context": "switch (event) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 730,
          "context": "switch (mode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1427,
          "context": "status.message = \"Kill switch failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1498,
          "context": "switch (TEMP_SENSOR_TYPE_LINEAR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1837,
          "context": "switch (TEMP_SENSOR_TYPE_LINEAR) {"
        }
      ],
      "comments": "Устанавливаем состояние LED в зависимости от состояния дрона",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "дрона"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_047",
      "name": "Navigation_ClearWaypoints",
      "description": "Очищаем текущие точки и добавляем новую",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 255,
          "context": "Navigation_ClearWaypoints();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 398,
          "context": "Navigation_ClearWaypoints();    // Очищаем все точки маршрута"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 416,
          "context": "Navigation_ClearWaypoints();    // Очищаем все точки маршрута"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 40,
          "context": "Navigation_ClearWaypoints();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 80,
          "context": "void Navigation_ClearWaypoints(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 64,
          "context": "void Navigation_ClearWaypoints(void);"
        }
      ],
      "comments": "Очищаем текущие точки и добавляем новую",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "новую"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_048",
      "name": "UpdatePIDParameters",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 272,
          "context": "UpdatePIDParameters(cmdData.data.config.param, cmdData.data.config.value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 281,
          "context": "void UpdatePIDParameters(SystemParameter param, float value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 89,
          "context": "void UpdatePIDParameters(SystemParameter param, float value);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "param",
          "type": "SystemParameter"
        },
        {
          "name": "value",
          "type": "float"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_050",
      "name": "Stabilization_ConfigurePID",
      "description": "Применяем все параметры",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 305,
          "context": "Stabilization_ConfigurePID("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 53,
          "context": "Stabilization_ConfigurePID("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 61,
          "context": "void Stabilization_ConfigurePID(float rollKp, float rollKi, float rollKd,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 41,
          "context": "void Stabilization_ConfigurePID(float rollKp, float rollKi, float rollKd,"
        }
      ],
      "comments": "Применяем все параметры",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "pitch_kp",
          "type": "// Roll PID"
        },
        {
          "name": "yaw_kp",
          "type": "// Pitch PID"
        },
        {
          "name": "alt_kp",
          "type": "// Yaw PID"
        },
        {
          "name": "PID",
          "type": "alt_kd // Altitude"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "параметры"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_053",
      "name": "Communication_SendTelemetry",
      "description": "Отправка телеметрии",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 351,
          "context": "Communication_SendTelemetry(&telemetry);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 231,
          "context": "bool Communication_SendTelemetry(const TelemetryData* telemetry) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 92,
          "context": "bool Communication_SendTelemetry(const TelemetryData* telemetry);"
        }
      ],
      "comments": "Отправка телеметрии",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "телеметрии"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_054",
      "name": "CheckSafety",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 152,
          "context": "CheckSafety();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 355,
          "context": "void CheckSafety(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 86,
          "context": "void CheckSafety(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_056",
      "name": "EnterEmergencyMode",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 108,
          "context": "EnterEmergencyMode(\"Sensor update failed\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 125,
          "context": "EnterEmergencyMode(\"Navigation update failed\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 132,
          "context": "EnterEmergencyMode(\"Stabilization update failed\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 140,
          "context": "EnterEmergencyMode(\"Motors not ready\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 358,
          "context": "EnterEmergencyMode(\"Low battery\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 364,
          "context": "EnterEmergencyMode(\"Maximum altitude exceeded\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 371,
          "context": "EnterEmergencyMode(\"Maximum angle exceeded\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 377,
          "context": "EnterEmergencyMode(\"Communication lost\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 383,
          "context": "void EnterEmergencyMode(const char* reason) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 87,
          "context": "void EnterEmergencyMode(const char* reason);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "battery\"",
          "type": "\"Low"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "voltage"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_058",
      "name": "наклона",
      "description": "Проверка углов наклона (используем данные акселерометра)",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [],
      "comments": "Проверка углов наклона (используем данные акселерометра)",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "акселерометра",
          "type": "используем данные"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "углов"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_061",
      "name": "Diagnostics_Log",
      "description": "Логирование причины",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 389,
          "context": "Diagnostics_Log(LOG_CRITICAL, DIAG_EVENT_SYSTEM_START, reason, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 188,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_WATCHDOG_RESET, \"System reset by watchdog\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 191,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START, \"Diagnostics initialized\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 230,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_BATTERY_CRITICAL, \"Battery critically low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 232,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_BATTERY_LOW, \"Battery low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 255,
          "context": "Diagnostics_Log(LOG_CRITICAL, DIAG_EVENT_SYSTEM_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 273,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_BATTERY_LOW,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 349,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_LOW_BATTERY,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 353,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_LOW_BATTERY,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 358,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 440,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 444,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 449,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 453,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 458,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 462,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 478,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 483,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 492,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 497,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 506,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 511,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 533,
          "context": "void Diagnostics_Log(LogLevel level, DiagnosticEvent event, const char* message, uint32_t data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 697,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 706,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_WATCHDOG_RESET, \"Watchdog reset occurred\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 792,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_STOP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 818,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 918,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START, \"Running self-test\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 956,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 965,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 977,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 989,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 999,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1063,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1074,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1085,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1096,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1116,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1127,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1174,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1190,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1213,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1225,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1237,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1247,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1318,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1329,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1352,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1362,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1383,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1394,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1405,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1417,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1429,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1478,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1486,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1506,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1514,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1578,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SYSTEM_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1740,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SYSTEM_ERROR, selfTestResult.message, selfTestResult.totalErrors);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1745,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SELF_TEST, selfTestResult.message, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1825,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1845,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1853,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1866,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1892,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2028,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 346,
          "context": "void Diagnostics_Log(uint8_t level, DiagnosticEvent event, const char* message, uint32_t data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 353,
          "context": "void Diagnostics_Log(LogLevel level, DiagnosticEvent event, const char* message, uint32_t data);"
        }
      ],
      "comments": "Логирование причины",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "причины"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_062",
      "name": "Communication_SendError",
      "description": "Отправка сообщения об ошибке",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 392,
          "context": "Communication_SendError(0x01, reason);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 242,
          "context": "bool Communication_SendError(uint8_t errorCode, const char* message) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 296,
          "context": "Communication_SendError(0x01, \"Unknown command\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 382,
          "context": "Communication_SendError(0x03, \"Connection lost\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 441,
          "context": "Communication_SendError(0x02, \"Unknown packet type\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 94,
          "context": "bool Communication_SendError(uint8_t errorCode, const char* message);"
        }
      ],
      "comments": "Отправка сообщения об ошибке",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "ошибке"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_063",
      "name": "Actuators_EmergencyStop",
      "description": "Аварийная остановка моторов и сброс навигации",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 395,
          "context": "Actuators_EmergencyStop();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 208,
          "context": "void Actuators_EmergencyStop(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 72,
          "context": "void Actuators_EmergencyStop(void);"
        }
      ],
      "comments": "Аварийная остановка моторов и сброс навигации",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "навигации"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_064",
      "name": "Navigation_Stop",
      "description": "Сброс навигации и аварийной остановки",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 397,
          "context": "Navigation_Stop();              // Останавливаем текущую навигацию"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 415,
          "context": "Navigation_Stop();              // Останавливаем текущую навигацию"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 39,
          "context": "Navigation_Stop();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 116,
          "context": "void Navigation_Stop(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 55,
          "context": "void Navigation_Stop(void);"
        }
      ],
      "comments": "Сброс навигации и аварийной остановки",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "остановки"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_067",
      "name": "ExitEmergencyMode",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 406,
          "context": "void ExitEmergencyMode(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 88,
          "context": "void ExitEmergencyMode(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_068",
      "name": "Diagnostics_ClearLog",
      "description": "Сброс лога ошибок",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 412,
          "context": "Diagnostics_ClearLog();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 556,
          "context": "void Diagnostics_ClearLog(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 354,
          "context": "void Diagnostics_ClearLog(void);"
        }
      ],
      "comments": "Сброс лога ошибок",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "ошибок"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_071",
      "name": "Actuators_ResetEmergencyStop",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 417,
          "context": "Actuators_ResetEmergencyStop();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 217,
          "context": "void Actuators_ResetEmergencyStop(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 74,
          "context": "void Actuators_ResetEmergencyStop(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "маршрута"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_072",
      "name": "Communication_SendStatus",
      "description": "Отправка статуса",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 420,
          "context": "Communication_SendStatus(0x00);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 238,
          "context": "bool Communication_SendStatus(uint8_t status) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 388,
          "context": "Communication_SendStatus(0x01); // 0x01 - связь восстановлена"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 93,
          "context": "bool Communication_SendStatus(uint8_t status);"
        }
      ],
      "comments": "Отправка статуса",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "статуса"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_074",
      "name": "UpdateMotorTemperatures",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 10,
          "context": "static void UpdateMotorTemperatures(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 226,
          "context": "static void UpdateMotorTemperatures(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 517,
          "context": "void UpdateMotorTemperatures(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 344,
          "context": "void UpdateMotorTemperatures(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": true,
      "scope": "static",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_075",
      "name": "UpdateMotorRuntimes",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 11,
          "context": "static void UpdateMotorRuntimes(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 241,
          "context": "static void UpdateMotorRuntimes(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": true,
      "scope": "static",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_076",
      "name": "ClampPWMValue",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 12,
          "context": "static void ClampPWMValue(uint16_t* pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 36,
          "context": "ClampPWMValue(&pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 249,
          "context": "static void ClampPWMValue(uint16_t* pwm_value) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "pwm_value",
          "type": "uint16_t*"
        }
      ],
      "output_params": [],
      "is_static": true,
      "scope": "static",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_077",
      "name": "Actuators_Init",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 14,
          "context": "void Actuators_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 37,
          "context": "void Actuators_Init(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_078",
      "name": "memset",
      "description": "Инициализация состояния всех моторов",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 16,
          "context": "memset(&actuators_state, 0, sizeof(ActuatorsState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 137,
          "context": "memset(&commState, 0, sizeof(commState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 154,
          "context": "memset(&diagState, 0, sizeof(diagState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 169,
          "context": "memset(&diagState.powerState, 0, sizeof(PowerState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 170,
          "context": "memset(&diagState.thermalState, 0, sizeof(ThermalState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1182,
          "context": "memset(&motorData[i], 0, sizeof(MotorTestData));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1651,
          "context": "memset(&selfTestResult, 0, sizeof(SelfTestResult));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 25,
          "context": "memset(&nav_state, 0, sizeof(NavigationState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 26,
          "context": "memset(waypoints, 0, sizeof(waypoints));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 81,
          "context": "memset(waypoints, 0, sizeof(waypoints));"
        }
      ],
      "comments": "Инициализация состояния всех моторов",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "моторов"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_079",
      "name": "Actuators_DeInit",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 26,
          "context": "void Actuators_DeInit(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 38,
          "context": "void Actuators_DeInit(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_080",
      "name": "Actuators_DisableAllMotors",
      "description": "Останавливаем все моторы",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 28,
          "context": "Actuators_DisableAllMotors();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 79,
          "context": "void Actuators_DisableAllMotors(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 210,
          "context": "Actuators_DisableAllMotors();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 50,
          "context": "void Actuators_DisableAllMotors(void);"
        }
      ],
      "comments": "Останавливаем все моторы",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "моторы"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_081",
      "name": "Actuators_SetMotorPWM",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 31,
          "context": "void Actuators_SetMotorPWM(uint8_t motor_index, uint16_t pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 43,
          "context": "Actuators_SetMotorPWM(i, pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 110,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm + pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 111,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm + pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 112,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 113,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm - pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 124,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm - pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 125,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 126,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm + pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 127,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm + pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 138,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm + roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 139,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm + roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 140,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 141,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm - roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 41,
          "context": "void Actuators_SetMotorPWM(uint8_t motor_index, uint16_t pwm_value);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "motor_index",
          "type": "uint8_t"
        },
        {
          "name": "pwm_value",
          "type": "uint16_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_082",
      "name": "Actuators_SetAllMotorsPWM",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 41,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 98,
          "context": "Actuators_SetAllMotorsPWM(pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 171,
          "context": "Actuators_SetAllMotorsPWM(hover_pwm);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 180,
          "context": "Actuators_SetAllMotorsPWM(ascent_pwm);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 189,
          "context": "Actuators_SetAllMotorsPWM(descent_pwm);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 42,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "pwm_value",
          "type": "uint16_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_083",
      "name": "Actuators_GetMotorPWM",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 47,
          "context": "uint16_t Actuators_GetMotorPWM(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 44,
          "context": "uint16_t Actuators_GetMotorPWM(uint8_t motor_index);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "motor_index",
          "type": "uint8_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "uint16_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_084",
      "name": "Actuators_EnableMotor",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 54,
          "context": "void Actuators_EnableMotor(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 74,
          "context": "Actuators_EnableMotor(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 47,
          "context": "void Actuators_EnableMotor(uint8_t motor_index);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "motor_index",
          "type": "uint8_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_085",
      "name": "Actuators_DisableMotor",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 61,
          "context": "void Actuators_DisableMotor(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 81,
          "context": "Actuators_DisableMotor(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 48,
          "context": "void Actuators_DisableMotor(uint8_t motor_index);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "motor_index",
          "type": "uint8_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_086",
      "name": "Actuators_EnableAllMotors",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 69,
          "context": "void Actuators_EnableAllMotors(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 49,
          "context": "void Actuators_EnableAllMotors(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_088",
      "name": "Actuators_IsMotorEnabled",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 86,
          "context": "bool Actuators_IsMotorEnabled(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 51,
          "context": "bool Actuators_IsMotorEnabled(uint8_t motor_index);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "motor_index",
          "type": "uint8_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_089",
      "name": "Actuators_SetThrottle",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 94,
          "context": "void Actuators_SetThrottle(uint16_t throttle) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 54,
          "context": "void Actuators_SetThrottle(uint16_t throttle);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "throttle",
          "type": "uint16_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_090",
      "name": "Actuators_SetYaw",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 102,
          "context": "void Actuators_SetYaw(int16_t yaw) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 197,
          "context": "Actuators_SetYaw(yaw_rate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 55,
          "context": "void Actuators_SetYaw(int16_t yaw);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "yaw",
          "type": "int16_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_091",
      "name": "Actuators_SetPitch",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 116,
          "context": "void Actuators_SetPitch(int16_t pitch) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 204,
          "context": "Actuators_SetPitch(-speed); // Отрицательный питч для движения вперед"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 56,
          "context": "void Actuators_SetPitch(int16_t pitch);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "pitch",
          "type": "int16_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_092",
      "name": "Actuators_SetRoll",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 130,
          "context": "void Actuators_SetRoll(int16_t roll) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 57,
          "context": "void Actuators_SetRoll(int16_t roll);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "roll",
          "type": "int16_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_093",
      "name": "Actuators_GetState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 138,
          "context": "Actuators_GetState(&actState);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 145,
          "context": "void Actuators_GetState(ActuatorsState* state) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 60,
          "context": "void Actuators_GetState(ActuatorsState* state);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "state",
          "type": "ActuatorsState*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_094",
      "name": "Actuators_GetMotorTemperature",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 151,
          "context": "float Actuators_GetMotorTemperature(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 61,
          "context": "float Actuators_GetMotorTemperature(uint8_t motor_index);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "motor_index",
          "type": "uint8_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_095",
      "name": "Actuators_GetMotorRuntime",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 158,
          "context": "uint32_t Actuators_GetMotorRuntime(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 62,
          "context": "uint32_t Actuators_GetMotorRuntime(uint8_t motor_index);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "motor_index",
          "type": "uint8_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_096",
      "name": "Actuators_EmulateHover",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 166,
          "context": "void Actuators_EmulateHover(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 65,
          "context": "void Actuators_EmulateHover(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_097",
      "name": "Actuators_EmulateAscent",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 175,
          "context": "void Actuators_EmulateAscent(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 66,
          "context": "void Actuators_EmulateAscent(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_098",
      "name": "Actuators_EmulateDescent",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 184,
          "context": "void Actuators_EmulateDescent(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 67,
          "context": "void Actuators_EmulateDescent(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_099",
      "name": "Actuators_EmulateRotation",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 193,
          "context": "void Actuators_EmulateRotation(int16_t yaw_rate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 68,
          "context": "void Actuators_EmulateRotation(int16_t yaw_rate);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "yaw_rate",
          "type": "int16_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_101",
      "name": "Actuators_EmulateForwardFlight",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 200,
          "context": "void Actuators_EmulateForwardFlight(uint16_t speed) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 69,
          "context": "void Actuators_EmulateForwardFlight(uint16_t speed);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "speed",
          "type": "uint16_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_103",
      "name": "Actuators_EmergencyStop",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 395,
          "context": "Actuators_EmergencyStop();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 208,
          "context": "void Actuators_EmergencyStop(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 72,
          "context": "void Actuators_EmergencyStop(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_104",
      "name": "Actuators_IsEmergencyStopActive",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 213,
          "context": "bool Actuators_IsEmergencyStopActive(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 73,
          "context": "bool Actuators_IsEmergencyStopActive(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_105",
      "name": "Actuators_ResetEmergencyStop",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 417,
          "context": "Actuators_ResetEmergencyStop();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 217,
          "context": "void Actuators_ResetEmergencyStop(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 74,
          "context": "void Actuators_ResetEmergencyStop(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_106",
      "name": "Actuators_SetAllMotors",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 41,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 98,
          "context": "Actuators_SetAllMotorsPWM(pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 171,
          "context": "Actuators_SetAllMotorsPWM(hover_pwm);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 180,
          "context": "Actuators_SetAllMotorsPWM(ascent_pwm);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 189,
          "context": "Actuators_SetAllMotorsPWM(descent_pwm);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 222,
          "context": "void Actuators_SetAllMotors(float power) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 166,
          "context": "Actuators_SetAllMotors(0.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 42,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 43,
          "context": "void Actuators_SetAllMotors(float power_level);  // Устанавливает одинаковую мощность для всех моторов"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "power",
          "type": "float"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_107",
      "name": "Actuators_SetMotor",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 31,
          "context": "void Actuators_SetMotorPWM(uint8_t motor_index, uint16_t pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 43,
          "context": "Actuators_SetMotorPWM(i, pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 110,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm + pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 111,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm + pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 112,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 113,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm - pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 124,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm - pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 125,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 126,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm + pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 127,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm + pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 138,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm + roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 139,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm + roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 140,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 141,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm - roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 223,
          "context": "void Actuators_SetMotor(uint8_t index, float power) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 241,
          "context": "Actuators_SetMotor(0, m1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 242,
          "context": "Actuators_SetMotor(1, m2);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 243,
          "context": "Actuators_SetMotor(2, m3);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 244,
          "context": "Actuators_SetMotor(3, m4);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 41,
          "context": "void Actuators_SetMotorPWM(uint8_t motor_index, uint16_t pwm_value);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "index",
          "type": "uint8_t"
        },
        {
          "name": "power",
          "type": "float"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_109",
      "name": "if",
      "description": "Остывание мотора",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 107,
          "context": "if (!Sensors_Update()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 119,
          "context": "if (currentState >= DRONE_STATE_ARMED) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 124,
          "context": "if (!Navigation_IsActive()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 131,
          "context": "if (Stabilization_IsEnabled() == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 139,
          "context": "if (actState.all_motors_enabled == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 146,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / TELEMETRY_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 151,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / DIAGNOSTIC_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 215,
          "context": "if ((mainLoopCounter % 10) < 5) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 230,
          "context": "if (Communication_Receive(&rxPacket)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 232,
          "context": "if (rxPacket.type == PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 234,
          "context": "if (rxPacket.length == sizeof(CommandPacket)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 240,
          "context": "if (currentState == DRONE_STATE_FLYING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 261,
          "context": "if (currentState >= DRONE_STATE_ARMED) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 357,
          "context": "if (sensorData.imu.temperature < MIN_BATTERY_VOLTAGE) { // Временно используем temperature как voltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 363,
          "context": "if (sensorData.baro.altitude > MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 369,
          "context": "if (fabsf(sensorData.imu.accel_x) > MAX_ANGLE ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 376,
          "context": "if (!Communication_IsConnected()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 384,
          "context": "if (!isEmergencyMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 407,
          "context": "if (isEmergencyMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 32,
          "context": "if (motor_index >= MOTOR_COUNT || emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 48,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 55,
          "context": "if (motor_index >= MOTOR_COUNT || emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 62,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 70,
          "context": "if (emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 87,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 95,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 103,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 117,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 131,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 146,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 152,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 159,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 167,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 176,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 185,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 194,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 201,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 228,
          "context": "if (actuators_state.motors[i].is_running) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 234,
          "context": "if (actuators_state.motors[i].temperature > 25.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 243,
          "context": "if (actuators_state.motors[i].is_running) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 250,
          "context": "if (*pwm_value > PWM_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 101,
          "context": "if (buffer == NULL || maxLength == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 106,
          "context": "if (UART0_FR_R & UART_FR_RXFE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 119,
          "context": "if (data == NULL || length == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 132,
          "context": "if (commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 145,
          "context": "if (!UART_Init(commState.baudRate)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 154,
          "context": "if (!commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 164,
          "context": "if (bytesReceived > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 174,
          "context": "if (processedIndex + packetSize > commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 179,
          "context": "if (ValidatePacket(packet)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 191,
          "context": "if (processedIndex > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 192,
          "context": "if (processedIndex < commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 205,
          "context": "if (!commState.initialized || length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 214,
          "context": "if (data != NULL && length > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 222,
          "context": "if (UART_Send((const uint8_t*)&packet, (uint16_t)sizeof(CommPacket))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 232,
          "context": "if (telemetry == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 249,
          "context": "if (message != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 261,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 302,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_CONFIG) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 319,
          "context": "if (baudRate != commState.baudRate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 321,
          "context": "if (commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 349,
          "context": "if (commState.currentTime - commState.lastPacketTime > COMM_TIMEOUT_MS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 378,
          "context": "if (currentTime - commState.lastPacketTime > COMM_TIMEOUT_MS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 379,
          "context": "if (commState.connected) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 385,
          "context": "if (!commState.connected) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 403,
          "context": "if (packet == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 408,
          "context": "if (packet->length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 452,
          "context": "if(length) *length = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 11,
          "context": "#ifndef NAN"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 13,
          "context": "#endif"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 30,
          "context": "#ifndef ADC0_SSMUX1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 32,
          "context": "#endif"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 33,
          "context": "#ifndef ADC0_SSCTL1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 35,
          "context": "#endif"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 150,
          "context": "if (diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 187,
          "context": "if (NVIC_APINT_R & 0x10000) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 197,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 220,
          "context": "if (voltage >= 12.6f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 222,
          "context": "} else if (voltage <= 9.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 229,
          "context": "if (voltage <= 9.5f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 231,
          "context": "} else if (voltage <= 10.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 253,
          "context": "if (state == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 272,
          "context": "if (state->batteryLevel < 20.0f) {  // Порог низкого заряда 20%"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 348,
          "context": "if (voltage <= BATTERY_CRITICAL_VOLTAGE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 352,
          "context": "else if (voltage <= BATTERY_LOW_VOLTAGE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 357,
          "context": "if (temp >= BATTERY_MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 439,
          "context": "if (mcu_temp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 443,
          "context": "else if (mcu_temp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 448,
          "context": "if (motors_temp >= TEMP_MOTORS_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 452,
          "context": "else if (motors_temp >= TEMP_MOTORS_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 457,
          "context": "if (board_temp >= TEMP_BOARD_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 461,
          "context": "else if (board_temp >= TEMP_BOARD_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 476,
          "context": "if (diagState.thermalState.mcuTemp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 481,
          "context": "} else if (diagState.thermalState.mcuTemp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 490,
          "context": "if (diagState.thermalState.motorTemps[i] >= TEMP_MOTORS_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 495,
          "context": "} else if (diagState.thermalState.motorTemps[i] >= TEMP_MOTORS_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 504,
          "context": "if (diagState.thermalState.boardTemp >= TEMP_BOARD_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 509,
          "context": "} else if (diagState.thermalState.boardTemp >= TEMP_BOARD_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 521,
          "context": "if (!isnan(temp)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 528,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 534,
          "context": "if (!diagState.initialized || diagState.logCount >= DIAG_MAX_LOG_ENTRIES) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 544,
          "context": "if (level >= LOG_ERROR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 548,
          "context": "if (level == LOG_FATAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 567,
          "context": "if (!entry || index >= diagState.logCount) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 583,
          "context": "if (!diagState.debugEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 596,
          "context": "if (len < DEBUG_BUFFER_SIZE - 2) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 654,
          "context": "if (diagState.systemState == SYSTEM_STATE_ERROR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 710,
          "context": "if (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 788,
          "context": "if (!diagState.lowPowerMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 807,
          "context": "if (diagState.lowPowerMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 831,
          "context": "if (diagState.perfCount == 0 || elapsed > diagState.perfMaxTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 834,
          "context": "if (diagState.perfCount == 0 || elapsed < diagState.perfMinTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 853,
          "context": "if (diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 859,
          "context": "if (!diagState.debugEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 895,
          "context": "if (diagState.perfCount > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 905,
          "context": "if (diagState.logCount > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 951,
          "context": "if (batteryVoltage < POWER_TEST_VOLTAGE_MIN) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 960,
          "context": "else if (batteryVoltage > POWER_TEST_VOLTAGE_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 972,
          "context": "if (batteryCurrent > POWER_TEST_CURRENT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 984,
          "context": "if (batteryTemp > POWER_TEST_TEMP_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 994,
          "context": "if (!TestSupplyVoltages()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1011,
          "context": "if (sensorSupply < POWER_TEST_SUPPLY_MIN || sensorSupply > POWER_TEST_SUPPLY_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1058,
          "context": "if (accel_magnitude > IMU_TEST_ACCEL_MAX || gyro_magnitude > IMU_TEST_GYRO_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1069,
          "context": "if (!TestBarometer()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1080,
          "context": "if (altitude < BARO_TEST_ALT_MIN || altitude > BARO_TEST_ALT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1091,
          "context": "if (!TestMagnetometer()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1111,
          "context": "if (mag_magnitude < MAG_TEST_FIELD_MIN || mag_magnitude > MAG_TEST_FIELD_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1121,
          "context": "if (HasGPS()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1122,
          "context": "if (!TestGPS()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1169,
          "context": "if (!TestESC()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1185,
          "context": "if (!TestMotorResponse(i)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1208,
          "context": "if (motorData[i].current > MOTOR_TEST_CURRENT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1220,
          "context": "if (motorData[i].rpm < 100.0f) {  // Минимальные обороты для теста"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1232,
          "context": "if (motorData[i].temperature > MOTOR_TEST_TEMP_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1242,
          "context": "if (motorData[i].vibration > MOTOR_TEST_VIB_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1306,
          "context": "if (IsRCTestResponseReceived()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1313,
          "context": "if (!rcResponded) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1324,
          "context": "if (rcQuality < RC_TEST_MIN_QUALITY) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1340,
          "context": "if (IsTelemetryAckReceived()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1347,
          "context": "if (!telemetryResponded) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1357,
          "context": "if (HasBackupComm() && !TestBackupComm()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1378,
          "context": "if (!TestWatchdogReset()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1389,
          "context": "if (!TestEEPROM()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1400,
          "context": "if (!TestFlashMemory()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1411,
          "context": "if (HasParachute()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1412,
          "context": "if (!TestParachuteSystem()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1424,
          "context": "if (!TestKillSwitch()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1444,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1459,
          "context": "if (timeout == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1477,
          "context": "if (adcResult.error != ADC_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1485,
          "context": "if (adcResult.value == 0 || adcResult.value >= ADC_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1513,
          "context": "if (isnan(temperature)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1525,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1542,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1553,
          "context": "if (!status.complete) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1555,
          "context": "if (conversionAttempts >= MAX_CONVERSION_ATTEMPTS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1576,
          "context": "if (result.ticks == 0 || result.ticks > NVIC_ST_RELOAD_R) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1589,
          "context": "if (startTicks.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1599,
          "context": "if (currentTicks.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1604,
          "context": "if (currentTicks.ticks <= startValue) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1625,
          "context": "if (currentTicksResult.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1632,
          "context": "if (currentTicks <= startTicks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1678,
          "context": "if (selfTestResult.powerTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1683,
          "context": "else if (selfTestResult.powerTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1690,
          "context": "if (selfTestResult.sensorTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1695,
          "context": "else if (selfTestResult.sensorTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1702,
          "context": "if (selfTestResult.motorTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1707,
          "context": "else if (selfTestResult.motorTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1714,
          "context": "if (selfTestResult.commTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1719,
          "context": "else if (selfTestResult.commTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1726,
          "context": "if (selfTestResult.safetyTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1731,
          "context": "else if (selfTestResult.safetyTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1738,
          "context": "if (selfTestResult.totalErrors > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1767,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1824,
          "context": "if (adcResult.error != ADC_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1852,
          "context": "if (isnan(temperature)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1865,
          "context": "if (type < 0 || type >= THERMOCOUPLE_TYPE_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1891,
          "context": "if (temperature < MIN_TEMP || temperature > MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1904,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1947,
          "context": "if (currentTime - lastBackupCommTest < 1000) {  // Тестируем не чаще раза в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1956,
          "context": "if (!success) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1965,
          "context": "if (ReceiveBackupCommPacket(response, sizeof(response))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1967,
          "context": "if (response[0] == 0x55 && response[1] == 0xAA &&"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1991,
          "context": "if (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 45,
          "context": "if (waypoint == NULL || waypoint_count >= MAX_WAYPOINTS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 49,
          "context": "if (!Navigation_IsValidPosition(&waypoint->position)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 61,
          "context": "if (index >= waypoint_count) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 73,
          "context": "if (current_waypoint_index > index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 91,
          "context": "if (index >= waypoint_count || waypoint == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 100,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 111,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 126,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 132,
          "context": "if (position != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 182,
          "context": "if (nav_state.current_position.altitude < NAV_MIN_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 185,
          "context": "} else if (nav_state.current_position.altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 194,
          "context": "if (!pos1->valid || !pos2->valid) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 212,
          "context": "if (!pos1->valid || !pos2->valid) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 228,
          "context": "if (position == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 233,
          "context": "if (position->latitude < -90.0f || position->latitude > 90.0f ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 243,
          "context": "if (!position->valid || !home_position_set) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 253,
          "context": "if (position != NULL && Navigation_IsValidPosition(position)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 260,
          "context": "if (!home_position_set) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 271,
          "context": "if (!nav_state.navigation_active || waypoint_count == 0 ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 284,
          "context": "if (nav_state.distance_to_target <= NAV_WAYPOINT_RADIUS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 286,
          "context": "if (current_waypoint_index < waypoint_count - 1) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 52,
          "context": "if (!sensor_state.mpu6050_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 61,
          "context": "if (!sensor_state.bmp280_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 115,
          "context": "if (sensor_state.current_altitude < 0.0f) sensor_state.current_altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 125,
          "context": "if (sensor_state.rotation_angle >= 360.0f) sensor_state.rotation_angle -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 144,
          "context": "if (data == NULL) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 150,
          "context": "if (orientation == NULL) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 182,
          "context": "if(data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 196,
          "context": "if(data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 106,
          "context": "if (!stabState.enabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 145,
          "context": "if (orientation != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 151,
          "context": "if (setPoint != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 190,
          "context": "if (pid == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 213,
          "context": "if (value < min) return min;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 214,
          "context": "if (value > max) return max;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 1,
          "context": "#ifndef ACTUATORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 76,
          "context": "#endif // ACTUATORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 1,
          "context": "#ifndef COMMUNICATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 112,
          "context": "#endif // COMMUNICATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 1,
          "context": "#ifndef DIAGNOSTICS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 567,
          "context": "#endif // DIAGNOSTICS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 1,
          "context": "#ifndef GPIO_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 49,
          "context": "#endif // GPIO_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 1,
          "context": "#ifndef MAIN_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 91,
          "context": "#endif // MAIN_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 1,
          "context": "#ifndef NAVIGATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 83,
          "context": "#endif // NAVIGATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 1,
          "context": "#ifndef SENSORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 55,
          "context": "#endif // SENSORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 1,
          "context": "#ifndef STABILIZATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 56,
          "context": "#endif // STABILIZATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 1,
          "context": "#ifndef TELEMETRY_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 14,
          "context": "#endif // TELEMETRY_H"
        }
      ],
      "comments": "Остывание мотора",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "25.0f",
          "type": "actuators_state.motors[i].temperature >"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "мотора"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_112",
      "name": "соединения",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "секунда",
          "type": "1"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "Таймаут"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_113",
      "name": "таймера",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "кГц",
          "type": "1"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "системного"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_114",
      "name": "UART0_DR_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 22,
          "context": "#define UART0_DR_R              (*((volatile uint32_t *)0x4000C000))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 109,
          "context": "buffer[count] = (uint8_t)(UART0_DR_R & 0xFF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 125,
          "context": "UART0_DR_R = (uint32_t)data[i];"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_115",
      "name": "UART0_FR_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 23,
          "context": "#define UART0_FR_R              (*((volatile uint32_t *)0x4000C018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 106,
          "context": "if (UART0_FR_R & UART_FR_RXFE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 124,
          "context": "while (UART0_FR_R & UART_FR_TXFF) {}  // Ждем освобождения буфера передачи"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_116",
      "name": "UART0_IBRD_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 24,
          "context": "#define UART0_IBRD_R           (*((volatile uint32_t *)0x4000C024))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 86,
          "context": "UART0_IBRD_R = brdi;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_117",
      "name": "UART0_FBRD_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 25,
          "context": "#define UART0_FBRD_R           (*((volatile uint32_t *)0x4000C028))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 87,
          "context": "UART0_FBRD_R = brdf;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_118",
      "name": "UART0_LCRH_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 26,
          "context": "#define UART0_LCRH_R           (*((volatile uint32_t *)0x4000C02C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 90,
          "context": "UART0_LCRH_R = 0x60;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_119",
      "name": "UART0_CTL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 27,
          "context": "#define UART0_CTL_R            (*((volatile uint32_t *)0x4000C030))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 79,
          "context": "UART0_CTL_R &= ~0x01;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 93,
          "context": "UART0_CTL_R |= 0x01;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_120",
      "name": "SYSCTL_RCGCUART_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 30,
          "context": "#define SYSCTL_RCGCUART_R     (*((volatile uint32_t *)0x400FE104))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 66,
          "context": "SYSCTL_RCGCUART_R |= (1U << 0);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_121",
      "name": "SYSCTL_PRGPIO_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 32,
          "context": "#define SYSCTL_PRGPIO_R       (*((volatile uint32_t *)0x400FEA08))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 70,
          "context": "while((SYSCTL_PRGPIO_R & (1U << 0)) == 0) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 293,
          "context": "while(!(SYSCTL_PRGPIO_R & SYSCTL_PRGPIO_R4)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 373,
          "context": "while(!(SYSCTL_PRGPIO_R & (SYSCTL_PRGPIO_R3 | SYSCTL_PRGPIO_R4))) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 234,
          "context": "#define SYSCTL_PRGPIO_R      (*((volatile uint32_t *)0x400FEA08))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 448,
          "context": "#define SYSCTL_PRGPIO_R3      0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 449,
          "context": "#define SYSCTL_PRGPIO_R4      0x00000010"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_122",
      "name": "pack",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 34,
          "context": "#pragma pack(push, 4)  // Выравнивание по 4 байта для оптимизации"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 41,
          "context": "uint32_t packetsSent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 42,
          "context": "uint32_t packetsReceived;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 51,
          "context": "#pragma pack(pop)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 55,
          "context": "static bool ValidatePacket(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 56,
          "context": "static void ProcessReceivedPacket(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 170,
          "context": "CommPacket* packet = (CommPacket*)(commState.rxBuffer + processedIndex);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 173,
          "context": "uint16_t packetSize = sizeof(CommPacket) - COMM_MAX_PACKET_SIZE + packet->length;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 174,
          "context": "if (processedIndex + packetSize > commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 179,
          "context": "if (ValidatePacket(packet)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 180,
          "context": "ProcessReceivedPacket(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 181,
          "context": "commState.packetsReceived++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 187,
          "context": "processedIndex += packetSize;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 210,
          "context": "CommPacket packet;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 211,
          "context": "packet.type = type;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 212,
          "context": "packet.length = length;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 215,
          "context": "memcpy(packet.data, data, (size_t)length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 219,
          "context": "packet.checksum = CalculateChecksum((const uint8_t*)&packet, (uint16_t)(sizeof(CommPacket) - sizeof(uint16_t)));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 222,
          "context": "if (UART_Send((const uint8_t*)&packet, (uint16_t)sizeof(CommPacket))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 223,
          "context": "commState.packetsSent++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 260,
          "context": "void Communication_HandleCommand(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 261,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 265,
          "context": "CommandType cmd = packet->data[0];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 301,
          "context": "void Communication_HandleConfig(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 302,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_CONFIG) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 332,
          "context": "return commState.packetsSent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 336,
          "context": "return commState.packetsReceived;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 402,
          "context": "static bool ValidatePacket(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 403,
          "context": "if (packet == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 408,
          "context": "if (packet->length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 414,
          "context": "(uint8_t*)packet,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 415,
          "context": "sizeof(CommPacket) - sizeof(packet->checksum)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 418,
          "context": "return calculatedChecksum == packet->checksum;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 421,
          "context": "static void ProcessReceivedPacket(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 422,
          "context": "switch (packet->type) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 429,
          "context": "Communication_HandleCommand(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 433,
          "context": "Communication_HandleConfig(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 441,
          "context": "Communication_SendError(0x02, \"Unknown packet type\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 8,
          "context": "#include \"D:/keil/pack/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 70,
          "context": "#pragma pack(push, 4)  // Выравнивание по 4 байта"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 90,
          "context": "#pragma pack(pop)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 43,
          "context": "#pragma pack(push, 2)  // Выравнивание по 2 байта для оптимизации размера пакетов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 73,
          "context": "#pragma pack(pop)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 97,
          "context": "void Communication_HandleCommand(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 98,
          "context": "void Communication_HandleConfig(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 7,
          "context": "#pragma pack(push, 4)  // Выравнивание по 4 байта для оптимизации"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 46,
          "context": "#pragma pack(pop)  // Восстанавливаем стандартное выравнивание"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "pragma"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_124",
      "name": "CalculateChecksum",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 54,
          "context": "static uint16_t CalculateChecksum(const uint8_t* data, uint16_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 219,
          "context": "packet.checksum = CalculateChecksum((const uint8_t*)&packet, (uint16_t)(sizeof(CommPacket) - sizeof(uint16_t)));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 394,
          "context": "static uint16_t CalculateChecksum(const uint8_t* data, uint16_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 413,
          "context": "uint16_t calculatedChecksum = CalculateChecksum("
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "data",
          "type": "const uint8_t*"
        },
        {
          "name": "length",
          "type": "uint16_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "uint16_t"
        }
      ],
      "is_static": true,
      "scope": "static",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_125",
      "name": "ValidatePacket",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 55,
          "context": "static bool ValidatePacket(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 179,
          "context": "if (ValidatePacket(packet)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 402,
          "context": "static bool ValidatePacket(const CommPacket* packet) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "packet",
          "type": "const CommPacket*"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": true,
      "scope": "static",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_126",
      "name": "ProcessReceivedPacket",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 56,
          "context": "static void ProcessReceivedPacket(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 180,
          "context": "ProcessReceivedPacket(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 421,
          "context": "static void ProcessReceivedPacket(const CommPacket* packet) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "packet",
          "type": "const CommPacket*"
        }
      ],
      "output_params": [],
      "is_static": true,
      "scope": "static",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_127",
      "name": "UpdateConnectionStatus",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 57,
          "context": "static void UpdateConnectionStatus(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 201,
          "context": "UpdateConnectionStatus();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 374,
          "context": "static void UpdateConnectionStatus(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": true,
      "scope": "static",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_128",
      "name": "SysTick_Init",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 60,
          "context": "static void SysTick_Init(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 142,
          "context": "SysTick_Init();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 354,
          "context": "static void SysTick_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 100,
          "context": "void SysTick_Init(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 118,
          "context": "void SysTick_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 157,
          "context": "SysTick_Init();"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": true,
      "scope": "static",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_129",
      "name": "GetCurrentTime",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 61,
          "context": "static uint32_t GetCurrentTime(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 182,
          "context": "commState.lastPacketTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 370,
          "context": "static uint32_t GetCurrentTime(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 375,
          "context": "uint32_t currentTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 136,
          "context": "static uint32_t GetCurrentTime(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 142,
          "context": "uint32_t start = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 143,
          "context": "while ((GetCurrentTime() - start) < ms) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 345,
          "context": "diagState.powerState.uptime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1300,
          "context": "startTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1305,
          "context": "while (GetCurrentTime() - startTime < RC_TEST_TIMEOUT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1334,
          "context": "startTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1339,
          "context": "while (GetCurrentTime() - startTime < TELEMETRY_TEST_TIMEOUT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1944,
          "context": "uint32_t currentTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1961,
          "context": "uint32_t startTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1964,
          "context": "while (GetCurrentTime() - startTime < 100) {  // Таймаут 100 мс"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": true,
      "scope": "static",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_130",
      "name": "UART_Init",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 64,
          "context": "bool UART_Init(uint32_t baudRate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 145,
          "context": "if (!UART_Init(commState.baudRate)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 322,
          "context": "UART_Init(baudRate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 76,
          "context": "bool UART_Init(uint32_t baudRate);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "baudRate",
          "type": "uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_131",
      "name": "while",
      "description": "Ждем готовности периферии",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 87,
          "context": "while(!IsPeripheralReady(peripheral)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 102,
          "context": "while (1) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 165,
          "context": "while(!IsPeripheralReady(SYSCTL_PERIPH_GPIOF)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 70,
          "context": "while((SYSCTL_PRGPIO_R & (1U << 0)) == 0) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 105,
          "context": "while (count < maxLength) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 124,
          "context": "while (UART0_FR_R & UART_FR_TXFF) {}  // Ждем освобождения буфера передачи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 169,
          "context": "while (processedIndex + sizeof(CommPacket) <= commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 143,
          "context": "while ((GetCurrentTime() - start) < ms) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 205,
          "context": "while(!(ADC0_RIS_R & ADC_RIS_INR3)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 293,
          "context": "while(!(SYSCTL_PRGPIO_R & SYSCTL_PRGPIO_R4)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 294,
          "context": "while(!(SYSCTL_PRADC_R & SYSCTL_PRADC_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 373,
          "context": "while(!(SYSCTL_PRGPIO_R & (SYSCTL_PRGPIO_R3 | SYSCTL_PRGPIO_R4))) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 374,
          "context": "while(!(SYSCTL_PRADC_R & SYSCTL_PRADC_R1)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 665,
          "context": "while(!(SYSCTL_PRWD_R & SYSCTL_PRWD_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1305,
          "context": "while (GetCurrentTime() - startTime < RC_TEST_TIMEOUT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1339,
          "context": "while (GetCurrentTime() - startTime < TELEMETRY_TEST_TIMEOUT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1454,
          "context": "while((ADC0_RIS_R & 0x08) == 0 && timeout > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1596,
          "context": "while (elapsedTicks < ticks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1915,
          "context": "while(!(ADC1_RIS_R & (1 << adcChannel))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1964,
          "context": "while (GetCurrentTime() - startTime < 100) {  // Таймаут 100 мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2032,
          "context": "while (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 295,
          "context": "while (heading < 0.0f) heading += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 296,
          "context": "while (heading >= 360.0f) heading -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 172,
          "context": "while (filteredYaw >= 360.0f) filteredYaw -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 173,
          "context": "while (filteredYaw < 0.0f) filteredYaw += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 131,
          "context": "while (yawError > 180.0f) yawError -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 132,
          "context": "while (yawError < -180.0f) yawError += 360.0f;"
        }
      ],
      "comments": "Ждем готовности периферии",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "0",
          "type": "(SYSCTL_PRGPIO_R & (1U <<"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "периферии"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": [],
      "is_deleted": true
    },
    {
      "id": "func_132",
      "name": "UART_Receive",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 98,
          "context": "uint16_t UART_Receive(uint8_t* buffer, uint16_t maxLength) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 159,
          "context": "uint16_t bytesReceived = UART_Receive("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 77,
          "context": "uint16_t UART_Receive(uint8_t* buffer, uint16_t maxLength);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "buffer",
          "type": "uint8_t*"
        },
        {
          "name": "maxLength",
          "type": "uint16_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "uint16_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_133",
      "name": "UART_Send",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 116,
          "context": "bool UART_Send(const uint8_t* data, uint16_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 222,
          "context": "if (UART_Send((const uint8_t*)&packet, (uint16_t)sizeof(CommPacket))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 78,
          "context": "bool UART_Send(const uint8_t* data, uint16_t length);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "data",
          "type": "const uint8_t*"
        },
        {
          "name": "length",
          "type": "uint16_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_134",
      "name": "Communication_Init",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 131,
          "context": "bool Communication_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 81,
          "context": "void Communication_Init(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_135",
      "name": "memset",
      "description": "Инициализация состояния",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 16,
          "context": "memset(&actuators_state, 0, sizeof(ActuatorsState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 137,
          "context": "memset(&commState, 0, sizeof(commState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 154,
          "context": "memset(&diagState, 0, sizeof(diagState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 169,
          "context": "memset(&diagState.powerState, 0, sizeof(PowerState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 170,
          "context": "memset(&diagState.thermalState, 0, sizeof(ThermalState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1182,
          "context": "memset(&motorData[i], 0, sizeof(MotorTestData));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1651,
          "context": "memset(&selfTestResult, 0, sizeof(SelfTestResult));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 25,
          "context": "memset(&nav_state, 0, sizeof(NavigationState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 26,
          "context": "memset(waypoints, 0, sizeof(waypoints));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 81,
          "context": "memset(waypoints, 0, sizeof(waypoints));"
        }
      ],
      "comments": "Инициализация состояния",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "состояния"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_137",
      "name": "if",
      "description": "Инициализация UART",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 107,
          "context": "if (!Sensors_Update()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 119,
          "context": "if (currentState >= DRONE_STATE_ARMED) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 124,
          "context": "if (!Navigation_IsActive()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 131,
          "context": "if (Stabilization_IsEnabled() == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 139,
          "context": "if (actState.all_motors_enabled == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 146,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / TELEMETRY_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 151,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / DIAGNOSTIC_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 215,
          "context": "if ((mainLoopCounter % 10) < 5) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 230,
          "context": "if (Communication_Receive(&rxPacket)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 232,
          "context": "if (rxPacket.type == PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 234,
          "context": "if (rxPacket.length == sizeof(CommandPacket)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 240,
          "context": "if (currentState == DRONE_STATE_FLYING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 261,
          "context": "if (currentState >= DRONE_STATE_ARMED) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 357,
          "context": "if (sensorData.imu.temperature < MIN_BATTERY_VOLTAGE) { // Временно используем temperature как voltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 363,
          "context": "if (sensorData.baro.altitude > MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 369,
          "context": "if (fabsf(sensorData.imu.accel_x) > MAX_ANGLE ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 376,
          "context": "if (!Communication_IsConnected()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 384,
          "context": "if (!isEmergencyMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 407,
          "context": "if (isEmergencyMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 32,
          "context": "if (motor_index >= MOTOR_COUNT || emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 48,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 55,
          "context": "if (motor_index >= MOTOR_COUNT || emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 62,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 70,
          "context": "if (emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 87,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 95,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 103,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 117,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 131,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 146,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 152,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 159,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 167,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 176,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 185,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 194,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 201,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 228,
          "context": "if (actuators_state.motors[i].is_running) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 234,
          "context": "if (actuators_state.motors[i].temperature > 25.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 243,
          "context": "if (actuators_state.motors[i].is_running) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 250,
          "context": "if (*pwm_value > PWM_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 101,
          "context": "if (buffer == NULL || maxLength == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 106,
          "context": "if (UART0_FR_R & UART_FR_RXFE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 119,
          "context": "if (data == NULL || length == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 132,
          "context": "if (commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 145,
          "context": "if (!UART_Init(commState.baudRate)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 154,
          "context": "if (!commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 164,
          "context": "if (bytesReceived > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 174,
          "context": "if (processedIndex + packetSize > commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 179,
          "context": "if (ValidatePacket(packet)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 191,
          "context": "if (processedIndex > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 192,
          "context": "if (processedIndex < commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 205,
          "context": "if (!commState.initialized || length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 214,
          "context": "if (data != NULL && length > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 222,
          "context": "if (UART_Send((const uint8_t*)&packet, (uint16_t)sizeof(CommPacket))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 232,
          "context": "if (telemetry == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 249,
          "context": "if (message != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 261,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 302,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_CONFIG) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 319,
          "context": "if (baudRate != commState.baudRate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 321,
          "context": "if (commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 349,
          "context": "if (commState.currentTime - commState.lastPacketTime > COMM_TIMEOUT_MS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 378,
          "context": "if (currentTime - commState.lastPacketTime > COMM_TIMEOUT_MS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 379,
          "context": "if (commState.connected) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 385,
          "context": "if (!commState.connected) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 403,
          "context": "if (packet == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 408,
          "context": "if (packet->length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 452,
          "context": "if(length) *length = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 11,
          "context": "#ifndef NAN"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 13,
          "context": "#endif"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 30,
          "context": "#ifndef ADC0_SSMUX1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 32,
          "context": "#endif"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 33,
          "context": "#ifndef ADC0_SSCTL1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 35,
          "context": "#endif"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 150,
          "context": "if (diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 187,
          "context": "if (NVIC_APINT_R & 0x10000) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 197,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 220,
          "context": "if (voltage >= 12.6f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 222,
          "context": "} else if (voltage <= 9.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 229,
          "context": "if (voltage <= 9.5f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 231,
          "context": "} else if (voltage <= 10.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 253,
          "context": "if (state == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 272,
          "context": "if (state->batteryLevel < 20.0f) {  // Порог низкого заряда 20%"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 348,
          "context": "if (voltage <= BATTERY_CRITICAL_VOLTAGE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 352,
          "context": "else if (voltage <= BATTERY_LOW_VOLTAGE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 357,
          "context": "if (temp >= BATTERY_MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 439,
          "context": "if (mcu_temp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 443,
          "context": "else if (mcu_temp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 448,
          "context": "if (motors_temp >= TEMP_MOTORS_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 452,
          "context": "else if (motors_temp >= TEMP_MOTORS_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 457,
          "context": "if (board_temp >= TEMP_BOARD_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 461,
          "context": "else if (board_temp >= TEMP_BOARD_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 476,
          "context": "if (diagState.thermalState.mcuTemp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 481,
          "context": "} else if (diagState.thermalState.mcuTemp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 490,
          "context": "if (diagState.thermalState.motorTemps[i] >= TEMP_MOTORS_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 495,
          "context": "} else if (diagState.thermalState.motorTemps[i] >= TEMP_MOTORS_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 504,
          "context": "if (diagState.thermalState.boardTemp >= TEMP_BOARD_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 509,
          "context": "} else if (diagState.thermalState.boardTemp >= TEMP_BOARD_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 521,
          "context": "if (!isnan(temp)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 528,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 534,
          "context": "if (!diagState.initialized || diagState.logCount >= DIAG_MAX_LOG_ENTRIES) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 544,
          "context": "if (level >= LOG_ERROR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 548,
          "context": "if (level == LOG_FATAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 567,
          "context": "if (!entry || index >= diagState.logCount) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 583,
          "context": "if (!diagState.debugEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 596,
          "context": "if (len < DEBUG_BUFFER_SIZE - 2) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 654,
          "context": "if (diagState.systemState == SYSTEM_STATE_ERROR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 710,
          "context": "if (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 788,
          "context": "if (!diagState.lowPowerMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 807,
          "context": "if (diagState.lowPowerMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 831,
          "context": "if (diagState.perfCount == 0 || elapsed > diagState.perfMaxTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 834,
          "context": "if (diagState.perfCount == 0 || elapsed < diagState.perfMinTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 853,
          "context": "if (diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 859,
          "context": "if (!diagState.debugEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 895,
          "context": "if (diagState.perfCount > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 905,
          "context": "if (diagState.logCount > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 951,
          "context": "if (batteryVoltage < POWER_TEST_VOLTAGE_MIN) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 960,
          "context": "else if (batteryVoltage > POWER_TEST_VOLTAGE_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 972,
          "context": "if (batteryCurrent > POWER_TEST_CURRENT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 984,
          "context": "if (batteryTemp > POWER_TEST_TEMP_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 994,
          "context": "if (!TestSupplyVoltages()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1011,
          "context": "if (sensorSupply < POWER_TEST_SUPPLY_MIN || sensorSupply > POWER_TEST_SUPPLY_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1058,
          "context": "if (accel_magnitude > IMU_TEST_ACCEL_MAX || gyro_magnitude > IMU_TEST_GYRO_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1069,
          "context": "if (!TestBarometer()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1080,
          "context": "if (altitude < BARO_TEST_ALT_MIN || altitude > BARO_TEST_ALT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1091,
          "context": "if (!TestMagnetometer()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1111,
          "context": "if (mag_magnitude < MAG_TEST_FIELD_MIN || mag_magnitude > MAG_TEST_FIELD_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1121,
          "context": "if (HasGPS()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1122,
          "context": "if (!TestGPS()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1169,
          "context": "if (!TestESC()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1185,
          "context": "if (!TestMotorResponse(i)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1208,
          "context": "if (motorData[i].current > MOTOR_TEST_CURRENT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1220,
          "context": "if (motorData[i].rpm < 100.0f) {  // Минимальные обороты для теста"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1232,
          "context": "if (motorData[i].temperature > MOTOR_TEST_TEMP_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1242,
          "context": "if (motorData[i].vibration > MOTOR_TEST_VIB_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1306,
          "context": "if (IsRCTestResponseReceived()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1313,
          "context": "if (!rcResponded) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1324,
          "context": "if (rcQuality < RC_TEST_MIN_QUALITY) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1340,
          "context": "if (IsTelemetryAckReceived()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1347,
          "context": "if (!telemetryResponded) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1357,
          "context": "if (HasBackupComm() && !TestBackupComm()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1378,
          "context": "if (!TestWatchdogReset()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1389,
          "context": "if (!TestEEPROM()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1400,
          "context": "if (!TestFlashMemory()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1411,
          "context": "if (HasParachute()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1412,
          "context": "if (!TestParachuteSystem()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1424,
          "context": "if (!TestKillSwitch()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1444,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1459,
          "context": "if (timeout == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1477,
          "context": "if (adcResult.error != ADC_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1485,
          "context": "if (adcResult.value == 0 || adcResult.value >= ADC_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1513,
          "context": "if (isnan(temperature)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1525,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1542,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1553,
          "context": "if (!status.complete) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1555,
          "context": "if (conversionAttempts >= MAX_CONVERSION_ATTEMPTS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1576,
          "context": "if (result.ticks == 0 || result.ticks > NVIC_ST_RELOAD_R) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1589,
          "context": "if (startTicks.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1599,
          "context": "if (currentTicks.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1604,
          "context": "if (currentTicks.ticks <= startValue) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1625,
          "context": "if (currentTicksResult.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1632,
          "context": "if (currentTicks <= startTicks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1678,
          "context": "if (selfTestResult.powerTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1683,
          "context": "else if (selfTestResult.powerTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1690,
          "context": "if (selfTestResult.sensorTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1695,
          "context": "else if (selfTestResult.sensorTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1702,
          "context": "if (selfTestResult.motorTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1707,
          "context": "else if (selfTestResult.motorTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1714,
          "context": "if (selfTestResult.commTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1719,
          "context": "else if (selfTestResult.commTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1726,
          "context": "if (selfTestResult.safetyTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1731,
          "context": "else if (selfTestResult.safetyTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1738,
          "context": "if (selfTestResult.totalErrors > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1767,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1824,
          "context": "if (adcResult.error != ADC_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1852,
          "context": "if (isnan(temperature)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1865,
          "context": "if (type < 0 || type >= THERMOCOUPLE_TYPE_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1891,
          "context": "if (temperature < MIN_TEMP || temperature > MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1904,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1947,
          "context": "if (currentTime - lastBackupCommTest < 1000) {  // Тестируем не чаще раза в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1956,
          "context": "if (!success) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1965,
          "context": "if (ReceiveBackupCommPacket(response, sizeof(response))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1967,
          "context": "if (response[0] == 0x55 && response[1] == 0xAA &&"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1991,
          "context": "if (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 45,
          "context": "if (waypoint == NULL || waypoint_count >= MAX_WAYPOINTS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 49,
          "context": "if (!Navigation_IsValidPosition(&waypoint->position)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 61,
          "context": "if (index >= waypoint_count) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 73,
          "context": "if (current_waypoint_index > index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 91,
          "context": "if (index >= waypoint_count || waypoint == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 100,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 111,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 126,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 132,
          "context": "if (position != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 182,
          "context": "if (nav_state.current_position.altitude < NAV_MIN_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 185,
          "context": "} else if (nav_state.current_position.altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 194,
          "context": "if (!pos1->valid || !pos2->valid) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 212,
          "context": "if (!pos1->valid || !pos2->valid) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 228,
          "context": "if (position == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 233,
          "context": "if (position->latitude < -90.0f || position->latitude > 90.0f ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 243,
          "context": "if (!position->valid || !home_position_set) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 253,
          "context": "if (position != NULL && Navigation_IsValidPosition(position)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 260,
          "context": "if (!home_position_set) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 271,
          "context": "if (!nav_state.navigation_active || waypoint_count == 0 ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 284,
          "context": "if (nav_state.distance_to_target <= NAV_WAYPOINT_RADIUS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 286,
          "context": "if (current_waypoint_index < waypoint_count - 1) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 52,
          "context": "if (!sensor_state.mpu6050_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 61,
          "context": "if (!sensor_state.bmp280_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 115,
          "context": "if (sensor_state.current_altitude < 0.0f) sensor_state.current_altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 125,
          "context": "if (sensor_state.rotation_angle >= 360.0f) sensor_state.rotation_angle -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 144,
          "context": "if (data == NULL) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 150,
          "context": "if (orientation == NULL) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 182,
          "context": "if(data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 196,
          "context": "if(data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 106,
          "context": "if (!stabState.enabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 145,
          "context": "if (orientation != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 151,
          "context": "if (setPoint != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 190,
          "context": "if (pid == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 213,
          "context": "if (value < min) return min;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 214,
          "context": "if (value > max) return max;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 1,
          "context": "#ifndef ACTUATORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 76,
          "context": "#endif // ACTUATORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 1,
          "context": "#ifndef COMMUNICATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 112,
          "context": "#endif // COMMUNICATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 1,
          "context": "#ifndef DIAGNOSTICS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 567,
          "context": "#endif // DIAGNOSTICS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 1,
          "context": "#ifndef GPIO_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 49,
          "context": "#endif // GPIO_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 1,
          "context": "#ifndef MAIN_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 91,
          "context": "#endif // MAIN_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 1,
          "context": "#ifndef NAVIGATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 83,
          "context": "#endif // NAVIGATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 1,
          "context": "#ifndef SENSORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 55,
          "context": "#endif // SENSORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 1,
          "context": "#ifndef STABILIZATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 56,
          "context": "#endif // STABILIZATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 1,
          "context": "#ifndef TELEMETRY_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 14,
          "context": "#endif // TELEMETRY_H"
        }
      ],
      "comments": "Инициализация UART",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "UART"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_138",
      "name": "Communication_Process",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 153,
          "context": "void Communication_Process(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 85,
          "context": "void Communication_Process(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_141",
      "name": "Communication_Send",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 351,
          "context": "Communication_SendTelemetry(&telemetry);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 392,
          "context": "Communication_SendError(0x01, reason);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 420,
          "context": "Communication_SendStatus(0x00);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 204,
          "context": "bool Communication_Send(PacketType type, const void* data, uint8_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 231,
          "context": "bool Communication_SendTelemetry(const TelemetryData* telemetry) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 235,
          "context": "return Communication_Send(PACKET_TYPE_TELEMETRY, telemetry, sizeof(TelemetryData));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 238,
          "context": "bool Communication_SendStatus(uint8_t status) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 239,
          "context": "return Communication_Send(PACKET_TYPE_STATUS, &status, sizeof(status));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 242,
          "context": "bool Communication_SendError(uint8_t errorCode, const char* message) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 256,
          "context": "return Communication_Send(PACKET_TYPE_ERROR, &errorData,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 296,
          "context": "Communication_SendError(0x01, \"Unknown command\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 382,
          "context": "Communication_SendError(0x03, \"Connection lost\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 388,
          "context": "Communication_SendStatus(0x01); // 0x01 - связь восстановлена"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 425,
          "context": "Communication_Send(PACKET_TYPE_HEARTBEAT, NULL, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 441,
          "context": "Communication_SendError(0x02, \"Unknown packet type\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 447,
          "context": "void Communication_SendData(uint8_t* data, uint16_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 603,
          "context": "Communication_SendData((uint8_t*)debugBuffer, strlen(debugBuffer));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 82,
          "context": "void Communication_SendData(uint8_t* data, uint16_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 88,
          "context": "bool Communication_Send(PacketType type, const void* data, uint8_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 92,
          "context": "bool Communication_SendTelemetry(const TelemetryData* telemetry);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 93,
          "context": "bool Communication_SendStatus(uint8_t status);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 94,
          "context": "bool Communication_SendError(uint8_t errorCode, const char* message);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "type",
          "type": "PacketType"
        },
        {
          "name": "data",
          "type": "const void*"
        },
        {
          "name": "length",
          "type": "uint8_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_143",
      "name": "Communication_SendTelemetry",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 351,
          "context": "Communication_SendTelemetry(&telemetry);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 231,
          "context": "bool Communication_SendTelemetry(const TelemetryData* telemetry) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 92,
          "context": "bool Communication_SendTelemetry(const TelemetryData* telemetry);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "telemetry",
          "type": "const TelemetryData*"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_145",
      "name": "Communication_SendStatus",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 420,
          "context": "Communication_SendStatus(0x00);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 238,
          "context": "bool Communication_SendStatus(uint8_t status) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 388,
          "context": "Communication_SendStatus(0x01); // 0x01 - связь восстановлена"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 93,
          "context": "bool Communication_SendStatus(uint8_t status);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "status",
          "type": "uint8_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_147",
      "name": "Communication_SendError",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 392,
          "context": "Communication_SendError(0x01, reason);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 242,
          "context": "bool Communication_SendError(uint8_t errorCode, const char* message) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 296,
          "context": "Communication_SendError(0x01, \"Unknown command\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 382,
          "context": "Communication_SendError(0x03, \"Connection lost\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 441,
          "context": "Communication_SendError(0x02, \"Unknown packet type\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 94,
          "context": "bool Communication_SendError(uint8_t errorCode, const char* message);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "errorCode",
          "type": "uint8_t"
        },
        {
          "name": "message",
          "type": "const char*"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_149",
      "name": "Communication_HandleCommand",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 260,
          "context": "void Communication_HandleCommand(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 429,
          "context": "Communication_HandleCommand(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 97,
          "context": "void Communication_HandleCommand(const CommPacket* packet);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "packet",
          "type": "const CommPacket*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_150",
      "name": "Communication_HandleConfig",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 301,
          "context": "void Communication_HandleConfig(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 433,
          "context": "Communication_HandleConfig(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 98,
          "context": "void Communication_HandleConfig(const CommPacket* packet);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "packet",
          "type": "const CommPacket*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_151",
      "name": "Communication_IsConnected",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 376,
          "context": "if (!Communication_IsConnected()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 310,
          "context": "bool Communication_IsConnected(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 84,
          "context": "bool Communication_IsConnected(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_152",
      "name": "Communication_GetLastPacketTime",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 314,
          "context": "uint32_t Communication_GetLastPacketTime(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 101,
          "context": "uint32_t Communication_GetLastPacketTime(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_153",
      "name": "Communication_SetBaudRate",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 318,
          "context": "void Communication_SetBaudRate(uint32_t baudRate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 104,
          "context": "void Communication_SetBaudRate(uint32_t baudRate);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "baudRate",
          "type": "uint32_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_154",
      "name": "Communication_SetTelemetryRate",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 327,
          "context": "void Communication_SetTelemetryRate(uint16_t rateHz) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 105,
          "context": "void Communication_SetTelemetryRate(uint16_t rateHz);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "rateHz",
          "type": "uint16_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_155",
      "name": "Communication_GetPacketsSent",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 331,
          "context": "uint32_t Communication_GetPacketsSent(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 108,
          "context": "uint32_t Communication_GetPacketsSent(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_156",
      "name": "Communication_GetPacketsReceived",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 335,
          "context": "uint32_t Communication_GetPacketsReceived(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 109,
          "context": "uint32_t Communication_GetPacketsReceived(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_157",
      "name": "Communication_GetErrorCount",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 339,
          "context": "uint32_t Communication_GetErrorCount(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 110,
          "context": "uint32_t Communication_GetErrorCount(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_158",
      "name": "__attribute__",
      "description": "Обработчик прерывания системного таймера",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 344,
          "context": "__attribute__((weak)) void SysTick_Handler(void) {"
        }
      ],
      "comments": "Обработчик прерывания системного таймера",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "таймера"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_159",
      "name": "SysTick_Handler",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 344,
          "context": "__attribute__((weak)) void SysTick_Handler(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_162",
      "name": "обновления",
      "description": "Устанавливаем период обновления (например, 1 мс)",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [],
      "comments": "Устанавливаем период обновления (например, 1 мс)",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "мс",
          "type": "1"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "период"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_173",
      "name": "Communication_SendData",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 447,
          "context": "void Communication_SendData(uint8_t* data, uint16_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 603,
          "context": "Communication_SendData((uint8_t*)debugBuffer, strlen(debugBuffer));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 82,
          "context": "void Communication_SendData(uint8_t* data, uint16_t length);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "data",
          "type": "uint8_t*"
        },
        {
          "name": "length",
          "type": "uint16_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_174",
      "name": "Communication_Receive",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 230,
          "context": "if (Communication_Receive(&rxPacket)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 451,
          "context": "void Communication_Receive(uint8_t* buffer, uint16_t* length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 83,
          "context": "uint16_t Communication_Receive(uint8_t* buffer, uint16_t maxLength);  // Изменили возвращаемый тип и имя параметра"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 89,
          "context": "uint16_t Communication_Receive(uint8_t* buffer, uint16_t maxLength);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "buffer",
          "type": "uint8_t*"
        },
        {
          "name": "length",
          "type": "uint16_t*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_175",
      "name": "NAN",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 11,
          "context": "#ifndef NAN"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 12,
          "context": "#define NAN (0.0f/0.0f)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1481,
          "context": "return NAN;  // Возвращаем NaN при ошибке"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1489,
          "context": "return NAN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1509,
          "context": "return NAN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1768,
          "context": "return NAN;  // Возвращаем NaN для некорректного индекса"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1848,
          "context": "return NAN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1869,
          "context": "return NAN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1895,
          "context": "return NAN;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_176",
      "name": "SYSCTL_RCGCWD_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 17,
          "context": "#define SYSCTL_RCGCWD_R        (*((volatile uint32_t *)(SYSCTL_BASE + 0x600)))  // Регистр тактирования Watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 662,
          "context": "SYSCTL_RCGCWD_R |= SYSCTL_RCGCWD_R0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 305,
          "context": "#define SYSCTL_RCGCWD_R      (*((volatile uint32_t *)0x400FE600))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 309,
          "context": "#define SYSCTL_RCGCWD_R0     0x00000001"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_177",
      "name": "SYSCTL_PRWD_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 18,
          "context": "#define SYSCTL_PRWD_R          (*((volatile uint32_t *)(SYSCTL_BASE + 0xA00)))  // Регистр готовности Watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 665,
          "context": "while(!(SYSCTL_PRWD_R & SYSCTL_PRWD_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 306,
          "context": "#define SYSCTL_PRWD_R        (*((volatile uint32_t *)0x400FEA00))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 310,
          "context": "#define SYSCTL_PRWD_R0       0x00000001"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_178",
      "name": "NVIC_PRIO_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 22,
          "context": "#define NVIC_PRIO_R(n)         (*((volatile uint32_t *)(NVIC_BASE + 0x400 + ((n) * 4))))  // Регистры приоритета прерываний"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_179",
      "name": "NVIC_ST_CTRL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 356,
          "context": "NVIC_ST_CTRL_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 365,
          "context": "NVIC_ST_CTRL_R = NVIC_ST_CTRL_ENABLE |"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 25,
          "context": "#define NVIC_ST_CTRL_R          (*((volatile uint32_t *)0xE000E010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 120,
          "context": "NVIC_ST_CTRL_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 132,
          "context": "NVIC_ST_CTRL_R = 0x07;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 327,
          "context": "#define NVIC_ST_CTRL_R       (*((volatile uint32_t *)0xE000E010))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_180",
      "name": "NVIC_ST_RELOAD_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 359,
          "context": "NVIC_ST_RELOAD_R = SystemCoreClock / 1000 - 1;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 26,
          "context": "#define NVIC_ST_RELOAD_R        (*((volatile uint32_t *)0xE000E014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 123,
          "context": "NVIC_ST_RELOAD_R = 16000 - 1;  // (16MHz / 1000Hz) - 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1576,
          "context": "if (result.ticks == 0 || result.ticks > NVIC_ST_RELOAD_R) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1607,
          "context": "elapsedTicks = (NVIC_ST_RELOAD_R - currentTicks.ticks) + startValue;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1636,
          "context": "result.elapsedTicks = (NVIC_ST_RELOAD_R - currentTicks) + startTicks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 328,
          "context": "#define NVIC_ST_RELOAD_R     (*((volatile uint32_t *)0xE000E014))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_181",
      "name": "NVIC_ST_CURRENT_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 362,
          "context": "NVIC_ST_CURRENT_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 27,
          "context": "#define NVIC_ST_CURRENT_R       (*((volatile uint32_t *)0xE000E018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 126,
          "context": "NVIC_ST_CURRENT_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1571,
          "context": ".ticks = NVIC_ST_CURRENT_R,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 329,
          "context": "#define NVIC_ST_CURRENT_R    (*((volatile uint32_t *)0xE000E018))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_182",
      "name": "ADC0_SSMUX1_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 30,
          "context": "#ifndef ADC0_SSMUX1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 31,
          "context": "#define ADC0_SSMUX1_R          (*((volatile uint32_t *)0x40038044))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 304,
          "context": "ADC0_SSMUX1_R = (0 << 0) |                 // Канал 0 (напряжение)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_183",
      "name": "ADC0_SSCTL1_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 33,
          "context": "#ifndef ADC0_SSCTL1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 34,
          "context": "#define ADC0_SSCTL1_R          (*((volatile uint32_t *)0x40038048))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 307,
          "context": "ADC0_SSCTL1_R = (0 << 0) |                // Первый канал"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_184",
      "name": "ADC1_SSMUX1_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 39,
          "context": "#define ADC1_SSMUX1_R       (*((volatile uint32_t *)(ADC1_BASE + 0x40)))  // Мультиплексор выборки SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1759,
          "context": "ADC1_SSMUX1_R = ADC_AIN0;  // Выбираем канал AIN0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1781,
          "context": "ADC1_SSMUX1_R = ADC_AIN4;  // Выбираем канал AIN4"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1790,
          "context": "ADC1_SSMUX1_R = ADC_AIN5;  // Выбираем канал AIN5"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1799,
          "context": "ADC1_SSMUX1_R = ADC_AIN6;  // Выбираем канал AIN6"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_185",
      "name": "ADC1_SSCTL1_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 40,
          "context": "#define ADC1_SSCTL1_R       (*((volatile uint32_t *)(ADC1_BASE + 0x44)))  // Управление и статус SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1760,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1782,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1791,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1800,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_186",
      "name": "ADC1_SSFIFO1_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 41,
          "context": "#define ADC1_SSFIFO1_R      (*((volatile uint32_t *)(ADC1_BASE + 0x48)))  // FIFO данных SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1761,
          "context": "ADC1_SSFIFO1_R;            // Очистка FIFO"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1763,
          "context": "return ADC1_SSFIFO1_R;     // Возвращаем значение АЦП"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1783,
          "context": "ADC1_SSFIFO1_R;            // Очистка FIFO"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1785,
          "context": "return ADC1_SSFIFO1_R;     // Возвращаем значение АЦП"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1792,
          "context": "ADC1_SSFIFO1_R;            // Очистка FIFO"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1794,
          "context": "return ADC1_SSFIFO1_R;     // Возвращаем значение АЦП"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1801,
          "context": "ADC1_SSFIFO1_R;            // Очистка FIFO"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1803,
          "context": "return ADC1_SSFIFO1_R;     // Возвращаем значение АЦП"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_187",
      "name": "ADC1_ISC_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 42,
          "context": "#define ADC1_ISC_R          (*((volatile uint32_t *)(ADC1_BASE + 0x50)))  // Регистр очистки прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 467,
          "context": "ADC1_ISC_R = ADC_ISC_IN0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1762,
          "context": "ADC1_ISC_R = ADC_ISC_IN1;  // Сброс флага прерывания"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1784,
          "context": "ADC1_ISC_R = ADC_ISC_IN1;  // Сброс флага прерывания"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1793,
          "context": "ADC1_ISC_R = ADC_ISC_IN1;  // Сброс флага прерывания"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1802,
          "context": "ADC1_ISC_R = ADC_ISC_IN1;  // Сброс флага прерывания"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1923,
          "context": "ADC1_ISC_R = (1 << adcChannel);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_188",
      "name": "ADC0_ACTSS_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 45,
          "context": "#define ADC0_ACTSS_R           (*((volatile uint32_t *)0x40038000))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 302,
          "context": "ADC0_ACTSS_R &= ~ADC_ACTSS_ASEN1;          // Отключаем секвенсор для настройки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 311,
          "context": "ADC0_ACTSS_R |= ADC_ACTSS_ASEN1;          // Включаем секвенсор"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_189",
      "name": "ADC0_EMUX_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 46,
          "context": "#define ADC0_EMUX_R            (*((volatile uint32_t *)0x40038014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 303,
          "context": "ADC0_EMUX_R &= ~ADC_EMUX_EM1_M;            // Программный запуск"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_190",
      "name": "ADC0_SSMUX3_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 47,
          "context": "#define ADC0_SSMUX3_R          (*((volatile uint32_t *)0x400380A0))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_191",
      "name": "ADC0_SSCTL3_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 48,
          "context": "#define ADC0_SSCTL3_R          (*((volatile uint32_t *)0x400380A4))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_192",
      "name": "ADC0_PSSI_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 49,
          "context": "#define ADC0_PSSI_R            (*((volatile uint32_t *)0x40038028))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 202,
          "context": "ADC0_PSSI_R = ADC_PSSI_SS3;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1450,
          "context": "ADC0_PSSI_R = 0x0008;  // Запуск SS3"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1529,
          "context": "ADC0_PSSI_R = 0x0008;  // Запуск SS3"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_193",
      "name": "ADC0_RIS_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 50,
          "context": "#define ADC0_RIS_R             (*((volatile uint32_t *)0x40038004))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 205,
          "context": "while(!(ADC0_RIS_R & ADC_RIS_INR3)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1454,
          "context": "while((ADC0_RIS_R & 0x08) == 0 && timeout > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1547,
          "context": "status.complete = (ADC0_RIS_R & 0x08) != 0;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_194",
      "name": "ADC0_ISC_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 51,
          "context": "#define ADC0_ISC_R             (*((volatile uint32_t *)0x4003800C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 211,
          "context": "ADC0_ISC_R = ADC_RIS_INR3;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 363,
          "context": "ADC0_ISC_R = ADC_ISC_IN1;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1469,
          "context": "ADC0_ISC_R = 0x0008;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_195",
      "name": "ADC0_SSFIFO3_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 52,
          "context": "#define ADC0_SSFIFO3_R         (*((volatile uint32_t *)0x400380A8))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 208,
          "context": "uint32_t result = ADC0_SSFIFO3_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1465,
          "context": "result.value = ADC0_SSFIFO3_R;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_196",
      "name": "ADC0_PC_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 53,
          "context": "#define ADC0_PC_R              (*((volatile uint32_t *)0x40038FC4))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_197",
      "name": "pack",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 34,
          "context": "#pragma pack(push, 4)  // Выравнивание по 4 байта для оптимизации"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 41,
          "context": "uint32_t packetsSent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 42,
          "context": "uint32_t packetsReceived;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 51,
          "context": "#pragma pack(pop)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 55,
          "context": "static bool ValidatePacket(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 56,
          "context": "static void ProcessReceivedPacket(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 170,
          "context": "CommPacket* packet = (CommPacket*)(commState.rxBuffer + processedIndex);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 173,
          "context": "uint16_t packetSize = sizeof(CommPacket) - COMM_MAX_PACKET_SIZE + packet->length;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 174,
          "context": "if (processedIndex + packetSize > commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 179,
          "context": "if (ValidatePacket(packet)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 180,
          "context": "ProcessReceivedPacket(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 181,
          "context": "commState.packetsReceived++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 187,
          "context": "processedIndex += packetSize;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 210,
          "context": "CommPacket packet;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 211,
          "context": "packet.type = type;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 212,
          "context": "packet.length = length;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 215,
          "context": "memcpy(packet.data, data, (size_t)length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 219,
          "context": "packet.checksum = CalculateChecksum((const uint8_t*)&packet, (uint16_t)(sizeof(CommPacket) - sizeof(uint16_t)));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 222,
          "context": "if (UART_Send((const uint8_t*)&packet, (uint16_t)sizeof(CommPacket))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 223,
          "context": "commState.packetsSent++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 260,
          "context": "void Communication_HandleCommand(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 261,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 265,
          "context": "CommandType cmd = packet->data[0];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 301,
          "context": "void Communication_HandleConfig(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 302,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_CONFIG) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 332,
          "context": "return commState.packetsSent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 336,
          "context": "return commState.packetsReceived;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 402,
          "context": "static bool ValidatePacket(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 403,
          "context": "if (packet == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 408,
          "context": "if (packet->length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 414,
          "context": "(uint8_t*)packet,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 415,
          "context": "sizeof(CommPacket) - sizeof(packet->checksum)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 418,
          "context": "return calculatedChecksum == packet->checksum;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 421,
          "context": "static void ProcessReceivedPacket(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 422,
          "context": "switch (packet->type) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 429,
          "context": "Communication_HandleCommand(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 433,
          "context": "Communication_HandleConfig(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 441,
          "context": "Communication_SendError(0x02, \"Unknown packet type\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 8,
          "context": "#include \"D:/keil/pack/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 70,
          "context": "#pragma pack(push, 4)  // Выравнивание по 4 байта"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 90,
          "context": "#pragma pack(pop)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 43,
          "context": "#pragma pack(push, 2)  // Выравнивание по 2 байта для оптимизации размера пакетов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 73,
          "context": "#pragma pack(pop)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 97,
          "context": "void Communication_HandleCommand(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 98,
          "context": "void Communication_HandleConfig(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 7,
          "context": "#pragma pack(push, 4)  // Выравнивание по 4 байта для оптимизации"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 46,
          "context": "#pragma pack(pop)  // Восстанавливаем стандартное выравнивание"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "pragma"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_199",
      "name": "SysTick_Init",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 60,
          "context": "static void SysTick_Init(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 142,
          "context": "SysTick_Init();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 354,
          "context": "static void SysTick_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 100,
          "context": "void SysTick_Init(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 118,
          "context": "void SysTick_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 157,
          "context": "SysTick_Init();"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_200",
      "name": "InitPowerADC",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 101,
          "context": "void InitPowerADC(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 158,
          "context": "InitPowerADC();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 287,
          "context": "void InitPowerADC(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_201",
      "name": "InitTempADC",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 102,
          "context": "void InitTempADC(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 159,
          "context": "InitTempADC();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 367,
          "context": "void InitTempADC(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_202",
      "name": "SendDebugMessage",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 103,
          "context": "void SendDebugMessage(const char* format, ...);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 582,
          "context": "void SendDebugMessage(const char* format, ...) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 864,
          "context": "SendDebugMessage(\"\\n=== System Status ===\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 865,
          "context": "SendDebugMessage(\"Uptime: %lu ms\", diagState.powerState.uptime);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 866,
          "context": "SendDebugMessage(\"System State: %s\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 870,
          "context": "SendDebugMessage(\"Error Count: %lu\", diagState.errorCount);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 873,
          "context": "SendDebugMessage(\"\\n=== Power State ===\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 874,
          "context": "SendDebugMessage(\"Battery: %.2fV (%.0f%%)\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 877,
          "context": "SendDebugMessage(\"Current: %.2fA\", diagState.powerState.batteryCurrent);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 878,
          "context": "SendDebugMessage(\"Battery Temp: %.1f°C\", diagState.powerState.batteryTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 879,
          "context": "SendDebugMessage(\"Charging: %s\", diagState.powerState.isCharging ? \"Yes\" : \"No\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 882,
          "context": "SendDebugMessage(\"\\n=== Thermal State ===\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 883,
          "context": "SendDebugMessage(\"MCU Temp: %.1f°C\", diagState.thermalState.mcuTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 884,
          "context": "SendDebugMessage(\"Board Temp: %.1f°C\", diagState.thermalState.boardTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 885,
          "context": "SendDebugMessage(\"Motor Temps: %.1f, %.1f, %.1f, %.1f°C\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 890,
          "context": "SendDebugMessage(\"Ambient Temp: %.1f°C\", diagState.thermalState.ambientTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 893,
          "context": "SendDebugMessage(\"\\n=== Performance Stats ===\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 894,
          "context": "SendDebugMessage(\"Max Time: %lu ms\", diagState.perfMaxTime);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 896,
          "context": "SendDebugMessage(\"Avg Time: %.2f ms\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 899,
          "context": "SendDebugMessage(\"Total Samples: %lu\", diagState.perfCount);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 902,
          "context": "SendDebugMessage(\"\\n=== Log Status ===\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 903,
          "context": "SendDebugMessage(\"Log Entries: %lu/%d\", diagState.logCount, DIAG_MAX_LOG_ENTRIES);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 908,
          "context": "SendDebugMessage(\"Last Log: [%s] %s\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 913,
          "context": "SendDebugMessage(\"=== End Status ===\\n\");"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "format",
          "type": "const char*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_203",
      "name": "GetLogLevelString",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 104,
          "context": "const char* GetLogLevelString(LogLevel level);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 607,
          "context": "const char* GetLogLevelString(LogLevel level) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 909,
          "context": "GetLogLevelString(lastEntry.level),"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 517,
          "context": "const char* GetLogLevelString(LogLevel level);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "level",
          "type": "LogLevel"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "char*"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_204",
      "name": "GetEventString",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 105,
          "context": "const char* GetEventString(DiagnosticEvent event);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 620,
          "context": "const char* GetEventString(DiagnosticEvent event) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 345,
          "context": "const char* Diagnostics_GetEventString(DiagnosticEvent event);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 518,
          "context": "const char* GetEventString(DiagnosticEvent event);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "event",
          "type": "DiagnosticEvent"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "char*"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_205",
      "name": "SavePeripheralState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 106,
          "context": "void SavePeripheralState(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 757,
          "context": "void SavePeripheralState(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 796,
          "context": "SavePeripheralState();"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_206",
      "name": "RestorePeripheralState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 107,
          "context": "void RestorePeripheralState(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 763,
          "context": "void RestorePeripheralState(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 809,
          "context": "RestorePeripheralState();"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_207",
      "name": "ConfigureWakeupSources",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 108,
          "context": "void ConfigureWakeupSources(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 772,
          "context": "void ConfigureWakeupSources(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 799,
          "context": "ConfigureWakeupSources();"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_208",
      "name": "ConfigurePowerMode",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 109,
          "context": "void ConfigurePowerMode(PowerMode mode);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 729,
          "context": "void ConfigurePowerMode(PowerMode mode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 802,
          "context": "ConfigurePowerMode(POWER_MODE_SLEEP);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 812,
          "context": "ConfigurePowerMode(POWER_MODE_NORMAL);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "mode",
          "type": "PowerMode"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_209",
      "name": "TestPowerSystem",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 110,
          "context": "TestStatus TestPowerSystem(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 942,
          "context": "TestStatus TestPowerSystem(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1677,
          "context": "selfTestResult.powerTest = TestPowerSystem();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 522,
          "context": "TestStatus TestPowerSystem(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "TestStatus"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_210",
      "name": "TestSupplyVoltages",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 111,
          "context": "bool TestSupplyVoltages(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 994,
          "context": "if (!TestSupplyVoltages()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1008,
          "context": "bool TestSupplyVoltages(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_211",
      "name": "TestSensors",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 112,
          "context": "TestStatus TestSensors(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1040,
          "context": "TestStatus TestSensors(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1689,
          "context": "selfTestResult.sensorTest = TestSensors();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 523,
          "context": "TestStatus TestSensors(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "TestStatus"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_212",
      "name": "TestMotors",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 113,
          "context": "TestStatus TestMotors(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1160,
          "context": "TestStatus TestMotors(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1701,
          "context": "selfTestResult.motorTest = TestMotors();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 524,
          "context": "TestStatus TestMotors(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "TestStatus"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_213",
      "name": "TestCommunication",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 114,
          "context": "TestStatus TestCommunication(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1291,
          "context": "TestStatus TestCommunication(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1713,
          "context": "selfTestResult.commTest = TestCommunication();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 525,
          "context": "TestStatus TestCommunication(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "TestStatus"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_214",
      "name": "TestSafetySystems",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 115,
          "context": "TestStatus TestSafetySystems(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1370,
          "context": "TestStatus TestSafetySystems(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1725,
          "context": "selfTestResult.safetyTest = TestSafetySystems();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 526,
          "context": "TestStatus TestSafetySystems(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "TestStatus"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_216",
      "name": "период",
      "description": "Настраиваем период (1 мс при тактовой частоте 16 МГц)",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [],
      "comments": "Настраиваем период (1 мс при тактовой частоте 16 МГц)",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "МГц",
          "type": "1 мс при тактовой частоте 16"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "Настраиваем"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_217",
      "name": "GetCurrentTime",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 61,
          "context": "static uint32_t GetCurrentTime(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 182,
          "context": "commState.lastPacketTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 370,
          "context": "static uint32_t GetCurrentTime(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 375,
          "context": "uint32_t currentTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 136,
          "context": "static uint32_t GetCurrentTime(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 142,
          "context": "uint32_t start = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 143,
          "context": "while ((GetCurrentTime() - start) < ms) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 345,
          "context": "diagState.powerState.uptime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1300,
          "context": "startTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1305,
          "context": "while (GetCurrentTime() - startTime < RC_TEST_TIMEOUT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1334,
          "context": "startTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1339,
          "context": "while (GetCurrentTime() - startTime < TELEMETRY_TEST_TIMEOUT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1944,
          "context": "uint32_t currentTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1961,
          "context": "uint32_t startTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1964,
          "context": "while (GetCurrentTime() - startTime < 100) {  // Таймаут 100 мс"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": true,
      "scope": "static",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_218",
      "name": "DelayMs",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 141,
          "context": "static void DelayMs(uint32_t ms) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1199,
          "context": "DelayMs(500);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1255,
          "context": "DelayMs(500);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1310,
          "context": "DelayMs(1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1344,
          "context": "DelayMs(1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2033,
          "context": "DelayMs(1);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "ms",
          "type": "uint32_t"
        }
      ],
      "output_params": [],
      "is_static": true,
      "scope": "static",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_219",
      "name": "Diagnostics_Init",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 149,
          "context": "bool Diagnostics_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 660,
          "context": "void Diagnostics_InitWatchdog(uint32_t timeout_ms) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1649,
          "context": "void Diagnostics_InitSelfTest(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1674,
          "context": "Diagnostics_InitSelfTest();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 340,
          "context": "bool Diagnostics_Init(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 342,
          "context": "void Diagnostics_InitSelfTest(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 375,
          "context": "void Diagnostics_InitWatchdog(uint32_t timeout_ms);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_221",
      "name": "memset",
      "description": "Инициализация состояний питания и температур",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 16,
          "context": "memset(&actuators_state, 0, sizeof(ActuatorsState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 137,
          "context": "memset(&commState, 0, sizeof(commState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 154,
          "context": "memset(&diagState, 0, sizeof(diagState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 169,
          "context": "memset(&diagState.powerState, 0, sizeof(PowerState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 170,
          "context": "memset(&diagState.thermalState, 0, sizeof(ThermalState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1182,
          "context": "memset(&motorData[i], 0, sizeof(MotorTestData));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1651,
          "context": "memset(&selfTestResult, 0, sizeof(SelfTestResult));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 25,
          "context": "memset(&nav_state, 0, sizeof(NavigationState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 26,
          "context": "memset(waypoints, 0, sizeof(waypoints));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 81,
          "context": "memset(waypoints, 0, sizeof(waypoints));"
        }
      ],
      "comments": "Инициализация состояний питания и температур",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "температур"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_222",
      "name": "if",
      "description": "Проверяем был ли сброс по watchdog",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 107,
          "context": "if (!Sensors_Update()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 119,
          "context": "if (currentState >= DRONE_STATE_ARMED) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 124,
          "context": "if (!Navigation_IsActive()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 131,
          "context": "if (Stabilization_IsEnabled() == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 139,
          "context": "if (actState.all_motors_enabled == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 146,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / TELEMETRY_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 151,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / DIAGNOSTIC_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 215,
          "context": "if ((mainLoopCounter % 10) < 5) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 230,
          "context": "if (Communication_Receive(&rxPacket)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 232,
          "context": "if (rxPacket.type == PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 234,
          "context": "if (rxPacket.length == sizeof(CommandPacket)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 240,
          "context": "if (currentState == DRONE_STATE_FLYING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 261,
          "context": "if (currentState >= DRONE_STATE_ARMED) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 357,
          "context": "if (sensorData.imu.temperature < MIN_BATTERY_VOLTAGE) { // Временно используем temperature как voltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 363,
          "context": "if (sensorData.baro.altitude > MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 369,
          "context": "if (fabsf(sensorData.imu.accel_x) > MAX_ANGLE ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 376,
          "context": "if (!Communication_IsConnected()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 384,
          "context": "if (!isEmergencyMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 407,
          "context": "if (isEmergencyMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 32,
          "context": "if (motor_index >= MOTOR_COUNT || emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 48,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 55,
          "context": "if (motor_index >= MOTOR_COUNT || emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 62,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 70,
          "context": "if (emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 87,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 95,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 103,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 117,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 131,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 146,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 152,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 159,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 167,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 176,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 185,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 194,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 201,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 228,
          "context": "if (actuators_state.motors[i].is_running) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 234,
          "context": "if (actuators_state.motors[i].temperature > 25.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 243,
          "context": "if (actuators_state.motors[i].is_running) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 250,
          "context": "if (*pwm_value > PWM_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 101,
          "context": "if (buffer == NULL || maxLength == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 106,
          "context": "if (UART0_FR_R & UART_FR_RXFE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 119,
          "context": "if (data == NULL || length == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 132,
          "context": "if (commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 145,
          "context": "if (!UART_Init(commState.baudRate)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 154,
          "context": "if (!commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 164,
          "context": "if (bytesReceived > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 174,
          "context": "if (processedIndex + packetSize > commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 179,
          "context": "if (ValidatePacket(packet)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 191,
          "context": "if (processedIndex > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 192,
          "context": "if (processedIndex < commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 205,
          "context": "if (!commState.initialized || length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 214,
          "context": "if (data != NULL && length > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 222,
          "context": "if (UART_Send((const uint8_t*)&packet, (uint16_t)sizeof(CommPacket))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 232,
          "context": "if (telemetry == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 249,
          "context": "if (message != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 261,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 302,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_CONFIG) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 319,
          "context": "if (baudRate != commState.baudRate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 321,
          "context": "if (commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 349,
          "context": "if (commState.currentTime - commState.lastPacketTime > COMM_TIMEOUT_MS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 378,
          "context": "if (currentTime - commState.lastPacketTime > COMM_TIMEOUT_MS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 379,
          "context": "if (commState.connected) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 385,
          "context": "if (!commState.connected) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 403,
          "context": "if (packet == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 408,
          "context": "if (packet->length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 452,
          "context": "if(length) *length = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 11,
          "context": "#ifndef NAN"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 13,
          "context": "#endif"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 30,
          "context": "#ifndef ADC0_SSMUX1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 32,
          "context": "#endif"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 33,
          "context": "#ifndef ADC0_SSCTL1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 35,
          "context": "#endif"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 150,
          "context": "if (diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 187,
          "context": "if (NVIC_APINT_R & 0x10000) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 197,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 220,
          "context": "if (voltage >= 12.6f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 222,
          "context": "} else if (voltage <= 9.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 229,
          "context": "if (voltage <= 9.5f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 231,
          "context": "} else if (voltage <= 10.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 253,
          "context": "if (state == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 272,
          "context": "if (state->batteryLevel < 20.0f) {  // Порог низкого заряда 20%"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 348,
          "context": "if (voltage <= BATTERY_CRITICAL_VOLTAGE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 352,
          "context": "else if (voltage <= BATTERY_LOW_VOLTAGE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 357,
          "context": "if (temp >= BATTERY_MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 439,
          "context": "if (mcu_temp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 443,
          "context": "else if (mcu_temp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 448,
          "context": "if (motors_temp >= TEMP_MOTORS_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 452,
          "context": "else if (motors_temp >= TEMP_MOTORS_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 457,
          "context": "if (board_temp >= TEMP_BOARD_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 461,
          "context": "else if (board_temp >= TEMP_BOARD_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 476,
          "context": "if (diagState.thermalState.mcuTemp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 481,
          "context": "} else if (diagState.thermalState.mcuTemp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 490,
          "context": "if (diagState.thermalState.motorTemps[i] >= TEMP_MOTORS_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 495,
          "context": "} else if (diagState.thermalState.motorTemps[i] >= TEMP_MOTORS_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 504,
          "context": "if (diagState.thermalState.boardTemp >= TEMP_BOARD_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 509,
          "context": "} else if (diagState.thermalState.boardTemp >= TEMP_BOARD_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 521,
          "context": "if (!isnan(temp)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 528,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 534,
          "context": "if (!diagState.initialized || diagState.logCount >= DIAG_MAX_LOG_ENTRIES) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 544,
          "context": "if (level >= LOG_ERROR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 548,
          "context": "if (level == LOG_FATAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 567,
          "context": "if (!entry || index >= diagState.logCount) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 583,
          "context": "if (!diagState.debugEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 596,
          "context": "if (len < DEBUG_BUFFER_SIZE - 2) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 654,
          "context": "if (diagState.systemState == SYSTEM_STATE_ERROR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 710,
          "context": "if (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 788,
          "context": "if (!diagState.lowPowerMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 807,
          "context": "if (diagState.lowPowerMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 831,
          "context": "if (diagState.perfCount == 0 || elapsed > diagState.perfMaxTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 834,
          "context": "if (diagState.perfCount == 0 || elapsed < diagState.perfMinTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 853,
          "context": "if (diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 859,
          "context": "if (!diagState.debugEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 895,
          "context": "if (diagState.perfCount > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 905,
          "context": "if (diagState.logCount > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 951,
          "context": "if (batteryVoltage < POWER_TEST_VOLTAGE_MIN) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 960,
          "context": "else if (batteryVoltage > POWER_TEST_VOLTAGE_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 972,
          "context": "if (batteryCurrent > POWER_TEST_CURRENT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 984,
          "context": "if (batteryTemp > POWER_TEST_TEMP_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 994,
          "context": "if (!TestSupplyVoltages()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1011,
          "context": "if (sensorSupply < POWER_TEST_SUPPLY_MIN || sensorSupply > POWER_TEST_SUPPLY_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1058,
          "context": "if (accel_magnitude > IMU_TEST_ACCEL_MAX || gyro_magnitude > IMU_TEST_GYRO_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1069,
          "context": "if (!TestBarometer()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1080,
          "context": "if (altitude < BARO_TEST_ALT_MIN || altitude > BARO_TEST_ALT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1091,
          "context": "if (!TestMagnetometer()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1111,
          "context": "if (mag_magnitude < MAG_TEST_FIELD_MIN || mag_magnitude > MAG_TEST_FIELD_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1121,
          "context": "if (HasGPS()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1122,
          "context": "if (!TestGPS()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1169,
          "context": "if (!TestESC()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1185,
          "context": "if (!TestMotorResponse(i)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1208,
          "context": "if (motorData[i].current > MOTOR_TEST_CURRENT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1220,
          "context": "if (motorData[i].rpm < 100.0f) {  // Минимальные обороты для теста"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1232,
          "context": "if (motorData[i].temperature > MOTOR_TEST_TEMP_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1242,
          "context": "if (motorData[i].vibration > MOTOR_TEST_VIB_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1306,
          "context": "if (IsRCTestResponseReceived()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1313,
          "context": "if (!rcResponded) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1324,
          "context": "if (rcQuality < RC_TEST_MIN_QUALITY) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1340,
          "context": "if (IsTelemetryAckReceived()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1347,
          "context": "if (!telemetryResponded) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1357,
          "context": "if (HasBackupComm() && !TestBackupComm()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1378,
          "context": "if (!TestWatchdogReset()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1389,
          "context": "if (!TestEEPROM()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1400,
          "context": "if (!TestFlashMemory()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1411,
          "context": "if (HasParachute()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1412,
          "context": "if (!TestParachuteSystem()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1424,
          "context": "if (!TestKillSwitch()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1444,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1459,
          "context": "if (timeout == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1477,
          "context": "if (adcResult.error != ADC_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1485,
          "context": "if (adcResult.value == 0 || adcResult.value >= ADC_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1513,
          "context": "if (isnan(temperature)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1525,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1542,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1553,
          "context": "if (!status.complete) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1555,
          "context": "if (conversionAttempts >= MAX_CONVERSION_ATTEMPTS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1576,
          "context": "if (result.ticks == 0 || result.ticks > NVIC_ST_RELOAD_R) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1589,
          "context": "if (startTicks.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1599,
          "context": "if (currentTicks.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1604,
          "context": "if (currentTicks.ticks <= startValue) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1625,
          "context": "if (currentTicksResult.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1632,
          "context": "if (currentTicks <= startTicks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1678,
          "context": "if (selfTestResult.powerTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1683,
          "context": "else if (selfTestResult.powerTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1690,
          "context": "if (selfTestResult.sensorTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1695,
          "context": "else if (selfTestResult.sensorTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1702,
          "context": "if (selfTestResult.motorTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1707,
          "context": "else if (selfTestResult.motorTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1714,
          "context": "if (selfTestResult.commTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1719,
          "context": "else if (selfTestResult.commTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1726,
          "context": "if (selfTestResult.safetyTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1731,
          "context": "else if (selfTestResult.safetyTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1738,
          "context": "if (selfTestResult.totalErrors > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1767,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1824,
          "context": "if (adcResult.error != ADC_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1852,
          "context": "if (isnan(temperature)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1865,
          "context": "if (type < 0 || type >= THERMOCOUPLE_TYPE_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1891,
          "context": "if (temperature < MIN_TEMP || temperature > MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1904,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1947,
          "context": "if (currentTime - lastBackupCommTest < 1000) {  // Тестируем не чаще раза в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1956,
          "context": "if (!success) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1965,
          "context": "if (ReceiveBackupCommPacket(response, sizeof(response))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1967,
          "context": "if (response[0] == 0x55 && response[1] == 0xAA &&"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1991,
          "context": "if (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 45,
          "context": "if (waypoint == NULL || waypoint_count >= MAX_WAYPOINTS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 49,
          "context": "if (!Navigation_IsValidPosition(&waypoint->position)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 61,
          "context": "if (index >= waypoint_count) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 73,
          "context": "if (current_waypoint_index > index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 91,
          "context": "if (index >= waypoint_count || waypoint == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 100,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 111,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 126,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 132,
          "context": "if (position != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 182,
          "context": "if (nav_state.current_position.altitude < NAV_MIN_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 185,
          "context": "} else if (nav_state.current_position.altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 194,
          "context": "if (!pos1->valid || !pos2->valid) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 212,
          "context": "if (!pos1->valid || !pos2->valid) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 228,
          "context": "if (position == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 233,
          "context": "if (position->latitude < -90.0f || position->latitude > 90.0f ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 243,
          "context": "if (!position->valid || !home_position_set) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 253,
          "context": "if (position != NULL && Navigation_IsValidPosition(position)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 260,
          "context": "if (!home_position_set) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 271,
          "context": "if (!nav_state.navigation_active || waypoint_count == 0 ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 284,
          "context": "if (nav_state.distance_to_target <= NAV_WAYPOINT_RADIUS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 286,
          "context": "if (current_waypoint_index < waypoint_count - 1) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 52,
          "context": "if (!sensor_state.mpu6050_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 61,
          "context": "if (!sensor_state.bmp280_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 115,
          "context": "if (sensor_state.current_altitude < 0.0f) sensor_state.current_altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 125,
          "context": "if (sensor_state.rotation_angle >= 360.0f) sensor_state.rotation_angle -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 144,
          "context": "if (data == NULL) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 150,
          "context": "if (orientation == NULL) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 182,
          "context": "if(data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 196,
          "context": "if(data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 106,
          "context": "if (!stabState.enabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 145,
          "context": "if (orientation != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 151,
          "context": "if (setPoint != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 190,
          "context": "if (pid == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 213,
          "context": "if (value < min) return min;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 214,
          "context": "if (value > max) return max;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 1,
          "context": "#ifndef ACTUATORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 76,
          "context": "#endif // ACTUATORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 1,
          "context": "#ifndef COMMUNICATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 112,
          "context": "#endif // COMMUNICATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 1,
          "context": "#ifndef DIAGNOSTICS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 567,
          "context": "#endif // DIAGNOSTICS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 1,
          "context": "#ifndef GPIO_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 49,
          "context": "#endif // GPIO_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 1,
          "context": "#ifndef MAIN_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 91,
          "context": "#endif // MAIN_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 1,
          "context": "#ifndef NAVIGATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 83,
          "context": "#endif // NAVIGATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 1,
          "context": "#ifndef SENSORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 55,
          "context": "#endif // SENSORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 1,
          "context": "#ifndef STABILIZATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 56,
          "context": "#endif // STABILIZATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 1,
          "context": "#ifndef TELEMETRY_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 14,
          "context": "#endif // TELEMETRY_H"
        }
      ],
      "comments": "Проверяем был ли сброс по watchdog",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "0x10000",
          "type": "NVIC_APINT_R &"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "watchdog"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_223",
      "name": "Diagnostics_UpdatePowerState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 196,
          "context": "void Diagnostics_UpdatePowerState(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 364,
          "context": "void Diagnostics_UpdatePowerState(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_224",
      "name": "while",
      "description": "Ждем завершения преобразования",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 87,
          "context": "while(!IsPeripheralReady(peripheral)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 102,
          "context": "while (1) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 165,
          "context": "while(!IsPeripheralReady(SYSCTL_PERIPH_GPIOF)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 70,
          "context": "while((SYSCTL_PRGPIO_R & (1U << 0)) == 0) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 105,
          "context": "while (count < maxLength) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 124,
          "context": "while (UART0_FR_R & UART_FR_TXFF) {}  // Ждем освобождения буфера передачи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 169,
          "context": "while (processedIndex + sizeof(CommPacket) <= commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 143,
          "context": "while ((GetCurrentTime() - start) < ms) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 205,
          "context": "while(!(ADC0_RIS_R & ADC_RIS_INR3)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 293,
          "context": "while(!(SYSCTL_PRGPIO_R & SYSCTL_PRGPIO_R4)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 294,
          "context": "while(!(SYSCTL_PRADC_R & SYSCTL_PRADC_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 373,
          "context": "while(!(SYSCTL_PRGPIO_R & (SYSCTL_PRGPIO_R3 | SYSCTL_PRGPIO_R4))) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 374,
          "context": "while(!(SYSCTL_PRADC_R & SYSCTL_PRADC_R1)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 665,
          "context": "while(!(SYSCTL_PRWD_R & SYSCTL_PRWD_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1305,
          "context": "while (GetCurrentTime() - startTime < RC_TEST_TIMEOUT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1339,
          "context": "while (GetCurrentTime() - startTime < TELEMETRY_TEST_TIMEOUT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1454,
          "context": "while((ADC0_RIS_R & 0x08) == 0 && timeout > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1596,
          "context": "while (elapsedTicks < ticks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1915,
          "context": "while(!(ADC1_RIS_R & (1 << adcChannel))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1964,
          "context": "while (GetCurrentTime() - startTime < 100) {  // Таймаут 100 мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2032,
          "context": "while (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 295,
          "context": "while (heading < 0.0f) heading += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 296,
          "context": "while (heading >= 360.0f) heading -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 172,
          "context": "while (filteredYaw >= 360.0f) filteredYaw -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 173,
          "context": "while (filteredYaw < 0.0f) filteredYaw += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 131,
          "context": "while (yawError > 180.0f) yawError -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 132,
          "context": "while (yawError < -180.0f) yawError += 360.0f;"
        }
      ],
      "comments": "Ждем завершения преобразования",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "ADC_RIS_INR3",
          "type": "!(ADC0_RIS_R &"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "преобразования"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": [],
      "is_deleted": true
    },
    {
      "id": "func_225",
      "name": "напряжение",
      "description": "Преобразуем в напряжение (опорное напряжение 3.3В)",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [],
      "comments": "Преобразуем в напряжение (опорное напряжение 3.3В)",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "3.3В",
          "type": "опорное напряжение"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "в"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_226",
      "name": "заряда",
      "description": "Расчет уровня заряда (0-100%)",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [],
      "comments": "Расчет уровня заряда (0-100%)",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "уровня"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_230",
      "name": "Diagnostics_GetPowerState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 329,
          "context": "Diagnostics_GetPowerState(&powerState);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 251,
          "context": "void Diagnostics_GetPowerState(PowerState* state) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 365,
          "context": "void Diagnostics_GetPowerState(PowerState* state); // Обновленный прототип функции"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 519,
          "context": "void Diagnostics_GetPowerState(PowerState* state);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "state",
          "type": "PowerState*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_232",
      "name": "Diagnostics_Log",
      "description": "В случае передачи NULL, логируем критическую ошибку",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 389,
          "context": "Diagnostics_Log(LOG_CRITICAL, DIAG_EVENT_SYSTEM_START, reason, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 188,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_WATCHDOG_RESET, \"System reset by watchdog\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 191,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START, \"Diagnostics initialized\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 230,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_BATTERY_CRITICAL, \"Battery critically low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 232,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_BATTERY_LOW, \"Battery low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 255,
          "context": "Diagnostics_Log(LOG_CRITICAL, DIAG_EVENT_SYSTEM_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 273,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_BATTERY_LOW,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 349,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_LOW_BATTERY,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 353,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_LOW_BATTERY,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 358,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 440,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 444,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 449,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 453,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 458,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 462,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 478,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 483,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 492,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 497,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 506,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 511,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 533,
          "context": "void Diagnostics_Log(LogLevel level, DiagnosticEvent event, const char* message, uint32_t data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 697,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 706,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_WATCHDOG_RESET, \"Watchdog reset occurred\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 792,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_STOP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 818,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 918,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START, \"Running self-test\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 956,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 965,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 977,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 989,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 999,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1063,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1074,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1085,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1096,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1116,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1127,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1174,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1190,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1213,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1225,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1237,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1247,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1318,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1329,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1352,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1362,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1383,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1394,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1405,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1417,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1429,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1478,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1486,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1506,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1514,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1578,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SYSTEM_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1740,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SYSTEM_ERROR, selfTestResult.message, selfTestResult.totalErrors);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1745,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SELF_TEST, selfTestResult.message, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1825,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1845,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1853,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1866,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1892,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2028,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 346,
          "context": "void Diagnostics_Log(uint8_t level, DiagnosticEvent event, const char* message, uint32_t data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 353,
          "context": "void Diagnostics_Log(LogLevel level, DiagnosticEvent event, const char* message, uint32_t data);"
        }
      ],
      "comments": "В случае передачи NULL, логируем критическую ошибку",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "pointer\"",
          "type": "\"Attempt to get power state with NULL"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "ошибку"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_234",
      "name": "Diagnostics_GetBatteryVoltage",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 278,
          "context": "float Diagnostics_GetBatteryVoltage(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 366,
          "context": "float Diagnostics_GetBatteryVoltage(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_235",
      "name": "Diagnostics_GetBatteryLevel",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 282,
          "context": "uint8_t Diagnostics_GetBatteryLevel(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 367,
          "context": "uint8_t Diagnostics_GetBatteryLevel(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint8_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_238",
      "name": "0",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 21,
          "context": "#define GPIO_PORTA_BASE        0x40004000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 22,
          "context": "#define GPIO_PORTB_BASE        0x40005000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 23,
          "context": "#define GPIO_PORTC_BASE        0x40006000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 24,
          "context": "#define GPIO_PORTD_BASE        0x40007000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 25,
          "context": "#define GPIO_PORTE_BASE        0x40024000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 26,
          "context": "#define GPIO_PORTF_BASE        0x40025000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 29,
          "context": "#define SYSCTL_RCC2_R            (*((volatile uint32_t *)0x400FE070))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 30,
          "context": "#define SYSCTL_RIS_R             (*((volatile uint32_t *)0x400FE050))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 31,
          "context": "#define SYSCTL_RCGC2_R          (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 34,
          "context": "#define SYSCTL_RCC2_USERCC2     0x80000000  // Use RCC2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 35,
          "context": "#define SYSCTL_RCC2_BYPASS2     0x00000800  // PLL Bypass 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 36,
          "context": "#define SYSCTL_RCC2_PWRDN2      0x00002000  // Power-Down PLL 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 37,
          "context": "#define SYSCTL_RCC2_SYSDIV2_MASK 0x1F800000  // System Clock Divisor 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 38,
          "context": "#define SYSCTL_RCC2_SYSDIV2LSB   0x00400000  // System Clock Divisor 2 LSB"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 41,
          "context": "#define SYSCTL_RCC2_OSCSRC2_MASK_INV 0xFFFFFF8F  // Инвертированная маска для OSCSRC2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 42,
          "context": "#define SYSCTL_RCC2_PWRDN2_MASK_INV  0xFFFFDFFF  // Инвертированная маска для PWRDN2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 43,
          "context": "#define SYSCTL_RCC2_SYSDIV_MASK_INV  0xE07FFFFF  // Инвертированная маска для SYSDIV2 и LSB"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 46,
          "context": "#define SYSCTL_RCC2_OSCSRC2_MASK 0x00000070  // Oscillator Source 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 47,
          "context": "#define SYSCTL_RCC2_OSCSRC2_MO   0x00000000  // Main Oscillator"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 50,
          "context": "#define SYSCTL_RIS_PLLLRIS      0x00000040  // PLL Lock Raw Interrupt Status"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 53,
          "context": "#define SYSCTL_PERIPH_GPIOF    0xf0000805  // GPIO F peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 54,
          "context": "#define SYSCTL_PERIPH_GPIOE    0xf0000804  // GPIO E peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 55,
          "context": "#define SYSCTL_PERIPH_GPIOD    0xf0000803  // GPIO D peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 56,
          "context": "#define SYSCTL_PERIPH_GPIOC    0xf0000802  // GPIO C peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 57,
          "context": "#define SYSCTL_PERIPH_GPIOB    0xf0000801  // GPIO B peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 58,
          "context": "#define SYSCTL_PERIPH_GPIOA    0xf0000800  // GPIO A peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 61,
          "context": "#define GPIO_PORTF_DIR_R       (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x400)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 62,
          "context": "#define GPIO_PORTF_DEN_R       (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x51C)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 63,
          "context": "#define GPIO_PORTF_DATA_R      (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x3FC)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 66,
          "context": "#define MAIN_LOOP_FREQ_HZ      200     // Частота основного цикла (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 67,
          "context": "#define TELEMETRY_FREQ_HZ      10      // Частота отправки телеметрии (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 69,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 72,
          "context": "static uint32_t mainLoopCounter = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 80,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 85,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 146,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / TELEMETRY_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 151,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / DIAGNOSTIC_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 182,
          "context": "#define LED_MASK_CLEAR     0xFFFFFFF9  // 1111 1111 1111 1111 1111 1111 1111 1001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 183,
          "context": "#define LED_RED            0x00000002  // Красный LED (PIN_1)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 184,
          "context": "#define LED_BLUE           0x00000004  // Синий LED (PIN_2)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 185,
          "context": "#define LED_GREEN          0x00000008  // Зеленый LED (PIN_3)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 215,
          "context": "if ((mainLoopCounter % 10) < 5) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 250,
          "context": ".hover_time = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 266,
          "context": "0.0f  // Сохраняем текущую высоту"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 283,
          "context": "static float roll_kp = 1.0f, roll_ki = 0.1f, roll_kd = 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 284,
          "context": "static float pitch_kp = 1.0f, pitch_ki = 0.1f, pitch_kd = 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 285,
          "context": "static float yaw_kp = 2.0f, yaw_ki = 0.15f, yaw_kd = 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 286,
          "context": "static float alt_kp = 1.5f, alt_ki = 0.2f, alt_kd = 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 344,
          "context": "telemetry.verticalSpeed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 346,
          "context": "telemetry.gpsStatus = (sensorData.isCalibrated ? 1 : 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 389,
          "context": "Diagnostics_Log(LOG_CRITICAL, DIAG_EVENT_SYSTEM_START, reason, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 392,
          "context": "Communication_SendError(0x01, reason);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 420,
          "context": "Communication_SendStatus(0x00);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 5,
          "context": "static ActuatorsState actuators_state = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 7,
          "context": "static uint32_t system_time_ms = 0; // Эмуляция системного времени"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 16,
          "context": "memset(&actuators_state, 0, sizeof(ActuatorsState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 19,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 20,
          "context": "actuators_state.motors[i].temperature = 25.0f; // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 42,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 49,
          "context": "return 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 73,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 80,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 97,
          "context": "uint16_t pwm_value = (uint16_t)((throttle * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100U + PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 108,
          "context": "int32_t pwm_delta = ((int32_t)yaw * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 153,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 160,
          "context": "return 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 179,
          "context": "uint16_t ascent_pwm = (uint16_t)(PWM_MAX_VALUE * 0.7f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 188,
          "context": "uint16_t descent_pwm = (uint16_t)(PWM_MAX_VALUE * 0.3f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 227,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 231,
          "context": "actuators_state.motors[i].temperature += pwm_factor * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 234,
          "context": "if (actuators_state.motors[i].temperature > 25.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 235,
          "context": "actuators_state.motors[i].temperature -= 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 242,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 244,
          "context": "actuators_state.motors[i].runtime += 10; // Предполагаем вызов каждые 10 мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 9,
          "context": "#define UART_FR_RXFE    0x10    // Флаг пустого буфера приема"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 10,
          "context": "#define UART_FR_TXFF    0x20    // Флаг заполненного буфера передачи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 11,
          "context": "#define UART_FR_BUSY    0x08    // Флаг занятости UART"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 14,
          "context": "#define GPIO_PA0_U0RX   0x01    // UART0 RX на PA0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 15,
          "context": "#define GPIO_PA1_U0TX   0x02    // UART0 TX на PA1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 18,
          "context": "#define COMM_TIMEOUT_MS     1000    // Таймаут соединения (1 секунда)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 19,
          "context": "#define SYSTICK_FREQ_HZ    1000    // Частота системного таймера (1 кГц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 22,
          "context": "#define UART0_DR_R              (*((volatile uint32_t *)0x4000C000))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 23,
          "context": "#define UART0_FR_R              (*((volatile uint32_t *)0x4000C018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 24,
          "context": "#define UART0_IBRD_R           (*((volatile uint32_t *)0x4000C024))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 25,
          "context": "#define UART0_FBRD_R           (*((volatile uint32_t *)0x4000C028))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 26,
          "context": "#define UART0_LCRH_R           (*((volatile uint32_t *)0x4000C02C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 27,
          "context": "#define UART0_CTL_R            (*((volatile uint32_t *)0x4000C030))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 30,
          "context": "#define SYSCTL_RCGCUART_R     (*((volatile uint32_t *)0x400FE104))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 32,
          "context": "#define SYSCTL_PRGPIO_R       (*((volatile uint32_t *)0x400FEA08))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 50,
          "context": "} commState = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 66,
          "context": "SYSCTL_RCGCUART_R |= (1U << 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 67,
          "context": "SYSCTL_RCGCGPIO_R |= (1U << 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 70,
          "context": "while((SYSCTL_PRGPIO_R & (1U << 0)) == 0) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 73,
          "context": "GPIO_PORTA_AFSEL_R |= (GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 74,
          "context": "GPIO_PORTA_DEN_R |= (GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 75,
          "context": "GPIO_PORTA_AMSEL_R &= ~(GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 76,
          "context": "GPIO_PORTA_PCTL_R = (GPIO_PORTA_PCTL_R & 0xFFFFFF00) | 0x00000011;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 79,
          "context": "UART0_CTL_R &= ~0x01;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 82,
          "context": "uint32_t systemClock = 16000000; // 16 MHz"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 84,
          "context": "uint32_t brdf = (uint32_t)(((float)systemClock / (16.0f * (float)baudRate) - brdi) * 64.0f + 0.5f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 86,
          "context": "UART0_IBRD_R = brdi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 87,
          "context": "UART0_FBRD_R = brdf;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 90,
          "context": "UART0_LCRH_R = 0x60;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 93,
          "context": "UART0_CTL_R |= 0x01;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 99,
          "context": "uint16_t count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 101,
          "context": "if (buffer == NULL || maxLength == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 102,
          "context": "return 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 106,
          "context": "if (UART0_FR_R & UART_FR_RXFE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 109,
          "context": "buffer[count] = (uint8_t)(UART0_DR_R & 0xFF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 119,
          "context": "if (data == NULL || length == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 123,
          "context": "for (i = 0; i < length; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 124,
          "context": "while (UART0_FR_R & UART_FR_TXFF) {}  // Ждем освобождения буфера передачи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 125,
          "context": "UART0_DR_R = (uint32_t)data[i];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 137,
          "context": "memset(&commState, 0, sizeof(commState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 139,
          "context": "commState.telemetryRateHz = 10; // По умолчанию 10 Гц"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 164,
          "context": "if (bytesReceived > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 168,
          "context": "uint16_t processedIndex = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 191,
          "context": "if (processedIndex > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 214,
          "context": "if (data != NULL && length > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 251,
          "context": "errorData.message[sizeof(errorData.message) - 1] = '\\0';"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 253,
          "context": "errorData.message[0] = '\\0';"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 265,
          "context": "CommandType cmd = packet->data[0];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 296,
          "context": "Communication_SendError(0x01, \"Unknown command\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 356,
          "context": "NVIC_ST_CTRL_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 359,
          "context": "NVIC_ST_RELOAD_R = SystemCoreClock / 1000 - 1;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 362,
          "context": "NVIC_ST_CURRENT_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 382,
          "context": "Communication_SendError(0x03, \"Connection lost\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 388,
          "context": "Communication_SendStatus(0x01); // 0x01 - связь восстановлена"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 395,
          "context": "uint16_t checksum = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 396,
          "context": "for(uint16_t i = 0; i < length; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 425,
          "context": "Communication_Send(PACKET_TYPE_HEARTBEAT, NULL, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 441,
          "context": "Communication_SendError(0x02, \"Unknown packet type\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 452,
          "context": "if(length) *length = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 8,
          "context": "#include \"D:/keil/pack/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 12,
          "context": "#define NAN (0.0f/0.0f)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 16,
          "context": "#define SYSCTL_BASE            0x400FE000  // Базовый адрес системного контроллера"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 17,
          "context": "#define SYSCTL_RCGCWD_R        (*((volatile uint32_t *)(SYSCTL_BASE + 0x600)))  // Регистр тактирования Watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 18,
          "context": "#define SYSCTL_PRWD_R          (*((volatile uint32_t *)(SYSCTL_BASE + 0xA00)))  // Регистр готовности Watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 21,
          "context": "#define NVIC_BASE              0xE000E000  // Базовый адрес контроллера прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 22,
          "context": "#define NVIC_PRIO_R(n)         (*((volatile uint32_t *)(NVIC_BASE + 0x400 + ((n) * 4))))  // Регистры приоритета прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 25,
          "context": "#define NVIC_ST_CTRL_R          (*((volatile uint32_t *)0xE000E010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 26,
          "context": "#define NVIC_ST_RELOAD_R        (*((volatile uint32_t *)0xE000E014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 27,
          "context": "#define NVIC_ST_CURRENT_R       (*((volatile uint32_t *)0xE000E018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 30,
          "context": "#ifndef ADC0_SSMUX1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 31,
          "context": "#define ADC0_SSMUX1_R          (*((volatile uint32_t *)0x40038044))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 33,
          "context": "#ifndef ADC0_SSCTL1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 34,
          "context": "#define ADC0_SSCTL1_R          (*((volatile uint32_t *)0x40038048))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 38,
          "context": "#define ADC1_BASE            0x40039000  // Базовый адрес ADC1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 39,
          "context": "#define ADC1_SSMUX1_R       (*((volatile uint32_t *)(ADC1_BASE + 0x40)))  // Мультиплексор выборки SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 40,
          "context": "#define ADC1_SSCTL1_R       (*((volatile uint32_t *)(ADC1_BASE + 0x44)))  // Управление и статус SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 41,
          "context": "#define ADC1_SSFIFO1_R      (*((volatile uint32_t *)(ADC1_BASE + 0x48)))  // FIFO данных SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 42,
          "context": "#define ADC1_ISC_R          (*((volatile uint32_t *)(ADC1_BASE + 0x50)))  // Регистр очистки прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 45,
          "context": "#define ADC0_ACTSS_R           (*((volatile uint32_t *)0x40038000))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 46,
          "context": "#define ADC0_EMUX_R            (*((volatile uint32_t *)0x40038014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 47,
          "context": "#define ADC0_SSMUX3_R          (*((volatile uint32_t *)0x400380A0))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 48,
          "context": "#define ADC0_SSCTL3_R          (*((volatile uint32_t *)0x400380A4))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 49,
          "context": "#define ADC0_PSSI_R            (*((volatile uint32_t *)0x40038028))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 50,
          "context": "#define ADC0_RIS_R             (*((volatile uint32_t *)0x40038004))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 51,
          "context": "#define ADC0_ISC_R             (*((volatile uint32_t *)0x4003800C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 52,
          "context": "#define ADC0_SSFIFO3_R         (*((volatile uint32_t *)0x400380A8))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 53,
          "context": "#define ADC0_PC_R              (*((volatile uint32_t *)0x40038FC4))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 56,
          "context": "#define ADC_PSSI_SS1        0x00000002  // SS1 Initiate"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 57,
          "context": "#define ADC_ACTSS_ASEN1     0x00000002  // SS1 Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 58,
          "context": "#define ADC_EMUX_EM1_M      0x000000F0  // SS1 Trigger Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 61,
          "context": "#define ADC_AIN0   0   // Канал АЦП для температур микроконтроллера"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 67,
          "context": "#define ADC_ISC_IN1 0x02  // Флаг прерывания для канала 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 89,
          "context": "} diagState = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 97,
          "context": "static volatile uint32_t systemMillis = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 120,
          "context": "NVIC_ST_CTRL_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 123,
          "context": "NVIC_ST_RELOAD_R = 16000 - 1;  // (16MHz / 1000Hz) - 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 126,
          "context": "NVIC_ST_CURRENT_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 132,
          "context": "NVIC_ST_CTRL_R = 0x07;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 154,
          "context": "memset(&diagState, 0, sizeof(diagState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 163,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 164,
          "context": "diagState.startTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 165,
          "context": "diagState.logCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 166,
          "context": "diagState.watchdogTimeout = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 169,
          "context": "memset(&diagState.powerState, 0, sizeof(PowerState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 170,
          "context": "memset(&diagState.thermalState, 0, sizeof(ThermalState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 173,
          "context": "diagState.perfStartTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 174,
          "context": "diagState.perfMaxTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 175,
          "context": "diagState.perfMinTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 176,
          "context": "diagState.perfTotalTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 177,
          "context": "diagState.perfCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 187,
          "context": "if (NVIC_APINT_R & 0x10000) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 188,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_WATCHDOG_RESET, \"System reset by watchdog\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 191,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START, \"Diagnostics initialized\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 202,
          "context": "ADC0_PSSI_R = ADC_PSSI_SS3;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 205,
          "context": "while(!(ADC0_RIS_R & ADC_RIS_INR3)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 208,
          "context": "uint32_t result = ADC0_SSFIFO3_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 211,
          "context": "ADC0_ISC_R = ADC_RIS_INR3;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 214,
          "context": "float voltage = (result * 3.3f) / 4096.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 221,
          "context": "diagState.powerState.batteryLevel = 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 222,
          "context": "} else if (voltage <= 9.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 223,
          "context": "diagState.powerState.batteryLevel = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 225,
          "context": "diagState.powerState.batteryLevel = (uint8_t)((voltage - 9.0f) * 27.78f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 230,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_BATTERY_CRITICAL, \"Battery critically low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 231,
          "context": "} else if (voltage <= 10.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 232,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_BATTERY_LOW, \"Battery low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 256,
          "context": "\"Attempt to get power state with NULL pointer\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 272,
          "context": "if (state->batteryLevel < 20.0f) {  // Порог низкого заряда 20%"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 290,
          "context": "SYSCTL_RCGCADC_R |= SYSCTL_RCGCADC_R0;    // ADC0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 294,
          "context": "while(!(SYSCTL_PRADC_R & SYSCTL_PRADC_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 302,
          "context": "ADC0_ACTSS_R &= ~ADC_ACTSS_ASEN1;          // Отключаем секвенсор для настройки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 303,
          "context": "ADC0_EMUX_R &= ~ADC_EMUX_EM1_M;            // Программный запуск"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 304,
          "context": "ADC0_SSMUX1_R = (0 << 0) |                 // Канал 0 (напряжение)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 307,
          "context": "ADC0_SSCTL1_R = (0 << 0) |                // Первый канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 308,
          "context": "(0 << 4) |                // Второй канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 309,
          "context": "(ADC_SSCTL0_IE2 |         // Прерывание после последнего"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 310,
          "context": "ADC_SSCTL0_END2);        // Последний канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 311,
          "context": "ADC0_ACTSS_R |= ADC_ACTSS_ASEN1;          // Включаем секвенсор"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 314,
          "context": "ADC0_SAC_R = ADC_SAC_AVG_64X;             // 64x усреднение"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 317,
          "context": "ADC0_IM_R |= ADC_IM_MASK1;                // Маска прерывания секвенсора 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 318,
          "context": "NVIC_EN0_R |= (1 << (INT_ADC0SS1 - 16));  // Включаем прерывание в NVIC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 322,
          "context": "void ADC0SS1_Handler(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 324,
          "context": "uint32_t voltage_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 325,
          "context": "uint32_t current_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 326,
          "context": "uint32_t temp_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 330,
          "context": "float current = ((current_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / CURRENT_SENSE_MV_A;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 331,
          "context": "float temp = ((temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_MV_C;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 340,
          "context": "(BATTERY_MAX_VOLTAGE - BATTERY_MIN_VOLTAGE) * 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 341,
          "context": "diagState.powerState.batteryLevel = (battery_level > 100.0f) ? 100.0f :"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 342,
          "context": "(battery_level < 0.0f) ? 0.0f : battery_level;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 350,
          "context": "\"Critical battery voltage\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 354,
          "context": "\"Low battery voltage\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 359,
          "context": "\"Critical battery temperature\", (uint32_t)(temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 363,
          "context": "ADC0_ISC_R = ADC_ISC_IN1;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 385,
          "context": "ADC1_ACTSS_R &= ~ADC_ACTSS_ASEN0;          // Отключаем секвенсор для настройки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 386,
          "context": "ADC1_EMUX_R &= ~ADC_EMUX_EM0_M;            // Программный запуск"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 389,
          "context": "ADC1_SSMUX0_R = (TEMP_MCU_CHANNEL << 0)   | // Встроенный сенсор MCU"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 395,
          "context": "ADC1_SSCTL0_R = (0 << 0)                   | // Первый канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 396,
          "context": "(0 << 4)                   | // Второй канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 397,
          "context": "(0 << 8)                   | // Третий канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 398,
          "context": "(ADC_SSCTL0_IE3 |           // Прерывание после последнего"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 399,
          "context": "ADC_SSCTL0_END3);          // Последний канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 404,
          "context": "ADC1_ACTSS_R |= ADC_ACTSS_ASEN0;           // Включаем секвенсор"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 410,
          "context": "ADC1_IM_R |= ADC_IM_MASK0;                 // Маска прерывания секвенсора 0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 411,
          "context": "NVIC_EN1_R |= (1 << (INT_ADC1SS0 - 48));   // Включаем прерывание в NVIC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 415,
          "context": "void ADC1SS0_Handler(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 417,
          "context": "uint32_t mcu_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 418,
          "context": "uint32_t motors_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 419,
          "context": "uint32_t board_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 420,
          "context": "uint32_t ambient_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 425,
          "context": "float mcu_temp = ((mcu_voltage * 1000.0f) / MCU_TEMP_SLOPE) + MCU_TEMP_OFFSET;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 428,
          "context": "float motors_temp = ((motors_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 429,
          "context": "float board_temp = ((board_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 430,
          "context": "float ambient_temp = ((ambient_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 434,
          "context": "diagState.thermalState.motorTemps[0] = motors_temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 441,
          "context": "\"Critical MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 445,
          "context": "\"High MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 450,
          "context": "\"Critical motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 454,
          "context": "\"High motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 459,
          "context": "\"Critical board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 463,
          "context": "\"High board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 467,
          "context": "ADC1_ISC_R = ADC_ISC_IN0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 480,
          "context": "(uint32_t)(diagState.thermalState.mcuTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 485,
          "context": "(uint32_t)(diagState.thermalState.mcuTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 489,
          "context": "for (int i = 0; i < 4; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 494,
          "context": "(uint32_t)(diagState.thermalState.motorTemps[i] * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 499,
          "context": "(uint32_t)(diagState.thermalState.motorTemps[i] * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 508,
          "context": "(uint32_t)(diagState.thermalState.boardTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 513,
          "context": "(uint32_t)(diagState.thermalState.boardTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 519,
          "context": "for (int i = 0; i < 4; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 557,
          "context": "diagState.logCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 558,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 577,
          "context": "diagState.thermalState.motorTemps[0] >= TEMP_MOTORS_WARNING ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 599,
          "context": "debugBuffer[len + 2] = '\\0';"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 653,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 662,
          "context": "SYSCTL_RCGCWD_R |= SYSCTL_RCGCWD_R0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 665,
          "context": "while(!(SYSCTL_PRWD_R & SYSCTL_PRWD_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 668,
          "context": "WATCHDOG0_LOCK_R = 0x1ACCE551;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 671,
          "context": "WATCHDOG0_CTL_R &= ~WDT_CTL_INTEN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 675,
          "context": "uint32_t reload_value = timeout_ms * 1000; // преобразуем мс в тики"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 678,
          "context": "WATCHDOG0_LOAD_R = reload_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 683,
          "context": "WATCHDOG0_CTL_R |= (WDT_CTL_RESEN | WDT_CTL_INTEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 686,
          "context": "NVIC_EN0_R |= (1 << INT_WATCHDOG);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 689,
          "context": "NVIC_PRI0_R = (NVIC_PRI0_R & 0xFFFFFFF0) | 0x0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 695,
          "context": "WATCHDOG0_ICR_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 702,
          "context": "void WDT0_Handler(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 704,
          "context": "WATCHDOG0_ICR_R = WDT_ICR_M;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 706,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_WATCHDOG_RESET, \"Watchdog reset occurred\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 712,
          "context": "WATCHDOG0_ICR_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 718,
          "context": "return (WATCHDOG0_RIS_R & WDT_RIS_WDTRIS) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 726,
          "context": "static uint32_t savedPeripheralState = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 779,
          "context": "NVIC_EN0_R |= (1 << INT_UART0);       // UART0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 780,
          "context": "NVIC_EN0_R |= (1 << INT_WTIMER0A);    // WatchDog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 783,
          "context": "GPIO_PORTA_IM_R |= 0x03;              // Разрешаем прерывания на PA0-PA1 (UART)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 784,
          "context": "GPIO_PORTA_IEV_R &= ~0x03;            // Прерывание по спаду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 793,
          "context": "\"Entering low power mode\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 819,
          "context": "\"Exiting low power mode\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 831,
          "context": "if (diagState.perfCount == 0 || elapsed > diagState.perfMaxTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 834,
          "context": "if (diagState.perfCount == 0 || elapsed < diagState.perfMinTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 845,
          "context": "diagState.perfMaxTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 846,
          "context": "diagState.perfMinTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 847,
          "context": "diagState.perfTotalTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 848,
          "context": "diagState.perfCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 874,
          "context": "SendDebugMessage(\"Battery: %.2fV (%.0f%%)\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 886,
          "context": "diagState.thermalState.motorTemps[0],"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 895,
          "context": "if (diagState.perfCount > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 905,
          "context": "if (diagState.logCount > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 918,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START, \"Running self-test\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 927,
          "context": "#define POWER_ERR_VOLTAGE_LOW    0x0001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 928,
          "context": "#define POWER_ERR_VOLTAGE_HIGH   0x0002"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 929,
          "context": "#define POWER_ERR_CURRENT_HIGH   0x0003"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 930,
          "context": "#define POWER_ERR_TEMP_HIGH      0x0004"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 931,
          "context": "#define POWER_ERR_SUPPLY_FAIL    0x0005"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 934,
          "context": "#define POWER_TEST_VOLTAGE_MIN   10.5f   // В"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 936,
          "context": "#define POWER_TEST_CURRENT_MAX   15.0f   // А"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 937,
          "context": "#define POWER_TEST_TEMP_MAX      45.0f   // °C"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 943,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 944,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 945,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 955,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 964,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 976,
          "context": "status.data = (uint32_t)(batteryCurrent * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 988,
          "context": "status.data = (uint32_t)(batteryTemp * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 998,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1021,
          "context": "#define SENSOR_ERR_IMU_FAIL      0x0101"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1022,
          "context": "#define SENSOR_ERR_IMU_SELFTEST  0x0102"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1023,
          "context": "#define SENSOR_ERR_IMU_RANGE     0x0103"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1024,
          "context": "#define SENSOR_ERR_BARO_FAIL     0x0104"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1025,
          "context": "#define SENSOR_ERR_BARO_RANGE    0x0105"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1026,
          "context": "#define SENSOR_ERR_MAG_FAIL      0x0106"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1027,
          "context": "#define SENSOR_ERR_MAG_RANGE     0x0107"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1028,
          "context": "#define SENSOR_ERR_GPS_FAIL      0x0108"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1029,
          "context": "#define SENSOR_ERR_ADC_FAIL      0x0109"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1032,
          "context": "#define IMU_TEST_ACCEL_MAX      4.0f    // g"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1033,
          "context": "#define IMU_TEST_GYRO_MAX       50.0f   // deg/s"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1034,
          "context": "#define BARO_TEST_ALT_MIN       -100.0f // м"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1035,
          "context": "#define BARO_TEST_ALT_MAX       5000.0f // м"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1036,
          "context": "#define MAG_TEST_FIELD_MIN      0.2f    // Гаусс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1037,
          "context": "#define MAG_TEST_FIELD_MAX      0.8f    // Гаусс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1041,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1042,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1043,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1046,
          "context": "IMUData imuData = {0};  // Добавляем объявление переменной"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1062,
          "context": "status.data = (uint32_t)(accel_magnitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1073,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1084,
          "context": "status.data = (uint32_t)(altitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1095,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1102,
          "context": ".magX = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1103,
          "context": ".magY = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1104,
          "context": ".magZ = 0.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1115,
          "context": "status.data = (uint32_t)(mag_magnitude * 1000);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1126,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1136,
          "context": "#define MOTOR_ERR_NOT_RESPONDING 0x0201"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1137,
          "context": "#define MOTOR_ERR_HIGH_CURRENT   0x0202"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1138,
          "context": "#define MOTOR_ERR_NO_ROTATION    0x0203"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1139,
          "context": "#define MOTOR_ERR_VIBRATION      0x0204"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1140,
          "context": "#define MOTOR_ERR_TEMP_HIGH      0x0205"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1141,
          "context": "#define MOTOR_ERR_ESC_FAIL       0x0206"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1144,
          "context": "#define MOTOR_TEST_SPEED         10.0f   // % от максимальной скорости"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1145,
          "context": "#define MOTOR_TEST_CURRENT_MAX   2.0f    // А на мотор"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1146,
          "context": "#define MOTOR_TEST_TEMP_MAX      60.0f   // °C"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1147,
          "context": "#define MOTOR_TEST_VIB_MAX       2.0f    // g"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1148,
          "context": "#define MOTOR_TEST_TIMEOUT       1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1161,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1162,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1163,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1173,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1180,
          "context": "for (int i = 0; i < 4; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1182,
          "context": "memset(&motorData[i], 0, sizeof(MotorTestData));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1199,
          "context": "DelayMs(500);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1215,
          "context": "SetMotorSpeed(i, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1220,
          "context": "if (motorData[i].rpm < 100.0f) {  // Минимальные обороты для теста"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1227,
          "context": "SetMotorSpeed(i, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1252,
          "context": "SetMotorSpeed(i, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1255,
          "context": "DelayMs(500);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1273,
          "context": "#define COMM_ERR_RC_FAIL        0x0301"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1274,
          "context": "#define COMM_ERR_RC_QUALITY     0x0302"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1275,
          "context": "#define COMM_ERR_TELEMETRY_FAIL 0x0303"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1276,
          "context": "#define COMM_ERR_BACKUP_FAIL    0x0304"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1279,
          "context": "#define SAFETY_ERR_WATCHDOG     0x0401"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1280,
          "context": "#define SAFETY_ERR_EEPROM       0x0402"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1281,
          "context": "#define SAFETY_ERR_FLASH        0x0403"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1282,
          "context": "#define SAFETY_ERR_PARACHUTE    0x0404"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1283,
          "context": "#define SAFETY_ERR_KILLSWITCH   0x0405"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1286,
          "context": "#define RC_TEST_TIMEOUT         1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1288,
          "context": "#define TELEMETRY_TEST_TIMEOUT  1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1292,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1293,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1294,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1317,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1351,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1361,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1371,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1372,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1373,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1382,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1393,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1404,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1416,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1428,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1441,
          "context": "ADCResult result = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1450,
          "context": "ADC0_PSSI_R = 0x0008;  // Запуск SS3"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1453,
          "context": "uint32_t timeout = 10000;  // Примерно 10000 циклов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1454,
          "context": "while((ADC0_RIS_R & 0x08) == 0 && timeout > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1459,
          "context": "if (timeout == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1465,
          "context": "result.value = ADC0_SSFIFO3_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1469,
          "context": "ADC0_ISC_R = 0x0008;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1485,
          "context": "if (adcResult.value == 0 || adcResult.value >= ADC_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1493,
          "context": "float voltage = (adcResult.value * 3.3f) / 4096.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1501,
          "context": "temperature = (voltage * 100.0f);  // Пример преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1517,
          "context": "return 25.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1529,
          "context": "ADC0_PSSI_R = 0x0008;  // Запуск SS3"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1547,
          "context": "status.complete = (ADC0_RIS_R & 0x08) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1550,
          "context": "static uint32_t conversionAttempts = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1551,
          "context": "const uint32_t MAX_CONVERSION_ATTEMPTS = 1000;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1557,
          "context": "conversionAttempts = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1560,
          "context": "conversionAttempts = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1576,
          "context": "if (result.ticks == 0 || result.ticks > NVIC_ST_RELOAD_R) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1594,
          "context": "uint32_t elapsedTicks = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1619,
          "context": ".elapsedTicks = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1644,
          "context": ".magX = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1645,
          "context": ".magY = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1646,
          "context": ".magZ = 0.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1651,
          "context": "memset(&selfTestResult, 0, sizeof(SelfTestResult));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1652,
          "context": "selfTestResult.totalErrors = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1653,
          "context": "selfTestResult.totalWarnings = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1665,
          "context": "selfTestResult.powerTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1666,
          "context": "selfTestResult.sensorTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1667,
          "context": "selfTestResult.motorTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1668,
          "context": "selfTestResult.batteryTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1669,
          "context": "selfTestResult.commTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1670,
          "context": "selfTestResult.safetyTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1738,
          "context": "if (selfTestResult.totalErrors > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1745,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SELF_TEST, selfTestResult.message, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1750,
          "context": "#define ADC_CHANNEL_MCU_TEMP         ADC_AIN0   // Канал АЦП для температур"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1759,
          "context": "ADC1_SSMUX1_R = ADC_AIN0;  // Выбираем канал AIN0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1760,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1767,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1782,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1791,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1800,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1810,
          "context": "[THERMOCOUPLE_TYPE_K] = {0.0, 39.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1811,
          "context": "[THERMOCOUPLE_TYPE_J] = {0.0, 35.0, -0.00015, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1812,
          "context": "[THERMOCOUPLE_TYPE_T] = {0.0, 40.0, -0.0002, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1813,
          "context": "[THERMOCOUPLE_TYPE_E] = {0.0, 38.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1814,
          "context": "[THERMOCOUPLE_TYPE_N] = {0.0, 37.0, -0.00012, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1815,
          "context": "[THERMOCOUPLE_TYPE_R] = {0.0, 36.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1816,
          "context": "[THERMOCOUPLE_TYPE_S] = {0.0, 35.0, -0.00015, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1817,
          "context": "[THERMOCOUPLE_TYPE_B] = {0.0, 34.0, -0.0002, 0.0}      // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1828,
          "context": "return 25.0f;  // Возвращаем стандартную температур окружающей среды"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1832,
          "context": "float voltage = (adcResult.value * 3.3f) / 4096.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1840,
          "context": "temperature = (voltage * 100.0f);  // Пример преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1856,
          "context": "return 25.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1865,
          "context": "if (type < 0 || type >= THERMOCOUPLE_TYPE_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1888,
          "context": "const float MIN_TEMP = -200.0f;  // Минимальная температур для термопар"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1889,
          "context": "const float MAX_TEMP = 1800.0f;  // Максимальная температур для термопар"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1894,
          "context": "(uint32_t)(temperature * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1904,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1905,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1920,
          "context": "uint32_t result = ADC1_SSFIFO0_R & 0xFFF;  // 12-bit ADC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1927,
          "context": "float voltage = (result * 3.3f) / 4096.0f;  // Преобразование в вольты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1928,
          "context": "float current = (voltage * 20.0f) / 3.3f;   // Преобразование в амперы"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1935,
          "context": "static uint32_t lastBackupCommTest = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1947,
          "context": "if (currentTime - lastBackupCommTest < 1000) {  // Тестируем не чаще раза в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1954,
          "context": "uint8_t testPacket[] = {0xAA, 0x55, 0x00, 0xFF};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1964,
          "context": "while (GetCurrentTime() - startTime < 100) {  // Таймаут 100 мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1967,
          "context": "if (response[0] == 0x55 && response[1] == 0xAA &&"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1968,
          "context": "response[2] == 0xFF && response[3] == 0x00) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1996,
          "context": "uint32_t originalLoad = WATCHDOG0_LOAD_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1997,
          "context": "uint32_t originalCtl = WATCHDOG0_CTL_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2000,
          "context": "uint32_t testTimeout = SystemCoreClock / 10;  // 100мс при текущей частоте"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2003,
          "context": "WATCHDOG0_LOCK_R = 0x1ACCE551;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2006,
          "context": "WATCHDOG0_CTL_R &= ~(WDT_CTL_INTEN | WDT_CTL_RESEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2009,
          "context": "WATCHDOG0_LOAD_R = testTimeout;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2014,
          "context": "WATCHDOG0_CTL_R |= (WDT_CTL_RESEN | WDT_CTL_INTEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2017,
          "context": "NVIC_EN0_R |= (1 << INT_WATCHDOG);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2020,
          "context": "NVIC_PRI0_R = (NVIC_PRI0_R & 0xFFFFFFF0) | 0x0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2023,
          "context": "diagState.watchdogTimeout = 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2026,
          "context": "WATCHDOG0_ICR_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2029,
          "context": "\"Watchdog initialized\", 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2037,
          "context": "WATCHDOG0_LOAD_R = originalLoad;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2038,
          "context": "WATCHDOG0_CTL_R = originalCtl;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2055,
          "context": "float GetBaroAltitude(void) { return 0.0f; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2056,
          "context": "uint16_t GetMotorRPM(void) { return 0; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2057,
          "context": "float GetMotorVibration(void) { return 0.0f; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2058,
          "context": "uint8_t GetRCLinkQuality(void) { return 100; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2068,
          "context": "return 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2072,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2079,
          "context": "[THERMOCOUPLE_TYPE_K] = {0.0, 39.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2080,
          "context": "[THERMOCOUPLE_TYPE_J] = {0.0, 35.0, -0.00015, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2081,
          "context": "[THERMOCOUPLE_TYPE_T] = {0.0, 40.0, -0.0002, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2082,
          "context": "[THERMOCOUPLE_TYPE_E] = {0.0, 38.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2083,
          "context": "[THERMOCOUPLE_TYPE_N] = {0.0, 37.0, -0.00012, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2084,
          "context": "[THERMOCOUPLE_TYPE_R] = {0.0, 36.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2085,
          "context": "[THERMOCOUPLE_TYPE_S] = {0.0, 35.0, -0.00015, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2086,
          "context": "[THERMOCOUPLE_TYPE_B] = {0.0, 34.0, -0.0002, 0.0}      // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 5,
          "context": "*((volatile uint32_t *)(port + 0x400)) = pins;  // GPIO_O_DIR"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 7,
          "context": "*((volatile uint32_t *)(port + 0x51C)) = pins;  // GPIO_O_DEN"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 12,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 17,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 6,
          "context": "#define DEG_TO_RAD(x) ((x) * 0.017453292519943295)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 7,
          "context": "#define RAD_TO_DEG(x) ((x) * 57.295779513082323)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 10,
          "context": "#define EARTH_RADIUS 6371000.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 13,
          "context": "static NavigationState nav_state = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 15,
          "context": "static uint8_t waypoint_count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 16,
          "context": "static uint8_t current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 17,
          "context": "static GPSPosition home_position = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 25,
          "context": "memset(&nav_state, 0, sizeof(NavigationState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 26,
          "context": "memset(waypoints, 0, sizeof(waypoints));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 27,
          "context": "waypoint_count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 28,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 33,
          "context": "nav_state.heading = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 34,
          "context": "nav_state.ground_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 35,
          "context": "nav_state.vertical_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 81,
          "context": "memset(waypoints, 0, sizeof(waypoints));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 82,
          "context": "waypoint_count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 83,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 100,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 102,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 111,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 118,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 165,
          "context": "float speed_deg = speed / (EARTH_RADIUS * DEG_TO_RAD(1.0f));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 184,
          "context": "vertical_speed = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 187,
          "context": "vertical_speed = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 195,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 213,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 233,
          "context": "if (position->latitude < -90.0f || position->latitude > 90.0f ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 234,
          "context": "position->longitude < -180.0f || position->longitude > 180.0f ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 249,
          "context": "return distance <= 1000.0f; // Безопасная зона - 1 км от дома"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 261,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 271,
          "context": "if (!nav_state.navigation_active || waypoint_count == 0 ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 295,
          "context": "while (heading < 0.0f) heading += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 296,
          "context": "while (heading >= 360.0f) heading -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 11,
          "context": "bool mpu6050_initialized;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 12,
          "context": "bool bmp280_initialized;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 16,
          "context": ".mpu6050_initialized = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 17,
          "context": ".bmp280_initialized = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 18,
          "context": ".current_altitude = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 19,
          "context": ".rotation_angle = 0.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 23,
          "context": "static MPU6050_Data mpu6050_data = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 24,
          "context": "static BMP280_Data bmp280_data = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 27,
          "context": "static float vertical_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 29,
          "context": "void MPU6050_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 31,
          "context": "mpu6050_data.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 32,
          "context": "mpu6050_data.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 33,
          "context": "mpu6050_data.accel_z = 1.0f;  // 1g в состоянии покоя"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 34,
          "context": "mpu6050_data.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 35,
          "context": "mpu6050_data.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 36,
          "context": "mpu6050_data.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 37,
          "context": "mpu6050_data.temperature = 25.0f;  // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 39,
          "context": "sensor_state.mpu6050_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 42,
          "context": "void BMP280_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 44,
          "context": "bmp280_data.pressure = 1013.25f;  // Стандартное атмосферное давление (гПа)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 45,
          "context": "bmp280_data.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 46,
          "context": "bmp280_data.temperature = 25.0f;  // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 48,
          "context": "sensor_state.bmp280_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 51,
          "context": "void MPU6050_Read(MPU6050_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 52,
          "context": "if (!sensor_state.mpu6050_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 57,
          "context": "*data = mpu6050_data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 60,
          "context": "void BMP280_Read(BMP280_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 61,
          "context": "if (!sensor_state.bmp280_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 66,
          "context": "*data = bmp280_data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 69,
          "context": "void MPU6050_Calibrate(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 71,
          "context": "mpu6050_data.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 72,
          "context": "mpu6050_data.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 73,
          "context": "mpu6050_data.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 74,
          "context": "mpu6050_data.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 75,
          "context": "mpu6050_data.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 76,
          "context": "mpu6050_data.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 79,
          "context": "void BMP280_Calibrate(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 81,
          "context": "bmp280_data.pressure = 1013.25f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 82,
          "context": "bmp280_data.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 88,
          "context": "mpu6050_data.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 89,
          "context": "mpu6050_data.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 90,
          "context": "mpu6050_data.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 91,
          "context": "mpu6050_data.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 92,
          "context": "mpu6050_data.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 93,
          "context": "mpu6050_data.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 96,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 97,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 98,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f); // Примерное изменение давления с высотой"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 103,
          "context": "vertical_speed = 2.0f; // м/с"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 104,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f; // Предполагаем вызов каждые 100мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 106,
          "context": "mpu6050_data.accel_z = 1.2f; // Повышенная нагрузка при наборе высоты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 107,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 108,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 114,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 115,
          "context": "if (sensor_state.current_altitude < 0.0f) sensor_state.current_altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 117,
          "context": "mpu6050_data.accel_z = 0.8f; // Пониженная нагрузка при снижении"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 118,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 119,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 124,
          "context": "sensor_state.rotation_angle += 45.0f * 0.1f; // 45 градусов в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 125,
          "context": "if (sensor_state.rotation_angle >= 360.0f) sensor_state.rotation_angle -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 127,
          "context": "mpu6050_data.gyro_z = 45.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 128,
          "context": "mpu6050_data.accel_x = (float)sin(sensor_state.rotation_angle * 3.14159f / 180.0f) * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 129,
          "context": "mpu6050_data.accel_y = (float)cos(sensor_state.rotation_angle * 3.14159f / 180.0f) * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 134,
          "context": "mpu6050_data.accel_x = 0.2f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 135,
          "context": "mpu6050_data.gyro_y = -5.0f; // Небольшой наклон вперед"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 138,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 139,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 140,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 143,
          "context": "void Sensors_GetIMUData(MPU6050_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 146,
          "context": "*data = mpu6050_data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 152,
          "context": "MPU6050_Data imu;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 157,
          "context": "static float filteredRoll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 158,
          "context": "static float filteredPitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 159,
          "context": "static float filteredYaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 162,
          "context": "float accelRoll = atan2f(imu.accel_y, imu.accel_z) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 163,
          "context": "float accelPitch = atan2f(-imu.accel_x, sqrtf(imu.accel_y * imu.accel_y + imu.accel_z * imu.accel_z)) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 166,
          "context": "float dt = 0.01f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 167,
          "context": "filteredRoll = 0.96f * (filteredRoll + imu.gyro_x * dt) + 0.04f * accelRoll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 168,
          "context": "filteredPitch = 0.96f * (filteredPitch + imu.gyro_y * dt) + 0.04f * accelPitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 172,
          "context": "while (filteredYaw >= 360.0f) filteredYaw -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 173,
          "context": "while (filteredYaw < 0.0f) filteredYaw += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 183,
          "context": "data->imu.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 184,
          "context": "data->imu.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 185,
          "context": "data->imu.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 186,
          "context": "data->imu.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 187,
          "context": "data->imu.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 188,
          "context": "data->imu.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 189,
          "context": "data->baro.pressure = 1013.25f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 190,
          "context": "data->baro.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 195,
          "context": "void Sensors_GetBaroData(BMP280_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 197,
          "context": "data->pressure = 1013.25f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 198,
          "context": "data->altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 199,
          "context": "data->temperature = 25.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 13,
          "context": "#define DEG_TO_RAD(x) ((x) * 0.017453292519943295)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 14,
          "context": "#define RAD_TO_DEG(x) ((x) * 57.295779513082323)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 17,
          "context": "#define UPDATE_FREQUENCY 100"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 18,
          "context": "#define DT (1.0f / UPDATE_FREQUENCY)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 21,
          "context": "#define MAX_ROLL_ANGLE  45.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 22,
          "context": "#define MAX_PITCH_ANGLE 45.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 23,
          "context": "#define MAX_YAW_RATE    180.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 42,
          "context": "stabState.targetSetPoint.roll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 43,
          "context": "stabState.targetSetPoint.pitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 44,
          "context": "stabState.targetSetPoint.yaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 45,
          "context": "stabState.targetSetPoint.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 48,
          "context": "stabState.currentOrientation.roll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 49,
          "context": "stabState.currentOrientation.pitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 50,
          "context": "stabState.currentOrientation.yaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 54,
          "context": "1.0f, 0.1f, 0.05f,  // Roll"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 55,
          "context": "1.0f, 0.1f, 0.05f,  // Pitch"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 56,
          "context": "2.0f, 0.15f, 0.1f,  // Yaw"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 57,
          "context": "1.5f, 0.2f, 0.1f    // Altitude"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 69,
          "context": "stabState.rollPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 70,
          "context": "stabState.rollPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 76,
          "context": "stabState.pitchPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 77,
          "context": "stabState.pitchPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 83,
          "context": "stabState.yawPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 84,
          "context": "stabState.yawPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 90,
          "context": "stabState.altitudePID.outputMin = 0.0f;  // Минимальная тяга"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 91,
          "context": "stabState.altitudePID.outputMax = 1.0f;  // Максимальная тяга"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 102,
          "context": "stabState.targetSetPoint.altitude = fmaxf(altitude, 0.0f);  // Высота не может быть отрицательной"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 111,
          "context": "MPU6050_Data imuData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 112,
          "context": "BMP280_Data altData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 131,
          "context": "while (yawError > 180.0f) yawError -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 132,
          "context": "while (yawError < -180.0f) yawError += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 166,
          "context": "Actuators_SetAllMotors(0.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 175,
          "context": "stabState.rollPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 176,
          "context": "stabState.rollPID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 178,
          "context": "stabState.pitchPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 179,
          "context": "stabState.pitchPID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 181,
          "context": "stabState.yawPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 182,
          "context": "stabState.yawPID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 184,
          "context": "stabState.altitudePID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 185,
          "context": "stabState.altitudePID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 191,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 235,
          "context": "m1 = ClampValue(m1, 0.0f, 1.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 236,
          "context": "m2 = ClampValue(m2, 0.0f, 1.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 237,
          "context": "m3 = ClampValue(m3, 0.0f, 1.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 238,
          "context": "m4 = ClampValue(m4, 0.0f, 1.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 241,
          "context": "Actuators_SetMotor(0, m1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 11,
          "context": "#define MOTOR_FRONT_LEFT  0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 17,
          "context": "#define PWM_MIN_VALUE     0    // Минимальное значение PWM (мотор выключен)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 18,
          "context": "#define PWM_MAX_VALUE     1000 // Максимальное значение PWM (полная мощность)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 19,
          "context": "#define PWM_IDLE_VALUE    100  // Значение PWM на холостом ходу"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 11,
          "context": "#define GPIO_PORTA_AFSEL_R    (*((volatile uint32_t *)0x40004420))  // Port A Alternate Function Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 12,
          "context": "#define GPIO_PORTA_DEN_R      (*((volatile uint32_t *)0x4000451C))  // Port A Digital Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 13,
          "context": "#define GPIO_PORTA_AMSEL_R    (*((volatile uint32_t *)0x40004528))  // Port A Analog Mode Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 14,
          "context": "#define GPIO_PORTA_PCTL_R     (*((volatile uint32_t *)0x4000452C))  // Port A Port Control"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 18,
          "context": "#define COMM_BAUDRATE       115200"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 23,
          "context": "PACKET_TYPE_HEARTBEAT    = 0x00,  // Проверка соединения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 24,
          "context": "PACKET_TYPE_TELEMETRY    = 0x01,  // Телеметрия (сенсоры, положение, статус)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 25,
          "context": "PACKET_TYPE_COMMAND      = 0x02,  // Команды управления"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 26,
          "context": "PACKET_TYPE_CONFIG       = 0x03,  // Настройка параметров"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 27,
          "context": "PACKET_TYPE_WAYPOINT     = 0x04,  // Данные маршрутных точек"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 28,
          "context": "PACKET_TYPE_STATUS       = 0x05,  // Статус дрона"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 29,
          "context": "PACKET_TYPE_ERROR        = 0xFF   // Сообщения об ошибках"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 34,
          "context": "CMD_ARM           = 0x01,  // Активация моторов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 35,
          "context": "CMD_DISARM        = 0x02,  // Деактивация моторов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 36,
          "context": "CMD_TAKEOFF       = 0x03,  // Взлет"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 37,
          "context": "CMD_LAND          = 0x04,  // Посадка"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 38,
          "context": "CMD_RTH           = 0x05,  // Возврат домой"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 39,
          "context": "CMD_HOLD          = 0x06,  // Удержание позиции"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 40,
          "context": "CMD_EMERGENCY_STOP = 0x07  // Аварийная остановка"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 11,
          "context": "LOG_DEBUG = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 21,
          "context": "DIAG_EVENT_SYSTEM_START = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 42,
          "context": "TEST_RESULT_PASS = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 50,
          "context": "ADC_ERROR_NONE = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 59,
          "context": "SYSTICK_ERROR_NONE = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 68,
          "context": "POWER_MODE_NORMAL = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 75,
          "context": "SYSTEM_STATE_OK = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 83,
          "context": "THERMOCOUPLE_TYPE_K = 0,    // Type K thermocouple"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 95,
          "context": "#define TEMP_SENSOR_TYPE_LINEAR    0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 101,
          "context": "#define TEMP_MCU_WARNING      85.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 102,
          "context": "#define TEMP_MCU_CRITICAL     95.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 103,
          "context": "#define TEMP_MOTORS_WARNING   70.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 104,
          "context": "#define TEMP_MOTORS_CRITICAL  80.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 105,
          "context": "#define TEMP_BOARD_WARNING    60.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 106,
          "context": "#define TEMP_BOARD_CRITICAL   70.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 107,
          "context": "#define MAX_SAFE_TEMPERATURE   125.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 110,
          "context": "#define TEST_PASS    0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 226,
          "context": "float R0;             // Сопротивление при 0°C"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 228,
          "context": "} pt100Params;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 232,
          "context": "#define SYSCTL_RCGCGPIO_R    (*((volatile uint32_t *)0x400FE608))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 233,
          "context": "#define SYSCTL_RCGCADC_R     (*((volatile uint32_t *)0x400FE638))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 234,
          "context": "#define SYSCTL_PRGPIO_R      (*((volatile uint32_t *)0x400FEA08))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 235,
          "context": "#define SYSCTL_PRADC_R       (*((volatile uint32_t *)0x400FEA38))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 236,
          "context": "#define SYSCTL_RCGC2_R       (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 238,
          "context": "#define GPIO_PORTD_DEN_R     (*((volatile uint32_t *)0x4005751C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 239,
          "context": "#define GPIO_PORTD_AMSEL_R   (*((volatile uint32_t *)0x40057528))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 241,
          "context": "#define ADC1_ACTSS_R         (*((volatile uint32_t *)0x40039000))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 242,
          "context": "#define ADC1_EMUX_R          (*((volatile uint32_t *)0x40039014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 243,
          "context": "#define ADC1_SSMUX0_R        (*((volatile uint32_t *)0x40039040))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 244,
          "context": "#define ADC1_SSCTL0_R        (*((volatile uint32_t *)0x40039044))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 245,
          "context": "#define ADC1_TSSEL_R         (*((volatile uint32_t *)0x4003901C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 246,
          "context": "#define ADC1_SAC_R           (*((volatile uint32_t *)0x40039030))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 247,
          "context": "#define ADC1_IM_R            (*((volatile uint32_t *)0x40039008))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 248,
          "context": "#define ADC1_SSFIF00_R       (*((volatile uint32_t *)0x40039048))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 250,
          "context": "#define ADC0_SAC_R           (*((volatile uint32_t *)0x40038030))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 251,
          "context": "#define ADC0_IM_R            (*((volatile uint32_t *)0x40038008))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 252,
          "context": "#define ADC0_SSFIFO1_R       (*((volatile uint32_t *)0x40038048))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 255,
          "context": "#define ADC_ACTSS_ASEN0      0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 256,
          "context": "#define ADC_EMUX_EM0_M       0x0000000F"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 257,
          "context": "#define ADC_SSCTL0_IE3       0x00000800"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 258,
          "context": "#define ADC_SSCTL0_END3      0x00000400"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 259,
          "context": "#define ADC_IM_MASK0         0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 260,
          "context": "#define INT_ADC1SS0          51"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 263,
          "context": "#define ADC_PSSI_SS3          0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 264,
          "context": "#define ADC_RIS_INR3          0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 265,
          "context": "#define ADC_SSCTL0_IE2        0x00000400"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 266,
          "context": "#define ADC_SSCTL0_END2       0x00000800"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 267,
          "context": "#define ADC_SAC_AVG_64X       0x00000006"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 268,
          "context": "#define ADC_ACTSS_ASEN1       0x00000002  // SS1 Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 269,
          "context": "#define ADC_EMUX_EM1_M        0x000000F0  // SS1 Trigger Select mask"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 270,
          "context": "#define ADC_IM_MASK1          0x00000002  // SS1 Interrupt Mask"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 271,
          "context": "#define ADC_RIS_INR1          0x00000002  // SS1 Interrupt Status"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 272,
          "context": "#define ADC_PSSI_SS1          0x00000002  // SS1 Initiate"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 273,
          "context": "#define ADC_SSCTL1_IE2        0x00000400  // Sample 2 Interrupt Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 274,
          "context": "#define ADC_SSCTL1_END2       0x00000800  // Sample 2 is End of Sequence"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 277,
          "context": "#define INT_ADC0SS1          15  // ADC0 Sequencer 1 interrupt"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 280,
          "context": "#define WATCHDOG0_LOAD_R     (*((volatile uint32_t *)0x40000000))  // Регистр загрузки WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 281,
          "context": "#define WATCHDOG0_CTL_R      (*((volatile uint32_t *)0x40000008))  // Регистр управления WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 282,
          "context": "#define WATCHDOG0_ICR_R      (*((volatile uint32_t *)0x4000000C))  // Регистр очистки прерываний WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 283,
          "context": "#define WATCHDOG0_LOCK_R     (*((volatile uint32_t *)0x40000C00))  // Регистр блокировки WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 284,
          "context": "#define WATCHDOG0_ICR_M      (*((volatile uint32_t *)0x40000010))  // Регистр очистки прерываний WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 287,
          "context": "#define WDT_CTL_INTEN        0x00000001  // Разрешение прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 288,
          "context": "#define WDT_CTL_RESEN        0x00000002  // Разрешение сброса системы"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 291,
          "context": "#define NVIC_SYS_CTRL_R      (*((volatile uint32_t *)0xE000ED10))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 292,
          "context": "#define NVIC_SYS_CTRL_SLEEPDEEP 0x00000004"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 298,
          "context": "#define NVIC_EN0_R            (*((volatile uint32_t *)0xE000E100))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 299,
          "context": "#define NVIC_PRI0_R          (*((volatile uint32_t *)0xE000E400))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 300,
          "context": "#define NVIC_APINT_R         (*((volatile uint32_t *)0xE000ED0C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 301,
          "context": "#define NVIC_APINT_VECTKEY   0x05FA0000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 302,
          "context": "#define NVIC_APINT_SYSRESETREQ 0x00000004"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 305,
          "context": "#define SYSCTL_RCGCWD_R      (*((volatile uint32_t *)0x400FE600))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 306,
          "context": "#define SYSCTL_PRWD_R        (*((volatile uint32_t *)0x400FEA00))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 309,
          "context": "#define SYSCTL_RCGCWD_R0     0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 310,
          "context": "#define SYSCTL_PRWD_R0       0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 313,
          "context": "#define MCU_TEMP_SLOPE       1.0f    // Slope for MCU temperature conversion"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 314,
          "context": "#define MCU_TEMP_OFFSET      0.0f    // Offset for MCU temperature conversion"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 315,
          "context": "#define TEMP_SENSOR_SLOPE    10.0f   // mV/°C for external temperature sensors"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 318,
          "context": "#define TEMP_MCU_CHANNEL     0       // Internal temperature sensor channel"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 321,
          "context": "#define NVIC_EN1_R           (*((volatile uint32_t *)0xE000E104))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 324,
          "context": "#define ADC1_SSFIFO0_R       (*((volatile uint32_t *)0x40039044))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 327,
          "context": "#define NVIC_ST_CTRL_R       (*((volatile uint32_t *)0xE000E010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 328,
          "context": "#define NVIC_ST_RELOAD_R     (*((volatile uint32_t *)0xE000E014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 329,
          "context": "#define NVIC_ST_CURRENT_R    (*((volatile uint32_t *)0xE000E018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 332,
          "context": "#define NVIC_ST_CTRL_ENABLE  0x00000001  // Включение таймера"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 333,
          "context": "#define NVIC_ST_CTRL_INTEN   0x00000002  // Включение прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 334,
          "context": "#define NVIC_ST_CTRL_CLKSRC  0x00000004  // Выбор источника тактирования (системная частота)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 425,
          "context": "#define BACKUP_COMM_ERR_NOT_RESPONDING  0x0401"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 426,
          "context": "#define BACKUP_COMM_ERR_CRC            0x0402"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 427,
          "context": "#define BACKUP_COMM_ERR_TIMEOUT        0x0403"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 433,
          "context": "#define WATCHDOG_ERR_NO_RESET     0x0501  // Watchdog не вызвал сброс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 434,
          "context": "#define WATCHDOG_ERR_EARLY_RESET  0x0502  // Сброс произошел раньше времени"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 435,
          "context": "#define WATCHDOG_ERR_LATE_RESET   0x0503  // Сброс произошел позже времени"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 441,
          "context": "#define DIAG_MAX_LOG_ENTRIES 100"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 444,
          "context": "#define SYSCTL_RCGCGPIO_R3    0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 445,
          "context": "#define SYSCTL_RCGCGPIO_R4    0x00000010"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 446,
          "context": "#define SYSCTL_RCGCADC_R0     0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 447,
          "context": "#define SYSCTL_RCGCADC_R1     0x00000002"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 448,
          "context": "#define SYSCTL_PRGPIO_R3      0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 449,
          "context": "#define SYSCTL_PRGPIO_R4      0x00000010"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 450,
          "context": "#define SYSCTL_PRADC_R0       0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 451,
          "context": "#define SYSCTL_PRADC_R1       0x00000002"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 454,
          "context": "#define ADC1_PSSI_R           (*((volatile uint32_t *)0x40039028))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 455,
          "context": "#define ADC1_RIS_R            (*((volatile uint32_t *)0x40039004))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 456,
          "context": "#define ADC_ISC_IN0           0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 459,
          "context": "#define GPIO_PORTA_IM_R       (*((volatile uint32_t *)0x40004010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 460,
          "context": "#define GPIO_PORTA_IEV_R      (*((volatile uint32_t *)0x4000440C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 461,
          "context": "#define GPIO_PORTA_AFSEL_R    (*((volatile uint32_t *)0x40004420))  // Port A Alternate Function Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 462,
          "context": "#define GPIO_PORTE_AFSEL_R    (*((volatile uint32_t *)0x40024420))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 463,
          "context": "#define GPIO_PORTE_DEN_R      (*((volatile uint32_t *)0x4002451C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 464,
          "context": "#define GPIO_PORTE_AMSEL_R    (*((volatile uint32_t *)0x40024528))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 465,
          "context": "#define GPIO_PORTD_AFSEL_R    (*((volatile uint32_t *)0x40007420))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 468,
          "context": "#define WATCHDOG0_RIS_R       (*((volatile uint32_t *)0x40000004))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 469,
          "context": "#define WATCHDOG0_ICR_R       (*((volatile uint32_t *)0x40000008))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 470,
          "context": "#define WATCHDOG0_ICR_M       (*((volatile uint32_t *)0x40000010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 471,
          "context": "#define WDT_RIS_WDTRIS        0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 472,
          "context": "#define WDT_ICR_M             0xFFFFFFFF  // Watchdog Timer Interrupt Clear Mask"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 475,
          "context": "#define INT_UART0             21"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 476,
          "context": "#define INT_WTIMER0A          94"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 490,
          "context": "void WDT0_Handler(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 504,
          "context": "#define ADC_MAX_VALUE          4095     // Максимальное значение АЦП (12 бит)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 505,
          "context": "#define VOLTAGE_DIVIDER        0.5f     // Коэффициент делителя напряжения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 506,
          "context": "#define CURRENT_SENSE_MV_A     100.0f   // мВ/А для датчика тока"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 507,
          "context": "#define TEMP_SENSOR_MV_C       10.0f    // мВ/°C для температурного датчика"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 511,
          "context": "#define BATTERY_MIN_VOLTAGE    9.0f     // Минимальное напряжение батареи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 512,
          "context": "#define BATTERY_LOW_VOLTAGE    10.0f    // Напряжение для предупреждения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 514,
          "context": "#define BATTERY_MAX_TEMP       60.0f    // Максимальная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 8,
          "context": "#define GPIO_PIN_0              0x00000001  // GPIO pin 0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 9,
          "context": "#define GPIO_PIN_1              0x00000002  // GPIO pin 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 10,
          "context": "#define GPIO_PIN_2              0x00000004  // GPIO pin 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 11,
          "context": "#define GPIO_PIN_3              0x00000008  // GPIO pin 3"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 12,
          "context": "#define GPIO_PIN_4              0x00000010  // GPIO pin 4"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 13,
          "context": "#define GPIO_PIN_5              0x00000020  // GPIO pin 5"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 14,
          "context": "#define GPIO_PIN_6              0x00000040  // GPIO pin 6"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 15,
          "context": "#define GPIO_PIN_7              0x00000080  // GPIO pin 7"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 18,
          "context": "#define GPIO_PORTA_BASE        0x40004000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 19,
          "context": "#define GPIO_PORTB_BASE        0x40005000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 20,
          "context": "#define GPIO_PORTC_BASE        0x40006000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 21,
          "context": "#define GPIO_PORTD_BASE        0x40007000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 22,
          "context": "#define GPIO_PORTE_BASE        0x40024000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 23,
          "context": "#define GPIO_PORTF_BASE        0x40025000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 26,
          "context": "#define SYSCTL_RCGC2_R         (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 27,
          "context": "#define SYSCTL_RCGC2_GPIOF     0x00000020  // Port F Clock Gating Control"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 30,
          "context": "#define SYSCTL_SYSDIV_2_5      0x04000000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 31,
          "context": "#define SYSCTL_USE_PLL         0x00000000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 32,
          "context": "#define SYSCTL_OSC_MAIN        0x00000000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 33,
          "context": "#define SYSCTL_XTAL_16MHZ      0x00000540"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 36,
          "context": "#define SYSCTL_PERIPH_GPIOF    0xf0000805  // GPIO F peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 37,
          "context": "#define SYSCTL_PERIPH_GPIOE    0xf0000804  // GPIO E peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 38,
          "context": "#define SYSCTL_PERIPH_GPIOD    0xf0000803  // GPIO D peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 39,
          "context": "#define SYSCTL_PERIPH_GPIOC    0xf0000802  // GPIO C peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 40,
          "context": "#define SYSCTL_PERIPH_GPIOB    0xf0000801  // GPIO B peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 41,
          "context": "#define SYSCTL_PERIPH_GPIOA    0xf0000800  // GPIO A peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 31,
          "context": "#define MAIN_LOOP_FREQ_HZ      200     // Частота основного цикла (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 32,
          "context": "#define TELEMETRY_FREQ_HZ      10      // Частота отправки телеметрии (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 34,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 37,
          "context": "#define MAX_ALTITUDE           100.0f   // Максимальная высота (м)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 38,
          "context": "#define MIN_BATTERY_VOLTAGE    10.5f    // Минимальное напряжение батареи (В)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 39,
          "context": "#define MAX_ANGLE              45.0f    // Максимальный угол наклона (градусы)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 40,
          "context": "#define MAX_YAW_RATE          90.0f    // Максимальная скорость рыскания (градусы/с)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 44,
          "context": "PARAM_PID_ROLL = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 52,
          "context": "CMD_TYPE_POSITION = 0,     // Команда позиционирования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 44,
          "context": "#define MAX_WAYPOINTS 20"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 45,
          "context": "#define NAV_WAYPOINT_RADIUS    3.0f   // Радиус достижения точки (метры)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 46,
          "context": "#define NAV_MIN_ALTITUDE       5.0f    // Минимальная безопасная высота"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 47,
          "context": "#define NAV_MAX_ALTITUDE       120.0f  // Максимальная разрешенная высота"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 48,
          "context": "#define NAV_DEFAULT_SPEED      5.0f    // Скорость по умолчанию (м/с)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 23,
          "context": "} MPU6050_Data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 30,
          "context": "} BMP280_Data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 41,
          "context": "MPU6050_Data imu;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 42,
          "context": "BMP280_Data baro;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 53,
          "context": "void Sensors_GetBaroData(BMP280_Data* data);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "Канал"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_239",
      "name": "1",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 31,
          "context": "#define SYSCTL_RCGC2_R          (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 37,
          "context": "#define SYSCTL_RCC2_SYSDIV2_MASK 0x1F800000  // System Clock Divisor 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 57,
          "context": "#define SYSCTL_PERIPH_GPIOB    0xf0000801  // GPIO B peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 62,
          "context": "#define GPIO_PORTF_DEN_R       (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x51C)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 67,
          "context": "#define TELEMETRY_FREQ_HZ      10      // Частота отправки телеметрии (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 68,
          "context": "#define DIAGNOSTIC_FREQ_HZ      1       // Частота диагностики (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 69,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 102,
          "context": "while (1) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 168,
          "context": "GPIO_PORTF_DIR_R |= (GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 171,
          "context": "GPIO_PORTF_DEN_R |= (GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 215,
          "context": "if ((mainLoopCounter % 10) < 5) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 283,
          "context": "static float roll_kp = 1.0f, roll_ki = 0.1f, roll_kd = 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 284,
          "context": "static float pitch_kp = 1.0f, pitch_ki = 0.1f, pitch_kd = 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 285,
          "context": "static float yaw_kp = 2.0f, yaw_ki = 0.15f, yaw_kd = 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 286,
          "context": "static float alt_kp = 1.5f, alt_ki = 0.2f, alt_kd = 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 346,
          "context": "telemetry.gpsStatus = (sensorData.isCalibrated ? 1 : 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 392,
          "context": "Communication_SendError(0x01, reason);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 12,
          "context": "static void ClampPWMValue(uint16_t* pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 31,
          "context": "void Actuators_SetMotorPWM(uint8_t motor_index, uint16_t pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 38,
          "context": "actuators_state.motors[motor_index].is_running = (pwm_value > (uint16_t)PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 41,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 47,
          "context": "uint16_t Actuators_GetMotorPWM(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 94,
          "context": "void Actuators_SetThrottle(uint16_t throttle) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 97,
          "context": "uint16_t pwm_value = (uint16_t)((throttle * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100U + PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 102,
          "context": "void Actuators_SetYaw(int16_t yaw) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 107,
          "context": "uint16_t base_pwm = actuators_state.global_throttle;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 108,
          "context": "int32_t pwm_delta = ((int32_t)yaw * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 110,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm + pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 111,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm + pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 112,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 113,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm - pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 116,
          "context": "void Actuators_SetPitch(int16_t pitch) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 121,
          "context": "uint16_t base_pwm = actuators_state.global_throttle;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 122,
          "context": "int16_t pitch_pwm = pitch / 2;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 124,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm - pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 125,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 126,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm + pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 127,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm + pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 130,
          "context": "void Actuators_SetRoll(int16_t roll) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 135,
          "context": "uint16_t base_pwm = actuators_state.global_throttle;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 136,
          "context": "int16_t roll_pwm = roll / 2;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 138,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm + roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 139,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm + roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 140,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 141,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm - roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 170,
          "context": "uint16_t hover_pwm = PWM_MAX_VALUE / 2;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 179,
          "context": "uint16_t ascent_pwm = (uint16_t)(PWM_MAX_VALUE * 0.7f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 188,
          "context": "uint16_t descent_pwm = (uint16_t)(PWM_MAX_VALUE * 0.3f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 193,
          "context": "void Actuators_EmulateRotation(int16_t yaw_rate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 200,
          "context": "void Actuators_EmulateForwardFlight(uint16_t speed) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 231,
          "context": "actuators_state.motors[i].temperature += pwm_factor * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 244,
          "context": "actuators_state.motors[i].runtime += 10; // Предполагаем вызов каждые 10 мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 249,
          "context": "static void ClampPWMValue(uint16_t* pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 4,
          "context": "#include <TM4C123GH6PM.h>  // Используем системный путь"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 9,
          "context": "#define UART_FR_RXFE    0x10    // Флаг пустого буфера приема"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 14,
          "context": "#define GPIO_PA0_U0RX   0x01    // UART0 RX на PA0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 15,
          "context": "#define GPIO_PA1_U0TX   0x02    // UART0 TX на PA1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 18,
          "context": "#define COMM_TIMEOUT_MS     1000    // Таймаут соединения (1 секунда)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 19,
          "context": "#define SYSTICK_FREQ_HZ    1000    // Частота системного таймера (1 кГц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 23,
          "context": "#define UART0_FR_R              (*((volatile uint32_t *)0x4000C018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 30,
          "context": "#define SYSCTL_RCGCUART_R     (*((volatile uint32_t *)0x400FE104))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 45,
          "context": "uint16_t telemetryRateHz;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 46,
          "context": "uint16_t padding;           // Явное выравнивание"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 49,
          "context": "uint16_t rxIndex;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 54,
          "context": "static uint16_t CalculateChecksum(const uint8_t* data, uint16_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 66,
          "context": "SYSCTL_RCGCUART_R |= (1U << 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 67,
          "context": "SYSCTL_RCGCGPIO_R |= (1U << 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 70,
          "context": "while((SYSCTL_PRGPIO_R & (1U << 0)) == 0) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 73,
          "context": "GPIO_PORTA_AFSEL_R |= (GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 74,
          "context": "GPIO_PORTA_DEN_R |= (GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 75,
          "context": "GPIO_PORTA_AMSEL_R &= ~(GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 76,
          "context": "GPIO_PORTA_PCTL_R = (GPIO_PORTA_PCTL_R & 0xFFFFFF00) | 0x00000011;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 79,
          "context": "UART0_CTL_R &= ~0x01;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 82,
          "context": "uint32_t systemClock = 16000000; // 16 MHz"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 83,
          "context": "uint32_t brdi = systemClock / (16 * baudRate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 84,
          "context": "uint32_t brdf = (uint32_t)(((float)systemClock / (16.0f * (float)baudRate) - brdi) * 64.0f + 0.5f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 93,
          "context": "UART0_CTL_R |= 0x01;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 98,
          "context": "uint16_t UART_Receive(uint8_t* buffer, uint16_t maxLength) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 99,
          "context": "uint16_t count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 116,
          "context": "bool UART_Send(const uint8_t* data, uint16_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 117,
          "context": "uint16_t i;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 139,
          "context": "commState.telemetryRateHz = 10; // По умолчанию 10 Гц"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 159,
          "context": "uint16_t bytesReceived = UART_Receive("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 161,
          "context": "(uint16_t)(COMM_BUFFER_SIZE - commState.rxIndex)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 165,
          "context": "commState.rxIndex = (uint16_t)(commState.rxIndex + bytesReceived);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 168,
          "context": "uint16_t processedIndex = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 173,
          "context": "uint16_t packetSize = sizeof(CommPacket) - COMM_MAX_PACKET_SIZE + packet->length;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 219,
          "context": "packet.checksum = CalculateChecksum((const uint8_t*)&packet, (uint16_t)(sizeof(CommPacket) - sizeof(uint16_t)));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 222,
          "context": "if (UART_Send((const uint8_t*)&packet, (uint16_t)sizeof(CommPacket))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 245,
          "context": "char message[COMM_MAX_PACKET_SIZE - 1];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 250,
          "context": "strncpy(errorData.message, message, sizeof(errorData.message) - 1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 251,
          "context": "errorData.message[sizeof(errorData.message) - 1] = '\\0';"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 257,
          "context": "1 + strlen(errorData.message) + 1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 296,
          "context": "Communication_SendError(0x01, \"Unknown command\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 327,
          "context": "void Communication_SetTelemetryRate(uint16_t rateHz) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 359,
          "context": "NVIC_ST_RELOAD_R = SystemCoreClock / 1000 - 1;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 388,
          "context": "Communication_SendStatus(0x01); // 0x01 - связь восстановлена"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 394,
          "context": "static uint16_t CalculateChecksum(const uint8_t* data, uint16_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 395,
          "context": "uint16_t checksum = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 396,
          "context": "for(uint16_t i = 0; i < length; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 413,
          "context": "uint16_t calculatedChecksum = CalculateChecksum("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 447,
          "context": "void Communication_SendData(uint8_t* data, uint16_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 451,
          "context": "void Communication_Receive(uint8_t* buffer, uint16_t* length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 8,
          "context": "#include \"D:/keil/pack/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 25,
          "context": "#define NVIC_ST_CTRL_R          (*((volatile uint32_t *)0xE000E010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 26,
          "context": "#define NVIC_ST_RELOAD_R        (*((volatile uint32_t *)0xE000E014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 27,
          "context": "#define NVIC_ST_CURRENT_R       (*((volatile uint32_t *)0xE000E018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 30,
          "context": "#ifndef ADC0_SSMUX1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 31,
          "context": "#define ADC0_SSMUX1_R          (*((volatile uint32_t *)0x40038044))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 33,
          "context": "#ifndef ADC0_SSCTL1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 34,
          "context": "#define ADC0_SSCTL1_R          (*((volatile uint32_t *)0x40038048))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 38,
          "context": "#define ADC1_BASE            0x40039000  // Базовый адрес ADC1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 39,
          "context": "#define ADC1_SSMUX1_R       (*((volatile uint32_t *)(ADC1_BASE + 0x40)))  // Мультиплексор выборки SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 40,
          "context": "#define ADC1_SSCTL1_R       (*((volatile uint32_t *)(ADC1_BASE + 0x44)))  // Управление и статус SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 41,
          "context": "#define ADC1_SSFIFO1_R      (*((volatile uint32_t *)(ADC1_BASE + 0x48)))  // FIFO данных SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 42,
          "context": "#define ADC1_ISC_R          (*((volatile uint32_t *)(ADC1_BASE + 0x50)))  // Регистр очистки прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 46,
          "context": "#define ADC0_EMUX_R            (*((volatile uint32_t *)0x40038014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 56,
          "context": "#define ADC_PSSI_SS1        0x00000002  // SS1 Initiate"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 57,
          "context": "#define ADC_ACTSS_ASEN1     0x00000002  // SS1 Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 58,
          "context": "#define ADC_EMUX_EM1_M      0x000000F0  // SS1 Trigger Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 62,
          "context": "#define ADC_AIN1   1   // Базовый канал для температур моторов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 67,
          "context": "#define ADC_ISC_IN1 0x02  // Флаг прерывания для канала 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 93,
          "context": "#define DEBUG_BUFFER_SIZE 128"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 123,
          "context": "NVIC_ST_RELOAD_R = 16000 - 1;  // (16MHz / 1000Hz) - 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 187,
          "context": "if (NVIC_APINT_R & 0x10000) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 220,
          "context": "if (voltage >= 12.6f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 221,
          "context": "diagState.powerState.batteryLevel = 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 230,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_BATTERY_CRITICAL, \"Battery critically low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 231,
          "context": "} else if (voltage <= 10.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 232,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_BATTERY_LOW, \"Battery low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 297,
          "context": "GPIO_PORTE_AFSEL_R |= (1<<3) | (1<<2) | (1<<1);  // Альтернативная функция"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 298,
          "context": "GPIO_PORTE_DEN_R &= ~((1<<3) | (1<<2) | (1<<1)); // Отключаем цифровой режим"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 299,
          "context": "GPIO_PORTE_AMSEL_R |= (1<<3) | (1<<2) | (1<<1);  // Включаем аналоговый режим"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 302,
          "context": "ADC0_ACTSS_R &= ~ADC_ACTSS_ASEN1;          // Отключаем секвенсор для настройки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 303,
          "context": "ADC0_EMUX_R &= ~ADC_EMUX_EM1_M;            // Программный запуск"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 304,
          "context": "ADC0_SSMUX1_R = (0 << 0) |                 // Канал 0 (напряжение)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 305,
          "context": "(1 << 4) |                 // Канал 1 (ток)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 307,
          "context": "ADC0_SSCTL1_R = (0 << 0) |                // Первый канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 311,
          "context": "ADC0_ACTSS_R |= ADC_ACTSS_ASEN1;          // Включаем секвенсор"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 317,
          "context": "ADC0_IM_R |= ADC_IM_MASK1;                // Маска прерывания секвенсора 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 318,
          "context": "NVIC_EN0_R |= (1 << (INT_ADC0SS1 - 16));  // Включаем прерывание в NVIC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 322,
          "context": "void ADC0SS1_Handler(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 324,
          "context": "uint32_t voltage_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 325,
          "context": "uint32_t current_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 326,
          "context": "uint32_t temp_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 330,
          "context": "float current = ((current_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / CURRENT_SENSE_MV_A;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 331,
          "context": "float temp = ((temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_MV_C;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 340,
          "context": "(BATTERY_MAX_VOLTAGE - BATTERY_MIN_VOLTAGE) * 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 341,
          "context": "diagState.powerState.batteryLevel = (battery_level > 100.0f) ? 100.0f :"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 350,
          "context": "\"Critical battery voltage\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 354,
          "context": "\"Low battery voltage\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 359,
          "context": "\"Critical battery temperature\", (uint32_t)(temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 363,
          "context": "ADC0_ISC_R = ADC_ISC_IN1;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 370,
          "context": "SYSCTL_RCGCADC_R |= SYSCTL_RCGCADC_R1;    // ADC1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 374,
          "context": "while(!(SYSCTL_PRADC_R & SYSCTL_PRADC_R1)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 377,
          "context": "GPIO_PORTE_AFSEL_R |= (1<<4) | (1<<5);     // PE4, PE5"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 378,
          "context": "GPIO_PORTD_AFSEL_R |= (1<<3);              // PD3"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 379,
          "context": "GPIO_PORTE_DEN_R &= ~((1<<4) | (1<<5));    // Отключаем цифровой режим"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 380,
          "context": "GPIO_PORTD_DEN_R &= ~(1<<3);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 381,
          "context": "GPIO_PORTE_AMSEL_R |= (1<<4) | (1<<5);     // Включаем аналоговый режим"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 382,
          "context": "GPIO_PORTD_AMSEL_R |= (1<<3);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 385,
          "context": "ADC1_ACTSS_R &= ~ADC_ACTSS_ASEN0;          // Отключаем секвенсор для настройки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 386,
          "context": "ADC1_EMUX_R &= ~ADC_EMUX_EM0_M;            // Программный запуск"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 389,
          "context": "ADC1_SSMUX0_R = (TEMP_MCU_CHANNEL << 0)   | // Встроенный сенсор MCU"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 392,
          "context": "(4 << 12);                   // Температур окружающей среды (PD3)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 395,
          "context": "ADC1_SSCTL0_R = (0 << 0)                   | // Первый канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 402,
          "context": "ADC1_TSSEL_R |= (1 << TEMP_MCU_CHANNEL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 404,
          "context": "ADC1_ACTSS_R |= ADC_ACTSS_ASEN0;           // Включаем секвенсор"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 407,
          "context": "ADC1_SAC_R = ADC_SAC_AVG_64X;              // 64x усреднение"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 410,
          "context": "ADC1_IM_R |= ADC_IM_MASK0;                 // Маска прерывания секвенсора 0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 411,
          "context": "NVIC_EN1_R |= (1 << (INT_ADC1SS0 - 48));   // Включаем прерывание в NVIC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 415,
          "context": "void ADC1SS0_Handler(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 417,
          "context": "uint32_t mcu_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 418,
          "context": "uint32_t motors_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 419,
          "context": "uint32_t board_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 420,
          "context": "uint32_t ambient_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 425,
          "context": "float mcu_temp = ((mcu_voltage * 1000.0f) / MCU_TEMP_SLOPE) + MCU_TEMP_OFFSET;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 428,
          "context": "float motors_temp = ((motors_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 429,
          "context": "float board_temp = ((board_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 430,
          "context": "float ambient_temp = ((ambient_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 441,
          "context": "\"Critical MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 445,
          "context": "\"High MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 450,
          "context": "\"Critical motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 454,
          "context": "\"High motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 459,
          "context": "\"Critical board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 463,
          "context": "\"High board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 467,
          "context": "ADC1_ISC_R = ADC_ISC_IN0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 480,
          "context": "(uint32_t)(diagState.thermalState.mcuTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 485,
          "context": "(uint32_t)(diagState.thermalState.mcuTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 494,
          "context": "(uint32_t)(diagState.thermalState.motorTemps[i] * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 499,
          "context": "(uint32_t)(diagState.thermalState.motorTemps[i] * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 508,
          "context": "(uint32_t)(diagState.thermalState.boardTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 513,
          "context": "(uint32_t)(diagState.thermalState.boardTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 598,
          "context": "debugBuffer[len + 1] = '\\n';"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 668,
          "context": "WATCHDOG0_LOCK_R = 0x1ACCE551;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 675,
          "context": "uint32_t reload_value = timeout_ms * 1000; // преобразуем мс в тики"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 686,
          "context": "NVIC_EN0_R |= (1 << INT_WATCHDOG);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 779,
          "context": "NVIC_EN0_R |= (1 << INT_UART0);       // UART0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 780,
          "context": "NVIC_EN0_R |= (1 << INT_WTIMER0A);    // WatchDog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 878,
          "context": "SendDebugMessage(\"Battery Temp: %.1f°C\", diagState.powerState.batteryTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 883,
          "context": "SendDebugMessage(\"MCU Temp: %.1f°C\", diagState.thermalState.mcuTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 884,
          "context": "SendDebugMessage(\"Board Temp: %.1f°C\", diagState.thermalState.boardTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 885,
          "context": "SendDebugMessage(\"Motor Temps: %.1f, %.1f, %.1f, %.1f°C\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 887,
          "context": "diagState.thermalState.motorTemps[1],"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 890,
          "context": "SendDebugMessage(\"Ambient Temp: %.1f°C\", diagState.thermalState.ambientTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 927,
          "context": "#define POWER_ERR_VOLTAGE_LOW    0x0001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 934,
          "context": "#define POWER_TEST_VOLTAGE_MIN   10.5f   // В"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 935,
          "context": "#define POWER_TEST_VOLTAGE_MAX   12.6f   // В"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 936,
          "context": "#define POWER_TEST_CURRENT_MAX   15.0f   // А"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 955,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 964,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 976,
          "context": "status.data = (uint32_t)(batteryCurrent * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 988,
          "context": "status.data = (uint32_t)(batteryTemp * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1021,
          "context": "#define SENSOR_ERR_IMU_FAIL      0x0101"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1022,
          "context": "#define SENSOR_ERR_IMU_SELFTEST  0x0102"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1023,
          "context": "#define SENSOR_ERR_IMU_RANGE     0x0103"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1024,
          "context": "#define SENSOR_ERR_BARO_FAIL     0x0104"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1025,
          "context": "#define SENSOR_ERR_BARO_RANGE    0x0105"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1026,
          "context": "#define SENSOR_ERR_MAG_FAIL      0x0106"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1027,
          "context": "#define SENSOR_ERR_MAG_RANGE     0x0107"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1028,
          "context": "#define SENSOR_ERR_GPS_FAIL      0x0108"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1029,
          "context": "#define SENSOR_ERR_ADC_FAIL      0x0109"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1034,
          "context": "#define BARO_TEST_ALT_MIN       -100.0f // м"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1062,
          "context": "status.data = (uint32_t)(accel_magnitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1084,
          "context": "status.data = (uint32_t)(altitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1115,
          "context": "status.data = (uint32_t)(mag_magnitude * 1000);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1136,
          "context": "#define MOTOR_ERR_NOT_RESPONDING 0x0201"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1144,
          "context": "#define MOTOR_TEST_SPEED         10.0f   // % от максимальной скорости"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1148,
          "context": "#define MOTOR_TEST_TIMEOUT       1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1220,
          "context": "if (motorData[i].rpm < 100.0f) {  // Минимальные обороты для теста"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1273,
          "context": "#define COMM_ERR_RC_FAIL        0x0301"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1279,
          "context": "#define SAFETY_ERR_WATCHDOG     0x0401"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1286,
          "context": "#define RC_TEST_TIMEOUT         1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1288,
          "context": "#define TELEMETRY_TEST_TIMEOUT  1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1310,
          "context": "DelayMs(1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1344,
          "context": "DelayMs(1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1453,
          "context": "uint32_t timeout = 10000;  // Примерно 10000 циклов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1501,
          "context": "temperature = (voltage * 100.0f);  // Пример преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1551,
          "context": "const uint32_t MAX_CONVERSION_ATTEMPTS = 1000;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1655,
          "context": "strncpy(selfTestResult.message, \"Test not started\", sizeof(selfTestResult.message) - 1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1739,
          "context": "strncpy(selfTestResult.message, \"Self-test failed\", sizeof(selfTestResult.message) - 1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1744,
          "context": "strncpy(selfTestResult.message, \"Self-test passed\", sizeof(selfTestResult.message) - 1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1751,
          "context": "#define ADC_CHANNEL_MOTOR_TEMP_BASE  ADC_AIN1   // Базовый канал для температур моторов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1759,
          "context": "ADC1_SSMUX1_R = ADC_AIN0;  // Выбираем канал AIN0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1760,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1761,
          "context": "ADC1_SSFIFO1_R;            // Очистка FIFO"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1762,
          "context": "ADC1_ISC_R = ADC_ISC_IN1;  // Сброс флага прерывания"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1763,
          "context": "return ADC1_SSFIFO1_R;     // Возвращаем значение АЦП"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1781,
          "context": "ADC1_SSMUX1_R = ADC_AIN4;  // Выбираем канал AIN4"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1782,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1783,
          "context": "ADC1_SSFIFO1_R;            // Очистка FIFO"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1784,
          "context": "ADC1_ISC_R = ADC_ISC_IN1;  // Сброс флага прерывания"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1785,
          "context": "return ADC1_SSFIFO1_R;     // Возвращаем значение АЦП"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1790,
          "context": "ADC1_SSMUX1_R = ADC_AIN5;  // Выбираем канал AIN5"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1791,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1792,
          "context": "ADC1_SSFIFO1_R;            // Очистка FIFO"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1793,
          "context": "ADC1_ISC_R = ADC_ISC_IN1;  // Сброс флага прерывания"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1794,
          "context": "return ADC1_SSFIFO1_R;     // Возвращаем значение АЦП"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1799,
          "context": "ADC1_SSMUX1_R = ADC_AIN6;  // Выбираем канал AIN6"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1800,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1801,
          "context": "ADC1_SSFIFO1_R;            // Очистка FIFO"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1802,
          "context": "ADC1_ISC_R = ADC_ISC_IN1;  // Сброс флага прерывания"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1803,
          "context": "return ADC1_SSFIFO1_R;     // Возвращаем значение АЦП"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1810,
          "context": "[THERMOCOUPLE_TYPE_K] = {0.0, 39.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1811,
          "context": "[THERMOCOUPLE_TYPE_J] = {0.0, 35.0, -0.00015, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1813,
          "context": "[THERMOCOUPLE_TYPE_E] = {0.0, 38.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1814,
          "context": "[THERMOCOUPLE_TYPE_N] = {0.0, 37.0, -0.00012, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1815,
          "context": "[THERMOCOUPLE_TYPE_R] = {0.0, 36.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1816,
          "context": "[THERMOCOUPLE_TYPE_S] = {0.0, 35.0, -0.00015, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1840,
          "context": "temperature = (voltage * 100.0f);  // Пример преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1889,
          "context": "const float MAX_TEMP = 1800.0f;  // Максимальная температур для термопар"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1894,
          "context": "(uint32_t)(temperature * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1912,
          "context": "ADC1_PSSI_R |= (1 << adcChannel);  // Запуск преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1915,
          "context": "while(!(ADC1_RIS_R & (1 << adcChannel))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1920,
          "context": "uint32_t result = ADC1_SSFIFO0_R & 0xFFF;  // 12-bit ADC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1923,
          "context": "ADC1_ISC_R = (1 << adcChannel);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1947,
          "context": "if (currentTime - lastBackupCommTest < 1000) {  // Тестируем не чаще раза в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1964,
          "context": "while (GetCurrentTime() - startTime < 100) {  // Таймаут 100 мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1967,
          "context": "if (response[0] == 0x55 && response[1] == 0xAA &&"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2000,
          "context": "uint32_t testTimeout = SystemCoreClock / 10;  // 100мс при текущей частоте"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2003,
          "context": "WATCHDOG0_LOCK_R = 0x1ACCE551;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2017,
          "context": "NVIC_EN0_R |= (1 << INT_WATCHDOG);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2023,
          "context": "diagState.watchdogTimeout = 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2029,
          "context": "\"Watchdog initialized\", 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2033,
          "context": "DelayMs(1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2056,
          "context": "uint16_t GetMotorRPM(void) { return 0; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2058,
          "context": "uint8_t GetRCLinkQuality(void) { return 100; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2064,
          "context": "void SetMotorSpeed(uint8_t motor, uint16_t speed) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2067,
          "context": "uint16_t GetMotorRPM(int motorIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2079,
          "context": "[THERMOCOUPLE_TYPE_K] = {0.0, 39.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2080,
          "context": "[THERMOCOUPLE_TYPE_J] = {0.0, 35.0, -0.00015, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2082,
          "context": "[THERMOCOUPLE_TYPE_E] = {0.0, 38.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2083,
          "context": "[THERMOCOUPLE_TYPE_N] = {0.0, 37.0, -0.00012, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2084,
          "context": "[THERMOCOUPLE_TYPE_R] = {0.0, 36.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2085,
          "context": "[THERMOCOUPLE_TYPE_S] = {0.0, 35.0, -0.00015, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 7,
          "context": "*((volatile uint32_t *)(port + 0x51C)) = pins;  // GPIO_O_DEN"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 6,
          "context": "#define DEG_TO_RAD(x) ((x) * 0.017453292519943295)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 7,
          "context": "#define RAD_TO_DEG(x) ((x) * 57.295779513082323)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 10,
          "context": "#define EARTH_RADIUS 6371000.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 66,
          "context": "for (uint8_t i = index; i < waypoint_count - 1; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 67,
          "context": "waypoints[i] = waypoints[i + 1];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 165,
          "context": "float speed_deg = speed / (EARTH_RADIUS * DEG_TO_RAD(1.0f));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 193,
          "context": "float Navigation_CalculateDistance(const GPSPosition* pos1, const GPSPosition* pos2) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 194,
          "context": "if (!pos1->valid || !pos2->valid) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 199,
          "context": "float lat1 = DEG_TO_RAD(pos1->latitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 201,
          "context": "float dlon = DEG_TO_RAD(pos2->longitude - pos1->longitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 202,
          "context": "float dlat = lat2 - lat1;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 205,
          "context": "cosf(lat1) * cosf(lat2) * sinf(dlon/2) * sinf(dlon/2);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 206,
          "context": "float c = 2 * atan2f(sqrtf(a), sqrtf(1-a));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 211,
          "context": "float Navigation_CalculateBearing(const GPSPosition* pos1, const GPSPosition* pos2) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 212,
          "context": "if (!pos1->valid || !pos2->valid) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 216,
          "context": "float lat1 = DEG_TO_RAD(pos1->latitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 218,
          "context": "float dlon = DEG_TO_RAD(pos2->longitude - pos1->longitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 221,
          "context": "float x = cosf(lat1) * sinf(lat2) - sinf(lat1) * cosf(lat2) * cosf(dlon);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 234,
          "context": "position->longitude < -180.0f || position->longitude > 180.0f ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 249,
          "context": "return distance <= 1000.0f; // Безопасная зона - 1 км от дома"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 286,
          "context": "if (current_waypoint_index < waypoint_count - 1) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 5,
          "context": "#include \"TM4C123GH6PM.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 33,
          "context": "mpu6050_data.accel_z = 1.0f;  // 1g в состоянии покоя"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 44,
          "context": "bmp280_data.pressure = 1013.25f;  // Стандартное атмосферное давление (гПа)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 73,
          "context": "mpu6050_data.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 81,
          "context": "bmp280_data.pressure = 1013.25f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 90,
          "context": "mpu6050_data.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 96,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 98,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f); // Примерное изменение давления с высотой"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 104,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f; // Предполагаем вызов каждые 100мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 106,
          "context": "mpu6050_data.accel_z = 1.2f; // Повышенная нагрузка при наборе высоты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 108,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 113,
          "context": "vertical_speed = -1.5f; // м/с"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 114,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 119,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 124,
          "context": "sensor_state.rotation_angle += 45.0f * 0.1f; // 45 градусов в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 128,
          "context": "mpu6050_data.accel_x = (float)sin(sensor_state.rotation_angle * 3.14159f / 180.0f) * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 129,
          "context": "mpu6050_data.accel_y = (float)cos(sensor_state.rotation_angle * 3.14159f / 180.0f) * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 138,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 140,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 162,
          "context": "float accelRoll = atan2f(imu.accel_y, imu.accel_z) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 163,
          "context": "float accelPitch = atan2f(-imu.accel_x, sqrtf(imu.accel_y * imu.accel_y + imu.accel_z * imu.accel_z)) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 166,
          "context": "float dt = 0.01f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 185,
          "context": "data->imu.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 189,
          "context": "data->baro.pressure = 1013.25f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 197,
          "context": "data->pressure = 1013.25f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 13,
          "context": "#define DEG_TO_RAD(x) ((x) * 0.017453292519943295)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 14,
          "context": "#define RAD_TO_DEG(x) ((x) * 57.295779513082323)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 17,
          "context": "#define UPDATE_FREQUENCY 100"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 18,
          "context": "#define DT (1.0f / UPDATE_FREQUENCY)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 23,
          "context": "#define MAX_YAW_RATE    180.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 54,
          "context": "1.0f, 0.1f, 0.05f,  // Roll"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 55,
          "context": "1.0f, 0.1f, 0.05f,  // Pitch"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 56,
          "context": "2.0f, 0.15f, 0.1f,  // Yaw"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 57,
          "context": "1.5f, 0.2f, 0.1f    // Altitude"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 69,
          "context": "stabState.rollPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 70,
          "context": "stabState.rollPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 76,
          "context": "stabState.pitchPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 77,
          "context": "stabState.pitchPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 83,
          "context": "stabState.yawPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 84,
          "context": "stabState.yawPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 91,
          "context": "stabState.altitudePID.outputMax = 1.0f;  // Максимальная тяга"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 131,
          "context": "while (yawError > 180.0f) yawError -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 132,
          "context": "while (yawError < -180.0f) yawError += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 229,
          "context": "float m1 = baseThrust - rollOutput - pitchOutput + yawOutput;  // Передний левый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 235,
          "context": "m1 = ClampValue(m1, 0.0f, 1.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 236,
          "context": "m2 = ClampValue(m2, 0.0f, 1.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 237,
          "context": "m3 = ClampValue(m3, 0.0f, 1.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 238,
          "context": "m4 = ClampValue(m4, 0.0f, 1.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 241,
          "context": "Actuators_SetMotor(0, m1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 242,
          "context": "Actuators_SetMotor(1, m2);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 12,
          "context": "#define MOTOR_FRONT_RIGHT 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 18,
          "context": "#define PWM_MAX_VALUE     1000 // Максимальное значение PWM (полная мощность)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 19,
          "context": "#define PWM_IDLE_VALUE    100  // Значение PWM на холостом ходу"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 23,
          "context": "uint16_t pwm_value;     // Текущее значение PWM (0-1000)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 33,
          "context": "uint16_t global_throttle;  // Общий уровень газа (0-1000)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 41,
          "context": "void Actuators_SetMotorPWM(uint8_t motor_index, uint16_t pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 42,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 44,
          "context": "uint16_t Actuators_GetMotorPWM(uint8_t motor_index);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 54,
          "context": "void Actuators_SetThrottle(uint16_t throttle);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 55,
          "context": "void Actuators_SetYaw(int16_t yaw);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 56,
          "context": "void Actuators_SetPitch(int16_t pitch);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 57,
          "context": "void Actuators_SetRoll(int16_t roll);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 68,
          "context": "void Actuators_EmulateRotation(int16_t yaw_rate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 69,
          "context": "void Actuators_EmulateForwardFlight(uint16_t speed);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 12,
          "context": "#define GPIO_PORTA_DEN_R      (*((volatile uint32_t *)0x4000451C))  // Port A Digital Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 18,
          "context": "#define COMM_BAUDRATE       115200"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 24,
          "context": "PACKET_TYPE_TELEMETRY    = 0x01,  // Телеметрия (сенсоры, положение, статус)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 34,
          "context": "CMD_ARM           = 0x01,  // Активация моторов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 49,
          "context": "uint16_t checksum;     // Контрольная сумма"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 77,
          "context": "uint16_t UART_Receive(uint8_t* buffer, uint16_t maxLength);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 78,
          "context": "bool UART_Send(const uint8_t* data, uint16_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 82,
          "context": "void Communication_SendData(uint8_t* data, uint16_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 83,
          "context": "uint16_t Communication_Receive(uint8_t* buffer, uint16_t maxLength);  // Изменили возвращаемый тип и имя параметра"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 89,
          "context": "uint16_t Communication_Receive(uint8_t* buffer, uint16_t maxLength);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 105,
          "context": "void Communication_SetTelemetryRate(uint16_t rateHz);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 96,
          "context": "#define TEMP_SENSOR_TYPE_NTC       1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 107,
          "context": "#define MAX_SAFE_TEMPERATURE   125.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 111,
          "context": "#define TEST_WARNING 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 140,
          "context": "char message[128];       // Текстовое сообщение"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 228,
          "context": "} pt100Params;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 236,
          "context": "#define SYSCTL_RCGC2_R       (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 238,
          "context": "#define GPIO_PORTD_DEN_R     (*((volatile uint32_t *)0x4005751C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 241,
          "context": "#define ADC1_ACTSS_R         (*((volatile uint32_t *)0x40039000))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 242,
          "context": "#define ADC1_EMUX_R          (*((volatile uint32_t *)0x40039014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 243,
          "context": "#define ADC1_SSMUX0_R        (*((volatile uint32_t *)0x40039040))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 244,
          "context": "#define ADC1_SSCTL0_R        (*((volatile uint32_t *)0x40039044))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 245,
          "context": "#define ADC1_TSSEL_R         (*((volatile uint32_t *)0x4003901C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 246,
          "context": "#define ADC1_SAC_R           (*((volatile uint32_t *)0x40039030))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 247,
          "context": "#define ADC1_IM_R            (*((volatile uint32_t *)0x40039008))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 248,
          "context": "#define ADC1_SSFIF00_R       (*((volatile uint32_t *)0x40039048))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 252,
          "context": "#define ADC0_SSFIFO1_R       (*((volatile uint32_t *)0x40038048))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 255,
          "context": "#define ADC_ACTSS_ASEN0      0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 259,
          "context": "#define ADC_IM_MASK0         0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 260,
          "context": "#define INT_ADC1SS0          51"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 268,
          "context": "#define ADC_ACTSS_ASEN1       0x00000002  // SS1 Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 269,
          "context": "#define ADC_EMUX_EM1_M        0x000000F0  // SS1 Trigger Select mask"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 270,
          "context": "#define ADC_IM_MASK1          0x00000002  // SS1 Interrupt Mask"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 271,
          "context": "#define ADC_RIS_INR1          0x00000002  // SS1 Interrupt Status"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 272,
          "context": "#define ADC_PSSI_SS1          0x00000002  // SS1 Initiate"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 273,
          "context": "#define ADC_SSCTL1_IE2        0x00000400  // Sample 2 Interrupt Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 274,
          "context": "#define ADC_SSCTL1_END2       0x00000800  // Sample 2 is End of Sequence"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 277,
          "context": "#define INT_ADC0SS1          15  // ADC0 Sequencer 1 interrupt"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 284,
          "context": "#define WATCHDOG0_ICR_M      (*((volatile uint32_t *)0x40000010))  // Регистр очистки прерываний WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 287,
          "context": "#define WDT_CTL_INTEN        0x00000001  // Разрешение прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 291,
          "context": "#define NVIC_SYS_CTRL_R      (*((volatile uint32_t *)0xE000ED10))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 298,
          "context": "#define NVIC_EN0_R            (*((volatile uint32_t *)0xE000E100))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 309,
          "context": "#define SYSCTL_RCGCWD_R0     0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 310,
          "context": "#define SYSCTL_PRWD_R0       0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 313,
          "context": "#define MCU_TEMP_SLOPE       1.0f    // Slope for MCU temperature conversion"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 315,
          "context": "#define TEMP_SENSOR_SLOPE    10.0f   // mV/°C for external temperature sensors"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 321,
          "context": "#define NVIC_EN1_R           (*((volatile uint32_t *)0xE000E104))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 324,
          "context": "#define ADC1_SSFIFO0_R       (*((volatile uint32_t *)0x40039044))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 327,
          "context": "#define NVIC_ST_CTRL_R       (*((volatile uint32_t *)0xE000E010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 328,
          "context": "#define NVIC_ST_RELOAD_R     (*((volatile uint32_t *)0xE000E014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 329,
          "context": "#define NVIC_ST_CURRENT_R    (*((volatile uint32_t *)0xE000E018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 332,
          "context": "#define NVIC_ST_CTRL_ENABLE  0x00000001  // Включение таймера"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 413,
          "context": "uint16_t GetMotorRPM(void);        // Убрали параметр"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 425,
          "context": "#define BACKUP_COMM_ERR_NOT_RESPONDING  0x0401"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 433,
          "context": "#define WATCHDOG_ERR_NO_RESET     0x0501  // Watchdog не вызвал сброс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 441,
          "context": "#define DIAG_MAX_LOG_ENTRIES 100"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 445,
          "context": "#define SYSCTL_RCGCGPIO_R4    0x00000010"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 446,
          "context": "#define SYSCTL_RCGCADC_R0     0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 447,
          "context": "#define SYSCTL_RCGCADC_R1     0x00000002"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 449,
          "context": "#define SYSCTL_PRGPIO_R4      0x00000010"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 450,
          "context": "#define SYSCTL_PRADC_R0       0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 451,
          "context": "#define SYSCTL_PRADC_R1       0x00000002"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 454,
          "context": "#define ADC1_PSSI_R           (*((volatile uint32_t *)0x40039028))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 455,
          "context": "#define ADC1_RIS_R            (*((volatile uint32_t *)0x40039004))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 456,
          "context": "#define ADC_ISC_IN0           0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 459,
          "context": "#define GPIO_PORTA_IM_R       (*((volatile uint32_t *)0x40004010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 463,
          "context": "#define GPIO_PORTE_DEN_R      (*((volatile uint32_t *)0x4002451C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 470,
          "context": "#define WATCHDOG0_ICR_M       (*((volatile uint32_t *)0x40000010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 471,
          "context": "#define WDT_RIS_WDTRIS        0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 475,
          "context": "#define INT_UART0             21"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 477,
          "context": "#define INT_WATCHDOG          18"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 506,
          "context": "#define CURRENT_SENSE_MV_A     100.0f   // мВ/А для датчика тока"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 507,
          "context": "#define TEMP_SENSOR_MV_C       10.0f    // мВ/°C для температурного датчика"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 510,
          "context": "#define BATTERY_MAX_VOLTAGE    12.6f    // Максимальное напряжение батареи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 512,
          "context": "#define BATTERY_LOW_VOLTAGE    10.0f    // Напряжение для предупреждения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 533,
          "context": "uint16_t GetMotorRPM(void);        // Убрали параметр"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 554,
          "context": "uint16_t GetMotorRPM(void);        // Убрали параметр"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 564,
          "context": "void SetMotorSpeed(uint8_t motor, uint16_t speed);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 8,
          "context": "#define GPIO_PIN_0              0x00000001  // GPIO pin 0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 9,
          "context": "#define GPIO_PIN_1              0x00000002  // GPIO pin 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 12,
          "context": "#define GPIO_PIN_4              0x00000010  // GPIO pin 4"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 26,
          "context": "#define SYSCTL_RCGC2_R         (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 33,
          "context": "#define SYSCTL_XTAL_16MHZ      0x00000540"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 40,
          "context": "#define SYSCTL_PERIPH_GPIOB    0xf0000801  // GPIO B peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 32,
          "context": "#define TELEMETRY_FREQ_HZ      10      // Частота отправки телеметрии (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 33,
          "context": "#define DIAGNOSTIC_FREQ_HZ      1       // Частота диагностики (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 34,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 37,
          "context": "#define MAX_ALTITUDE           100.0f   // Максимальная высота (м)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 38,
          "context": "#define MIN_BATTERY_VOLTAGE    10.5f    // Минимальное напряжение батареи (В)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 47,
          "context": "#define NAV_MAX_ALTITUDE       120.0f  // Максимальная разрешенная высота"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "Канал"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_240",
      "name": "2",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 14,
          "context": "extern uint32_t SystemCoreClock;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 25,
          "context": "#define GPIO_PORTE_BASE        0x40024000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 26,
          "context": "#define GPIO_PORTF_BASE        0x40025000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 29,
          "context": "#define SYSCTL_RCC2_R            (*((volatile uint32_t *)0x400FE070))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 30,
          "context": "#define SYSCTL_RIS_R             (*((volatile uint32_t *)0x400FE050))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 31,
          "context": "#define SYSCTL_RCGC2_R          (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 34,
          "context": "#define SYSCTL_RCC2_USERCC2     0x80000000  // Use RCC2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 35,
          "context": "#define SYSCTL_RCC2_BYPASS2     0x00000800  // PLL Bypass 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 36,
          "context": "#define SYSCTL_RCC2_PWRDN2      0x00002000  // Power-Down PLL 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 37,
          "context": "#define SYSCTL_RCC2_SYSDIV2_MASK 0x1F800000  // System Clock Divisor 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 38,
          "context": "#define SYSCTL_RCC2_SYSDIV2LSB   0x00400000  // System Clock Divisor 2 LSB"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 41,
          "context": "#define SYSCTL_RCC2_OSCSRC2_MASK_INV 0xFFFFFF8F  // Инвертированная маска для OSCSRC2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 42,
          "context": "#define SYSCTL_RCC2_PWRDN2_MASK_INV  0xFFFFDFFF  // Инвертированная маска для PWRDN2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 43,
          "context": "#define SYSCTL_RCC2_SYSDIV_MASK_INV  0xE07FFFFF  // Инвертированная маска для SYSDIV2 и LSB"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 46,
          "context": "#define SYSCTL_RCC2_OSCSRC2_MASK 0x00000070  // Oscillator Source 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 47,
          "context": "#define SYSCTL_RCC2_OSCSRC2_MO   0x00000000  // Main Oscillator"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 56,
          "context": "#define SYSCTL_PERIPH_GPIOC    0xf0000802  // GPIO C peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 61,
          "context": "#define GPIO_PORTF_DIR_R       (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x400)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 62,
          "context": "#define GPIO_PORTF_DEN_R       (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x51C)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 63,
          "context": "#define GPIO_PORTF_DATA_R      (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x3FC)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 66,
          "context": "#define MAIN_LOOP_FREQ_HZ      200     // Частота основного цикла (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 72,
          "context": "static uint32_t mainLoopCounter = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 79,
          "context": "bool IsPeripheralReady(uint32_t peripheral) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 80,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 84,
          "context": "void EnablePeripheral(uint32_t peripheral) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 85,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 168,
          "context": "GPIO_PORTF_DIR_R |= (GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 171,
          "context": "GPIO_PORTF_DEN_R |= (GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 183,
          "context": "#define LED_RED            0x00000002  // Красный LED (PIN_1)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 187,
          "context": "uint32_t ledState = GPIO_PORTF_DATA_R & LED_MASK_CLEAR;  // Очищаем биты LED"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 285,
          "context": "static float yaw_kp = 2.0f, yaw_ki = 0.15f, yaw_kd = 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 286,
          "context": "static float alt_kp = 1.5f, alt_ki = 0.2f, alt_kd = 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 7,
          "context": "static uint32_t system_time_ms = 0; // Эмуляция системного времени"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 20,
          "context": "actuators_state.motors[i].temperature = 25.0f; // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 108,
          "context": "int32_t pwm_delta = ((int32_t)yaw * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 122,
          "context": "int16_t pitch_pwm = pitch / 2;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 136,
          "context": "int16_t roll_pwm = roll / 2;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 158,
          "context": "uint32_t Actuators_GetMotorRuntime(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 170,
          "context": "uint16_t hover_pwm = PWM_MAX_VALUE / 2;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 234,
          "context": "if (actuators_state.motors[i].temperature > 25.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 4,
          "context": "#include <TM4C123GH6PM.h>  // Используем системный путь"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 10,
          "context": "#define UART_FR_TXFF    0x20    // Флаг заполненного буфера передачи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 15,
          "context": "#define GPIO_PA1_U0TX   0x02    // UART0 TX на PA1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 22,
          "context": "#define UART0_DR_R              (*((volatile uint32_t *)0x4000C000))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 23,
          "context": "#define UART0_FR_R              (*((volatile uint32_t *)0x4000C018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 24,
          "context": "#define UART0_IBRD_R           (*((volatile uint32_t *)0x4000C024))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 25,
          "context": "#define UART0_FBRD_R           (*((volatile uint32_t *)0x4000C028))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 26,
          "context": "#define UART0_LCRH_R           (*((volatile uint32_t *)0x4000C02C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 27,
          "context": "#define UART0_CTL_R            (*((volatile uint32_t *)0x4000C030))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 30,
          "context": "#define SYSCTL_RCGCUART_R     (*((volatile uint32_t *)0x400FE104))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 32,
          "context": "#define SYSCTL_PRGPIO_R       (*((volatile uint32_t *)0x400FEA08))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 39,
          "context": "uint32_t lastPacketTime;    // Время последнего принятого пакета"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 40,
          "context": "uint32_t currentTime;       // Текущее время в миллисекундах"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 41,
          "context": "uint32_t packetsSent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 42,
          "context": "uint32_t packetsReceived;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 43,
          "context": "uint32_t errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 44,
          "context": "uint32_t baudRate;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 61,
          "context": "static uint32_t GetCurrentTime(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 64,
          "context": "bool UART_Init(uint32_t baudRate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 82,
          "context": "uint32_t systemClock = 16000000; // 16 MHz"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 83,
          "context": "uint32_t brdi = systemClock / (16 * baudRate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 84,
          "context": "uint32_t brdf = (uint32_t)(((float)systemClock / (16.0f * (float)baudRate) - brdi) * 64.0f + 0.5f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 125,
          "context": "UART0_DR_R = (uint32_t)data[i];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 314,
          "context": "uint32_t Communication_GetLastPacketTime(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 318,
          "context": "void Communication_SetBaudRate(uint32_t baudRate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 331,
          "context": "uint32_t Communication_GetPacketsSent(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 335,
          "context": "uint32_t Communication_GetPacketsReceived(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 339,
          "context": "uint32_t Communication_GetErrorCount(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 370,
          "context": "static uint32_t GetCurrentTime(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 375,
          "context": "uint32_t currentTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 441,
          "context": "Communication_SendError(0x02, \"Unknown packet type\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 8,
          "context": "#include \"D:/keil/pack/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 17,
          "context": "#define SYSCTL_RCGCWD_R        (*((volatile uint32_t *)(SYSCTL_BASE + 0x600)))  // Регистр тактирования Watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 18,
          "context": "#define SYSCTL_PRWD_R          (*((volatile uint32_t *)(SYSCTL_BASE + 0xA00)))  // Регистр готовности Watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 22,
          "context": "#define NVIC_PRIO_R(n)         (*((volatile uint32_t *)(NVIC_BASE + 0x400 + ((n) * 4))))  // Регистры приоритета прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 25,
          "context": "#define NVIC_ST_CTRL_R          (*((volatile uint32_t *)0xE000E010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 26,
          "context": "#define NVIC_ST_RELOAD_R        (*((volatile uint32_t *)0xE000E014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 27,
          "context": "#define NVIC_ST_CURRENT_R       (*((volatile uint32_t *)0xE000E018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 31,
          "context": "#define ADC0_SSMUX1_R          (*((volatile uint32_t *)0x40038044))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 34,
          "context": "#define ADC0_SSCTL1_R          (*((volatile uint32_t *)0x40038048))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 39,
          "context": "#define ADC1_SSMUX1_R       (*((volatile uint32_t *)(ADC1_BASE + 0x40)))  // Мультиплексор выборки SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 40,
          "context": "#define ADC1_SSCTL1_R       (*((volatile uint32_t *)(ADC1_BASE + 0x44)))  // Управление и статус SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 41,
          "context": "#define ADC1_SSFIFO1_R      (*((volatile uint32_t *)(ADC1_BASE + 0x48)))  // FIFO данных SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 42,
          "context": "#define ADC1_ISC_R          (*((volatile uint32_t *)(ADC1_BASE + 0x50)))  // Регистр очистки прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 45,
          "context": "#define ADC0_ACTSS_R           (*((volatile uint32_t *)0x40038000))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 46,
          "context": "#define ADC0_EMUX_R            (*((volatile uint32_t *)0x40038014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 47,
          "context": "#define ADC0_SSMUX3_R          (*((volatile uint32_t *)0x400380A0))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 48,
          "context": "#define ADC0_SSCTL3_R          (*((volatile uint32_t *)0x400380A4))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 49,
          "context": "#define ADC0_PSSI_R            (*((volatile uint32_t *)0x40038028))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 50,
          "context": "#define ADC0_RIS_R             (*((volatile uint32_t *)0x40038004))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 51,
          "context": "#define ADC0_ISC_R             (*((volatile uint32_t *)0x4003800C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 52,
          "context": "#define ADC0_SSFIFO3_R         (*((volatile uint32_t *)0x400380A8))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 53,
          "context": "#define ADC0_PC_R              (*((volatile uint32_t *)0x40038FC4))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 56,
          "context": "#define ADC_PSSI_SS1        0x00000002  // SS1 Initiate"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 57,
          "context": "#define ADC_ACTSS_ASEN1     0x00000002  // SS1 Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 67,
          "context": "#define ADC_ISC_IN1 0x02  // Флаг прерывания для канала 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 74,
          "context": "uint32_t errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 75,
          "context": "uint32_t startTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 76,
          "context": "uint32_t watchdogTimeout;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 78,
          "context": "uint32_t logCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 81,
          "context": "uint32_t perfStartTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 82,
          "context": "uint32_t perfMaxTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 83,
          "context": "uint32_t perfMinTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 84,
          "context": "uint32_t perfTotalTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 85,
          "context": "uint32_t perfCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 93,
          "context": "#define DEBUG_BUFFER_SIZE 128"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 97,
          "context": "static volatile uint32_t systemMillis = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 136,
          "context": "static uint32_t GetCurrentTime(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 141,
          "context": "static void DelayMs(uint32_t ms) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 142,
          "context": "uint32_t start = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 208,
          "context": "uint32_t result = ADC0_SSFIFO3_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 220,
          "context": "if (voltage >= 12.6f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 225,
          "context": "diagState.powerState.batteryLevel = (uint8_t)((voltage - 9.0f) * 27.78f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 230,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_BATTERY_CRITICAL, \"Battery critically low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 232,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_BATTERY_LOW, \"Battery low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 272,
          "context": "if (state->batteryLevel < 20.0f) {  // Порог низкого заряда 20%"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 274,
          "context": "\"Battery level is critically low\", (uint32_t)state->batteryLevel);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 297,
          "context": "GPIO_PORTE_AFSEL_R |= (1<<3) | (1<<2) | (1<<1);  // Альтернативная функция"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 298,
          "context": "GPIO_PORTE_DEN_R &= ~((1<<3) | (1<<2) | (1<<1)); // Отключаем цифровой режим"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 299,
          "context": "GPIO_PORTE_AMSEL_R |= (1<<3) | (1<<2) | (1<<1);  // Включаем аналоговый режим"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 306,
          "context": "(2 << 8);                  // Канал 2 (температура)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 309,
          "context": "(ADC_SSCTL0_IE2 |         // Прерывание после последнего"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 310,
          "context": "ADC_SSCTL0_END2);        // Последний канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 324,
          "context": "uint32_t voltage_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 325,
          "context": "uint32_t current_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 326,
          "context": "uint32_t temp_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 350,
          "context": "\"Critical battery voltage\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 354,
          "context": "\"Low battery voltage\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 359,
          "context": "\"Critical battery temperature\", (uint32_t)(temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 392,
          "context": "(4 << 12);                   // Температур окружающей среды (PD3)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 417,
          "context": "uint32_t mcu_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 418,
          "context": "uint32_t motors_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 419,
          "context": "uint32_t board_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 420,
          "context": "uint32_t ambient_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 441,
          "context": "\"Critical MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 445,
          "context": "\"High MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 450,
          "context": "\"Critical motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 454,
          "context": "\"High motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 459,
          "context": "\"Critical board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 463,
          "context": "\"High board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 480,
          "context": "(uint32_t)(diagState.thermalState.mcuTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 485,
          "context": "(uint32_t)(diagState.thermalState.mcuTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 494,
          "context": "(uint32_t)(diagState.thermalState.motorTemps[i] * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 499,
          "context": "(uint32_t)(diagState.thermalState.motorTemps[i] * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 508,
          "context": "(uint32_t)(diagState.thermalState.boardTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 513,
          "context": "(uint32_t)(diagState.thermalState.boardTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 533,
          "context": "void Diagnostics_Log(LogLevel level, DiagnosticEvent event, const char* message, uint32_t data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 562,
          "context": "uint32_t Diagnostics_GetLogCount(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 566,
          "context": "bool Diagnostics_GetLogEntry(uint32_t index, LogEntry* entry) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 596,
          "context": "if (len < DEBUG_BUFFER_SIZE - 2) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 599,
          "context": "debugBuffer[len + 2] = '\\0';"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 648,
          "context": "uint32_t Diagnostics_GetErrorCount(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 660,
          "context": "void Diagnostics_InitWatchdog(uint32_t timeout_ms) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 675,
          "context": "uint32_t reload_value = timeout_ms * 1000; // преобразуем мс в тики"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 726,
          "context": "static uint32_t savedPeripheralState = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 759,
          "context": "savedPeripheralState = SYSCTL_RCGC2_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 765,
          "context": "SYSCTL_RCGC2_R = savedPeripheralState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 768,
          "context": "volatile uint32_t delay = SYSCTL_RCGC2_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 828,
          "context": "uint32_t Diagnostics_StopPerformanceCounter(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 829,
          "context": "uint32_t elapsed = diagState.startTime - diagState.perfStartTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 874,
          "context": "SendDebugMessage(\"Battery: %.2fV (%.0f%%)\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 877,
          "context": "SendDebugMessage(\"Current: %.2fA\", diagState.powerState.batteryCurrent);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 888,
          "context": "diagState.thermalState.motorTemps[2],"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 896,
          "context": "SendDebugMessage(\"Avg Time: %.2f ms\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 928,
          "context": "#define POWER_ERR_VOLTAGE_HIGH   0x0002"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 935,
          "context": "#define POWER_TEST_VOLTAGE_MAX   12.6f   // В"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 938,
          "context": "#define POWER_TEST_SUPPLY_MIN    3.2f    // В (для 3.3В цепей)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 955,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 964,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 976,
          "context": "status.data = (uint32_t)(batteryCurrent * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 988,
          "context": "status.data = (uint32_t)(batteryTemp * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1022,
          "context": "#define SENSOR_ERR_IMU_SELFTEST  0x0102"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1036,
          "context": "#define MAG_TEST_FIELD_MIN      0.2f    // Гаусс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1049,
          "context": "float accel_magnitude = sqrtf(powf(imuData.accelX, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1050,
          "context": "powf(imuData.accelY, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1051,
          "context": "powf(imuData.accelZ, 2));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1053,
          "context": "float gyro_magnitude = sqrtf(powf(imuData.gyroX, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1054,
          "context": "powf(imuData.gyroY, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1055,
          "context": "powf(imuData.gyroZ, 2));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1062,
          "context": "status.data = (uint32_t)(accel_magnitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1084,
          "context": "status.data = (uint32_t)(altitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1107,
          "context": "float mag_magnitude = sqrtf(powf(magData.magX, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1108,
          "context": "powf(magData.magY, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1109,
          "context": "powf(magData.magZ, 2));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1115,
          "context": "status.data = (uint32_t)(mag_magnitude * 1000);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1136,
          "context": "#define MOTOR_ERR_NOT_RESPONDING 0x0201"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1137,
          "context": "#define MOTOR_ERR_HIGH_CURRENT   0x0202"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1138,
          "context": "#define MOTOR_ERR_NO_ROTATION    0x0203"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1139,
          "context": "#define MOTOR_ERR_VIBRATION      0x0204"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1140,
          "context": "#define MOTOR_ERR_TEMP_HIGH      0x0205"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1141,
          "context": "#define MOTOR_ERR_ESC_FAIL       0x0206"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1145,
          "context": "#define MOTOR_TEST_CURRENT_MAX   2.0f    // А на мотор"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1147,
          "context": "#define MOTOR_TEST_VIB_MAX       2.0f    // g"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1274,
          "context": "#define COMM_ERR_RC_QUALITY     0x0302"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1280,
          "context": "#define SAFETY_ERR_EEPROM       0x0402"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1297,
          "context": "uint32_t startTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1453,
          "context": "uint32_t timeout = 10000;  // Примерно 10000 циклов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1508,
          "context": "(uint32_t)TEMP_SENSOR_TYPE_LINEAR);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1516,
          "context": "(uint32_t)temperature);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1517,
          "context": "return 25.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1550,
          "context": "static uint32_t conversionAttempts = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1551,
          "context": "const uint32_t MAX_CONVERSION_ATTEMPTS = 1000;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1586,
          "context": "SystemTickError Diagnostics_DelayTicks(uint32_t ticks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1593,
          "context": "uint32_t startValue = startTicks.ticks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1594,
          "context": "uint32_t elapsedTicks = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1617,
          "context": "ElapsedTicksResult Diagnostics_GetElapsedTicks(uint32_t startTicks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1630,
          "context": "uint32_t currentTicks = currentTicksResult.ticks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1757,
          "context": "uint32_t GetMCUTemperature(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1772,
          "context": "uint32_t channel = ADC_CHANNEL_MOTOR_TEMP_BASE + motorIndex;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1779,
          "context": "uint32_t GetBatteryTemperature(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1788,
          "context": "uint32_t GetBoardTemperature(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1797,
          "context": "uint32_t GetEnvironmentTemperature(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1812,
          "context": "[THERMOCOUPLE_TYPE_T] = {0.0, 40.0, -0.0002, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1814,
          "context": "[THERMOCOUPLE_TYPE_N] = {0.0, 37.0, -0.00012, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1817,
          "context": "[THERMOCOUPLE_TYPE_B] = {0.0, 34.0, -0.0002, 0.0}      // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1828,
          "context": "return 25.0f;  // Возвращаем стандартную температур окружающей среды"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1847,
          "context": "(uint32_t)TEMP_SENSOR_TYPE_LINEAR);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1855,
          "context": "(uint32_t)temperature);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1856,
          "context": "return 25.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1868,
          "context": "(uint32_t)type);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1888,
          "context": "const float MIN_TEMP = -200.0f;  // Минимальная температур для термопар"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1894,
          "context": "(uint32_t)(temperature * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1909,
          "context": "uint32_t adcChannel = ADC_CHANNEL_MOTOR_CURRENT_BASE + motorIndex;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1920,
          "context": "uint32_t result = ADC1_SSFIFO0_R & 0xFFF;  // 12-bit ADC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1928,
          "context": "float current = (voltage * 20.0f) / 3.3f;   // Преобразование в амперы"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1935,
          "context": "static uint32_t lastBackupCommTest = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1944,
          "context": "uint32_t currentTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1961,
          "context": "uint32_t startTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1968,
          "context": "response[2] == 0xFF && response[3] == 0x00) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1996,
          "context": "uint32_t originalLoad = WATCHDOG0_LOAD_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1997,
          "context": "uint32_t originalCtl = WATCHDOG0_CTL_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2000,
          "context": "uint32_t testTimeout = SystemCoreClock / 10;  // 100мс при текущей частоте"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2081,
          "context": "[THERMOCOUPLE_TYPE_T] = {0.0, 40.0, -0.0002, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2083,
          "context": "[THERMOCOUPLE_TYPE_N] = {0.0, 37.0, -0.00012, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2086,
          "context": "[THERMOCOUPLE_TYPE_B] = {0.0, 34.0, -0.0002, 0.0}      // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 3,
          "context": "void GPIOPinTypeGPIOOutput(uint32_t port, uint8_t pins) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 5,
          "context": "*((volatile uint32_t *)(port + 0x400)) = pins;  // GPIO_O_DIR"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 7,
          "context": "*((volatile uint32_t *)(port + 0x51C)) = pins;  // GPIO_O_DEN"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 10,
          "context": "void SysCtlPeripheralEnable(uint32_t peripheral) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 12,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 15,
          "context": "bool SysCtlPeripheralReady(uint32_t peripheral) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 17,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 20,
          "context": "void SysCtlClockSet(uint32_t config) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 24,
          "context": "SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 6,
          "context": "#define DEG_TO_RAD(x) ((x) * 0.017453292519943295)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 7,
          "context": "#define RAD_TO_DEG(x) ((x) * 57.295779513082323)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 193,
          "context": "float Navigation_CalculateDistance(const GPSPosition* pos1, const GPSPosition* pos2) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 194,
          "context": "if (!pos1->valid || !pos2->valid) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 200,
          "context": "float lat2 = DEG_TO_RAD(pos2->latitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 201,
          "context": "float dlon = DEG_TO_RAD(pos2->longitude - pos1->longitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 202,
          "context": "float dlat = lat2 - lat1;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 204,
          "context": "float a = sinf(dlat/2) * sinf(dlat/2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 205,
          "context": "cosf(lat1) * cosf(lat2) * sinf(dlon/2) * sinf(dlon/2);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 206,
          "context": "float c = 2 * atan2f(sqrtf(a), sqrtf(1-a));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 211,
          "context": "float Navigation_CalculateBearing(const GPSPosition* pos1, const GPSPosition* pos2) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 212,
          "context": "if (!pos1->valid || !pos2->valid) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 217,
          "context": "float lat2 = DEG_TO_RAD(pos2->latitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 218,
          "context": "float dlon = DEG_TO_RAD(pos2->longitude - pos1->longitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 220,
          "context": "float y = sinf(dlon) * cosf(lat2);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 221,
          "context": "float x = cosf(lat1) * sinf(lat2) - sinf(lat1) * cosf(lat2) * cosf(dlon);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 222,
          "context": "float bearing = RAD_TO_DEG(atan2f(y, x));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 5,
          "context": "#include \"TM4C123GH6PM.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 12,
          "context": "bool bmp280_initialized;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 17,
          "context": ".bmp280_initialized = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 24,
          "context": "static BMP280_Data bmp280_data = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 37,
          "context": "mpu6050_data.temperature = 25.0f;  // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 42,
          "context": "void BMP280_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 44,
          "context": "bmp280_data.pressure = 1013.25f;  // Стандартное атмосферное давление (гПа)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 45,
          "context": "bmp280_data.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 46,
          "context": "bmp280_data.temperature = 25.0f;  // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 48,
          "context": "sensor_state.bmp280_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 60,
          "context": "void BMP280_Read(BMP280_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 61,
          "context": "if (!sensor_state.bmp280_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 66,
          "context": "*data = bmp280_data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 79,
          "context": "void BMP280_Calibrate(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 81,
          "context": "bmp280_data.pressure = 1013.25f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 82,
          "context": "bmp280_data.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 97,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 98,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f); // Примерное изменение давления с высотой"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 103,
          "context": "vertical_speed = 2.0f; // м/с"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 106,
          "context": "mpu6050_data.accel_z = 1.2f; // Повышенная нагрузка при наборе высоты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 107,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 108,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 118,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 119,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 134,
          "context": "mpu6050_data.accel_x = 0.2f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 139,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 140,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 162,
          "context": "float accelRoll = atan2f(imu.accel_y, imu.accel_z) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 163,
          "context": "float accelPitch = atan2f(-imu.accel_x, sqrtf(imu.accel_y * imu.accel_y + imu.accel_z * imu.accel_z)) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 189,
          "context": "data->baro.pressure = 1013.25f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 195,
          "context": "void Sensors_GetBaroData(BMP280_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 197,
          "context": "data->pressure = 1013.25f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 199,
          "context": "data->temperature = 25.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 13,
          "context": "#define DEG_TO_RAD(x) ((x) * 0.017453292519943295)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 14,
          "context": "#define RAD_TO_DEG(x) ((x) * 57.295779513082323)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 56,
          "context": "2.0f, 0.15f, 0.1f,  // Yaw"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 57,
          "context": "1.5f, 0.2f, 0.1f    // Altitude"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 112,
          "context": "BMP280_Data altData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 230,
          "context": "float m2 = baseThrust + rollOutput - pitchOutput - yawOutput;  // Передний правый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 236,
          "context": "m2 = ClampValue(m2, 0.0f, 1.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 242,
          "context": "Actuators_SetMotor(1, m2);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 243,
          "context": "Actuators_SetMotor(2, m3);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 13,
          "context": "#define MOTOR_BACK_LEFT   2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 26,
          "context": "uint32_t runtime;       // Время работы мотора в миллисекундах"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 62,
          "context": "uint32_t Actuators_GetMotorRuntime(uint8_t motor_index);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 11,
          "context": "#define GPIO_PORTA_AFSEL_R    (*((volatile uint32_t *)0x40004420))  // Port A Alternate Function Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 12,
          "context": "#define GPIO_PORTA_DEN_R      (*((volatile uint32_t *)0x4000451C))  // Port A Digital Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 13,
          "context": "#define GPIO_PORTA_AMSEL_R    (*((volatile uint32_t *)0x40004528))  // Port A Analog Mode Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 14,
          "context": "#define GPIO_PORTA_PCTL_R     (*((volatile uint32_t *)0x4000452C))  // Port A Port Control"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 17,
          "context": "#define COMM_BUFFER_SIZE     256"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 18,
          "context": "#define COMM_BAUDRATE       115200"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 25,
          "context": "PACKET_TYPE_COMMAND      = 0x02,  // Команды управления"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 35,
          "context": "CMD_DISARM        = 0x02,  // Деактивация моторов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 43,
          "context": "#pragma pack(push, 2)  // Выравнивание по 2 байта для оптимизации размера пакетов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 76,
          "context": "bool UART_Init(uint32_t baudRate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 101,
          "context": "uint32_t Communication_GetLastPacketTime(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 104,
          "context": "void Communication_SetBaudRate(uint32_t baudRate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 108,
          "context": "uint32_t Communication_GetPacketsSent(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 109,
          "context": "uint32_t Communication_GetPacketsReceived(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 110,
          "context": "uint32_t Communication_GetErrorCount(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 97,
          "context": "#define TEMP_SENSOR_TYPE_PTC       2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 107,
          "context": "#define MAX_SAFE_TEMPERATURE   125.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 112,
          "context": "#define TEST_FAIL    2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 118,
          "context": "uint32_t code;      // Error or status code"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 120,
          "context": "uint32_t data;      // Additional data"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 137,
          "context": "uint32_t timestamp;      // Время события"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 140,
          "context": "char message[128];       // Текстовое сообщение"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 141,
          "context": "uint32_t code;          // Код события/ошибки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 142,
          "context": "uint32_t data;          // Дополнительные данные"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 159,
          "context": "uint32_t uptime;         // Время работы системы"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 178,
          "context": "uint32_t errorCode;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 181,
          "context": "uint32_t totalErrors;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 182,
          "context": "uint32_t totalWarnings;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 198,
          "context": "uint32_t value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 203,
          "context": "uint32_t ticks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 208,
          "context": "uint32_t elapsedTicks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 232,
          "context": "#define SYSCTL_RCGCGPIO_R    (*((volatile uint32_t *)0x400FE608))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 233,
          "context": "#define SYSCTL_RCGCADC_R     (*((volatile uint32_t *)0x400FE638))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 234,
          "context": "#define SYSCTL_PRGPIO_R      (*((volatile uint32_t *)0x400FEA08))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 235,
          "context": "#define SYSCTL_PRADC_R       (*((volatile uint32_t *)0x400FEA38))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 236,
          "context": "#define SYSCTL_RCGC2_R       (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 238,
          "context": "#define GPIO_PORTD_DEN_R     (*((volatile uint32_t *)0x4005751C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 239,
          "context": "#define GPIO_PORTD_AMSEL_R   (*((volatile uint32_t *)0x40057528))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 241,
          "context": "#define ADC1_ACTSS_R         (*((volatile uint32_t *)0x40039000))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 242,
          "context": "#define ADC1_EMUX_R          (*((volatile uint32_t *)0x40039014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 243,
          "context": "#define ADC1_SSMUX0_R        (*((volatile uint32_t *)0x40039040))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 244,
          "context": "#define ADC1_SSCTL0_R        (*((volatile uint32_t *)0x40039044))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 245,
          "context": "#define ADC1_TSSEL_R         (*((volatile uint32_t *)0x4003901C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 246,
          "context": "#define ADC1_SAC_R           (*((volatile uint32_t *)0x40039030))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 247,
          "context": "#define ADC1_IM_R            (*((volatile uint32_t *)0x40039008))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 248,
          "context": "#define ADC1_SSFIF00_R       (*((volatile uint32_t *)0x40039048))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 250,
          "context": "#define ADC0_SAC_R           (*((volatile uint32_t *)0x40038030))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 251,
          "context": "#define ADC0_IM_R            (*((volatile uint32_t *)0x40038008))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 252,
          "context": "#define ADC0_SSFIFO1_R       (*((volatile uint32_t *)0x40038048))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 265,
          "context": "#define ADC_SSCTL0_IE2        0x00000400"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 266,
          "context": "#define ADC_SSCTL0_END2       0x00000800"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 268,
          "context": "#define ADC_ACTSS_ASEN1       0x00000002  // SS1 Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 270,
          "context": "#define ADC_IM_MASK1          0x00000002  // SS1 Interrupt Mask"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 271,
          "context": "#define ADC_RIS_INR1          0x00000002  // SS1 Interrupt Status"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 272,
          "context": "#define ADC_PSSI_SS1          0x00000002  // SS1 Initiate"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 273,
          "context": "#define ADC_SSCTL1_IE2        0x00000400  // Sample 2 Interrupt Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 274,
          "context": "#define ADC_SSCTL1_END2       0x00000800  // Sample 2 is End of Sequence"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 280,
          "context": "#define WATCHDOG0_LOAD_R     (*((volatile uint32_t *)0x40000000))  // Регистр загрузки WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 281,
          "context": "#define WATCHDOG0_CTL_R      (*((volatile uint32_t *)0x40000008))  // Регистр управления WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 282,
          "context": "#define WATCHDOG0_ICR_R      (*((volatile uint32_t *)0x4000000C))  // Регистр очистки прерываний WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 283,
          "context": "#define WATCHDOG0_LOCK_R     (*((volatile uint32_t *)0x40000C00))  // Регистр блокировки WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 284,
          "context": "#define WATCHDOG0_ICR_M      (*((volatile uint32_t *)0x40000010))  // Регистр очистки прерываний WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 288,
          "context": "#define WDT_CTL_RESEN        0x00000002  // Разрешение сброса системы"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 291,
          "context": "#define NVIC_SYS_CTRL_R      (*((volatile uint32_t *)0xE000ED10))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 295,
          "context": "typedef uint32_t ErrorCode;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 298,
          "context": "#define NVIC_EN0_R            (*((volatile uint32_t *)0xE000E100))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 299,
          "context": "#define NVIC_PRI0_R          (*((volatile uint32_t *)0xE000E400))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 300,
          "context": "#define NVIC_APINT_R         (*((volatile uint32_t *)0xE000ED0C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 305,
          "context": "#define SYSCTL_RCGCWD_R      (*((volatile uint32_t *)0x400FE600))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 306,
          "context": "#define SYSCTL_PRWD_R        (*((volatile uint32_t *)0x400FEA00))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 321,
          "context": "#define NVIC_EN1_R           (*((volatile uint32_t *)0xE000E104))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 324,
          "context": "#define ADC1_SSFIFO0_R       (*((volatile uint32_t *)0x40039044))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 327,
          "context": "#define NVIC_ST_CTRL_R       (*((volatile uint32_t *)0xE000E010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 328,
          "context": "#define NVIC_ST_RELOAD_R     (*((volatile uint32_t *)0xE000E014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 329,
          "context": "#define NVIC_ST_CURRENT_R    (*((volatile uint32_t *)0xE000E018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 333,
          "context": "#define NVIC_ST_CTRL_INTEN   0x00000002  // Включение прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 337,
          "context": "extern uint32_t SystemCoreClock;  // Глобальная переменная тактовой частоты микроконтроллера"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 346,
          "context": "void Diagnostics_Log(uint8_t level, DiagnosticEvent event, const char* message, uint32_t data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 353,
          "context": "void Diagnostics_Log(LogLevel level, DiagnosticEvent event, const char* message, uint32_t data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 355,
          "context": "uint32_t Diagnostics_GetLogCount(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 356,
          "context": "bool Diagnostics_GetLogEntry(uint32_t index, LogEntry* entry);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 375,
          "context": "void Diagnostics_InitWatchdog(uint32_t timeout_ms);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 381,
          "context": "uint32_t Diagnostics_StopPerformanceCounter(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 385,
          "context": "uint32_t Diagnostics_GetErrorCount(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 386,
          "context": "uint32_t Diagnostics_GetUptimeMs(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 398,
          "context": "SystemTickError Diagnostics_DelayTicks(uint32_t ticks);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 399,
          "context": "ElapsedTicksResult Diagnostics_GetElapsedTicks(uint32_t startTicks);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 402,
          "context": "uint32_t GetMCUTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 403,
          "context": "uint32_t GetBatteryTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 404,
          "context": "uint32_t GetBoardTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 405,
          "context": "uint32_t GetEnvironmentTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 426,
          "context": "#define BACKUP_COMM_ERR_CRC            0x0402"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 434,
          "context": "#define WATCHDOG_ERR_EARLY_RESET  0x0502  // Сброс произошел раньше времени"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 447,
          "context": "#define SYSCTL_RCGCADC_R1     0x00000002"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 451,
          "context": "#define SYSCTL_PRADC_R1       0x00000002"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 454,
          "context": "#define ADC1_PSSI_R           (*((volatile uint32_t *)0x40039028))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 455,
          "context": "#define ADC1_RIS_R            (*((volatile uint32_t *)0x40039004))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 459,
          "context": "#define GPIO_PORTA_IM_R       (*((volatile uint32_t *)0x40004010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 460,
          "context": "#define GPIO_PORTA_IEV_R      (*((volatile uint32_t *)0x4000440C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 461,
          "context": "#define GPIO_PORTA_AFSEL_R    (*((volatile uint32_t *)0x40004420))  // Port A Alternate Function Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 462,
          "context": "#define GPIO_PORTE_AFSEL_R    (*((volatile uint32_t *)0x40024420))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 463,
          "context": "#define GPIO_PORTE_DEN_R      (*((volatile uint32_t *)0x4002451C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 464,
          "context": "#define GPIO_PORTE_AMSEL_R    (*((volatile uint32_t *)0x40024528))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 465,
          "context": "#define GPIO_PORTD_AFSEL_R    (*((volatile uint32_t *)0x40007420))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 468,
          "context": "#define WATCHDOG0_RIS_R       (*((volatile uint32_t *)0x40000004))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 469,
          "context": "#define WATCHDOG0_ICR_R       (*((volatile uint32_t *)0x40000008))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 470,
          "context": "#define WATCHDOG0_ICR_M       (*((volatile uint32_t *)0x40000010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 475,
          "context": "#define INT_UART0             21"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 481,
          "context": "uint32_t GetBatteryTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 482,
          "context": "uint32_t GetBoardTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 483,
          "context": "uint32_t GetEnvironmentTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 493,
          "context": "uint32_t GetMCUTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 494,
          "context": "uint32_t GetBatteryTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 495,
          "context": "uint32_t GetBoardTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 496,
          "context": "uint32_t GetEnvironmentTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 510,
          "context": "#define BATTERY_MAX_VOLTAGE    12.6f    // Максимальное напряжение батареи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 9,
          "context": "#define GPIO_PIN_1              0x00000002  // GPIO pin 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 10,
          "context": "#define GPIO_PIN_2              0x00000004  // GPIO pin 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 13,
          "context": "#define GPIO_PIN_5              0x00000020  // GPIO pin 5"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 22,
          "context": "#define GPIO_PORTE_BASE        0x40024000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 23,
          "context": "#define GPIO_PORTF_BASE        0x40025000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 26,
          "context": "#define SYSCTL_RCGC2_R         (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 27,
          "context": "#define SYSCTL_RCGC2_GPIOF     0x00000020  // Port F Clock Gating Control"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 30,
          "context": "#define SYSCTL_SYSDIV_2_5      0x04000000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 39,
          "context": "#define SYSCTL_PERIPH_GPIOC    0xf0000802  // GPIO C peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 44,
          "context": "void GPIOPinTypeGPIOOutput(uint32_t port, uint8_t pins);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 45,
          "context": "void SysCtlPeripheralEnable(uint32_t peripheral);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 46,
          "context": "bool SysCtlPeripheralReady(uint32_t peripheral);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 47,
          "context": "void SysCtlClockSet(uint32_t config);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 15,
          "context": "bool IsPeripheralReady(uint32_t peripheral);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 16,
          "context": "void EnablePeripheral(uint32_t peripheral);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 31,
          "context": "#define MAIN_LOOP_FREQ_HZ      200     // Частота основного цикла (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 80,
          "context": "uint32_t errors;              // Флаги ошибок"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 44,
          "context": "#define MAX_WAYPOINTS 20"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 47,
          "context": "#define NAV_MAX_ALTITUDE       120.0f  // Максимальная разрешенная высота"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 30,
          "context": "} BMP280_Data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 42,
          "context": "BMP280_Data baro;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 53,
          "context": "void Sensors_GetBaroData(BMP280_Data* data);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "Канал"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_241",
      "name": "канал",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "4",
          "type": "0 <<"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "Первый"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_243",
      "name": "ADC0SS1_Handler",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 322,
          "context": "void ADC0SS1_Handler(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_249",
      "name": "MCU",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 389,
          "context": "ADC1_SSMUX0_R = (TEMP_MCU_CHANNEL << 0)   | // Встроенный сенсор MCU"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 402,
          "context": "ADC1_TSSEL_R |= (1 << TEMP_MCU_CHANNEL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 425,
          "context": "float mcu_temp = ((mcu_voltage * 1000.0f) / MCU_TEMP_SLOPE) + MCU_TEMP_OFFSET;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 439,
          "context": "if (mcu_temp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 441,
          "context": "\"Critical MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 443,
          "context": "else if (mcu_temp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 445,
          "context": "\"High MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 476,
          "context": "if (diagState.thermalState.mcuTemp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 479,
          "context": "\"MCU temperature critical\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 481,
          "context": "} else if (diagState.thermalState.mcuTemp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 484,
          "context": "\"MCU temperature warning\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 576,
          "context": "return (diagState.thermalState.mcuTemp >= TEMP_MCU_WARNING ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 883,
          "context": "SendDebugMessage(\"MCU Temp: %.1f°C\", diagState.thermalState.mcuTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1750,
          "context": "#define ADC_CHANNEL_MCU_TEMP         ADC_AIN0   // Канал АЦП для температур"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1757,
          "context": "uint32_t GetMCUTemperature(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 101,
          "context": "#define TEMP_MCU_WARNING      85.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 102,
          "context": "#define TEMP_MCU_CRITICAL     95.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 313,
          "context": "#define MCU_TEMP_SLOPE       1.0f    // Slope for MCU temperature conversion"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 314,
          "context": "#define MCU_TEMP_OFFSET      0.0f    // Offset for MCU temperature conversion"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 318,
          "context": "#define TEMP_MCU_CHANNEL     0       // Internal temperature sensor channel"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 402,
          "context": "uint32_t GetMCUTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 493,
          "context": "uint32_t GetMCUTemperature(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "4",
          "type": "9 <<"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "сенсор"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_250",
      "name": "моторов",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "Температур"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_251",
      "name": "платы",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "Температур"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_252",
      "name": "среды",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "окружающей"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_256",
      "name": "ADC1SS0_Handler",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 415,
          "context": "void ADC1SS0_Handler(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_261",
      "name": "Diagnostics_UpdateThermalState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 470,
          "context": "void Diagnostics_UpdateThermalState(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 370,
          "context": "void Diagnostics_UpdateThermalState(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_267",
      "name": "UpdateMotorTemperatures",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 10,
          "context": "static void UpdateMotorTemperatures(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 226,
          "context": "static void UpdateMotorTemperatures(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 517,
          "context": "void UpdateMotorTemperatures(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 344,
          "context": "void UpdateMotorTemperatures(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_268",
      "name": "Diagnostics_GetThermalState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 330,
          "context": "Diagnostics_GetThermalState(&thermalState);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 527,
          "context": "void Diagnostics_GetThermalState(ThermalState* state) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 371,
          "context": "void Diagnostics_GetThermalState(ThermalState* state);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "state",
          "type": "ThermalState*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_271",
      "name": "Diagnostics_ClearLog",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 412,
          "context": "Diagnostics_ClearLog();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 556,
          "context": "void Diagnostics_ClearLog(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 354,
          "context": "void Diagnostics_ClearLog(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_272",
      "name": "Diagnostics_GetLogCount",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 562,
          "context": "uint32_t Diagnostics_GetLogCount(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 355,
          "context": "uint32_t Diagnostics_GetLogCount(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_273",
      "name": "Diagnostics_GetLogEntry",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 566,
          "context": "bool Diagnostics_GetLogEntry(uint32_t index, LogEntry* entry) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 356,
          "context": "bool Diagnostics_GetLogEntry(uint32_t index, LogEntry* entry);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "index",
          "type": "uint32_t"
        },
        {
          "name": "entry",
          "type": "LogEntry*"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_274",
      "name": "Diagnostics_IsOverheated",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 575,
          "context": "bool Diagnostics_IsOverheated(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 372,
          "context": "bool Diagnostics_IsOverheated(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_276",
      "name": "vsnprintf",
      "description": "Форматируем сообщение",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 591,
          "context": "vsnprintf(debugBuffer, DEBUG_BUFFER_SIZE, format, args);"
        }
      ],
      "comments": "Форматируем сообщение",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "сообщение"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_277",
      "name": "Communication_SendData",
      "description": "Отправляем через UART",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 447,
          "context": "void Communication_SendData(uint8_t* data, uint16_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 603,
          "context": "Communication_SendData((uint8_t*)debugBuffer, strlen(debugBuffer));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 82,
          "context": "void Communication_SendData(uint8_t* data, uint16_t length);"
        }
      ],
      "comments": "Отправляем через UART",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "UART"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_280",
      "name": "Diagnostics_GetSystemState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 644,
          "context": "SystemState Diagnostics_GetSystemState(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "SystemState"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_281",
      "name": "Diagnostics_GetErrorCount",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 348,
          "context": "telemetry.errorFlags = (uint8_t)Diagnostics_GetErrorCount();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 648,
          "context": "uint32_t Diagnostics_GetErrorCount(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 385,
          "context": "uint32_t Diagnostics_GetErrorCount(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_282",
      "name": "Diagnostics_ResetErrorCount",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 652,
          "context": "void Diagnostics_ResetErrorCount(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_283",
      "name": "Diagnostics_InitWatchdog",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 660,
          "context": "void Diagnostics_InitWatchdog(uint32_t timeout_ms) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 375,
          "context": "void Diagnostics_InitWatchdog(uint32_t timeout_ms);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "timeout_ms",
          "type": "uint32_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_285",
      "name": "PIOSC",
      "description": "Рассчитываем значение перезагрузки\nWDT тактируется от PIOSC (16 МГц / 16 = 1 МГц)",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [],
      "comments": "Рассчитываем значение перезагрузки\nWDT тактируется от PIOSC (16 МГц / 16 = 1 МГц)",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "МГц",
          "type": "16 МГц / 16 = 1"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "от"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_286",
      "name": "прерывания",
      "description": "Устанавливаем приоритет прерывания (самый высокий)",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [],
      "comments": "Устанавливаем приоритет прерывания (самый высокий)",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "высокий",
          "type": "самый"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "приоритет"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_287",
      "name": "WDT0_Handler",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 702,
          "context": "void WDT0_Handler(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 490,
          "context": "void WDT0_Handler(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_288",
      "name": "Diagnostics_FeedWatchdog",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 176,
          "context": "Diagnostics_FeedWatchdog();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 709,
          "context": "void Diagnostics_FeedWatchdog(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 376,
          "context": "void Diagnostics_FeedWatchdog(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_289",
      "name": "Diagnostics_IsWatchdogReset",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 716,
          "context": "bool Diagnostics_IsWatchdogReset(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 377,
          "context": "bool Diagnostics_IsWatchdogReset(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_290",
      "name": "RESC",
      "description": "Проверяем бит RESC (Reset Cause) в регистре RIS",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [],
      "comments": "Проверяем бит RESC (Reset Cause) в регистре RIS",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "Cause",
          "type": "Reset"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "бит"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_291",
      "name": "return",
      "description": "Проверяем бит RESC (Reset Cause) в регистре RIS",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 80,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 359,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 365,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 372,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 378,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 33,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 49,
          "context": "return 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 51,
          "context": "return actuators_state.motors[motor_index].pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 56,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 63,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 71,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 88,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 90,
          "context": "return actuators_state.motors[motor_index].is_running;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 95,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 103,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 117,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 131,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 153,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 155,
          "context": "return actuators_state.motors[motor_index].temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 160,
          "context": "return 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 162,
          "context": "return actuators_state.motors[motor_index].runtime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 167,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 176,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 185,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 194,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 201,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 214,
          "context": "return emergency_stop_active;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 95,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 102,
          "context": "return 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 113,
          "context": "return count;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 120,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 128,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 133,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 146,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 150,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 155,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 206,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 224,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 228,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 233,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 235,
          "context": "return Communication_Send(PACKET_TYPE_TELEMETRY, telemetry, sizeof(TelemetryData));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 239,
          "context": "return Communication_Send(PACKET_TYPE_STATUS, &status, sizeof(status));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 256,
          "context": "return Communication_Send(PACKET_TYPE_ERROR, &errorData,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 262,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 303,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 311,
          "context": "return commState.connected;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 315,
          "context": "return commState.lastPacketTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 332,
          "context": "return commState.packetsSent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 336,
          "context": "return commState.packetsReceived;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 340,
          "context": "return commState.errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 371,
          "context": "return commState.currentTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 399,
          "context": "return checksum;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 404,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 409,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 418,
          "context": "return calculatedChecksum == packet->checksum;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 137,
          "context": "return systemMillis;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 151,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 192,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 198,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 257,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 279,
          "context": "return diagState.powerState.batteryVoltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 283,
          "context": "return diagState.powerState.batteryLevel;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 535,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 563,
          "context": "return diagState.logCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 568,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 572,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 576,
          "context": "return (diagState.thermalState.mcuTemp >= TEMP_MCU_WARNING ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 584,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 609,
          "context": "case LOG_DEBUG:    return \"DEBUG\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 610,
          "context": "case LOG_INFO:     return \"INFO\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 611,
          "context": "case LOG_WARNING:  return \"WARNING\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 612,
          "context": "case LOG_ERROR:    return \"ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 613,
          "context": "case LOG_CRITICAL: return \"CRITICAL\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 614,
          "context": "case LOG_FATAL:    return \"FATAL\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 615,
          "context": "default:          return \"UNKNOWN\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 622,
          "context": "case DIAG_EVENT_SYSTEM_START:     return \"SYSTEM_START\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 623,
          "context": "case DIAG_EVENT_SYSTEM_STOP:      return \"SYSTEM_STOP\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 624,
          "context": "case DIAG_EVENT_HIGH_TEMP:        return \"HIGH_TEMP\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 625,
          "context": "case DIAG_EVENT_LOW_BATTERY:      return \"LOW_BATTERY\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 626,
          "context": "case DIAG_EVENT_BATTERY_CRITICAL: return \"BATTERY_CRITICAL\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 627,
          "context": "case DIAG_EVENT_BATTERY_LOW:      return \"BATTERY_LOW\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 628,
          "context": "case DIAG_EVENT_NAV_ERROR:        return \"NAV_ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 629,
          "context": "case DIAG_EVENT_SENSOR_ERROR:     return \"SENSOR_ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 630,
          "context": "case DIAG_EVENT_MOTOR_ERROR:      return \"MOTOR_ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 631,
          "context": "case DIAG_EVENT_COMM_ERROR:       return \"COMM_ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 632,
          "context": "case DIAG_EVENT_STABILIZATION_ERROR: return \"STABILIZATION_ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 633,
          "context": "case DIAG_EVENT_WATCHDOG_RESET:   return \"WATCHDOG_RESET\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 634,
          "context": "case DIAG_EVENT_SELF_TEST:        return \"SELF_TEST\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 635,
          "context": "case DIAG_EVENT_SYSTEM_ERROR:     return \"SYSTEM_ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 636,
          "context": "case DIAG_EVENT_CALIBRATION:      return \"CALIBRATION\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 637,
          "context": "case DIAG_EVENT_ERROR:            return \"ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 638,
          "context": "case DIAG_EVENT_WARNING:          return \"WARNING\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 639,
          "context": "default:                          return \"UNKNOWN\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 645,
          "context": "return diagState.systemState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 649,
          "context": "return diagState.errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 718,
          "context": "return (WATCHDOG0_RIS_R & WDT_RIS_WDTRIS) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 841,
          "context": "return elapsed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 860,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 958,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 967,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 979,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1001,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1004,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1012,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1017,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1065,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1076,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1087,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1098,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1132,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1176,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1192,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1216,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1228,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1258,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1269,
          "context": "return selfTestResult;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1320,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1366,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1385,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1396,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1407,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1419,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1431,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1434,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1446,
          "context": "return result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1461,
          "context": "return result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1471,
          "context": "return result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1481,
          "context": "return NAN;  // Возвращаем NaN при ошибке"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1489,
          "context": "return NAN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1509,
          "context": "return NAN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1517,
          "context": "return 25.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1520,
          "context": "return temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1526,
          "context": "return ADC_ERROR_NOT_INITIALIZED;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1530,
          "context": "return ADC_ERROR_NONE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1544,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1563,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1582,
          "context": "return result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1590,
          "context": "return SYSTICK_ERROR_INVALID_START;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1600,
          "context": "return SYSTICK_ERROR_DURING_DELAY;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1611,
          "context": "return SYSTICK_ERROR_NONE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1627,
          "context": "return result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1639,
          "context": "return result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1681,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1693,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1705,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1717,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1729,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1741,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1746,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1763,
          "context": "return ADC1_SSFIFO1_R;     // Возвращаем значение АЦП"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1768,
          "context": "return NAN;  // Возвращаем NaN для некорректного индекса"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1776,
          "context": "return Diagnostics_ConvertADCToTemp(result);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1785,
          "context": "return ADC1_SSFIFO1_R;     // Возвращаем значение АЦП"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1794,
          "context": "return ADC1_SSFIFO1_R;     // Возвращаем значение АЦП"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1803,
          "context": "return ADC1_SSFIFO1_R;     // Возвращаем значение АЦП"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1828,
          "context": "return 25.0f;  // Возвращаем стандартную температур окружающей среды"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1848,
          "context": "return NAN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1856,
          "context": "return 25.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1859,
          "context": "return temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1869,
          "context": "return NAN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1895,
          "context": "return NAN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1898,
          "context": "return temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1905,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1930,
          "context": "return current;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1939,
          "context": "return backupCommAvailable;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1948,
          "context": "return true;  // Возвращаем последний результат"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1957,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1969,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1974,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1980,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1985,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1992,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2040,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2044,
          "context": "bool TestBarometer(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2045,
          "context": "bool TestESC(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2046,
          "context": "bool TestGPS(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2047,
          "context": "bool TestEEPROM(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2048,
          "context": "bool TestFlashMemory(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2049,
          "context": "bool TestKillSwitch(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2050,
          "context": "bool TestMagnetometer(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2051,
          "context": "bool TestMotorResponse(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2052,
          "context": "bool TestParachuteSystem(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2053,
          "context": "bool HasGPS(void) { return false; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2054,
          "context": "bool HasParachute(void) { return false; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2055,
          "context": "float GetBaroAltitude(void) { return 0.0f; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2056,
          "context": "uint16_t GetMotorRPM(void) { return 0; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2057,
          "context": "float GetMotorVibration(void) { return 0.0f; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2058,
          "context": "uint8_t GetRCLinkQuality(void) { return 100; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2059,
          "context": "float GetSensorSupplyVoltage(void) { return 3.3f; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2060,
          "context": "bool IsRCTestResponseReceived(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2061,
          "context": "bool IsTelemetryAckReceived(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2065,
          "context": "const char* Diagnostics_GetLastLogEntry(void) { return \"No log\"; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2068,
          "context": "return 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2072,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 17,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 46,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 50,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 57,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 62,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 77,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 87,
          "context": "return waypoint_count;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 92,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 96,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 122,
          "context": "return nav_state.navigation_active;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 138,
          "context": "return nav_state.current_position.altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 142,
          "context": "return nav_state.heading;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 146,
          "context": "return nav_state.distance_to_target;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 150,
          "context": "return nav_state.bearing_to_target;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 195,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 208,
          "context": "return EARTH_RADIUS * c;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 213,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 224,
          "context": "return ClampHeading(bearing);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 229,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 236,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 239,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 244,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 249,
          "context": "return distance <= 1000.0f; // Безопасная зона - 1 км от дома"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 261,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 263,
          "context": "return Navigation_CalculateDistance(&nav_state.current_position, &home_position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 273,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 297,
          "context": "return heading;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 53,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 62,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 144,
          "context": "if (data == NULL) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 150,
          "context": "if (orientation == NULL) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 107,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 170,
          "context": "return stabState.enabled;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 191,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 209,
          "context": "return ClampValue(output, pid->outputMin, pid->outputMax);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 213,
          "context": "if (value < min) return min;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 214,
          "context": "if (value > max) return max;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 215,
          "context": "return value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 40,
          "context": "bool returnToHomeActive;"
        }
      ],
      "comments": "Проверяем бит RESC (Reset Cause) в регистре RIS",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "WDT_RIS_WDTRIS",
          "type": "WATCHDOG0_RIS_R &"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "RIS"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_296",
      "name": "прерываний",
      "description": "Разрешаем пробуждение от:\n- Внешних прерываний (например, от датчиков)",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [],
      "comments": "Разрешаем пробуждение от:\n- Внешних прерываний (например, от датчиков)",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "датчиков",
          "type": "от"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "Внешних"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_297",
      "name": "Diagnostics_EnterLowPowerMode",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 787,
          "context": "void Diagnostics_EnterLowPowerMode(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_302",
      "name": "Diagnostics_ExitLowPowerMode",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 806,
          "context": "void Diagnostics_ExitLowPowerMode(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_306",
      "name": "Diagnostics_StartPerformanceCounter",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 824,
          "context": "void Diagnostics_StartPerformanceCounter(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 380,
          "context": "void Diagnostics_StartPerformanceCounter(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_307",
      "name": "Diagnostics_StopPerformanceCounter",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 828,
          "context": "uint32_t Diagnostics_StopPerformanceCounter(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 381,
          "context": "uint32_t Diagnostics_StopPerformanceCounter(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_308",
      "name": "Diagnostics_ResetPerformanceStats",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 844,
          "context": "void Diagnostics_ResetPerformanceStats(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 382,
          "context": "void Diagnostics_ResetPerformanceStats(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_309",
      "name": "Diagnostics_EnableDebugOutput",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 852,
          "context": "void Diagnostics_EnableDebugOutput(bool enable) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "enable",
          "type": "bool"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_310",
      "name": "Diagnostics_PrintSystemStatus",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 858,
          "context": "void Diagnostics_PrintSystemStatus(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 389,
          "context": "void Diagnostics_PrintSystemStatus(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_316",
      "name": "Diagnostics_RunSelfTest",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 916,
          "context": "void Diagnostics_RunSelfTest(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_327",
      "name": "GPS",
      "description": "4. Проверка GPS (если есть)",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 321,
          "context": "GPSPosition currentPos;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1028,
          "context": "#define SENSOR_ERR_GPS_FAIL      0x0108"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1121,
          "context": "if (HasGPS()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1122,
          "context": "if (!TestGPS()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1124,
          "context": "status.code = SENSOR_ERR_GPS_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1125,
          "context": "status.message = \"GPS not ready\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2046,
          "context": "bool TestGPS(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2053,
          "context": "bool HasGPS(void) { return false; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 17,
          "context": "static GPSPosition home_position = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 131,
          "context": "void Navigation_GetCurrentPosition(GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 154,
          "context": "void Navigation_EmulateGPSPosition(float latitude, float longitude, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 193,
          "context": "float Navigation_CalculateDistance(const GPSPosition* pos1, const GPSPosition* pos2) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 211,
          "context": "float Navigation_CalculateBearing(const GPSPosition* pos1, const GPSPosition* pos2) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 227,
          "context": "bool Navigation_IsValidPosition(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 242,
          "context": "bool Navigation_IsInSafeZone(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 252,
          "context": "void Navigation_UpdateHomePosition(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 59,
          "context": "GPSPosition position;      // Текущая GPS позиция"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 540,
          "context": "bool TestGPS(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 549,
          "context": "bool HasGPS(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 13,
          "context": "} GPSPosition;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 17,
          "context": "GPSPosition position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 25,
          "context": "GPSPosition current_position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 37,
          "context": "GPSPosition homePosition;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 53,
          "context": "void Navigation_SetHomePosition(GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 67,
          "context": "void Navigation_GetCurrentPosition(GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 72,
          "context": "bool Navigation_IsValidPosition(const GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 73,
          "context": "bool Navigation_IsInSafeZone(const GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 76,
          "context": "void Navigation_UpdateHomePosition(const GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 79,
          "context": "void Navigation_EmulateGPSPosition(float latitude, float longitude, float altitude);"
        }
      ],
      "comments": "4. Проверка GPS (если есть)",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "есть",
          "type": "если"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "Проверка"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_332",
      "name": "SetMotorSpeed",
      "description": "Запускаем мотор на тестовой скорости",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1196,
          "context": "SetMotorSpeed(i, MOTOR_TEST_SPEED);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1215,
          "context": "SetMotorSpeed(i, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1227,
          "context": "SetMotorSpeed(i, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1252,
          "context": "SetMotorSpeed(i, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2064,
          "context": "void SetMotorSpeed(uint8_t motor, uint16_t speed) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 564,
          "context": "void SetMotorSpeed(uint8_t motor, uint16_t speed);"
        }
      ],
      "comments": "Запускаем мотор на тестовой скорости",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "скорости"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_340",
      "name": "Diagnostics_GetTestResult",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1266,
          "context": "SelfTestResult Diagnostics_GetTestResult(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "SelfTestResult"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_341",
      "name": "Diagnostics_PerformQuickTest",
      "description": "Возвращаем статическую структуру selfTestResult,\nкоторая заполняется в ходе выполнения Diagnostics_PerformQuickTest()",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1673,
          "context": "bool Diagnostics_PerformQuickTest(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 343,
          "context": "bool Diagnostics_PerformQuickTest(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 529,
          "context": "bool Diagnostics_PerformQuickTest(void);"
        }
      ],
      "comments": "Возвращаем статическую структуру selfTestResult,\nкоторая заполняется в ходе выполнения Diagnostics_PerformQuickTest()",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "выполнения"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_350",
      "name": "Diagnostics_GetADCValue",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1440,
          "context": "ADCResult Diagnostics_GetADCValue(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1775,
          "context": "ADCResult result = Diagnostics_GetADCValue();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1822,
          "context": "ADCResult adcResult = Diagnostics_GetADCValue();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 392,
          "context": "ADCResult Diagnostics_GetADCValue(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "ADCResult"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_354",
      "name": "Diagnostics_ConvertADCToTemp",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1475,
          "context": "float Diagnostics_ConvertADCToTemp(ADCResult adcResult) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1776,
          "context": "return Diagnostics_ConvertADCToTemp(result);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 393,
          "context": "float Diagnostics_ConvertADCToTemp(ADCResult adcResult); // Обновленный прототип функции преобразования температур"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "adcResult",
          "type": "ADCResult"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_357",
      "name": "switch",
      "description": "Преобразование в зависимости от типа датчика",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 190,
          "context": "switch (currentState) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 238,
          "context": "switch (cmdData.type) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 289,
          "context": "switch (param) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 266,
          "context": "switch (cmd) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 422,
          "context": "switch (packet->type) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 608,
          "context": "switch (level) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 621,
          "context": "switch (event) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 730,
          "context": "switch (mode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1427,
          "context": "status.message = \"Kill switch failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1498,
          "context": "switch (TEMP_SENSOR_TYPE_LINEAR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1837,
          "context": "switch (TEMP_SENSOR_TYPE_LINEAR) {"
        }
      ],
      "comments": "Преобразование в зависимости от типа датчика",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "датчика"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_360",
      "name": "Diagnostics_StartADCConversion",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1524,
          "context": "ADCError Diagnostics_StartADCConversion(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 394,
          "context": "ADCError Diagnostics_StartADCConversion(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "ADCError"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_361",
      "name": "Diagnostics_IsADCConversionComplete",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1536,
          "context": "ADCConversionStatus Diagnostics_IsADCConversionComplete(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 395,
          "context": "ADCConversionStatus Diagnostics_IsADCConversionComplete(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "ADCConversionStatus"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_362",
      "name": "Diagnostics_GetSystemTicks",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1569,
          "context": "SystemTickResult Diagnostics_GetSystemTicks(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1587,
          "context": "SystemTickResult startTicks = Diagnostics_GetSystemTicks();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1597,
          "context": "SystemTickResult currentTicks = Diagnostics_GetSystemTicks();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1623,
          "context": "SystemTickResult currentTicksResult = Diagnostics_GetSystemTicks();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 397,
          "context": "SystemTickResult Diagnostics_GetSystemTicks(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "SystemTickResult"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_364",
      "name": "Diagnostics_DelayTicks",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1586,
          "context": "SystemTickError Diagnostics_DelayTicks(uint32_t ticks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 398,
          "context": "SystemTickError Diagnostics_DelayTicks(uint32_t ticks);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "ticks",
          "type": "uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "SystemTickError"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_366",
      "name": "Diagnostics_GetElapsedTicks",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1617,
          "context": "ElapsedTicksResult Diagnostics_GetElapsedTicks(uint32_t startTicks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 399,
          "context": "ElapsedTicksResult Diagnostics_GetElapsedTicks(uint32_t startTicks);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "startTicks",
          "type": "uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "ElapsedTicksResult"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_367",
      "name": "Diagnostics_InitSelfTest",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1649,
          "context": "void Diagnostics_InitSelfTest(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1674,
          "context": "Diagnostics_InitSelfTest();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 342,
          "context": "void Diagnostics_InitSelfTest(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_375",
      "name": "GetMCUTemperature",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1757,
          "context": "uint32_t GetMCUTemperature(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 402,
          "context": "uint32_t GetMCUTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 493,
          "context": "uint32_t GetMCUTemperature(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_376",
      "name": "GetMotorTemperature",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 151,
          "context": "float Actuators_GetMotorTemperature(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 520,
          "context": "float temp = GetMotorTemperature(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1204,
          "context": "motorData[i].temperature = GetMotorTemperature(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1766,
          "context": "float GetMotorTemperature(int motorIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 61,
          "context": "float Actuators_GetMotorTemperature(uint8_t motor_index);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 414,
          "context": "float GetMotorTemperature(int motorIndex);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 480,
          "context": "float GetMotorTemperature(int motorIndex);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 534,
          "context": "float GetMotorTemperature(int motorIndex);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "motorIndex",
          "type": "int"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_378",
      "name": "GetBatteryTemperature",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1779,
          "context": "uint32_t GetBatteryTemperature(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 403,
          "context": "uint32_t GetBatteryTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 481,
          "context": "uint32_t GetBatteryTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 494,
          "context": "uint32_t GetBatteryTemperature(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_379",
      "name": "GetBoardTemperature",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1788,
          "context": "uint32_t GetBoardTemperature(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 404,
          "context": "uint32_t GetBoardTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 482,
          "context": "uint32_t GetBoardTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 495,
          "context": "uint32_t GetBoardTemperature(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_380",
      "name": "GetEnvironmentTemperature",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1797,
          "context": "uint32_t GetEnvironmentTemperature(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 405,
          "context": "uint32_t GetEnvironmentTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 483,
          "context": "uint32_t GetEnvironmentTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 496,
          "context": "uint32_t GetEnvironmentTemperature(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_381",
      "name": "GetColdJunctionTemperature",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1821,
          "context": "float GetColdJunctionTemperature(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 349,
          "context": "float GetColdJunctionTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 408,
          "context": "float GetColdJunctionTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 499,
          "context": "float GetColdJunctionTemperature(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_385",
      "name": "ConvertThermocoupleVoltageToTemp",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1863,
          "context": "float ConvertThermocoupleVoltageToTemp(float thermocoupleVoltage, ThermocoupleType type, float coldJunctionTemp) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 350,
          "context": "float ConvertThermocoupleVoltageToTemp(float thermocoupleVoltage, ThermocoupleType type, float coldJunctionTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 409,
          "context": "float ConvertThermocoupleVoltageToTemp(float thermocoupleVoltage, ThermocoupleType type, float coldJunctionTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 500,
          "context": "float ConvertThermocoupleVoltageToTemp(float thermocoupleVoltage, ThermocoupleType type, float coldJunctionTemp);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "thermocoupleVoltage",
          "type": "float"
        },
        {
          "name": "type",
          "type": "ThermocoupleType"
        },
        {
          "name": "coldJunctionTemp",
          "type": "float"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_388",
      "name": "GetMotorCurrent",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1202,
          "context": "motorData[i].current = GetMotorCurrent(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1902,
          "context": "float GetMotorCurrent(int motorIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 412,
          "context": "float GetMotorCurrent(int motorIndex);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 532,
          "context": "float GetMotorCurrent(int motorIndex);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "motorIndex",
          "type": "int"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_391",
      "name": "ток",
      "description": "Преобразуем значение АЦП в ток (А)",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [],
      "comments": "Преобразуем значение АЦП в ток (А)",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "в"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_392",
      "name": "HasBackupComm",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1357,
          "context": "if (HasBackupComm() && !TestBackupComm()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1938,
          "context": "bool HasBackupComm(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 421,
          "context": "bool HasBackupComm(void);      // Проверяет наличие резервного канала связи"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_393",
      "name": "TestBackupComm",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1357,
          "context": "if (HasBackupComm() && !TestBackupComm()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1943,
          "context": "bool TestBackupComm(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 422,
          "context": "bool TestBackupComm(void);     // Тестирует работоспособность резервного канала"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_397",
      "name": "SendBackupCommPacket",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1955,
          "context": "bool success = SendBackupCommPacket(testPacket, sizeof(testPacket));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1978,
          "context": "bool SendBackupCommPacket(const uint8_t* data, uint8_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 486,
          "context": "bool SendBackupCommPacket(const uint8_t* data, uint8_t length);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "data",
          "type": "const uint8_t*"
        },
        {
          "name": "length",
          "type": "uint8_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_398",
      "name": "ReceiveBackupCommPacket",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1965,
          "context": "if (ReceiveBackupCommPacket(response, sizeof(response))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1983,
          "context": "bool ReceiveBackupCommPacket(uint8_t* buffer, uint8_t maxLength) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 487,
          "context": "bool ReceiveBackupCommPacket(uint8_t* buffer, uint8_t maxLength);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "buffer",
          "type": "uint8_t*"
        },
        {
          "name": "maxLength",
          "type": "uint8_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_399",
      "name": "TestWatchdogReset",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1378,
          "context": "if (!TestWatchdogReset()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1989,
          "context": "bool TestWatchdogReset(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 430,
          "context": "bool TestWatchdogReset(void);  // Тестирует срабатывание watchdog reset"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_401",
      "name": "теста",
      "description": "Устанавливаем короткий таймаут для теста (100мс)",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [],
      "comments": "Устанавливаем короткий таймаут для теста (100мс)",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "для"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_404",
      "name": "TestBarometer",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1069,
          "context": "if (!TestBarometer()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2044,
          "context": "bool TestBarometer(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 538,
          "context": "bool TestBarometer(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_405",
      "name": "TestESC",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1169,
          "context": "if (!TestESC()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2045,
          "context": "bool TestESC(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 539,
          "context": "bool TestESC(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_406",
      "name": "TestGPS",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1122,
          "context": "if (!TestGPS()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2046,
          "context": "bool TestGPS(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 540,
          "context": "bool TestGPS(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_407",
      "name": "TestEEPROM",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1389,
          "context": "if (!TestEEPROM()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2047,
          "context": "bool TestEEPROM(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 541,
          "context": "bool TestEEPROM(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_408",
      "name": "TestFlashMemory",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1400,
          "context": "if (!TestFlashMemory()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2048,
          "context": "bool TestFlashMemory(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 542,
          "context": "bool TestFlashMemory(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_409",
      "name": "TestKillSwitch",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1424,
          "context": "if (!TestKillSwitch()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2049,
          "context": "bool TestKillSwitch(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 543,
          "context": "bool TestKillSwitch(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_410",
      "name": "TestMagnetometer",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1091,
          "context": "if (!TestMagnetometer()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2050,
          "context": "bool TestMagnetometer(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 544,
          "context": "bool TestMagnetometer(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_411",
      "name": "TestMotorResponse",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1185,
          "context": "if (!TestMotorResponse(i)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2051,
          "context": "bool TestMotorResponse(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 545,
          "context": "bool TestMotorResponse(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_412",
      "name": "TestParachuteSystem",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1412,
          "context": "if (!TestParachuteSystem()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2052,
          "context": "bool TestParachuteSystem(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 546,
          "context": "bool TestParachuteSystem(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_413",
      "name": "HasGPS",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1121,
          "context": "if (HasGPS()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2053,
          "context": "bool HasGPS(void) { return false; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 549,
          "context": "bool HasGPS(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_414",
      "name": "HasParachute",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1411,
          "context": "if (HasParachute()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2054,
          "context": "bool HasParachute(void) { return false; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 550,
          "context": "bool HasParachute(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_415",
      "name": "GetBaroAltitude",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1079,
          "context": "float altitude = GetBaroAltitude();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2055,
          "context": "float GetBaroAltitude(void) { return 0.0f; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 553,
          "context": "float GetBaroAltitude(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_416",
      "name": "GetMotorRPM",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1203,
          "context": "motorData[i].rpm = GetMotorRPM(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2056,
          "context": "uint16_t GetMotorRPM(void) { return 0; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2067,
          "context": "uint16_t GetMotorRPM(int motorIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 413,
          "context": "uint16_t GetMotorRPM(void);        // Убрали параметр"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 533,
          "context": "uint16_t GetMotorRPM(void);        // Убрали параметр"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 554,
          "context": "uint16_t GetMotorRPM(void);        // Убрали параметр"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint16_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_417",
      "name": "GetMotorVibration",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1205,
          "context": "motorData[i].vibration = GetMotorVibration(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2057,
          "context": "float GetMotorVibration(void) { return 0.0f; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2071,
          "context": "float GetMotorVibration(int motorIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 415,
          "context": "float GetMotorVibration(void);     // Убрали параметр"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 535,
          "context": "float GetMotorVibration(void);     // Убрали параметр"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 555,
          "context": "float GetMotorVibration(void);     // Убрали параметр"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_418",
      "name": "GetRCLinkQuality",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1323,
          "context": "uint8_t rcQuality = GetRCLinkQuality();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2058,
          "context": "uint8_t GetRCLinkQuality(void) { return 100; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 556,
          "context": "uint8_t GetRCLinkQuality(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint8_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_419",
      "name": "GetSensorSupplyVoltage",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1010,
          "context": "float sensorSupply = GetSensorSupplyVoltage();  // Функция измерения через АЦП"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2059,
          "context": "float GetSensorSupplyVoltage(void) { return 3.3f; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 557,
          "context": "float GetSensorSupplyVoltage(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_420",
      "name": "IsRCTestResponseReceived",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1306,
          "context": "if (IsRCTestResponseReceived()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2060,
          "context": "bool IsRCTestResponseReceived(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 560,
          "context": "bool IsRCTestResponseReceived(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_421",
      "name": "IsTelemetryAckReceived",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1340,
          "context": "if (IsTelemetryAckReceived()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2061,
          "context": "bool IsTelemetryAckReceived(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 561,
          "context": "bool IsTelemetryAckReceived(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_422",
      "name": "SendRCTestPacket",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1303,
          "context": "SendRCTestPacket();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2062,
          "context": "void SendRCTestPacket(void) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 562,
          "context": "void SendRCTestPacket(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_423",
      "name": "SendTelemetryTestPacket",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1337,
          "context": "SendTelemetryTestPacket();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2063,
          "context": "void SendTelemetryTestPacket(void) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 563,
          "context": "void SendTelemetryTestPacket(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_425",
      "name": "Diagnostics_GetLastLogEntry",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 907,
          "context": "Diagnostics_GetLastLogEntry(&lastEntry);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2065,
          "context": "const char* Diagnostics_GetLastLogEntry(void) { return \"No log\"; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 565,
          "context": "const char* Diagnostics_GetLastLogEntry(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "char*"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_428",
      "name": "GPIOPinTypeGPIOOutput",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 3,
          "context": "void GPIOPinTypeGPIOOutput(uint32_t port, uint8_t pins) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 44,
          "context": "void GPIOPinTypeGPIOOutput(uint32_t port, uint8_t pins);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "port",
          "type": "uint32_t"
        },
        {
          "name": "pins",
          "type": "uint8_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_429",
      "name": "SysCtlPeripheralEnable",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 10,
          "context": "void SysCtlPeripheralEnable(uint32_t peripheral) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 45,
          "context": "void SysCtlPeripheralEnable(uint32_t peripheral);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "peripheral",
          "type": "uint32_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_430",
      "name": "SysCtlPeripheralReady",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 15,
          "context": "bool SysCtlPeripheralReady(uint32_t peripheral) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 46,
          "context": "bool SysCtlPeripheralReady(uint32_t peripheral);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "peripheral",
          "type": "uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_431",
      "name": "return",
      "description": "Проверяем готовность периферии",
      "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 80,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 359,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 365,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 372,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 378,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 33,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 49,
          "context": "return 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 51,
          "context": "return actuators_state.motors[motor_index].pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 56,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 63,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 71,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 88,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 90,
          "context": "return actuators_state.motors[motor_index].is_running;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 95,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 103,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 117,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 131,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 153,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 155,
          "context": "return actuators_state.motors[motor_index].temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 160,
          "context": "return 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 162,
          "context": "return actuators_state.motors[motor_index].runtime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 167,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 176,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 185,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 194,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 201,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 214,
          "context": "return emergency_stop_active;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 95,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 102,
          "context": "return 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 113,
          "context": "return count;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 120,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 128,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 133,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 146,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 150,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 155,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 206,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 224,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 228,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 233,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 235,
          "context": "return Communication_Send(PACKET_TYPE_TELEMETRY, telemetry, sizeof(TelemetryData));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 239,
          "context": "return Communication_Send(PACKET_TYPE_STATUS, &status, sizeof(status));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 256,
          "context": "return Communication_Send(PACKET_TYPE_ERROR, &errorData,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 262,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 303,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 311,
          "context": "return commState.connected;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 315,
          "context": "return commState.lastPacketTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 332,
          "context": "return commState.packetsSent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 336,
          "context": "return commState.packetsReceived;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 340,
          "context": "return commState.errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 371,
          "context": "return commState.currentTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 399,
          "context": "return checksum;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 404,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 409,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 418,
          "context": "return calculatedChecksum == packet->checksum;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 137,
          "context": "return systemMillis;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 151,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 192,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 198,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 257,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 279,
          "context": "return diagState.powerState.batteryVoltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 283,
          "context": "return diagState.powerState.batteryLevel;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 535,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 563,
          "context": "return diagState.logCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 568,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 572,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 576,
          "context": "return (diagState.thermalState.mcuTemp >= TEMP_MCU_WARNING ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 584,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 609,
          "context": "case LOG_DEBUG:    return \"DEBUG\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 610,
          "context": "case LOG_INFO:     return \"INFO\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 611,
          "context": "case LOG_WARNING:  return \"WARNING\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 612,
          "context": "case LOG_ERROR:    return \"ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 613,
          "context": "case LOG_CRITICAL: return \"CRITICAL\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 614,
          "context": "case LOG_FATAL:    return \"FATAL\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 615,
          "context": "default:          return \"UNKNOWN\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 622,
          "context": "case DIAG_EVENT_SYSTEM_START:     return \"SYSTEM_START\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 623,
          "context": "case DIAG_EVENT_SYSTEM_STOP:      return \"SYSTEM_STOP\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 624,
          "context": "case DIAG_EVENT_HIGH_TEMP:        return \"HIGH_TEMP\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 625,
          "context": "case DIAG_EVENT_LOW_BATTERY:      return \"LOW_BATTERY\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 626,
          "context": "case DIAG_EVENT_BATTERY_CRITICAL: return \"BATTERY_CRITICAL\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 627,
          "context": "case DIAG_EVENT_BATTERY_LOW:      return \"BATTERY_LOW\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 628,
          "context": "case DIAG_EVENT_NAV_ERROR:        return \"NAV_ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 629,
          "context": "case DIAG_EVENT_SENSOR_ERROR:     return \"SENSOR_ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 630,
          "context": "case DIAG_EVENT_MOTOR_ERROR:      return \"MOTOR_ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 631,
          "context": "case DIAG_EVENT_COMM_ERROR:       return \"COMM_ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 632,
          "context": "case DIAG_EVENT_STABILIZATION_ERROR: return \"STABILIZATION_ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 633,
          "context": "case DIAG_EVENT_WATCHDOG_RESET:   return \"WATCHDOG_RESET\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 634,
          "context": "case DIAG_EVENT_SELF_TEST:        return \"SELF_TEST\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 635,
          "context": "case DIAG_EVENT_SYSTEM_ERROR:     return \"SYSTEM_ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 636,
          "context": "case DIAG_EVENT_CALIBRATION:      return \"CALIBRATION\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 637,
          "context": "case DIAG_EVENT_ERROR:            return \"ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 638,
          "context": "case DIAG_EVENT_WARNING:          return \"WARNING\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 639,
          "context": "default:                          return \"UNKNOWN\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 645,
          "context": "return diagState.systemState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 649,
          "context": "return diagState.errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 718,
          "context": "return (WATCHDOG0_RIS_R & WDT_RIS_WDTRIS) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 841,
          "context": "return elapsed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 860,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 958,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 967,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 979,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1001,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1004,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1012,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1017,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1065,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1076,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1087,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1098,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1132,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1176,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1192,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1216,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1228,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1258,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1269,
          "context": "return selfTestResult;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1320,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1366,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1385,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1396,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1407,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1419,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1431,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1434,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1446,
          "context": "return result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1461,
          "context": "return result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1471,
          "context": "return result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1481,
          "context": "return NAN;  // Возвращаем NaN при ошибке"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1489,
          "context": "return NAN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1509,
          "context": "return NAN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1517,
          "context": "return 25.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1520,
          "context": "return temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1526,
          "context": "return ADC_ERROR_NOT_INITIALIZED;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1530,
          "context": "return ADC_ERROR_NONE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1544,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1563,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1582,
          "context": "return result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1590,
          "context": "return SYSTICK_ERROR_INVALID_START;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1600,
          "context": "return SYSTICK_ERROR_DURING_DELAY;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1611,
          "context": "return SYSTICK_ERROR_NONE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1627,
          "context": "return result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1639,
          "context": "return result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1681,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1693,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1705,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1717,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1729,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1741,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1746,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1763,
          "context": "return ADC1_SSFIFO1_R;     // Возвращаем значение АЦП"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1768,
          "context": "return NAN;  // Возвращаем NaN для некорректного индекса"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1776,
          "context": "return Diagnostics_ConvertADCToTemp(result);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1785,
          "context": "return ADC1_SSFIFO1_R;     // Возвращаем значение АЦП"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1794,
          "context": "return ADC1_SSFIFO1_R;     // Возвращаем значение АЦП"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1803,
          "context": "return ADC1_SSFIFO1_R;     // Возвращаем значение АЦП"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1828,
          "context": "return 25.0f;  // Возвращаем стандартную температур окружающей среды"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1848,
          "context": "return NAN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1856,
          "context": "return 25.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1859,
          "context": "return temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1869,
          "context": "return NAN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1895,
          "context": "return NAN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1898,
          "context": "return temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1905,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1930,
          "context": "return current;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1939,
          "context": "return backupCommAvailable;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1948,
          "context": "return true;  // Возвращаем последний результат"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1957,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1969,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1974,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1980,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1985,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1992,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2040,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2044,
          "context": "bool TestBarometer(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2045,
          "context": "bool TestESC(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2046,
          "context": "bool TestGPS(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2047,
          "context": "bool TestEEPROM(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2048,
          "context": "bool TestFlashMemory(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2049,
          "context": "bool TestKillSwitch(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2050,
          "context": "bool TestMagnetometer(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2051,
          "context": "bool TestMotorResponse(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2052,
          "context": "bool TestParachuteSystem(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2053,
          "context": "bool HasGPS(void) { return false; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2054,
          "context": "bool HasParachute(void) { return false; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2055,
          "context": "float GetBaroAltitude(void) { return 0.0f; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2056,
          "context": "uint16_t GetMotorRPM(void) { return 0; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2057,
          "context": "float GetMotorVibration(void) { return 0.0f; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2058,
          "context": "uint8_t GetRCLinkQuality(void) { return 100; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2059,
          "context": "float GetSensorSupplyVoltage(void) { return 3.3f; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2060,
          "context": "bool IsRCTestResponseReceived(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2061,
          "context": "bool IsTelemetryAckReceived(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2065,
          "context": "const char* Diagnostics_GetLastLogEntry(void) { return \"No log\"; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2068,
          "context": "return 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2072,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 17,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 46,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 50,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 57,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 62,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 77,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 87,
          "context": "return waypoint_count;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 92,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 96,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 122,
          "context": "return nav_state.navigation_active;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 138,
          "context": "return nav_state.current_position.altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 142,
          "context": "return nav_state.heading;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 146,
          "context": "return nav_state.distance_to_target;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 150,
          "context": "return nav_state.bearing_to_target;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 195,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 208,
          "context": "return EARTH_RADIUS * c;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 213,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 224,
          "context": "return ClampHeading(bearing);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 229,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 236,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 239,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 244,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 249,
          "context": "return distance <= 1000.0f; // Безопасная зона - 1 км от дома"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 261,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 263,
          "context": "return Navigation_CalculateDistance(&nav_state.current_position, &home_position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 273,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 297,
          "context": "return heading;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 53,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 62,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 144,
          "context": "if (data == NULL) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 150,
          "context": "if (orientation == NULL) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 107,
          "context": "return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 170,
          "context": "return stabState.enabled;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 191,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 209,
          "context": "return ClampValue(output, pid->outputMin, pid->outputMax);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 213,
          "context": "if (value < min) return min;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 214,
          "context": "if (value > max) return max;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 215,
          "context": "return value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 40,
          "context": "bool returnToHomeActive;"
        }
      ],
      "comments": "Проверяем готовность периферии",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "0x000000FF",
          "type": "SYSCTL_RCGC2_R & (peripheral &"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "периферии"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_432",
      "name": "SysCtlClockSet",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 20,
          "context": "void SysCtlClockSet(uint32_t config) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 47,
          "context": "void SysCtlClockSet(uint32_t config);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "config",
          "type": "uint32_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_433",
      "name": "DEG_TO_RAD",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 6,
          "context": "#define DEG_TO_RAD(x) ((x) * 0.017453292519943295)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 165,
          "context": "float speed_deg = speed / (EARTH_RADIUS * DEG_TO_RAD(1.0f));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 168,
          "context": "float heading_rad = DEG_TO_RAD(heading);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 199,
          "context": "float lat1 = DEG_TO_RAD(pos1->latitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 200,
          "context": "float lat2 = DEG_TO_RAD(pos2->latitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 201,
          "context": "float dlon = DEG_TO_RAD(pos2->longitude - pos1->longitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 216,
          "context": "float lat1 = DEG_TO_RAD(pos1->latitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 217,
          "context": "float lat2 = DEG_TO_RAD(pos2->latitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 218,
          "context": "float dlon = DEG_TO_RAD(pos2->longitude - pos1->longitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 13,
          "context": "#define DEG_TO_RAD(x) ((x) * 0.017453292519943295)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_434",
      "name": "RAD_TO_DEG",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 7,
          "context": "#define RAD_TO_DEG(x) ((x) * 57.295779513082323)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 222,
          "context": "float bearing = RAD_TO_DEG(atan2f(y, x));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 14,
          "context": "#define RAD_TO_DEG(x) ((x) * 57.295779513082323)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_435",
      "name": "UpdateNavigationState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 21,
          "context": "static void UpdateNavigationState(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 160,
          "context": "UpdateNavigationState();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 175,
          "context": "UpdateNavigationState();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 270,
          "context": "static void UpdateNavigationState(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": true,
      "scope": "static",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_436",
      "name": "ClampHeading",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 22,
          "context": "static float ClampHeading(float heading);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 224,
          "context": "return ClampHeading(bearing);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 294,
          "context": "static float ClampHeading(float heading) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "heading",
          "type": "float"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": true,
      "scope": "static",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_437",
      "name": "Navigation_Init",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 24,
          "context": "void Navigation_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 41,
          "context": "Navigation_Init();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 51,
          "context": "void Navigation_Init(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_438",
      "name": "Navigation_Reset",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 38,
          "context": "void Navigation_Reset(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_439",
      "name": "Navigation_AddWaypoint",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 256,
          "context": "Navigation_AddWaypoint(&targetPoint);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 44,
          "context": "bool Navigation_AddWaypoint(const Waypoint* waypoint) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 61,
          "context": "bool Navigation_AddWaypoint(const Waypoint* waypoint);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "waypoint",
          "type": "const Waypoint*"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_440",
      "name": "Navigation_RemoveWaypoint",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 60,
          "context": "bool Navigation_RemoveWaypoint(uint8_t index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 62,
          "context": "bool Navigation_RemoveWaypoint(uint8_t index);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "index",
          "type": "uint8_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_441",
      "name": "if",
      "description": "Корректируем текущий индекс если необходимо",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 107,
          "context": "if (!Sensors_Update()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 119,
          "context": "if (currentState >= DRONE_STATE_ARMED) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 124,
          "context": "if (!Navigation_IsActive()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 131,
          "context": "if (Stabilization_IsEnabled() == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 139,
          "context": "if (actState.all_motors_enabled == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 146,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / TELEMETRY_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 151,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / DIAGNOSTIC_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 215,
          "context": "if ((mainLoopCounter % 10) < 5) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 230,
          "context": "if (Communication_Receive(&rxPacket)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 232,
          "context": "if (rxPacket.type == PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 234,
          "context": "if (rxPacket.length == sizeof(CommandPacket)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 240,
          "context": "if (currentState == DRONE_STATE_FLYING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 261,
          "context": "if (currentState >= DRONE_STATE_ARMED) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 357,
          "context": "if (sensorData.imu.temperature < MIN_BATTERY_VOLTAGE) { // Временно используем temperature как voltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 363,
          "context": "if (sensorData.baro.altitude > MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 369,
          "context": "if (fabsf(sensorData.imu.accel_x) > MAX_ANGLE ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 376,
          "context": "if (!Communication_IsConnected()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 384,
          "context": "if (!isEmergencyMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 407,
          "context": "if (isEmergencyMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 32,
          "context": "if (motor_index >= MOTOR_COUNT || emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 48,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 55,
          "context": "if (motor_index >= MOTOR_COUNT || emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 62,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 70,
          "context": "if (emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 87,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 95,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 103,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 117,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 131,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 146,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 152,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 159,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 167,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 176,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 185,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 194,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 201,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 228,
          "context": "if (actuators_state.motors[i].is_running) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 234,
          "context": "if (actuators_state.motors[i].temperature > 25.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 243,
          "context": "if (actuators_state.motors[i].is_running) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 250,
          "context": "if (*pwm_value > PWM_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 101,
          "context": "if (buffer == NULL || maxLength == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 106,
          "context": "if (UART0_FR_R & UART_FR_RXFE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 119,
          "context": "if (data == NULL || length == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 132,
          "context": "if (commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 145,
          "context": "if (!UART_Init(commState.baudRate)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 154,
          "context": "if (!commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 164,
          "context": "if (bytesReceived > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 174,
          "context": "if (processedIndex + packetSize > commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 179,
          "context": "if (ValidatePacket(packet)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 191,
          "context": "if (processedIndex > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 192,
          "context": "if (processedIndex < commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 205,
          "context": "if (!commState.initialized || length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 214,
          "context": "if (data != NULL && length > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 222,
          "context": "if (UART_Send((const uint8_t*)&packet, (uint16_t)sizeof(CommPacket))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 232,
          "context": "if (telemetry == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 249,
          "context": "if (message != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 261,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 302,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_CONFIG) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 319,
          "context": "if (baudRate != commState.baudRate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 321,
          "context": "if (commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 349,
          "context": "if (commState.currentTime - commState.lastPacketTime > COMM_TIMEOUT_MS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 378,
          "context": "if (currentTime - commState.lastPacketTime > COMM_TIMEOUT_MS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 379,
          "context": "if (commState.connected) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 385,
          "context": "if (!commState.connected) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 403,
          "context": "if (packet == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 408,
          "context": "if (packet->length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 452,
          "context": "if(length) *length = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 11,
          "context": "#ifndef NAN"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 13,
          "context": "#endif"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 30,
          "context": "#ifndef ADC0_SSMUX1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 32,
          "context": "#endif"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 33,
          "context": "#ifndef ADC0_SSCTL1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 35,
          "context": "#endif"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 150,
          "context": "if (diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 187,
          "context": "if (NVIC_APINT_R & 0x10000) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 197,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 220,
          "context": "if (voltage >= 12.6f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 222,
          "context": "} else if (voltage <= 9.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 229,
          "context": "if (voltage <= 9.5f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 231,
          "context": "} else if (voltage <= 10.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 253,
          "context": "if (state == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 272,
          "context": "if (state->batteryLevel < 20.0f) {  // Порог низкого заряда 20%"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 348,
          "context": "if (voltage <= BATTERY_CRITICAL_VOLTAGE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 352,
          "context": "else if (voltage <= BATTERY_LOW_VOLTAGE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 357,
          "context": "if (temp >= BATTERY_MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 439,
          "context": "if (mcu_temp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 443,
          "context": "else if (mcu_temp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 448,
          "context": "if (motors_temp >= TEMP_MOTORS_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 452,
          "context": "else if (motors_temp >= TEMP_MOTORS_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 457,
          "context": "if (board_temp >= TEMP_BOARD_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 461,
          "context": "else if (board_temp >= TEMP_BOARD_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 476,
          "context": "if (diagState.thermalState.mcuTemp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 481,
          "context": "} else if (diagState.thermalState.mcuTemp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 490,
          "context": "if (diagState.thermalState.motorTemps[i] >= TEMP_MOTORS_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 495,
          "context": "} else if (diagState.thermalState.motorTemps[i] >= TEMP_MOTORS_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 504,
          "context": "if (diagState.thermalState.boardTemp >= TEMP_BOARD_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 509,
          "context": "} else if (diagState.thermalState.boardTemp >= TEMP_BOARD_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 521,
          "context": "if (!isnan(temp)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 528,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 534,
          "context": "if (!diagState.initialized || diagState.logCount >= DIAG_MAX_LOG_ENTRIES) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 544,
          "context": "if (level >= LOG_ERROR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 548,
          "context": "if (level == LOG_FATAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 567,
          "context": "if (!entry || index >= diagState.logCount) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 583,
          "context": "if (!diagState.debugEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 596,
          "context": "if (len < DEBUG_BUFFER_SIZE - 2) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 654,
          "context": "if (diagState.systemState == SYSTEM_STATE_ERROR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 710,
          "context": "if (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 788,
          "context": "if (!diagState.lowPowerMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 807,
          "context": "if (diagState.lowPowerMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 831,
          "context": "if (diagState.perfCount == 0 || elapsed > diagState.perfMaxTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 834,
          "context": "if (diagState.perfCount == 0 || elapsed < diagState.perfMinTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 853,
          "context": "if (diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 859,
          "context": "if (!diagState.debugEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 895,
          "context": "if (diagState.perfCount > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 905,
          "context": "if (diagState.logCount > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 951,
          "context": "if (batteryVoltage < POWER_TEST_VOLTAGE_MIN) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 960,
          "context": "else if (batteryVoltage > POWER_TEST_VOLTAGE_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 972,
          "context": "if (batteryCurrent > POWER_TEST_CURRENT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 984,
          "context": "if (batteryTemp > POWER_TEST_TEMP_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 994,
          "context": "if (!TestSupplyVoltages()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1011,
          "context": "if (sensorSupply < POWER_TEST_SUPPLY_MIN || sensorSupply > POWER_TEST_SUPPLY_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1058,
          "context": "if (accel_magnitude > IMU_TEST_ACCEL_MAX || gyro_magnitude > IMU_TEST_GYRO_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1069,
          "context": "if (!TestBarometer()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1080,
          "context": "if (altitude < BARO_TEST_ALT_MIN || altitude > BARO_TEST_ALT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1091,
          "context": "if (!TestMagnetometer()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1111,
          "context": "if (mag_magnitude < MAG_TEST_FIELD_MIN || mag_magnitude > MAG_TEST_FIELD_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1121,
          "context": "if (HasGPS()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1122,
          "context": "if (!TestGPS()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1169,
          "context": "if (!TestESC()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1185,
          "context": "if (!TestMotorResponse(i)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1208,
          "context": "if (motorData[i].current > MOTOR_TEST_CURRENT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1220,
          "context": "if (motorData[i].rpm < 100.0f) {  // Минимальные обороты для теста"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1232,
          "context": "if (motorData[i].temperature > MOTOR_TEST_TEMP_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1242,
          "context": "if (motorData[i].vibration > MOTOR_TEST_VIB_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1306,
          "context": "if (IsRCTestResponseReceived()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1313,
          "context": "if (!rcResponded) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1324,
          "context": "if (rcQuality < RC_TEST_MIN_QUALITY) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1340,
          "context": "if (IsTelemetryAckReceived()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1347,
          "context": "if (!telemetryResponded) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1357,
          "context": "if (HasBackupComm() && !TestBackupComm()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1378,
          "context": "if (!TestWatchdogReset()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1389,
          "context": "if (!TestEEPROM()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1400,
          "context": "if (!TestFlashMemory()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1411,
          "context": "if (HasParachute()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1412,
          "context": "if (!TestParachuteSystem()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1424,
          "context": "if (!TestKillSwitch()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1444,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1459,
          "context": "if (timeout == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1477,
          "context": "if (adcResult.error != ADC_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1485,
          "context": "if (adcResult.value == 0 || adcResult.value >= ADC_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1513,
          "context": "if (isnan(temperature)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1525,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1542,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1553,
          "context": "if (!status.complete) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1555,
          "context": "if (conversionAttempts >= MAX_CONVERSION_ATTEMPTS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1576,
          "context": "if (result.ticks == 0 || result.ticks > NVIC_ST_RELOAD_R) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1589,
          "context": "if (startTicks.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1599,
          "context": "if (currentTicks.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1604,
          "context": "if (currentTicks.ticks <= startValue) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1625,
          "context": "if (currentTicksResult.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1632,
          "context": "if (currentTicks <= startTicks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1678,
          "context": "if (selfTestResult.powerTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1683,
          "context": "else if (selfTestResult.powerTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1690,
          "context": "if (selfTestResult.sensorTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1695,
          "context": "else if (selfTestResult.sensorTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1702,
          "context": "if (selfTestResult.motorTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1707,
          "context": "else if (selfTestResult.motorTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1714,
          "context": "if (selfTestResult.commTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1719,
          "context": "else if (selfTestResult.commTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1726,
          "context": "if (selfTestResult.safetyTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1731,
          "context": "else if (selfTestResult.safetyTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1738,
          "context": "if (selfTestResult.totalErrors > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1767,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1824,
          "context": "if (adcResult.error != ADC_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1852,
          "context": "if (isnan(temperature)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1865,
          "context": "if (type < 0 || type >= THERMOCOUPLE_TYPE_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1891,
          "context": "if (temperature < MIN_TEMP || temperature > MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1904,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1947,
          "context": "if (currentTime - lastBackupCommTest < 1000) {  // Тестируем не чаще раза в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1956,
          "context": "if (!success) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1965,
          "context": "if (ReceiveBackupCommPacket(response, sizeof(response))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1967,
          "context": "if (response[0] == 0x55 && response[1] == 0xAA &&"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1991,
          "context": "if (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 45,
          "context": "if (waypoint == NULL || waypoint_count >= MAX_WAYPOINTS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 49,
          "context": "if (!Navigation_IsValidPosition(&waypoint->position)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 61,
          "context": "if (index >= waypoint_count) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 73,
          "context": "if (current_waypoint_index > index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 91,
          "context": "if (index >= waypoint_count || waypoint == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 100,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 111,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 126,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 132,
          "context": "if (position != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 182,
          "context": "if (nav_state.current_position.altitude < NAV_MIN_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 185,
          "context": "} else if (nav_state.current_position.altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 194,
          "context": "if (!pos1->valid || !pos2->valid) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 212,
          "context": "if (!pos1->valid || !pos2->valid) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 228,
          "context": "if (position == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 233,
          "context": "if (position->latitude < -90.0f || position->latitude > 90.0f ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 243,
          "context": "if (!position->valid || !home_position_set) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 253,
          "context": "if (position != NULL && Navigation_IsValidPosition(position)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 260,
          "context": "if (!home_position_set) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 271,
          "context": "if (!nav_state.navigation_active || waypoint_count == 0 ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 284,
          "context": "if (nav_state.distance_to_target <= NAV_WAYPOINT_RADIUS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 286,
          "context": "if (current_waypoint_index < waypoint_count - 1) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 52,
          "context": "if (!sensor_state.mpu6050_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 61,
          "context": "if (!sensor_state.bmp280_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 115,
          "context": "if (sensor_state.current_altitude < 0.0f) sensor_state.current_altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 125,
          "context": "if (sensor_state.rotation_angle >= 360.0f) sensor_state.rotation_angle -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 144,
          "context": "if (data == NULL) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 150,
          "context": "if (orientation == NULL) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 182,
          "context": "if(data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 196,
          "context": "if(data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 106,
          "context": "if (!stabState.enabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 145,
          "context": "if (orientation != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 151,
          "context": "if (setPoint != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 190,
          "context": "if (pid == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 213,
          "context": "if (value < min) return min;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 214,
          "context": "if (value > max) return max;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 1,
          "context": "#ifndef ACTUATORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 76,
          "context": "#endif // ACTUATORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 1,
          "context": "#ifndef COMMUNICATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 112,
          "context": "#endif // COMMUNICATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 1,
          "context": "#ifndef DIAGNOSTICS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 567,
          "context": "#endif // DIAGNOSTICS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 1,
          "context": "#ifndef GPIO_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 49,
          "context": "#endif // GPIO_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 1,
          "context": "#ifndef MAIN_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 91,
          "context": "#endif // MAIN_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 1,
          "context": "#ifndef NAVIGATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 83,
          "context": "#endif // NAVIGATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 1,
          "context": "#ifndef SENSORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 55,
          "context": "#endif // SENSORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 1,
          "context": "#ifndef STABILIZATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 56,
          "context": "#endif // STABILIZATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 1,
          "context": "#ifndef TELEMETRY_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 14,
          "context": "#endif // TELEMETRY_H"
        }
      ],
      "comments": "Корректируем текущий индекс если необходимо",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "index",
          "type": "current_waypoint_index >"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "необходимо"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_442",
      "name": "Navigation_ClearWaypoints",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 255,
          "context": "Navigation_ClearWaypoints();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 398,
          "context": "Navigation_ClearWaypoints();    // Очищаем все точки маршрута"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 416,
          "context": "Navigation_ClearWaypoints();    // Очищаем все точки маршрута"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 40,
          "context": "Navigation_ClearWaypoints();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 80,
          "context": "void Navigation_ClearWaypoints(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 64,
          "context": "void Navigation_ClearWaypoints(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_443",
      "name": "Navigation_GetWaypointCount",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 86,
          "context": "uint8_t Navigation_GetWaypointCount(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint8_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_444",
      "name": "Navigation_GetWaypoint",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 86,
          "context": "uint8_t Navigation_GetWaypointCount(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 90,
          "context": "bool Navigation_GetWaypoint(uint8_t index, Waypoint* waypoint) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 63,
          "context": "bool Navigation_GetWaypoint(uint8_t index, Waypoint* waypoint);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "index",
          "type": "uint8_t"
        },
        {
          "name": "waypoint",
          "type": "Waypoint*"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_445",
      "name": "Navigation_Start",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 99,
          "context": "void Navigation_Start(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 54,
          "context": "void Navigation_Start(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_446",
      "name": "Navigation_Pause",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 106,
          "context": "void Navigation_Pause(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 56,
          "context": "void Navigation_Pause(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_447",
      "name": "Navigation_Resume",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 110,
          "context": "void Navigation_Resume(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 57,
          "context": "void Navigation_Resume(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_448",
      "name": "Navigation_Stop",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 397,
          "context": "Navigation_Stop();              // Останавливаем текущую навигацию"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 415,
          "context": "Navigation_Stop();              // Останавливаем текущую навигацию"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 39,
          "context": "Navigation_Stop();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 116,
          "context": "void Navigation_Stop(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 55,
          "context": "void Navigation_Stop(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_449",
      "name": "Navigation_IsActive",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 124,
          "context": "if (!Navigation_IsActive()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 121,
          "context": "bool Navigation_IsActive(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 58,
          "context": "bool Navigation_IsActive(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_450",
      "name": "Navigation_GetCurrentState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 125,
          "context": "void Navigation_GetCurrentState(NavigationState* state) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "state",
          "type": "NavigationState*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_451",
      "name": "Navigation_GetCurrentPosition",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 322,
          "context": "Navigation_GetCurrentPosition(&currentPos);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 131,
          "context": "void Navigation_GetCurrentPosition(GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 67,
          "context": "void Navigation_GetCurrentPosition(GPSPosition* position);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "position",
          "type": "GPSPosition*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_452",
      "name": "Navigation_GetCurrentAltitude",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 323,
          "context": "float altitude = Navigation_GetCurrentAltitude();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 137,
          "context": "float Navigation_GetCurrentAltitude(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 68,
          "context": "float Navigation_GetCurrentAltitude(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_453",
      "name": "Navigation_GetCurrentHeading",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 141,
          "context": "float Navigation_GetCurrentHeading(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 69,
          "context": "float Navigation_GetCurrentHeading(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_454",
      "name": "Navigation_GetDistanceToTarget",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 324,
          "context": "float distanceToTarget = Navigation_GetDistanceToTarget();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 145,
          "context": "float Navigation_GetDistanceToTarget(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 70,
          "context": "float Navigation_GetDistanceToTarget(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_455",
      "name": "Navigation_GetBearingToTarget",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 149,
          "context": "float Navigation_GetBearingToTarget(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 71,
          "context": "float Navigation_GetBearingToTarget(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_456",
      "name": "Navigation_EmulateGPSPosition",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 154,
          "context": "void Navigation_EmulateGPSPosition(float latitude, float longitude, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 79,
          "context": "void Navigation_EmulateGPSPosition(float latitude, float longitude, float altitude);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "latitude",
          "type": "float"
        },
        {
          "name": "longitude",
          "type": "float"
        },
        {
          "name": "altitude",
          "type": "float"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_457",
      "name": "Navigation_EmulateMovement",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 163,
          "context": "void Navigation_EmulateMovement(float speed, float heading) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 80,
          "context": "void Navigation_EmulateMovement(float speed, float heading);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "speed",
          "type": "float"
        },
        {
          "name": "heading",
          "type": "float"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_459",
      "name": "cosf",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 169,
          "context": "nav_state.current_position.latitude += speed_deg * cosf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 205,
          "context": "cosf(lat1) * cosf(lat2) * sinf(dlon/2) * sinf(dlon/2);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 220,
          "context": "float y = sinf(dlon) * cosf(lat2);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 221,
          "context": "float x = cosf(lat1) * sinf(lat2) - sinf(lat1) * cosf(lat2) * cosf(dlon);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "speed_deg *"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_460",
      "name": "sinf",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 170,
          "context": "nav_state.current_position.longitude += speed_deg * sinf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 204,
          "context": "float a = sinf(dlat/2) * sinf(dlat/2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 205,
          "context": "cosf(lat1) * cosf(lat2) * sinf(dlon/2) * sinf(dlon/2);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 220,
          "context": "float y = sinf(dlon) * cosf(lat2);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 221,
          "context": "float x = cosf(lat1) * sinf(lat2) - sinf(lat1) * cosf(lat2) * cosf(dlon);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "speed_deg *"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_461",
      "name": "Navigation_EmulateAltitudeChange",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 178,
          "context": "void Navigation_EmulateAltitudeChange(float vertical_speed) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 81,
          "context": "void Navigation_EmulateAltitudeChange(float vertical_speed);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "vertical_speed",
          "type": "float"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_464",
      "name": "Navigation_CalculateDistance",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 193,
          "context": "float Navigation_CalculateDistance(const GPSPosition* pos1, const GPSPosition* pos2) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 248,
          "context": "float distance = Navigation_CalculateDistance(&home_position, position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 263,
          "context": "return Navigation_CalculateDistance(&nav_state.current_position, &home_position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 278,
          "context": "nav_state.distance_to_target = Navigation_CalculateDistance("
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "pos1",
          "type": "const GPSPosition*"
        },
        {
          "name": "pos2",
          "type": "const GPSPosition*"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_465",
      "name": "atan2f",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 206,
          "context": "float c = 2 * atan2f(sqrtf(a), sqrtf(1-a));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 222,
          "context": "float bearing = RAD_TO_DEG(atan2f(y, x));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 162,
          "context": "float accelRoll = atan2f(imu.accel_y, imu.accel_z) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 163,
          "context": "float accelPitch = atan2f(-imu.accel_x, sqrtf(imu.accel_y * imu.accel_y + imu.accel_z * imu.accel_z)) * 180.0f / 3.14159f;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "2 *"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_466",
      "name": "Navigation_CalculateBearing",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 211,
          "context": "float Navigation_CalculateBearing(const GPSPosition* pos1, const GPSPosition* pos2) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 280,
          "context": "nav_state.bearing_to_target = Navigation_CalculateBearing("
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "pos1",
          "type": "const GPSPosition*"
        },
        {
          "name": "pos2",
          "type": "const GPSPosition*"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_468",
      "name": "Navigation_IsValidPosition",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 49,
          "context": "if (!Navigation_IsValidPosition(&waypoint->position)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 227,
          "context": "bool Navigation_IsValidPosition(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 253,
          "context": "if (position != NULL && Navigation_IsValidPosition(position)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 72,
          "context": "bool Navigation_IsValidPosition(const GPSPosition* position);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "position",
          "type": "const GPSPosition*"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_470",
      "name": "Navigation_IsInSafeZone",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 242,
          "context": "bool Navigation_IsInSafeZone(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 73,
          "context": "bool Navigation_IsInSafeZone(const GPSPosition* position);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "position",
          "type": "const GPSPosition*"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_471",
      "name": "Navigation_UpdateHomePosition",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 252,
          "context": "void Navigation_UpdateHomePosition(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 76,
          "context": "void Navigation_UpdateHomePosition(const GPSPosition* position);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "position",
          "type": "const GPSPosition*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_472",
      "name": "Navigation_GetDistanceToHome",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 259,
          "context": "float Navigation_GetDistanceToHome(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_474",
      "name": "Navigation_Update",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 121,
          "context": "Navigation_Update();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 252,
          "context": "void Navigation_UpdateHomePosition(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 267,
          "context": "void Navigation_Update(void) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 52,
          "context": "void Navigation_Update(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 76,
          "context": "void Navigation_UpdateHomePosition(const GPSPosition* position);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_478",
      "name": "MPU6050_Init",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 29,
          "context": "void MPU6050_Init(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_479",
      "name": "BMP280_Init",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 42,
          "context": "void BMP280_Init(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_480",
      "name": "давление",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "атмосферное"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_481",
      "name": "MPU6050_Read",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 51,
          "context": "void MPU6050_Read(MPU6050_Data* data) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "data",
          "type": "MPU6050_Data*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_482",
      "name": "BMP280_Read",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 60,
          "context": "void BMP280_Read(BMP280_Data* data) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "data",
          "type": "BMP280_Data*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_483",
      "name": "MPU6050_Calibrate",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 69,
          "context": "void MPU6050_Calibrate(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_484",
      "name": "BMP280_Calibrate",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 79,
          "context": "void BMP280_Calibrate(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_485",
      "name": "Sensors_EmulateStableHover",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 86,
          "context": "void Sensors_EmulateStableHover(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_486",
      "name": "Sensors_EmulateAscent",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 101,
          "context": "void Sensors_EmulateAscent(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_487",
      "name": "Sensors_EmulateDescent",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 111,
          "context": "void Sensors_EmulateDescent(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_488",
      "name": "Sensors_EmulateRotation",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 122,
          "context": "void Sensors_EmulateRotation(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_489",
      "name": "if",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 107,
          "context": "if (!Sensors_Update()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 119,
          "context": "if (currentState >= DRONE_STATE_ARMED) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 124,
          "context": "if (!Navigation_IsActive()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 131,
          "context": "if (Stabilization_IsEnabled() == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 139,
          "context": "if (actState.all_motors_enabled == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 146,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / TELEMETRY_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 151,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / DIAGNOSTIC_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 215,
          "context": "if ((mainLoopCounter % 10) < 5) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 230,
          "context": "if (Communication_Receive(&rxPacket)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 232,
          "context": "if (rxPacket.type == PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 234,
          "context": "if (rxPacket.length == sizeof(CommandPacket)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 240,
          "context": "if (currentState == DRONE_STATE_FLYING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 261,
          "context": "if (currentState >= DRONE_STATE_ARMED) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 357,
          "context": "if (sensorData.imu.temperature < MIN_BATTERY_VOLTAGE) { // Временно используем temperature как voltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 363,
          "context": "if (sensorData.baro.altitude > MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 369,
          "context": "if (fabsf(sensorData.imu.accel_x) > MAX_ANGLE ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 376,
          "context": "if (!Communication_IsConnected()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 384,
          "context": "if (!isEmergencyMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 407,
          "context": "if (isEmergencyMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 32,
          "context": "if (motor_index >= MOTOR_COUNT || emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 48,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 55,
          "context": "if (motor_index >= MOTOR_COUNT || emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 62,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 70,
          "context": "if (emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 87,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 95,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 103,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 117,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 131,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 146,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 152,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 159,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 167,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 176,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 185,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 194,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 201,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 228,
          "context": "if (actuators_state.motors[i].is_running) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 234,
          "context": "if (actuators_state.motors[i].temperature > 25.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 243,
          "context": "if (actuators_state.motors[i].is_running) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 250,
          "context": "if (*pwm_value > PWM_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 101,
          "context": "if (buffer == NULL || maxLength == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 106,
          "context": "if (UART0_FR_R & UART_FR_RXFE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 119,
          "context": "if (data == NULL || length == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 132,
          "context": "if (commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 145,
          "context": "if (!UART_Init(commState.baudRate)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 154,
          "context": "if (!commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 164,
          "context": "if (bytesReceived > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 174,
          "context": "if (processedIndex + packetSize > commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 179,
          "context": "if (ValidatePacket(packet)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 191,
          "context": "if (processedIndex > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 192,
          "context": "if (processedIndex < commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 205,
          "context": "if (!commState.initialized || length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 214,
          "context": "if (data != NULL && length > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 222,
          "context": "if (UART_Send((const uint8_t*)&packet, (uint16_t)sizeof(CommPacket))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 232,
          "context": "if (telemetry == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 249,
          "context": "if (message != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 261,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 302,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_CONFIG) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 319,
          "context": "if (baudRate != commState.baudRate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 321,
          "context": "if (commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 349,
          "context": "if (commState.currentTime - commState.lastPacketTime > COMM_TIMEOUT_MS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 378,
          "context": "if (currentTime - commState.lastPacketTime > COMM_TIMEOUT_MS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 379,
          "context": "if (commState.connected) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 385,
          "context": "if (!commState.connected) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 403,
          "context": "if (packet == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 408,
          "context": "if (packet->length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 452,
          "context": "if(length) *length = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 11,
          "context": "#ifndef NAN"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 13,
          "context": "#endif"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 30,
          "context": "#ifndef ADC0_SSMUX1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 32,
          "context": "#endif"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 33,
          "context": "#ifndef ADC0_SSCTL1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 35,
          "context": "#endif"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 150,
          "context": "if (diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 187,
          "context": "if (NVIC_APINT_R & 0x10000) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 197,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 220,
          "context": "if (voltage >= 12.6f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 222,
          "context": "} else if (voltage <= 9.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 229,
          "context": "if (voltage <= 9.5f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 231,
          "context": "} else if (voltage <= 10.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 253,
          "context": "if (state == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 272,
          "context": "if (state->batteryLevel < 20.0f) {  // Порог низкого заряда 20%"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 348,
          "context": "if (voltage <= BATTERY_CRITICAL_VOLTAGE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 352,
          "context": "else if (voltage <= BATTERY_LOW_VOLTAGE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 357,
          "context": "if (temp >= BATTERY_MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 439,
          "context": "if (mcu_temp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 443,
          "context": "else if (mcu_temp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 448,
          "context": "if (motors_temp >= TEMP_MOTORS_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 452,
          "context": "else if (motors_temp >= TEMP_MOTORS_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 457,
          "context": "if (board_temp >= TEMP_BOARD_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 461,
          "context": "else if (board_temp >= TEMP_BOARD_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 476,
          "context": "if (diagState.thermalState.mcuTemp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 481,
          "context": "} else if (diagState.thermalState.mcuTemp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 490,
          "context": "if (diagState.thermalState.motorTemps[i] >= TEMP_MOTORS_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 495,
          "context": "} else if (diagState.thermalState.motorTemps[i] >= TEMP_MOTORS_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 504,
          "context": "if (diagState.thermalState.boardTemp >= TEMP_BOARD_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 509,
          "context": "} else if (diagState.thermalState.boardTemp >= TEMP_BOARD_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 521,
          "context": "if (!isnan(temp)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 528,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 534,
          "context": "if (!diagState.initialized || diagState.logCount >= DIAG_MAX_LOG_ENTRIES) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 544,
          "context": "if (level >= LOG_ERROR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 548,
          "context": "if (level == LOG_FATAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 567,
          "context": "if (!entry || index >= diagState.logCount) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 583,
          "context": "if (!diagState.debugEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 596,
          "context": "if (len < DEBUG_BUFFER_SIZE - 2) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 654,
          "context": "if (diagState.systemState == SYSTEM_STATE_ERROR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 710,
          "context": "if (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 788,
          "context": "if (!diagState.lowPowerMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 807,
          "context": "if (diagState.lowPowerMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 831,
          "context": "if (diagState.perfCount == 0 || elapsed > diagState.perfMaxTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 834,
          "context": "if (diagState.perfCount == 0 || elapsed < diagState.perfMinTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 853,
          "context": "if (diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 859,
          "context": "if (!diagState.debugEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 895,
          "context": "if (diagState.perfCount > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 905,
          "context": "if (diagState.logCount > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 951,
          "context": "if (batteryVoltage < POWER_TEST_VOLTAGE_MIN) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 960,
          "context": "else if (batteryVoltage > POWER_TEST_VOLTAGE_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 972,
          "context": "if (batteryCurrent > POWER_TEST_CURRENT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 984,
          "context": "if (batteryTemp > POWER_TEST_TEMP_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 994,
          "context": "if (!TestSupplyVoltages()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1011,
          "context": "if (sensorSupply < POWER_TEST_SUPPLY_MIN || sensorSupply > POWER_TEST_SUPPLY_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1058,
          "context": "if (accel_magnitude > IMU_TEST_ACCEL_MAX || gyro_magnitude > IMU_TEST_GYRO_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1069,
          "context": "if (!TestBarometer()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1080,
          "context": "if (altitude < BARO_TEST_ALT_MIN || altitude > BARO_TEST_ALT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1091,
          "context": "if (!TestMagnetometer()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1111,
          "context": "if (mag_magnitude < MAG_TEST_FIELD_MIN || mag_magnitude > MAG_TEST_FIELD_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1121,
          "context": "if (HasGPS()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1122,
          "context": "if (!TestGPS()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1169,
          "context": "if (!TestESC()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1185,
          "context": "if (!TestMotorResponse(i)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1208,
          "context": "if (motorData[i].current > MOTOR_TEST_CURRENT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1220,
          "context": "if (motorData[i].rpm < 100.0f) {  // Минимальные обороты для теста"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1232,
          "context": "if (motorData[i].temperature > MOTOR_TEST_TEMP_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1242,
          "context": "if (motorData[i].vibration > MOTOR_TEST_VIB_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1306,
          "context": "if (IsRCTestResponseReceived()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1313,
          "context": "if (!rcResponded) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1324,
          "context": "if (rcQuality < RC_TEST_MIN_QUALITY) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1340,
          "context": "if (IsTelemetryAckReceived()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1347,
          "context": "if (!telemetryResponded) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1357,
          "context": "if (HasBackupComm() && !TestBackupComm()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1378,
          "context": "if (!TestWatchdogReset()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1389,
          "context": "if (!TestEEPROM()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1400,
          "context": "if (!TestFlashMemory()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1411,
          "context": "if (HasParachute()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1412,
          "context": "if (!TestParachuteSystem()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1424,
          "context": "if (!TestKillSwitch()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1444,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1459,
          "context": "if (timeout == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1477,
          "context": "if (adcResult.error != ADC_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1485,
          "context": "if (adcResult.value == 0 || adcResult.value >= ADC_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1513,
          "context": "if (isnan(temperature)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1525,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1542,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1553,
          "context": "if (!status.complete) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1555,
          "context": "if (conversionAttempts >= MAX_CONVERSION_ATTEMPTS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1576,
          "context": "if (result.ticks == 0 || result.ticks > NVIC_ST_RELOAD_R) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1589,
          "context": "if (startTicks.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1599,
          "context": "if (currentTicks.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1604,
          "context": "if (currentTicks.ticks <= startValue) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1625,
          "context": "if (currentTicksResult.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1632,
          "context": "if (currentTicks <= startTicks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1678,
          "context": "if (selfTestResult.powerTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1683,
          "context": "else if (selfTestResult.powerTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1690,
          "context": "if (selfTestResult.sensorTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1695,
          "context": "else if (selfTestResult.sensorTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1702,
          "context": "if (selfTestResult.motorTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1707,
          "context": "else if (selfTestResult.motorTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1714,
          "context": "if (selfTestResult.commTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1719,
          "context": "else if (selfTestResult.commTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1726,
          "context": "if (selfTestResult.safetyTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1731,
          "context": "else if (selfTestResult.safetyTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1738,
          "context": "if (selfTestResult.totalErrors > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1767,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1824,
          "context": "if (adcResult.error != ADC_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1852,
          "context": "if (isnan(temperature)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1865,
          "context": "if (type < 0 || type >= THERMOCOUPLE_TYPE_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1891,
          "context": "if (temperature < MIN_TEMP || temperature > MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1904,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1947,
          "context": "if (currentTime - lastBackupCommTest < 1000) {  // Тестируем не чаще раза в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1956,
          "context": "if (!success) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1965,
          "context": "if (ReceiveBackupCommPacket(response, sizeof(response))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1967,
          "context": "if (response[0] == 0x55 && response[1] == 0xAA &&"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1991,
          "context": "if (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 45,
          "context": "if (waypoint == NULL || waypoint_count >= MAX_WAYPOINTS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 49,
          "context": "if (!Navigation_IsValidPosition(&waypoint->position)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 61,
          "context": "if (index >= waypoint_count) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 73,
          "context": "if (current_waypoint_index > index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 91,
          "context": "if (index >= waypoint_count || waypoint == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 100,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 111,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 126,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 132,
          "context": "if (position != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 182,
          "context": "if (nav_state.current_position.altitude < NAV_MIN_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 185,
          "context": "} else if (nav_state.current_position.altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 194,
          "context": "if (!pos1->valid || !pos2->valid) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 212,
          "context": "if (!pos1->valid || !pos2->valid) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 228,
          "context": "if (position == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 233,
          "context": "if (position->latitude < -90.0f || position->latitude > 90.0f ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 243,
          "context": "if (!position->valid || !home_position_set) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 253,
          "context": "if (position != NULL && Navigation_IsValidPosition(position)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 260,
          "context": "if (!home_position_set) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 271,
          "context": "if (!nav_state.navigation_active || waypoint_count == 0 ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 284,
          "context": "if (nav_state.distance_to_target <= NAV_WAYPOINT_RADIUS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 286,
          "context": "if (current_waypoint_index < waypoint_count - 1) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 52,
          "context": "if (!sensor_state.mpu6050_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 61,
          "context": "if (!sensor_state.bmp280_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 115,
          "context": "if (sensor_state.current_altitude < 0.0f) sensor_state.current_altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 125,
          "context": "if (sensor_state.rotation_angle >= 360.0f) sensor_state.rotation_angle -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 144,
          "context": "if (data == NULL) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 150,
          "context": "if (orientation == NULL) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 182,
          "context": "if(data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 196,
          "context": "if(data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 106,
          "context": "if (!stabState.enabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 145,
          "context": "if (orientation != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 151,
          "context": "if (setPoint != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 190,
          "context": "if (pid == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 213,
          "context": "if (value < min) return min;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 214,
          "context": "if (value > max) return max;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 1,
          "context": "#ifndef ACTUATORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 76,
          "context": "#endif // ACTUATORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 1,
          "context": "#ifndef COMMUNICATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 112,
          "context": "#endif // COMMUNICATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 1,
          "context": "#ifndef DIAGNOSTICS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 567,
          "context": "#endif // DIAGNOSTICS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 1,
          "context": "#ifndef GPIO_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 49,
          "context": "#endif // GPIO_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 1,
          "context": "#ifndef MAIN_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 91,
          "context": "#endif // MAIN_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 1,
          "context": "#ifndef NAVIGATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 83,
          "context": "#endif // NAVIGATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 1,
          "context": "#ifndef SENSORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 55,
          "context": "#endif // SENSORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 1,
          "context": "#ifndef STABILIZATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 56,
          "context": "#endif // STABILIZATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 1,
          "context": "#ifndef TELEMETRY_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 14,
          "context": "#endif // TELEMETRY_H"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "360.0f",
          "type": "sensor_state.rotation_angle >="
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "секунду"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_490",
      "name": "Sensors_EmulateForwardMovement",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 132,
          "context": "void Sensors_EmulateForwardMovement(void) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_491",
      "name": "Sensors_GetIMUData",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 143,
          "context": "void Sensors_GetIMUData(MPU6050_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 153,
          "context": "Sensors_GetIMUData(&imu);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 115,
          "context": "Sensors_GetIMUData(&imuData);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "data",
          "type": "MPU6050_Data*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_492",
      "name": "Sensors_GetOrientation",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 339,
          "context": "Sensors_GetOrientation(&currentOrientation);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 149,
          "context": "void Sensors_GetOrientation(Orientation* orientation) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 117,
          "context": "Sensors_GetOrientation(&currentOrientation);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "orientation",
          "type": "Orientation*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_493",
      "name": "гироскопа",
      "description": "Интегрируем данные гироскопа (предполагаем, что Update вызывается каждые 10мс)",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [],
      "comments": "Интегрируем данные гироскопа (предполагаем, что Update вызывается каждые 10мс)",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "10мс",
          "type": "что Update вызывается каждые"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "данные"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_494",
      "name": "while",
      "description": "Нормализуем yaw в диапазоне 0-360 градусов",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 87,
          "context": "while(!IsPeripheralReady(peripheral)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 102,
          "context": "while (1) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 165,
          "context": "while(!IsPeripheralReady(SYSCTL_PERIPH_GPIOF)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 70,
          "context": "while((SYSCTL_PRGPIO_R & (1U << 0)) == 0) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 105,
          "context": "while (count < maxLength) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 124,
          "context": "while (UART0_FR_R & UART_FR_TXFF) {}  // Ждем освобождения буфера передачи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 169,
          "context": "while (processedIndex + sizeof(CommPacket) <= commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 143,
          "context": "while ((GetCurrentTime() - start) < ms) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 205,
          "context": "while(!(ADC0_RIS_R & ADC_RIS_INR3)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 293,
          "context": "while(!(SYSCTL_PRGPIO_R & SYSCTL_PRGPIO_R4)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 294,
          "context": "while(!(SYSCTL_PRADC_R & SYSCTL_PRADC_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 373,
          "context": "while(!(SYSCTL_PRGPIO_R & (SYSCTL_PRGPIO_R3 | SYSCTL_PRGPIO_R4))) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 374,
          "context": "while(!(SYSCTL_PRADC_R & SYSCTL_PRADC_R1)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 665,
          "context": "while(!(SYSCTL_PRWD_R & SYSCTL_PRWD_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1305,
          "context": "while (GetCurrentTime() - startTime < RC_TEST_TIMEOUT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1339,
          "context": "while (GetCurrentTime() - startTime < TELEMETRY_TEST_TIMEOUT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1454,
          "context": "while((ADC0_RIS_R & 0x08) == 0 && timeout > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1596,
          "context": "while (elapsedTicks < ticks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1915,
          "context": "while(!(ADC1_RIS_R & (1 << adcChannel))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1964,
          "context": "while (GetCurrentTime() - startTime < 100) {  // Таймаут 100 мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2032,
          "context": "while (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 295,
          "context": "while (heading < 0.0f) heading += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 296,
          "context": "while (heading >= 360.0f) heading -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 172,
          "context": "while (filteredYaw >= 360.0f) filteredYaw -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 173,
          "context": "while (filteredYaw < 0.0f) filteredYaw += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 131,
          "context": "while (yawError > 180.0f) yawError -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 132,
          "context": "while (yawError < -180.0f) yawError += 360.0f;"
        }
      ],
      "comments": "Нормализуем yaw в диапазоне 0-360 градусов",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "360.0f",
          "type": "filteredYaw >="
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "градусов"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_495",
      "name": "Sensors_GetAllData",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 113,
          "context": "Sensors_GetAllData(&sensorData);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 318,
          "context": "Sensors_GetAllData(&sensorData);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 181,
          "context": "void Sensors_GetAllData(SensorData* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 52,
          "context": "void Sensors_GetAllData(SensorData* data);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "data",
          "type": "SensorData*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_496",
      "name": "Sensors_GetBaroData",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 195,
          "context": "void Sensors_GetBaroData(BMP280_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 116,
          "context": "Sensors_GetBaroData(&altData);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 53,
          "context": "void Sensors_GetBaroData(BMP280_Data* data);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "data",
          "type": "BMP280_Data*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_497",
      "name": "Sensors_Update",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 107,
          "context": "if (!Sensors_Update()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 203,
          "context": "void Sensors_Update(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 50,
          "context": "bool Sensors_Update(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_498",
      "name": "UpdatePID",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 272,
          "context": "UpdatePIDParameters(cmdData.data.config.param, cmdData.data.config.value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 281,
          "context": "void UpdatePIDParameters(SystemParameter param, float value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 8,
          "context": "static float UpdatePID(PIDController* pid, float error);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 135,
          "context": "float rollOutput = UpdatePID(&stabState.rollPID, rollError);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 136,
          "context": "float pitchOutput = UpdatePID(&stabState.pitchPID, pitchError);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 137,
          "context": "float yawOutput = UpdatePID(&stabState.yawPID, yawError);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 138,
          "context": "float altitudeOutput = UpdatePID(&stabState.altitudePID, altitudeError);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 189,
          "context": "static float UpdatePID(PIDController* pid, float error) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 89,
          "context": "void UpdatePIDParameters(SystemParameter param, float value);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "pid",
          "type": "PIDController*"
        },
        {
          "name": "error",
          "type": "float"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": true,
      "scope": "static",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_499",
      "name": "ClampValue",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 9,
          "context": "static float ClampValue(float value, float min, float max);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 99,
          "context": "stabState.targetSetPoint.roll = ClampValue(roll, -MAX_ROLL_ANGLE, MAX_ROLL_ANGLE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 100,
          "context": "stabState.targetSetPoint.pitch = ClampValue(pitch, -MAX_PITCH_ANGLE, MAX_PITCH_ANGLE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 209,
          "context": "return ClampValue(output, pid->outputMin, pid->outputMax);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 212,
          "context": "static float ClampValue(float value, float min, float max) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 235,
          "context": "m1 = ClampValue(m1, 0.0f, 1.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 236,
          "context": "m2 = ClampValue(m2, 0.0f, 1.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 237,
          "context": "m3 = ClampValue(m3, 0.0f, 1.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 238,
          "context": "m4 = ClampValue(m4, 0.0f, 1.0f);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "value",
          "type": "float"
        },
        {
          "name": "min",
          "type": "float"
        },
        {
          "name": "max",
          "type": "float"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": true,
      "scope": "static",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_500",
      "name": "UpdateMotorOutputs",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 10,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 141,
          "context": "UpdateMotorOutputs(rollOutput, pitchOutput, yawOutput, altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 218,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "rollOutput",
          "type": "float"
        },
        {
          "name": "pitchOutput",
          "type": "float"
        },
        {
          "name": "yawOutput",
          "type": "float"
        },
        {
          "name": "altitudeOutput",
          "type": "float"
        }
      ],
      "output_params": [],
      "is_static": true,
      "scope": "static",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_501",
      "name": "DEG_TO_RAD",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 6,
          "context": "#define DEG_TO_RAD(x) ((x) * 0.017453292519943295)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 165,
          "context": "float speed_deg = speed / (EARTH_RADIUS * DEG_TO_RAD(1.0f));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 168,
          "context": "float heading_rad = DEG_TO_RAD(heading);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 199,
          "context": "float lat1 = DEG_TO_RAD(pos1->latitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 200,
          "context": "float lat2 = DEG_TO_RAD(pos2->latitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 201,
          "context": "float dlon = DEG_TO_RAD(pos2->longitude - pos1->longitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 216,
          "context": "float lat1 = DEG_TO_RAD(pos1->latitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 217,
          "context": "float lat2 = DEG_TO_RAD(pos2->latitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 218,
          "context": "float dlon = DEG_TO_RAD(pos2->longitude - pos1->longitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 13,
          "context": "#define DEG_TO_RAD(x) ((x) * 0.017453292519943295)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_502",
      "name": "RAD_TO_DEG",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 7,
          "context": "#define RAD_TO_DEG(x) ((x) * 57.295779513082323)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 222,
          "context": "float bearing = RAD_TO_DEG(atan2f(y, x));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 14,
          "context": "#define RAD_TO_DEG(x) ((x) * 57.295779513082323)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_503",
      "name": "стабилизации",
      "description": "Частота обновления системы стабилизации (Гц)",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [],
      "comments": "Частота обновления системы стабилизации (Гц)",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "системы"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_504",
      "name": "DT",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 69,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 671,
          "context": "WATCHDOG0_CTL_R &= ~WDT_CTL_INTEN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 683,
          "context": "WATCHDOG0_CTL_R |= (WDT_CTL_RESEN | WDT_CTL_INTEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 702,
          "context": "void WDT0_Handler(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 704,
          "context": "WATCHDOG0_ICR_R = WDT_ICR_M;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 718,
          "context": "return (WATCHDOG0_RIS_R & WDT_RIS_WDTRIS) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2006,
          "context": "WATCHDOG0_CTL_R &= ~(WDT_CTL_INTEN | WDT_CTL_RESEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2014,
          "context": "WATCHDOG0_CTL_R |= (WDT_CTL_RESEN | WDT_CTL_INTEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 18,
          "context": "#define DT (1.0f / UPDATE_FREQUENCY)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 198,
          "context": "pid->integral += error * DT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 202,
          "context": "float dTerm = pid->kD * (error - pid->prevError) / DT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 287,
          "context": "#define WDT_CTL_INTEN        0x00000001  // Разрешение прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 288,
          "context": "#define WDT_CTL_RESEN        0x00000002  // Разрешение сброса системы"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 471,
          "context": "#define WDT_RIS_WDTRIS        0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 472,
          "context": "#define WDT_ICR_M             0xFFFFFFFF  // Watchdog Timer Interrupt Clear Mask"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 490,
          "context": "void WDT0_Handler(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 34,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "UPDATE_FREQUENCY",
          "type": "1.0f /"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_505",
      "name": "углы",
      "description": "Ограничения на углы (градусы)",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [],
      "comments": "Ограничения на углы (градусы)",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "на"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_506",
      "name": "Stabilization_Init",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 37,
          "context": "void Stabilization_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 36,
          "context": "void Stabilization_Init(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_507",
      "name": "Stabilization_ConfigurePID",
      "description": "Настройка PID-регуляторов по умолчанию",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 305,
          "context": "Stabilization_ConfigurePID("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 53,
          "context": "Stabilization_ConfigurePID("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 61,
          "context": "void Stabilization_ConfigurePID(float rollKp, float rollKi, float rollKd,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 41,
          "context": "void Stabilization_ConfigurePID(float rollKp, float rollKi, float rollKd,"
        }
      ],
      "comments": "Настройка PID-регуляторов по умолчанию",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "1.0f",
          "type": "// Roll"
        },
        {
          "name": "2.0f",
          "type": "// Pitch"
        },
        {
          "name": "1.5f",
          "type": "// Yaw"
        },
        {
          "name": "Altitude",
          "type": "0.1f //"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "умолчанию"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_509",
      "name": "Stabilization_ResetPID",
      "description": "Сброс интегральных и дифференциальных составляющих",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 94,
          "context": "Stabilization_ResetPID();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 158,
          "context": "Stabilization_ResetPID();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 163,
          "context": "Stabilization_ResetPID();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 173,
          "context": "void Stabilization_ResetPID(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 38,
          "context": "void Stabilization_ResetPID(void);"
        }
      ],
      "comments": "Сброс интегральных и дифференциальных составляющих",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "составляющих"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_510",
      "name": "Stabilization_SetTargetOrientation",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 262,
          "context": "Stabilization_SetTargetOrientation("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 97,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 47,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "roll",
          "type": "float"
        },
        {
          "name": "pitch",
          "type": "float"
        },
        {
          "name": "yaw",
          "type": "float"
        },
        {
          "name": "altitude",
          "type": "float"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_511",
      "name": "любым",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "быть"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_512",
      "name": "Stabilization_Update",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 130,
          "context": "Stabilization_Update();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 105,
          "context": "void Stabilization_Update(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 37,
          "context": "void Stabilization_Update(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_514",
      "name": "Stabilization_GetCurrentOrientation",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 144,
          "context": "void Stabilization_GetCurrentOrientation(Orientation* orientation) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 48,
          "context": "void Stabilization_GetCurrentOrientation(Orientation* orientation);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "orientation",
          "type": "Orientation*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_515",
      "name": "Stabilization_GetSetPoint",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 150,
          "context": "void Stabilization_GetSetPoint(SetPoint* setPoint) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "setPoint",
          "type": "SetPoint*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_516",
      "name": "Stabilization_Enable",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 156,
          "context": "void Stabilization_Enable(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 52,
          "context": "void Stabilization_Enable(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_517",
      "name": "Stabilization_Disable",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 161,
          "context": "void Stabilization_Disable(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 53,
          "context": "void Stabilization_Disable(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_518",
      "name": "Actuators_SetAllMotors",
      "description": "Остановка всех моторов",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 41,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 98,
          "context": "Actuators_SetAllMotorsPWM(pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 171,
          "context": "Actuators_SetAllMotorsPWM(hover_pwm);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 180,
          "context": "Actuators_SetAllMotorsPWM(ascent_pwm);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 189,
          "context": "Actuators_SetAllMotorsPWM(descent_pwm);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 222,
          "context": "void Actuators_SetAllMotors(float power) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 166,
          "context": "Actuators_SetAllMotors(0.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 42,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 43,
          "context": "void Actuators_SetAllMotors(float power_level);  // Устанавливает одинаковую мощность для всех моторов"
        }
      ],
      "comments": "Остановка всех моторов",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "моторов"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_519",
      "name": "Stabilization_IsEnabled",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 131,
          "context": "if (Stabilization_IsEnabled() == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 169,
          "context": "bool Stabilization_IsEnabled(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 54,
          "context": "bool Stabilization_IsEnabled(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_525",
      "name": "левый",
      "description": "Вычисляем сигналы для каждого мотора\nМоторы расположены в следующем порядке:\nM1 - передний левый  (CCW)",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [],
      "comments": "Вычисляем сигналы для каждого мотора\nМоторы расположены в следующем порядке:\nM1 - передний левый  (CCW)",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "передний"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_526",
      "name": "правый",
      "description": "Вычисляем сигналы для каждого мотора\nМоторы расположены в следующем порядке:\nM1 - передний левый  (CCW)\nM2 - передний правый (CW)",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [],
      "comments": "Вычисляем сигналы для каждого мотора\nМоторы расположены в следующем порядке:\nM1 - передний левый  (CCW)\nM2 - передний правый (CW)",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "передний"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_529",
      "name": "Actuators_SetMotor",
      "description": "Устанавливаем значения на моторы",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 31,
          "context": "void Actuators_SetMotorPWM(uint8_t motor_index, uint16_t pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 43,
          "context": "Actuators_SetMotorPWM(i, pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 110,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm + pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 111,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm + pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 112,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 113,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm - pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 124,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm - pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 125,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 126,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm + pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 127,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm + pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 138,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm + roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 139,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm + roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 140,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 141,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm - roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 223,
          "context": "void Actuators_SetMotor(uint8_t index, float power) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 241,
          "context": "Actuators_SetMotor(0, m1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 242,
          "context": "Actuators_SetMotor(1, m2);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 243,
          "context": "Actuators_SetMotor(2, m3);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 244,
          "context": "Actuators_SetMotor(3, m4);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 41,
          "context": "void Actuators_SetMotorPWM(uint8_t motor_index, uint16_t pwm_value);"
        }
      ],
      "comments": "Устанавливаем значения на моторы",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "моторы"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_530",
      "name": "PWM",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 12,
          "context": "static void ClampPWMValue(uint16_t* pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 31,
          "context": "void Actuators_SetMotorPWM(uint8_t motor_index, uint16_t pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 36,
          "context": "ClampPWMValue(&pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 38,
          "context": "actuators_state.motors[motor_index].is_running = (pwm_value > (uint16_t)PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 41,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 43,
          "context": "Actuators_SetMotorPWM(i, pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 47,
          "context": "uint16_t Actuators_GetMotorPWM(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 66,
          "context": "actuators_state.motors[motor_index].pwm_value = PWM_MIN_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 97,
          "context": "uint16_t pwm_value = (uint16_t)((throttle * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100U + PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 98,
          "context": "Actuators_SetAllMotorsPWM(pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 108,
          "context": "int32_t pwm_delta = ((int32_t)yaw * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 110,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm + pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 111,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm + pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 112,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 113,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm - pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 124,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm - pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 125,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 126,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm + pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 127,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm + pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 138,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm + roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 139,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm + roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 140,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 141,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm - roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 170,
          "context": "uint16_t hover_pwm = PWM_MAX_VALUE / 2;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 171,
          "context": "Actuators_SetAllMotorsPWM(hover_pwm);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 179,
          "context": "uint16_t ascent_pwm = (uint16_t)(PWM_MAX_VALUE * 0.7f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 180,
          "context": "Actuators_SetAllMotorsPWM(ascent_pwm);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 188,
          "context": "uint16_t descent_pwm = (uint16_t)(PWM_MAX_VALUE * 0.3f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 189,
          "context": "Actuators_SetAllMotorsPWM(descent_pwm);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 230,
          "context": "float pwm_factor = (float)actuators_state.motors[i].pwm_value / PWM_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 249,
          "context": "static void ClampPWMValue(uint16_t* pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 250,
          "context": "if (*pwm_value > PWM_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 251,
          "context": "*pwm_value = PWM_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 17,
          "context": "#define PWM_MIN_VALUE     0    // Минимальное значение PWM (мотор выключен)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 18,
          "context": "#define PWM_MAX_VALUE     1000 // Максимальное значение PWM (полная мощность)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 19,
          "context": "#define PWM_IDLE_VALUE    100  // Значение PWM на холостом ходу"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 41,
          "context": "void Actuators_SetMotorPWM(uint8_t motor_index, uint16_t pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 42,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 44,
          "context": "uint16_t Actuators_GetMotorPWM(uint8_t motor_index);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "выключен",
          "type": "мотор"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "значение"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_533",
      "name": "газа",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "уровень"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_534",
      "name": "Actuators_Init",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 14,
          "context": "void Actuators_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 37,
          "context": "void Actuators_Init(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_535",
      "name": "Actuators_DeInit",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 26,
          "context": "void Actuators_DeInit(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 38,
          "context": "void Actuators_DeInit(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_536",
      "name": "Actuators_SetMotorPWM",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 31,
          "context": "void Actuators_SetMotorPWM(uint8_t motor_index, uint16_t pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 43,
          "context": "Actuators_SetMotorPWM(i, pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 110,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm + pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 111,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm + pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 112,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 113,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm - pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 124,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm - pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 125,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 126,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm + pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 127,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm + pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 138,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm + roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 139,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm + roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 140,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 141,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm - roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 41,
          "context": "void Actuators_SetMotorPWM(uint8_t motor_index, uint16_t pwm_value);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "motor_index",
          "type": "uint8_t"
        },
        {
          "name": "pwm_value",
          "type": "uint16_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_537",
      "name": "Actuators_SetAllMotorsPWM",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 41,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 98,
          "context": "Actuators_SetAllMotorsPWM(pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 171,
          "context": "Actuators_SetAllMotorsPWM(hover_pwm);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 180,
          "context": "Actuators_SetAllMotorsPWM(ascent_pwm);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 189,
          "context": "Actuators_SetAllMotorsPWM(descent_pwm);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 42,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "pwm_value",
          "type": "uint16_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_538",
      "name": "Actuators_SetAllMotors",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 41,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 98,
          "context": "Actuators_SetAllMotorsPWM(pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 171,
          "context": "Actuators_SetAllMotorsPWM(hover_pwm);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 180,
          "context": "Actuators_SetAllMotorsPWM(ascent_pwm);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 189,
          "context": "Actuators_SetAllMotorsPWM(descent_pwm);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 222,
          "context": "void Actuators_SetAllMotors(float power) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 166,
          "context": "Actuators_SetAllMotors(0.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 42,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 43,
          "context": "void Actuators_SetAllMotors(float power_level);  // Устанавливает одинаковую мощность для всех моторов"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "power_level",
          "type": "float"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_539",
      "name": "Actuators_GetMotorPWM",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 47,
          "context": "uint16_t Actuators_GetMotorPWM(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 44,
          "context": "uint16_t Actuators_GetMotorPWM(uint8_t motor_index);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "motor_index",
          "type": "uint8_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "uint16_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_540",
      "name": "Actuators_EnableMotor",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 54,
          "context": "void Actuators_EnableMotor(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 74,
          "context": "Actuators_EnableMotor(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 47,
          "context": "void Actuators_EnableMotor(uint8_t motor_index);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "motor_index",
          "type": "uint8_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_541",
      "name": "Actuators_DisableMotor",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 61,
          "context": "void Actuators_DisableMotor(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 81,
          "context": "Actuators_DisableMotor(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 48,
          "context": "void Actuators_DisableMotor(uint8_t motor_index);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "motor_index",
          "type": "uint8_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_542",
      "name": "Actuators_EnableAllMotors",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 69,
          "context": "void Actuators_EnableAllMotors(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 49,
          "context": "void Actuators_EnableAllMotors(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_543",
      "name": "Actuators_DisableAllMotors",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 28,
          "context": "Actuators_DisableAllMotors();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 79,
          "context": "void Actuators_DisableAllMotors(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 210,
          "context": "Actuators_DisableAllMotors();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 50,
          "context": "void Actuators_DisableAllMotors(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_544",
      "name": "Actuators_IsMotorEnabled",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 86,
          "context": "bool Actuators_IsMotorEnabled(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 51,
          "context": "bool Actuators_IsMotorEnabled(uint8_t motor_index);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "motor_index",
          "type": "uint8_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_545",
      "name": "Actuators_SetThrottle",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 94,
          "context": "void Actuators_SetThrottle(uint16_t throttle) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 54,
          "context": "void Actuators_SetThrottle(uint16_t throttle);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "throttle",
          "type": "uint16_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_546",
      "name": "Actuators_SetYaw",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 102,
          "context": "void Actuators_SetYaw(int16_t yaw) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 197,
          "context": "Actuators_SetYaw(yaw_rate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 55,
          "context": "void Actuators_SetYaw(int16_t yaw);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "yaw",
          "type": "int16_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_547",
      "name": "Actuators_SetPitch",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 116,
          "context": "void Actuators_SetPitch(int16_t pitch) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 204,
          "context": "Actuators_SetPitch(-speed); // Отрицательный питч для движения вперед"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 56,
          "context": "void Actuators_SetPitch(int16_t pitch);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "pitch",
          "type": "int16_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_548",
      "name": "Actuators_SetRoll",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 130,
          "context": "void Actuators_SetRoll(int16_t roll) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 57,
          "context": "void Actuators_SetRoll(int16_t roll);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "roll",
          "type": "int16_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_549",
      "name": "Actuators_GetState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 138,
          "context": "Actuators_GetState(&actState);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 145,
          "context": "void Actuators_GetState(ActuatorsState* state) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 60,
          "context": "void Actuators_GetState(ActuatorsState* state);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "state",
          "type": "ActuatorsState*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_550",
      "name": "Actuators_GetMotorTemperature",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 151,
          "context": "float Actuators_GetMotorTemperature(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 61,
          "context": "float Actuators_GetMotorTemperature(uint8_t motor_index);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "motor_index",
          "type": "uint8_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_551",
      "name": "Actuators_GetMotorRuntime",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 158,
          "context": "uint32_t Actuators_GetMotorRuntime(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 62,
          "context": "uint32_t Actuators_GetMotorRuntime(uint8_t motor_index);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "motor_index",
          "type": "uint8_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_552",
      "name": "Actuators_EmulateHover",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 166,
          "context": "void Actuators_EmulateHover(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 65,
          "context": "void Actuators_EmulateHover(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_553",
      "name": "Actuators_EmulateAscent",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 175,
          "context": "void Actuators_EmulateAscent(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 66,
          "context": "void Actuators_EmulateAscent(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_554",
      "name": "Actuators_EmulateDescent",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 184,
          "context": "void Actuators_EmulateDescent(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 67,
          "context": "void Actuators_EmulateDescent(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_555",
      "name": "Actuators_EmulateRotation",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 193,
          "context": "void Actuators_EmulateRotation(int16_t yaw_rate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 68,
          "context": "void Actuators_EmulateRotation(int16_t yaw_rate);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "yaw_rate",
          "type": "int16_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_556",
      "name": "Actuators_EmulateForwardFlight",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 200,
          "context": "void Actuators_EmulateForwardFlight(uint16_t speed) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 69,
          "context": "void Actuators_EmulateForwardFlight(uint16_t speed);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "speed",
          "type": "uint16_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_557",
      "name": "Actuators_EmergencyStop",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 395,
          "context": "Actuators_EmergencyStop();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 208,
          "context": "void Actuators_EmergencyStop(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 72,
          "context": "void Actuators_EmergencyStop(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_558",
      "name": "Actuators_IsEmergencyStopActive",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 213,
          "context": "bool Actuators_IsEmergencyStopActive(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 73,
          "context": "bool Actuators_IsEmergencyStopActive(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_559",
      "name": "Actuators_ResetEmergencyStop",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 417,
          "context": "Actuators_ResetEmergencyStop();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 217,
          "context": "void Actuators_ResetEmergencyStop(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 74,
          "context": "void Actuators_ResetEmergencyStop(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_560",
      "name": "GPIO_PORTA_AFSEL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 73,
          "context": "GPIO_PORTA_AFSEL_R |= (GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 11,
          "context": "#define GPIO_PORTA_AFSEL_R    (*((volatile uint32_t *)0x40004420))  // Port A Alternate Function Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 461,
          "context": "#define GPIO_PORTA_AFSEL_R    (*((volatile uint32_t *)0x40004420))  // Port A Alternate Function Select"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_561",
      "name": "GPIO_PORTA_DEN_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 74,
          "context": "GPIO_PORTA_DEN_R |= (GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 12,
          "context": "#define GPIO_PORTA_DEN_R      (*((volatile uint32_t *)0x4000451C))  // Port A Digital Enable"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_562",
      "name": "GPIO_PORTA_AMSEL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 75,
          "context": "GPIO_PORTA_AMSEL_R &= ~(GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 13,
          "context": "#define GPIO_PORTA_AMSEL_R    (*((volatile uint32_t *)0x40004528))  // Port A Analog Mode Select"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_563",
      "name": "GPIO_PORTA_PCTL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 76,
          "context": "GPIO_PORTA_PCTL_R = (GPIO_PORTA_PCTL_R & 0xFFFFFF00) | 0x00000011;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 14,
          "context": "#define GPIO_PORTA_PCTL_R     (*((volatile uint32_t *)0x4000452C))  // Port A Port Control"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_564",
      "name": "pack",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 34,
          "context": "#pragma pack(push, 4)  // Выравнивание по 4 байта для оптимизации"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 41,
          "context": "uint32_t packetsSent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 42,
          "context": "uint32_t packetsReceived;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 51,
          "context": "#pragma pack(pop)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 55,
          "context": "static bool ValidatePacket(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 56,
          "context": "static void ProcessReceivedPacket(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 170,
          "context": "CommPacket* packet = (CommPacket*)(commState.rxBuffer + processedIndex);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 173,
          "context": "uint16_t packetSize = sizeof(CommPacket) - COMM_MAX_PACKET_SIZE + packet->length;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 174,
          "context": "if (processedIndex + packetSize > commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 179,
          "context": "if (ValidatePacket(packet)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 180,
          "context": "ProcessReceivedPacket(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 181,
          "context": "commState.packetsReceived++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 187,
          "context": "processedIndex += packetSize;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 210,
          "context": "CommPacket packet;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 211,
          "context": "packet.type = type;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 212,
          "context": "packet.length = length;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 215,
          "context": "memcpy(packet.data, data, (size_t)length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 219,
          "context": "packet.checksum = CalculateChecksum((const uint8_t*)&packet, (uint16_t)(sizeof(CommPacket) - sizeof(uint16_t)));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 222,
          "context": "if (UART_Send((const uint8_t*)&packet, (uint16_t)sizeof(CommPacket))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 223,
          "context": "commState.packetsSent++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 260,
          "context": "void Communication_HandleCommand(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 261,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 265,
          "context": "CommandType cmd = packet->data[0];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 301,
          "context": "void Communication_HandleConfig(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 302,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_CONFIG) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 332,
          "context": "return commState.packetsSent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 336,
          "context": "return commState.packetsReceived;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 402,
          "context": "static bool ValidatePacket(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 403,
          "context": "if (packet == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 408,
          "context": "if (packet->length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 414,
          "context": "(uint8_t*)packet,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 415,
          "context": "sizeof(CommPacket) - sizeof(packet->checksum)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 418,
          "context": "return calculatedChecksum == packet->checksum;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 421,
          "context": "static void ProcessReceivedPacket(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 422,
          "context": "switch (packet->type) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 429,
          "context": "Communication_HandleCommand(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 433,
          "context": "Communication_HandleConfig(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 441,
          "context": "Communication_SendError(0x02, \"Unknown packet type\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 8,
          "context": "#include \"D:/keil/pack/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 70,
          "context": "#pragma pack(push, 4)  // Выравнивание по 4 байта"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 90,
          "context": "#pragma pack(pop)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 43,
          "context": "#pragma pack(push, 2)  // Выравнивание по 2 байта для оптимизации размера пакетов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 73,
          "context": "#pragma pack(pop)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 97,
          "context": "void Communication_HandleCommand(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 98,
          "context": "void Communication_HandleConfig(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 7,
          "context": "#pragma pack(push, 4)  // Выравнивание по 4 байта для оптимизации"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 46,
          "context": "#pragma pack(pop)  // Восстанавливаем стандартное выравнивание"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "pragma"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_565",
      "name": "батареи",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "Напряжение"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_566",
      "name": "MCU",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 389,
          "context": "ADC1_SSMUX0_R = (TEMP_MCU_CHANNEL << 0)   | // Встроенный сенсор MCU"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 402,
          "context": "ADC1_TSSEL_R |= (1 << TEMP_MCU_CHANNEL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 425,
          "context": "float mcu_temp = ((mcu_voltage * 1000.0f) / MCU_TEMP_SLOPE) + MCU_TEMP_OFFSET;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 439,
          "context": "if (mcu_temp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 441,
          "context": "\"Critical MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 443,
          "context": "else if (mcu_temp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 445,
          "context": "\"High MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 476,
          "context": "if (diagState.thermalState.mcuTemp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 479,
          "context": "\"MCU temperature critical\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 481,
          "context": "} else if (diagState.thermalState.mcuTemp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 484,
          "context": "\"MCU temperature warning\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 576,
          "context": "return (diagState.thermalState.mcuTemp >= TEMP_MCU_WARNING ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 883,
          "context": "SendDebugMessage(\"MCU Temp: %.1f°C\", diagState.thermalState.mcuTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1750,
          "context": "#define ADC_CHANNEL_MCU_TEMP         ADC_AIN0   // Канал АЦП для температур"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1757,
          "context": "uint32_t GetMCUTemperature(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 101,
          "context": "#define TEMP_MCU_WARNING      85.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 102,
          "context": "#define TEMP_MCU_CRITICAL     95.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 313,
          "context": "#define MCU_TEMP_SLOPE       1.0f    // Slope for MCU temperature conversion"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 314,
          "context": "#define MCU_TEMP_OFFSET      0.0f    // Offset for MCU temperature conversion"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 318,
          "context": "#define TEMP_MCU_CHANNEL     0       // Internal temperature sensor channel"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 402,
          "context": "uint32_t GetMCUTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 493,
          "context": "uint32_t GetMCUTemperature(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "Температура"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_567",
      "name": "высота",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "Текущая"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_568",
      "name": "земли",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "относительно"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_569",
      "name": "скорость",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "Вертикальная"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_572",
      "name": "UART_Init",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 64,
          "context": "bool UART_Init(uint32_t baudRate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 145,
          "context": "if (!UART_Init(commState.baudRate)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 322,
          "context": "UART_Init(baudRate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 76,
          "context": "bool UART_Init(uint32_t baudRate);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "baudRate",
          "type": "uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_573",
      "name": "UART_Receive",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 98,
          "context": "uint16_t UART_Receive(uint8_t* buffer, uint16_t maxLength) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 159,
          "context": "uint16_t bytesReceived = UART_Receive("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 77,
          "context": "uint16_t UART_Receive(uint8_t* buffer, uint16_t maxLength);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "buffer",
          "type": "uint8_t*"
        },
        {
          "name": "maxLength",
          "type": "uint16_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "uint16_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_574",
      "name": "UART_Send",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 116,
          "context": "bool UART_Send(const uint8_t* data, uint16_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 222,
          "context": "if (UART_Send((const uint8_t*)&packet, (uint16_t)sizeof(CommPacket))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 78,
          "context": "bool UART_Send(const uint8_t* data, uint16_t length);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "data",
          "type": "const uint8_t*"
        },
        {
          "name": "length",
          "type": "uint16_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_575",
      "name": "Communication_Init",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 131,
          "context": "bool Communication_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 81,
          "context": "void Communication_Init(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_576",
      "name": "Communication_SendData",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 447,
          "context": "void Communication_SendData(uint8_t* data, uint16_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 603,
          "context": "Communication_SendData((uint8_t*)debugBuffer, strlen(debugBuffer));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 82,
          "context": "void Communication_SendData(uint8_t* data, uint16_t length);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "data",
          "type": "uint8_t*"
        },
        {
          "name": "length",
          "type": "uint16_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_577",
      "name": "Communication_Receive",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 230,
          "context": "if (Communication_Receive(&rxPacket)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 451,
          "context": "void Communication_Receive(uint8_t* buffer, uint16_t* length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 83,
          "context": "uint16_t Communication_Receive(uint8_t* buffer, uint16_t maxLength);  // Изменили возвращаемый тип и имя параметра"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 89,
          "context": "uint16_t Communication_Receive(uint8_t* buffer, uint16_t maxLength);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "buffer",
          "type": "uint8_t*"
        },
        {
          "name": "maxLength",
          "type": "uint16_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "uint16_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_578",
      "name": "Communication_IsConnected",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 376,
          "context": "if (!Communication_IsConnected()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 310,
          "context": "bool Communication_IsConnected(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 84,
          "context": "bool Communication_IsConnected(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_579",
      "name": "Communication_Process",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 153,
          "context": "void Communication_Process(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 85,
          "context": "void Communication_Process(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_580",
      "name": "Communication_Send",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 351,
          "context": "Communication_SendTelemetry(&telemetry);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 392,
          "context": "Communication_SendError(0x01, reason);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 420,
          "context": "Communication_SendStatus(0x00);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 204,
          "context": "bool Communication_Send(PacketType type, const void* data, uint8_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 231,
          "context": "bool Communication_SendTelemetry(const TelemetryData* telemetry) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 235,
          "context": "return Communication_Send(PACKET_TYPE_TELEMETRY, telemetry, sizeof(TelemetryData));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 238,
          "context": "bool Communication_SendStatus(uint8_t status) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 239,
          "context": "return Communication_Send(PACKET_TYPE_STATUS, &status, sizeof(status));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 242,
          "context": "bool Communication_SendError(uint8_t errorCode, const char* message) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 256,
          "context": "return Communication_Send(PACKET_TYPE_ERROR, &errorData,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 296,
          "context": "Communication_SendError(0x01, \"Unknown command\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 382,
          "context": "Communication_SendError(0x03, \"Connection lost\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 388,
          "context": "Communication_SendStatus(0x01); // 0x01 - связь восстановлена"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 425,
          "context": "Communication_Send(PACKET_TYPE_HEARTBEAT, NULL, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 441,
          "context": "Communication_SendError(0x02, \"Unknown packet type\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 447,
          "context": "void Communication_SendData(uint8_t* data, uint16_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 603,
          "context": "Communication_SendData((uint8_t*)debugBuffer, strlen(debugBuffer));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 82,
          "context": "void Communication_SendData(uint8_t* data, uint16_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 88,
          "context": "bool Communication_Send(PacketType type, const void* data, uint8_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 92,
          "context": "bool Communication_SendTelemetry(const TelemetryData* telemetry);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 93,
          "context": "bool Communication_SendStatus(uint8_t status);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 94,
          "context": "bool Communication_SendError(uint8_t errorCode, const char* message);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "type",
          "type": "PacketType"
        },
        {
          "name": "data",
          "type": "const void*"
        },
        {
          "name": "length",
          "type": "uint8_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_582",
      "name": "Communication_SendTelemetry",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 351,
          "context": "Communication_SendTelemetry(&telemetry);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 231,
          "context": "bool Communication_SendTelemetry(const TelemetryData* telemetry) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 92,
          "context": "bool Communication_SendTelemetry(const TelemetryData* telemetry);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "telemetry",
          "type": "const TelemetryData*"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_583",
      "name": "Communication_SendStatus",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 420,
          "context": "Communication_SendStatus(0x00);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 238,
          "context": "bool Communication_SendStatus(uint8_t status) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 388,
          "context": "Communication_SendStatus(0x01); // 0x01 - связь восстановлена"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 93,
          "context": "bool Communication_SendStatus(uint8_t status);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "status",
          "type": "uint8_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_584",
      "name": "Communication_SendError",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 392,
          "context": "Communication_SendError(0x01, reason);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 242,
          "context": "bool Communication_SendError(uint8_t errorCode, const char* message) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 296,
          "context": "Communication_SendError(0x01, \"Unknown command\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 382,
          "context": "Communication_SendError(0x03, \"Connection lost\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 441,
          "context": "Communication_SendError(0x02, \"Unknown packet type\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 94,
          "context": "bool Communication_SendError(uint8_t errorCode, const char* message);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "errorCode",
          "type": "uint8_t"
        },
        {
          "name": "message",
          "type": "const char*"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_585",
      "name": "Communication_HandleCommand",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 260,
          "context": "void Communication_HandleCommand(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 429,
          "context": "Communication_HandleCommand(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 97,
          "context": "void Communication_HandleCommand(const CommPacket* packet);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "packet",
          "type": "const CommPacket*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_586",
      "name": "Communication_HandleConfig",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 301,
          "context": "void Communication_HandleConfig(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 433,
          "context": "Communication_HandleConfig(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 98,
          "context": "void Communication_HandleConfig(const CommPacket* packet);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "packet",
          "type": "const CommPacket*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_587",
      "name": "Communication_GetLastPacketTime",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 314,
          "context": "uint32_t Communication_GetLastPacketTime(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 101,
          "context": "uint32_t Communication_GetLastPacketTime(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_588",
      "name": "Communication_SetBaudRate",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 318,
          "context": "void Communication_SetBaudRate(uint32_t baudRate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 104,
          "context": "void Communication_SetBaudRate(uint32_t baudRate);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "baudRate",
          "type": "uint32_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_589",
      "name": "Communication_SetTelemetryRate",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 327,
          "context": "void Communication_SetTelemetryRate(uint16_t rateHz) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 105,
          "context": "void Communication_SetTelemetryRate(uint16_t rateHz);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "rateHz",
          "type": "uint16_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_590",
      "name": "Communication_GetPacketsSent",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 331,
          "context": "uint32_t Communication_GetPacketsSent(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 108,
          "context": "uint32_t Communication_GetPacketsSent(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_591",
      "name": "Communication_GetPacketsReceived",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 335,
          "context": "uint32_t Communication_GetPacketsReceived(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 109,
          "context": "uint32_t Communication_GetPacketsReceived(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_592",
      "name": "Communication_GetErrorCount",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 339,
          "context": "uint32_t Communication_GetErrorCount(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 110,
          "context": "uint32_t Communication_GetErrorCount(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_593",
      "name": "isnan",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 521,
          "context": "if (!isnan(temp)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1513,
          "context": "if (isnan(temperature)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1852,
          "context": "if (isnan(temperature)) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "Для"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_594",
      "name": "батареи",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "заряда"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_595",
      "name": "SYSCTL_RCGCGPIO_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 67,
          "context": "SYSCTL_RCGCGPIO_R |= (1U << 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 289,
          "context": "SYSCTL_RCGCGPIO_R |= SYSCTL_RCGCGPIO_R4;  // Порт E"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 369,
          "context": "SYSCTL_RCGCGPIO_R |= (SYSCTL_RCGCGPIO_R3 | SYSCTL_RCGCGPIO_R4);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 232,
          "context": "#define SYSCTL_RCGCGPIO_R    (*((volatile uint32_t *)0x400FE608))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 444,
          "context": "#define SYSCTL_RCGCGPIO_R3    0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 445,
          "context": "#define SYSCTL_RCGCGPIO_R4    0x00000010"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_596",
      "name": "SYSCTL_RCGCADC_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 290,
          "context": "SYSCTL_RCGCADC_R |= SYSCTL_RCGCADC_R0;    // ADC0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 370,
          "context": "SYSCTL_RCGCADC_R |= SYSCTL_RCGCADC_R1;    // ADC1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 233,
          "context": "#define SYSCTL_RCGCADC_R     (*((volatile uint32_t *)0x400FE638))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 446,
          "context": "#define SYSCTL_RCGCADC_R0     0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 447,
          "context": "#define SYSCTL_RCGCADC_R1     0x00000002"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_597",
      "name": "SYSCTL_PRGPIO_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 32,
          "context": "#define SYSCTL_PRGPIO_R       (*((volatile uint32_t *)0x400FEA08))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 70,
          "context": "while((SYSCTL_PRGPIO_R & (1U << 0)) == 0) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 293,
          "context": "while(!(SYSCTL_PRGPIO_R & SYSCTL_PRGPIO_R4)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 373,
          "context": "while(!(SYSCTL_PRGPIO_R & (SYSCTL_PRGPIO_R3 | SYSCTL_PRGPIO_R4))) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 234,
          "context": "#define SYSCTL_PRGPIO_R      (*((volatile uint32_t *)0x400FEA08))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 448,
          "context": "#define SYSCTL_PRGPIO_R3      0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 449,
          "context": "#define SYSCTL_PRGPIO_R4      0x00000010"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_598",
      "name": "SYSCTL_PRADC_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 294,
          "context": "while(!(SYSCTL_PRADC_R & SYSCTL_PRADC_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 374,
          "context": "while(!(SYSCTL_PRADC_R & SYSCTL_PRADC_R1)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 235,
          "context": "#define SYSCTL_PRADC_R       (*((volatile uint32_t *)0x400FEA38))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 450,
          "context": "#define SYSCTL_PRADC_R0       0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 451,
          "context": "#define SYSCTL_PRADC_R1       0x00000002"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_599",
      "name": "SYSCTL_RCGC2_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 31,
          "context": "#define SYSCTL_RCGC2_R          (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 80,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 85,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 759,
          "context": "savedPeripheralState = SYSCTL_RCGC2_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 765,
          "context": "SYSCTL_RCGC2_R = savedPeripheralState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 768,
          "context": "volatile uint32_t delay = SYSCTL_RCGC2_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 12,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 17,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 24,
          "context": "SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 236,
          "context": "#define SYSCTL_RCGC2_R       (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 26,
          "context": "#define SYSCTL_RCGC2_R         (*((volatile uint32_t *)0x400FE108))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_600",
      "name": "GPIO_PORTD_DEN_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 380,
          "context": "GPIO_PORTD_DEN_R &= ~(1<<3);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 238,
          "context": "#define GPIO_PORTD_DEN_R     (*((volatile uint32_t *)0x4005751C))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_601",
      "name": "GPIO_PORTD_AMSEL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 382,
          "context": "GPIO_PORTD_AMSEL_R |= (1<<3);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 239,
          "context": "#define GPIO_PORTD_AMSEL_R   (*((volatile uint32_t *)0x40057528))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_602",
      "name": "ADC1_ACTSS_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 385,
          "context": "ADC1_ACTSS_R &= ~ADC_ACTSS_ASEN0;          // Отключаем секвенсор для настройки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 404,
          "context": "ADC1_ACTSS_R |= ADC_ACTSS_ASEN0;           // Включаем секвенсор"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 241,
          "context": "#define ADC1_ACTSS_R         (*((volatile uint32_t *)0x40039000))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_603",
      "name": "ADC1_EMUX_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 386,
          "context": "ADC1_EMUX_R &= ~ADC_EMUX_EM0_M;            // Программный запуск"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 242,
          "context": "#define ADC1_EMUX_R          (*((volatile uint32_t *)0x40039014))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_604",
      "name": "ADC1_SSMUX0_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 389,
          "context": "ADC1_SSMUX0_R = (TEMP_MCU_CHANNEL << 0)   | // Встроенный сенсор MCU"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 243,
          "context": "#define ADC1_SSMUX0_R        (*((volatile uint32_t *)0x40039040))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_605",
      "name": "ADC1_SSCTL0_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 395,
          "context": "ADC1_SSCTL0_R = (0 << 0)                   | // Первый канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 244,
          "context": "#define ADC1_SSCTL0_R        (*((volatile uint32_t *)0x40039044))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_606",
      "name": "ADC1_TSSEL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 402,
          "context": "ADC1_TSSEL_R |= (1 << TEMP_MCU_CHANNEL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 245,
          "context": "#define ADC1_TSSEL_R         (*((volatile uint32_t *)0x4003901C))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_607",
      "name": "ADC1_SAC_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 407,
          "context": "ADC1_SAC_R = ADC_SAC_AVG_64X;              // 64x усреднение"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 246,
          "context": "#define ADC1_SAC_R           (*((volatile uint32_t *)0x40039030))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_608",
      "name": "ADC1_IM_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 410,
          "context": "ADC1_IM_R |= ADC_IM_MASK0;                 // Маска прерывания секвенсора 0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 247,
          "context": "#define ADC1_IM_R            (*((volatile uint32_t *)0x40039008))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_609",
      "name": "ADC1_SSFIF00_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 248,
          "context": "#define ADC1_SSFIF00_R       (*((volatile uint32_t *)0x40039048))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_610",
      "name": "ADC0_SAC_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 314,
          "context": "ADC0_SAC_R = ADC_SAC_AVG_64X;             // 64x усреднение"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 250,
          "context": "#define ADC0_SAC_R           (*((volatile uint32_t *)0x40038030))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_611",
      "name": "ADC0_IM_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 317,
          "context": "ADC0_IM_R |= ADC_IM_MASK1;                // Маска прерывания секвенсора 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 251,
          "context": "#define ADC0_IM_R            (*((volatile uint32_t *)0x40038008))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_612",
      "name": "ADC0_SSFIFO1_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 324,
          "context": "uint32_t voltage_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 325,
          "context": "uint32_t current_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 326,
          "context": "uint32_t temp_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 252,
          "context": "#define ADC0_SSFIFO1_R       (*((volatile uint32_t *)0x40038048))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_613",
      "name": "WATCHDOG0_LOAD_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 678,
          "context": "WATCHDOG0_LOAD_R = reload_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1996,
          "context": "uint32_t originalLoad = WATCHDOG0_LOAD_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2009,
          "context": "WATCHDOG0_LOAD_R = testTimeout;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2037,
          "context": "WATCHDOG0_LOAD_R = originalLoad;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 280,
          "context": "#define WATCHDOG0_LOAD_R     (*((volatile uint32_t *)0x40000000))  // Регистр загрузки WDT"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_614",
      "name": "WATCHDOG0_CTL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 671,
          "context": "WATCHDOG0_CTL_R &= ~WDT_CTL_INTEN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 683,
          "context": "WATCHDOG0_CTL_R |= (WDT_CTL_RESEN | WDT_CTL_INTEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1997,
          "context": "uint32_t originalCtl = WATCHDOG0_CTL_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2006,
          "context": "WATCHDOG0_CTL_R &= ~(WDT_CTL_INTEN | WDT_CTL_RESEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2014,
          "context": "WATCHDOG0_CTL_R |= (WDT_CTL_RESEN | WDT_CTL_INTEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2038,
          "context": "WATCHDOG0_CTL_R = originalCtl;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 281,
          "context": "#define WATCHDOG0_CTL_R      (*((volatile uint32_t *)0x40000008))  // Регистр управления WDT"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_615",
      "name": "WATCHDOG0_ICR_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 695,
          "context": "WATCHDOG0_ICR_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 704,
          "context": "WATCHDOG0_ICR_R = WDT_ICR_M;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 712,
          "context": "WATCHDOG0_ICR_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2026,
          "context": "WATCHDOG0_ICR_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 282,
          "context": "#define WATCHDOG0_ICR_R      (*((volatile uint32_t *)0x4000000C))  // Регистр очистки прерываний WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 469,
          "context": "#define WATCHDOG0_ICR_R       (*((volatile uint32_t *)0x40000008))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_616",
      "name": "WATCHDOG0_LOCK_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 668,
          "context": "WATCHDOG0_LOCK_R = 0x1ACCE551;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2003,
          "context": "WATCHDOG0_LOCK_R = 0x1ACCE551;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 283,
          "context": "#define WATCHDOG0_LOCK_R     (*((volatile uint32_t *)0x40000C00))  // Регистр блокировки WDT"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_617",
      "name": "WATCHDOG0_ICR_M",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 284,
          "context": "#define WATCHDOG0_ICR_M      (*((volatile uint32_t *)0x40000010))  // Регистр очистки прерываний WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 470,
          "context": "#define WATCHDOG0_ICR_M       (*((volatile uint32_t *)0x40000010))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_618",
      "name": "NVIC_SYS_CTRL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 736,
          "context": "NVIC_SYS_CTRL_R |= NVIC_SYS_CTRL_SLEEPDEEP; // Включаем режим сна"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 745,
          "context": "NVIC_SYS_CTRL_R |= NVIC_SYS_CTRL_SLEEPDEEP; // Включаем глубокий сон"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 751,
          "context": "NVIC_SYS_CTRL_R &= ~NVIC_SYS_CTRL_SLEEPDEEP; // Отключаем режим сна"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 291,
          "context": "#define NVIC_SYS_CTRL_R      (*((volatile uint32_t *)0xE000ED10))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_619",
      "name": "NVIC_EN0_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 318,
          "context": "NVIC_EN0_R |= (1 << (INT_ADC0SS1 - 16));  // Включаем прерывание в NVIC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 686,
          "context": "NVIC_EN0_R |= (1 << INT_WATCHDOG);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 779,
          "context": "NVIC_EN0_R |= (1 << INT_UART0);       // UART0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 780,
          "context": "NVIC_EN0_R |= (1 << INT_WTIMER0A);    // WatchDog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2017,
          "context": "NVIC_EN0_R |= (1 << INT_WATCHDOG);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 298,
          "context": "#define NVIC_EN0_R            (*((volatile uint32_t *)0xE000E100))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_620",
      "name": "NVIC_PRI0_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 689,
          "context": "NVIC_PRI0_R = (NVIC_PRI0_R & 0xFFFFFFF0) | 0x0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2020,
          "context": "NVIC_PRI0_R = (NVIC_PRI0_R & 0xFFFFFFF0) | 0x0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 299,
          "context": "#define NVIC_PRI0_R          (*((volatile uint32_t *)0xE000E400))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_621",
      "name": "NVIC_APINT_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 187,
          "context": "if (NVIC_APINT_R & 0x10000) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 300,
          "context": "#define NVIC_APINT_R         (*((volatile uint32_t *)0xE000ED0C))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_622",
      "name": "SYSCTL_RCGCWD_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 17,
          "context": "#define SYSCTL_RCGCWD_R        (*((volatile uint32_t *)(SYSCTL_BASE + 0x600)))  // Регистр тактирования Watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 662,
          "context": "SYSCTL_RCGCWD_R |= SYSCTL_RCGCWD_R0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 305,
          "context": "#define SYSCTL_RCGCWD_R      (*((volatile uint32_t *)0x400FE600))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 309,
          "context": "#define SYSCTL_RCGCWD_R0     0x00000001"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_623",
      "name": "SYSCTL_PRWD_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 18,
          "context": "#define SYSCTL_PRWD_R          (*((volatile uint32_t *)(SYSCTL_BASE + 0xA00)))  // Регистр готовности Watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 665,
          "context": "while(!(SYSCTL_PRWD_R & SYSCTL_PRWD_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 306,
          "context": "#define SYSCTL_PRWD_R        (*((volatile uint32_t *)0x400FEA00))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 310,
          "context": "#define SYSCTL_PRWD_R0       0x00000001"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_624",
      "name": "NVIC_EN1_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 411,
          "context": "NVIC_EN1_R |= (1 << (INT_ADC1SS0 - 48));   // Включаем прерывание в NVIC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 321,
          "context": "#define NVIC_EN1_R           (*((volatile uint32_t *)0xE000E104))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_625",
      "name": "ADC1_SSFIFO0_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 417,
          "context": "uint32_t mcu_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 418,
          "context": "uint32_t motors_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 419,
          "context": "uint32_t board_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 420,
          "context": "uint32_t ambient_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1920,
          "context": "uint32_t result = ADC1_SSFIFO0_R & 0xFFF;  // 12-bit ADC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 324,
          "context": "#define ADC1_SSFIFO0_R       (*((volatile uint32_t *)0x40039044))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_626",
      "name": "NVIC_ST_CTRL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 356,
          "context": "NVIC_ST_CTRL_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 365,
          "context": "NVIC_ST_CTRL_R = NVIC_ST_CTRL_ENABLE |"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 25,
          "context": "#define NVIC_ST_CTRL_R          (*((volatile uint32_t *)0xE000E010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 120,
          "context": "NVIC_ST_CTRL_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 132,
          "context": "NVIC_ST_CTRL_R = 0x07;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 327,
          "context": "#define NVIC_ST_CTRL_R       (*((volatile uint32_t *)0xE000E010))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_627",
      "name": "NVIC_ST_RELOAD_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 359,
          "context": "NVIC_ST_RELOAD_R = SystemCoreClock / 1000 - 1;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 26,
          "context": "#define NVIC_ST_RELOAD_R        (*((volatile uint32_t *)0xE000E014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 123,
          "context": "NVIC_ST_RELOAD_R = 16000 - 1;  // (16MHz / 1000Hz) - 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1576,
          "context": "if (result.ticks == 0 || result.ticks > NVIC_ST_RELOAD_R) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1607,
          "context": "elapsedTicks = (NVIC_ST_RELOAD_R - currentTicks.ticks) + startValue;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1636,
          "context": "result.elapsedTicks = (NVIC_ST_RELOAD_R - currentTicks) + startTicks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 328,
          "context": "#define NVIC_ST_RELOAD_R     (*((volatile uint32_t *)0xE000E014))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_628",
      "name": "NVIC_ST_CURRENT_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 362,
          "context": "NVIC_ST_CURRENT_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 27,
          "context": "#define NVIC_ST_CURRENT_R       (*((volatile uint32_t *)0xE000E018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 126,
          "context": "NVIC_ST_CURRENT_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1571,
          "context": ".ticks = NVIC_ST_CURRENT_R,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 329,
          "context": "#define NVIC_ST_CURRENT_R    (*((volatile uint32_t *)0xE000E018))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_629",
      "name": "тактирования",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "частота",
          "type": "системная"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "источника"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_630",
      "name": "Diagnostics_Init",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 149,
          "context": "bool Diagnostics_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 660,
          "context": "void Diagnostics_InitWatchdog(uint32_t timeout_ms) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1649,
          "context": "void Diagnostics_InitSelfTest(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1674,
          "context": "Diagnostics_InitSelfTest();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 340,
          "context": "bool Diagnostics_Init(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 342,
          "context": "void Diagnostics_InitSelfTest(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 375,
          "context": "void Diagnostics_InitWatchdog(uint32_t timeout_ms);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_631",
      "name": "Diagnostics_PerformSelfTest",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 341,
          "context": "bool Diagnostics_PerformSelfTest(SelfTestResult* result);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "result",
          "type": "SelfTestResult*"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_632",
      "name": "Diagnostics_InitSelfTest",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1649,
          "context": "void Diagnostics_InitSelfTest(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1674,
          "context": "Diagnostics_InitSelfTest();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 342,
          "context": "void Diagnostics_InitSelfTest(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_633",
      "name": "Diagnostics_PerformQuickTest",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1673,
          "context": "bool Diagnostics_PerformQuickTest(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 343,
          "context": "bool Diagnostics_PerformQuickTest(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 529,
          "context": "bool Diagnostics_PerformQuickTest(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_634",
      "name": "UpdateMotorTemperatures",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 10,
          "context": "static void UpdateMotorTemperatures(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 226,
          "context": "static void UpdateMotorTemperatures(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 517,
          "context": "void UpdateMotorTemperatures(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 344,
          "context": "void UpdateMotorTemperatures(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_635",
      "name": "Diagnostics_GetEventString",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 345,
          "context": "const char* Diagnostics_GetEventString(DiagnosticEvent event);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "event",
          "type": "DiagnosticEvent"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "char*"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_636",
      "name": "Diagnostics_Log",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 389,
          "context": "Diagnostics_Log(LOG_CRITICAL, DIAG_EVENT_SYSTEM_START, reason, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 188,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_WATCHDOG_RESET, \"System reset by watchdog\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 191,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START, \"Diagnostics initialized\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 230,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_BATTERY_CRITICAL, \"Battery critically low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 232,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_BATTERY_LOW, \"Battery low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 255,
          "context": "Diagnostics_Log(LOG_CRITICAL, DIAG_EVENT_SYSTEM_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 273,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_BATTERY_LOW,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 349,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_LOW_BATTERY,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 353,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_LOW_BATTERY,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 358,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 440,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 444,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 449,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 453,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 458,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 462,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 478,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 483,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 492,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 497,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 506,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 511,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 533,
          "context": "void Diagnostics_Log(LogLevel level, DiagnosticEvent event, const char* message, uint32_t data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 697,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 706,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_WATCHDOG_RESET, \"Watchdog reset occurred\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 792,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_STOP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 818,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 918,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START, \"Running self-test\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 956,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 965,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 977,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 989,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 999,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1063,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1074,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1085,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1096,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1116,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1127,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1174,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1190,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1213,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1225,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1237,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1247,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1318,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1329,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1352,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1362,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1383,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1394,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1405,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1417,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1429,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1478,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1486,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1506,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1514,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1578,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SYSTEM_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1740,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SYSTEM_ERROR, selfTestResult.message, selfTestResult.totalErrors);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1745,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SELF_TEST, selfTestResult.message, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1825,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1845,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1853,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1866,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1892,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2028,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 346,
          "context": "void Diagnostics_Log(uint8_t level, DiagnosticEvent event, const char* message, uint32_t data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 353,
          "context": "void Diagnostics_Log(LogLevel level, DiagnosticEvent event, const char* message, uint32_t data);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "level",
          "type": "uint8_t"
        },
        {
          "name": "event",
          "type": "DiagnosticEvent"
        },
        {
          "name": "message",
          "type": "const char*"
        },
        {
          "name": "data",
          "type": "uint32_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_637",
      "name": "GetColdJunctionTemperature",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1821,
          "context": "float GetColdJunctionTemperature(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 349,
          "context": "float GetColdJunctionTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 408,
          "context": "float GetColdJunctionTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 499,
          "context": "float GetColdJunctionTemperature(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_638",
      "name": "ConvertThermocoupleVoltageToTemp",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1863,
          "context": "float ConvertThermocoupleVoltageToTemp(float thermocoupleVoltage, ThermocoupleType type, float coldJunctionTemp) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 350,
          "context": "float ConvertThermocoupleVoltageToTemp(float thermocoupleVoltage, ThermocoupleType type, float coldJunctionTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 409,
          "context": "float ConvertThermocoupleVoltageToTemp(float thermocoupleVoltage, ThermocoupleType type, float coldJunctionTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 500,
          "context": "float ConvertThermocoupleVoltageToTemp(float thermocoupleVoltage, ThermocoupleType type, float coldJunctionTemp);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "thermocoupleVoltage",
          "type": "float"
        },
        {
          "name": "type",
          "type": "ThermocoupleType"
        },
        {
          "name": "coldJunctionTemp",
          "type": "float"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_640",
      "name": "Diagnostics_ClearLog",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 412,
          "context": "Diagnostics_ClearLog();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 556,
          "context": "void Diagnostics_ClearLog(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 354,
          "context": "void Diagnostics_ClearLog(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_641",
      "name": "Diagnostics_GetLogCount",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 562,
          "context": "uint32_t Diagnostics_GetLogCount(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 355,
          "context": "uint32_t Diagnostics_GetLogCount(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_642",
      "name": "Diagnostics_GetLogEntry",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 566,
          "context": "bool Diagnostics_GetLogEntry(uint32_t index, LogEntry* entry) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 356,
          "context": "bool Diagnostics_GetLogEntry(uint32_t index, LogEntry* entry);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "index",
          "type": "uint32_t"
        },
        {
          "name": "entry",
          "type": "LogEntry*"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_643",
      "name": "Diagnostics_GetIMUData",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 359,
          "context": "bool Diagnostics_GetIMUData(IMUData* data);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "data",
          "type": "IMUData*"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_644",
      "name": "Diagnostics_CalibrateIMU",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 360,
          "context": "bool Diagnostics_CalibrateIMU(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_645",
      "name": "Diagnostics_IsIMUCalibrated",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 361,
          "context": "bool Diagnostics_IsIMUCalibrated(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_646",
      "name": "Diagnostics_UpdatePowerState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 196,
          "context": "void Diagnostics_UpdatePowerState(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 364,
          "context": "void Diagnostics_UpdatePowerState(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_647",
      "name": "Diagnostics_GetPowerState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 329,
          "context": "Diagnostics_GetPowerState(&powerState);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 251,
          "context": "void Diagnostics_GetPowerState(PowerState* state) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 365,
          "context": "void Diagnostics_GetPowerState(PowerState* state); // Обновленный прототип функции"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 519,
          "context": "void Diagnostics_GetPowerState(PowerState* state);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "state",
          "type": "PowerState*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_648",
      "name": "Diagnostics_GetBatteryVoltage",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 278,
          "context": "float Diagnostics_GetBatteryVoltage(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 366,
          "context": "float Diagnostics_GetBatteryVoltage(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_649",
      "name": "Diagnostics_GetBatteryLevel",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 282,
          "context": "uint8_t Diagnostics_GetBatteryLevel(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 367,
          "context": "uint8_t Diagnostics_GetBatteryLevel(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint8_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_650",
      "name": "Diagnostics_UpdateThermalState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 470,
          "context": "void Diagnostics_UpdateThermalState(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 370,
          "context": "void Diagnostics_UpdateThermalState(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_651",
      "name": "Diagnostics_GetThermalState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 330,
          "context": "Diagnostics_GetThermalState(&thermalState);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 527,
          "context": "void Diagnostics_GetThermalState(ThermalState* state) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 371,
          "context": "void Diagnostics_GetThermalState(ThermalState* state);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "state",
          "type": "ThermalState*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_652",
      "name": "Diagnostics_IsOverheated",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 575,
          "context": "bool Diagnostics_IsOverheated(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 372,
          "context": "bool Diagnostics_IsOverheated(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_653",
      "name": "Diagnostics_InitWatchdog",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 660,
          "context": "void Diagnostics_InitWatchdog(uint32_t timeout_ms) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 375,
          "context": "void Diagnostics_InitWatchdog(uint32_t timeout_ms);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "timeout_ms",
          "type": "uint32_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_654",
      "name": "Diagnostics_FeedWatchdog",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 176,
          "context": "Diagnostics_FeedWatchdog();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 709,
          "context": "void Diagnostics_FeedWatchdog(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 376,
          "context": "void Diagnostics_FeedWatchdog(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_655",
      "name": "Diagnostics_IsWatchdogReset",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 716,
          "context": "bool Diagnostics_IsWatchdogReset(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 377,
          "context": "bool Diagnostics_IsWatchdogReset(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_656",
      "name": "Diagnostics_StartPerformanceCounter",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 824,
          "context": "void Diagnostics_StartPerformanceCounter(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 380,
          "context": "void Diagnostics_StartPerformanceCounter(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_657",
      "name": "Diagnostics_StopPerformanceCounter",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 828,
          "context": "uint32_t Diagnostics_StopPerformanceCounter(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 381,
          "context": "uint32_t Diagnostics_StopPerformanceCounter(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_658",
      "name": "Diagnostics_ResetPerformanceStats",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 844,
          "context": "void Diagnostics_ResetPerformanceStats(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 382,
          "context": "void Diagnostics_ResetPerformanceStats(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_659",
      "name": "Diagnostics_GetErrorCount",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 348,
          "context": "telemetry.errorFlags = (uint8_t)Diagnostics_GetErrorCount();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 648,
          "context": "uint32_t Diagnostics_GetErrorCount(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 385,
          "context": "uint32_t Diagnostics_GetErrorCount(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_660",
      "name": "Diagnostics_GetUptimeMs",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 386,
          "context": "uint32_t Diagnostics_GetUptimeMs(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_661",
      "name": "Diagnostics_PrintSystemStatus",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 858,
          "context": "void Diagnostics_PrintSystemStatus(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 389,
          "context": "void Diagnostics_PrintSystemStatus(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_662",
      "name": "Diagnostics_GetADCValue",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1440,
          "context": "ADCResult Diagnostics_GetADCValue(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1775,
          "context": "ADCResult result = Diagnostics_GetADCValue();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1822,
          "context": "ADCResult adcResult = Diagnostics_GetADCValue();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 392,
          "context": "ADCResult Diagnostics_GetADCValue(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "ADCResult"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_663",
      "name": "Diagnostics_ConvertADCToTemp",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1475,
          "context": "float Diagnostics_ConvertADCToTemp(ADCResult adcResult) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1776,
          "context": "return Diagnostics_ConvertADCToTemp(result);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 393,
          "context": "float Diagnostics_ConvertADCToTemp(ADCResult adcResult); // Обновленный прототип функции преобразования температур"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "adcResult",
          "type": "ADCResult"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_664",
      "name": "Diagnostics_StartADCConversion",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1524,
          "context": "ADCError Diagnostics_StartADCConversion(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 394,
          "context": "ADCError Diagnostics_StartADCConversion(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "ADCError"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_665",
      "name": "Diagnostics_IsADCConversionComplete",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1536,
          "context": "ADCConversionStatus Diagnostics_IsADCConversionComplete(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 395,
          "context": "ADCConversionStatus Diagnostics_IsADCConversionComplete(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "ADCConversionStatus"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_666",
      "name": "Diagnostics_GetSystemTicks",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1569,
          "context": "SystemTickResult Diagnostics_GetSystemTicks(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1587,
          "context": "SystemTickResult startTicks = Diagnostics_GetSystemTicks();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1597,
          "context": "SystemTickResult currentTicks = Diagnostics_GetSystemTicks();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1623,
          "context": "SystemTickResult currentTicksResult = Diagnostics_GetSystemTicks();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 397,
          "context": "SystemTickResult Diagnostics_GetSystemTicks(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "SystemTickResult"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_667",
      "name": "Diagnostics_DelayTicks",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1586,
          "context": "SystemTickError Diagnostics_DelayTicks(uint32_t ticks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 398,
          "context": "SystemTickError Diagnostics_DelayTicks(uint32_t ticks);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "ticks",
          "type": "uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "SystemTickError"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_668",
      "name": "Diagnostics_GetElapsedTicks",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1617,
          "context": "ElapsedTicksResult Diagnostics_GetElapsedTicks(uint32_t startTicks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 399,
          "context": "ElapsedTicksResult Diagnostics_GetElapsedTicks(uint32_t startTicks);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "startTicks",
          "type": "uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "ElapsedTicksResult"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_669",
      "name": "GetMCUTemperature",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1757,
          "context": "uint32_t GetMCUTemperature(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 402,
          "context": "uint32_t GetMCUTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 493,
          "context": "uint32_t GetMCUTemperature(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_670",
      "name": "GetBatteryTemperature",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1779,
          "context": "uint32_t GetBatteryTemperature(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 403,
          "context": "uint32_t GetBatteryTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 481,
          "context": "uint32_t GetBatteryTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 494,
          "context": "uint32_t GetBatteryTemperature(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_671",
      "name": "GetBoardTemperature",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1788,
          "context": "uint32_t GetBoardTemperature(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 404,
          "context": "uint32_t GetBoardTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 482,
          "context": "uint32_t GetBoardTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 495,
          "context": "uint32_t GetBoardTemperature(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_672",
      "name": "GetEnvironmentTemperature",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1797,
          "context": "uint32_t GetEnvironmentTemperature(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 405,
          "context": "uint32_t GetEnvironmentTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 483,
          "context": "uint32_t GetEnvironmentTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 496,
          "context": "uint32_t GetEnvironmentTemperature(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint32_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_675",
      "name": "GetMotorCurrent",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1202,
          "context": "motorData[i].current = GetMotorCurrent(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1902,
          "context": "float GetMotorCurrent(int motorIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 412,
          "context": "float GetMotorCurrent(int motorIndex);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 532,
          "context": "float GetMotorCurrent(int motorIndex);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "motorIndex",
          "type": "int"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_676",
      "name": "GetMotorRPM",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1203,
          "context": "motorData[i].rpm = GetMotorRPM(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2056,
          "context": "uint16_t GetMotorRPM(void) { return 0; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2067,
          "context": "uint16_t GetMotorRPM(int motorIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 413,
          "context": "uint16_t GetMotorRPM(void);        // Убрали параметр"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 533,
          "context": "uint16_t GetMotorRPM(void);        // Убрали параметр"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 554,
          "context": "uint16_t GetMotorRPM(void);        // Убрали параметр"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint16_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_677",
      "name": "GetMotorTemperature",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 151,
          "context": "float Actuators_GetMotorTemperature(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 520,
          "context": "float temp = GetMotorTemperature(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1204,
          "context": "motorData[i].temperature = GetMotorTemperature(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1766,
          "context": "float GetMotorTemperature(int motorIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 61,
          "context": "float Actuators_GetMotorTemperature(uint8_t motor_index);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 414,
          "context": "float GetMotorTemperature(int motorIndex);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 480,
          "context": "float GetMotorTemperature(int motorIndex);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 534,
          "context": "float GetMotorTemperature(int motorIndex);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "motorIndex",
          "type": "int"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_678",
      "name": "GetMotorVibration",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1205,
          "context": "motorData[i].vibration = GetMotorVibration(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2057,
          "context": "float GetMotorVibration(void) { return 0.0f; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2071,
          "context": "float GetMotorVibration(int motorIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 415,
          "context": "float GetMotorVibration(void);     // Убрали параметр"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 535,
          "context": "float GetMotorVibration(void);     // Убрали параметр"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 555,
          "context": "float GetMotorVibration(void);     // Убрали параметр"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_679",
      "name": "HasBackupComm",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1357,
          "context": "if (HasBackupComm() && !TestBackupComm()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1938,
          "context": "bool HasBackupComm(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 421,
          "context": "bool HasBackupComm(void);      // Проверяет наличие резервного канала связи"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_680",
      "name": "TestBackupComm",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1357,
          "context": "if (HasBackupComm() && !TestBackupComm()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1943,
          "context": "bool TestBackupComm(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 422,
          "context": "bool TestBackupComm(void);     // Тестирует работоспособность резервного канала"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_681",
      "name": "TestWatchdogReset",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1378,
          "context": "if (!TestWatchdogReset()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1989,
          "context": "bool TestWatchdogReset(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 430,
          "context": "bool TestWatchdogReset(void);  // Тестирует срабатывание watchdog reset"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_682",
      "name": "ADC1_PSSI_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1912,
          "context": "ADC1_PSSI_R |= (1 << adcChannel);  // Запуск преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 454,
          "context": "#define ADC1_PSSI_R           (*((volatile uint32_t *)0x40039028))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_683",
      "name": "ADC1_RIS_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1915,
          "context": "while(!(ADC1_RIS_R & (1 << adcChannel))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 455,
          "context": "#define ADC1_RIS_R            (*((volatile uint32_t *)0x40039004))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_684",
      "name": "GPIO_PORTA_IM_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 783,
          "context": "GPIO_PORTA_IM_R |= 0x03;              // Разрешаем прерывания на PA0-PA1 (UART)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 459,
          "context": "#define GPIO_PORTA_IM_R       (*((volatile uint32_t *)0x40004010))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_685",
      "name": "GPIO_PORTA_IEV_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 784,
          "context": "GPIO_PORTA_IEV_R &= ~0x03;            // Прерывание по спаду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 460,
          "context": "#define GPIO_PORTA_IEV_R      (*((volatile uint32_t *)0x4000440C))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_686",
      "name": "GPIO_PORTA_AFSEL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 73,
          "context": "GPIO_PORTA_AFSEL_R |= (GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 11,
          "context": "#define GPIO_PORTA_AFSEL_R    (*((volatile uint32_t *)0x40004420))  // Port A Alternate Function Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 461,
          "context": "#define GPIO_PORTA_AFSEL_R    (*((volatile uint32_t *)0x40004420))  // Port A Alternate Function Select"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_687",
      "name": "GPIO_PORTE_AFSEL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 297,
          "context": "GPIO_PORTE_AFSEL_R |= (1<<3) | (1<<2) | (1<<1);  // Альтернативная функция"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 377,
          "context": "GPIO_PORTE_AFSEL_R |= (1<<4) | (1<<5);     // PE4, PE5"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 462,
          "context": "#define GPIO_PORTE_AFSEL_R    (*((volatile uint32_t *)0x40024420))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_688",
      "name": "GPIO_PORTE_DEN_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 298,
          "context": "GPIO_PORTE_DEN_R &= ~((1<<3) | (1<<2) | (1<<1)); // Отключаем цифровой режим"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 379,
          "context": "GPIO_PORTE_DEN_R &= ~((1<<4) | (1<<5));    // Отключаем цифровой режим"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 463,
          "context": "#define GPIO_PORTE_DEN_R      (*((volatile uint32_t *)0x4002451C))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_689",
      "name": "GPIO_PORTE_AMSEL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 299,
          "context": "GPIO_PORTE_AMSEL_R |= (1<<3) | (1<<2) | (1<<1);  // Включаем аналоговый режим"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 381,
          "context": "GPIO_PORTE_AMSEL_R |= (1<<4) | (1<<5);     // Включаем аналоговый режим"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 464,
          "context": "#define GPIO_PORTE_AMSEL_R    (*((volatile uint32_t *)0x40024528))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_690",
      "name": "GPIO_PORTD_AFSEL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 378,
          "context": "GPIO_PORTD_AFSEL_R |= (1<<3);              // PD3"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 465,
          "context": "#define GPIO_PORTD_AFSEL_R    (*((volatile uint32_t *)0x40007420))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_691",
      "name": "WATCHDOG0_RIS_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 718,
          "context": "return (WATCHDOG0_RIS_R & WDT_RIS_WDTRIS) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 468,
          "context": "#define WATCHDOG0_RIS_R       (*((volatile uint32_t *)0x40000004))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_698",
      "name": "SendBackupCommPacket",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1955,
          "context": "bool success = SendBackupCommPacket(testPacket, sizeof(testPacket));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1978,
          "context": "bool SendBackupCommPacket(const uint8_t* data, uint8_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 486,
          "context": "bool SendBackupCommPacket(const uint8_t* data, uint8_t length);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "data",
          "type": "const uint8_t*"
        },
        {
          "name": "length",
          "type": "uint8_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_699",
      "name": "ReceiveBackupCommPacket",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1965,
          "context": "if (ReceiveBackupCommPacket(response, sizeof(response))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1983,
          "context": "bool ReceiveBackupCommPacket(uint8_t* buffer, uint8_t maxLength) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 487,
          "context": "bool ReceiveBackupCommPacket(uint8_t* buffer, uint8_t maxLength);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "buffer",
          "type": "uint8_t*"
        },
        {
          "name": "maxLength",
          "type": "uint8_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_700",
      "name": "WDT0_Handler",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 702,
          "context": "void WDT0_Handler(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 490,
          "context": "void WDT0_Handler(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_707",
      "name": "напряжение",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "Опорное"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_708",
      "name": "АЦП",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "бит",
          "type": "12"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "значение"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_709",
      "name": "GetLogLevelString",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 104,
          "context": "const char* GetLogLevelString(LogLevel level);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 607,
          "context": "const char* GetLogLevelString(LogLevel level) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 909,
          "context": "GetLogLevelString(lastEntry.level),"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 517,
          "context": "const char* GetLogLevelString(LogLevel level);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "level",
          "type": "LogLevel"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "char*"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_710",
      "name": "GetEventString",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 105,
          "context": "const char* GetEventString(DiagnosticEvent event);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 620,
          "context": "const char* GetEventString(DiagnosticEvent event) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 345,
          "context": "const char* Diagnostics_GetEventString(DiagnosticEvent event);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 518,
          "context": "const char* GetEventString(DiagnosticEvent event);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "event",
          "type": "DiagnosticEvent"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "char*"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_712",
      "name": "TestPowerSystem",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 110,
          "context": "TestStatus TestPowerSystem(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 942,
          "context": "TestStatus TestPowerSystem(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1677,
          "context": "selfTestResult.powerTest = TestPowerSystem();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 522,
          "context": "TestStatus TestPowerSystem(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "TestStatus"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_713",
      "name": "TestSensors",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 112,
          "context": "TestStatus TestSensors(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1040,
          "context": "TestStatus TestSensors(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1689,
          "context": "selfTestResult.sensorTest = TestSensors();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 523,
          "context": "TestStatus TestSensors(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "TestStatus"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_714",
      "name": "TestMotors",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 113,
          "context": "TestStatus TestMotors(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1160,
          "context": "TestStatus TestMotors(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1701,
          "context": "selfTestResult.motorTest = TestMotors();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 524,
          "context": "TestStatus TestMotors(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "TestStatus"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_715",
      "name": "TestCommunication",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 114,
          "context": "TestStatus TestCommunication(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1291,
          "context": "TestStatus TestCommunication(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1713,
          "context": "selfTestResult.commTest = TestCommunication();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 525,
          "context": "TestStatus TestCommunication(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "TestStatus"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_716",
      "name": "TestSafetySystems",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 115,
          "context": "TestStatus TestSafetySystems(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1370,
          "context": "TestStatus TestSafetySystems(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1725,
          "context": "selfTestResult.safetyTest = TestSafetySystems();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 526,
          "context": "TestStatus TestSafetySystems(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "TestStatus"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_722",
      "name": "TestBarometer",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1069,
          "context": "if (!TestBarometer()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2044,
          "context": "bool TestBarometer(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 538,
          "context": "bool TestBarometer(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_723",
      "name": "TestESC",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1169,
          "context": "if (!TestESC()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2045,
          "context": "bool TestESC(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 539,
          "context": "bool TestESC(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_724",
      "name": "TestGPS",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1122,
          "context": "if (!TestGPS()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2046,
          "context": "bool TestGPS(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 540,
          "context": "bool TestGPS(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_725",
      "name": "TestEEPROM",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1389,
          "context": "if (!TestEEPROM()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2047,
          "context": "bool TestEEPROM(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 541,
          "context": "bool TestEEPROM(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_726",
      "name": "TestFlashMemory",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1400,
          "context": "if (!TestFlashMemory()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2048,
          "context": "bool TestFlashMemory(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 542,
          "context": "bool TestFlashMemory(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_727",
      "name": "TestKillSwitch",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1424,
          "context": "if (!TestKillSwitch()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2049,
          "context": "bool TestKillSwitch(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 543,
          "context": "bool TestKillSwitch(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_728",
      "name": "TestMagnetometer",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1091,
          "context": "if (!TestMagnetometer()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2050,
          "context": "bool TestMagnetometer(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 544,
          "context": "bool TestMagnetometer(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_729",
      "name": "TestMotorResponse",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1185,
          "context": "if (!TestMotorResponse(i)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2051,
          "context": "bool TestMotorResponse(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 545,
          "context": "bool TestMotorResponse(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_730",
      "name": "TestParachuteSystem",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1412,
          "context": "if (!TestParachuteSystem()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2052,
          "context": "bool TestParachuteSystem(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 546,
          "context": "bool TestParachuteSystem(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_731",
      "name": "HasGPS",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1121,
          "context": "if (HasGPS()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2053,
          "context": "bool HasGPS(void) { return false; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 549,
          "context": "bool HasGPS(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_732",
      "name": "HasParachute",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1411,
          "context": "if (HasParachute()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2054,
          "context": "bool HasParachute(void) { return false; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 550,
          "context": "bool HasParachute(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_733",
      "name": "GetBaroAltitude",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1079,
          "context": "float altitude = GetBaroAltitude();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2055,
          "context": "float GetBaroAltitude(void) { return 0.0f; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 553,
          "context": "float GetBaroAltitude(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_736",
      "name": "GetRCLinkQuality",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1323,
          "context": "uint8_t rcQuality = GetRCLinkQuality();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2058,
          "context": "uint8_t GetRCLinkQuality(void) { return 100; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 556,
          "context": "uint8_t GetRCLinkQuality(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "uint8_t"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_737",
      "name": "GetSensorSupplyVoltage",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1010,
          "context": "float sensorSupply = GetSensorSupplyVoltage();  // Функция измерения через АЦП"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2059,
          "context": "float GetSensorSupplyVoltage(void) { return 3.3f; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 557,
          "context": "float GetSensorSupplyVoltage(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_738",
      "name": "IsRCTestResponseReceived",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1306,
          "context": "if (IsRCTestResponseReceived()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2060,
          "context": "bool IsRCTestResponseReceived(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 560,
          "context": "bool IsRCTestResponseReceived(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_739",
      "name": "IsTelemetryAckReceived",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1340,
          "context": "if (IsTelemetryAckReceived()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2061,
          "context": "bool IsTelemetryAckReceived(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 561,
          "context": "bool IsTelemetryAckReceived(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_740",
      "name": "SendRCTestPacket",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1303,
          "context": "SendRCTestPacket();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2062,
          "context": "void SendRCTestPacket(void) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 562,
          "context": "void SendRCTestPacket(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_741",
      "name": "SendTelemetryTestPacket",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1337,
          "context": "SendTelemetryTestPacket();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2063,
          "context": "void SendTelemetryTestPacket(void) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 563,
          "context": "void SendTelemetryTestPacket(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_742",
      "name": "SetMotorSpeed",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1196,
          "context": "SetMotorSpeed(i, MOTOR_TEST_SPEED);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1215,
          "context": "SetMotorSpeed(i, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1227,
          "context": "SetMotorSpeed(i, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1252,
          "context": "SetMotorSpeed(i, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2064,
          "context": "void SetMotorSpeed(uint8_t motor, uint16_t speed) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 564,
          "context": "void SetMotorSpeed(uint8_t motor, uint16_t speed);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "motor",
          "type": "uint8_t"
        },
        {
          "name": "speed",
          "type": "uint16_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_743",
      "name": "Diagnostics_GetLastLogEntry",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 907,
          "context": "Diagnostics_GetLastLogEntry(&lastEntry);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2065,
          "context": "const char* Diagnostics_GetLastLogEntry(void) { return \"No log\"; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 565,
          "context": "const char* Diagnostics_GetLastLogEntry(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "char*"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_744",
      "name": "SYSCTL_RCGC2_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 31,
          "context": "#define SYSCTL_RCGC2_R          (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 80,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 85,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 759,
          "context": "savedPeripheralState = SYSCTL_RCGC2_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 765,
          "context": "SYSCTL_RCGC2_R = savedPeripheralState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 768,
          "context": "volatile uint32_t delay = SYSCTL_RCGC2_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 12,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 17,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 24,
          "context": "SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 236,
          "context": "#define SYSCTL_RCGC2_R       (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 26,
          "context": "#define SYSCTL_RCGC2_R         (*((volatile uint32_t *)0x400FE108))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "",
          "type": "*((volatile uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "define"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_745",
      "name": "GPIOPinTypeGPIOOutput",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 3,
          "context": "void GPIOPinTypeGPIOOutput(uint32_t port, uint8_t pins) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 44,
          "context": "void GPIOPinTypeGPIOOutput(uint32_t port, uint8_t pins);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "port",
          "type": "uint32_t"
        },
        {
          "name": "pins",
          "type": "uint8_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_746",
      "name": "SysCtlPeripheralEnable",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 10,
          "context": "void SysCtlPeripheralEnable(uint32_t peripheral) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 45,
          "context": "void SysCtlPeripheralEnable(uint32_t peripheral);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "peripheral",
          "type": "uint32_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_747",
      "name": "SysCtlPeripheralReady",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 15,
          "context": "bool SysCtlPeripheralReady(uint32_t peripheral) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 46,
          "context": "bool SysCtlPeripheralReady(uint32_t peripheral);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "peripheral",
          "type": "uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_748",
      "name": "SysCtlClockSet",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 20,
          "context": "void SysCtlClockSet(uint32_t config) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 47,
          "context": "void SysCtlClockSet(uint32_t config);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "config",
          "type": "uint32_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_749",
      "name": "IsPeripheralReady",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 79,
          "context": "bool IsPeripheralReady(uint32_t peripheral) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 87,
          "context": "while(!IsPeripheralReady(peripheral)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 165,
          "context": "while(!IsPeripheralReady(SYSCTL_PERIPH_GPIOF)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 15,
          "context": "bool IsPeripheralReady(uint32_t peripheral);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "peripheral",
          "type": "uint32_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_750",
      "name": "EnablePeripheral",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 84,
          "context": "void EnablePeripheral(uint32_t peripheral) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 162,
          "context": "EnablePeripheral(SYSCTL_PERIPH_GPIOF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 16,
          "context": "void EnablePeripheral(uint32_t peripheral);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "peripheral",
          "type": "uint32_t"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_751",
      "name": "цикла",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "основного"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_752",
      "name": "телеметрии",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "отправки"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_753",
      "name": "диагностики",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 248,
          "context": "* @pre Система диагностики должна быть инициализирована"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "Частота"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_754",
      "name": "watchdog",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 76,
          "context": "uint32_t watchdogTimeout;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 88,
          "context": "bool watchdogEnabled;   // Добавлено: флаг watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 166,
          "context": "diagState.watchdogTimeout = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 182,
          "context": "diagState.watchdogEnabled = false;  // Инициализируем флаг watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 188,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_WATCHDOG_RESET, \"System reset by watchdog\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 691,
          "context": "diagState.watchdogEnabled = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 692,
          "context": "diagState.watchdogTimeout = timeout_ms;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 710,
          "context": "if (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1991,
          "context": "if (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2022,
          "context": "diagState.watchdogEnabled = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2023,
          "context": "diagState.watchdogTimeout = 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2032,
          "context": "while (diagState.watchdogEnabled) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "Таймаут"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_755",
      "name": "высота",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "Максимальная"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_756",
      "name": "батареи",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "напряжение"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_757",
      "name": "наклона",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "угол"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_758",
      "name": "рыскания",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "скорость"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_759",
      "name": "позиция",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "Целевая"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_760",
      "name": "углы",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "Целевые"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_761",
      "name": "SystemInit",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 15,
          "context": "extern void SystemInit(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 99,
          "context": "SystemInit();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 84,
          "context": "void SystemInit(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_762",
      "name": "ProcessCommands",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 116,
          "context": "ProcessCommands();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 225,
          "context": "void ProcessCommands(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 85,
          "context": "void ProcessCommands(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_763",
      "name": "CheckSafety",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 152,
          "context": "CheckSafety();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 355,
          "context": "void CheckSafety(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 86,
          "context": "void CheckSafety(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_764",
      "name": "EnterEmergencyMode",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 108,
          "context": "EnterEmergencyMode(\"Sensor update failed\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 125,
          "context": "EnterEmergencyMode(\"Navigation update failed\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 132,
          "context": "EnterEmergencyMode(\"Stabilization update failed\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 140,
          "context": "EnterEmergencyMode(\"Motors not ready\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 358,
          "context": "EnterEmergencyMode(\"Low battery\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 364,
          "context": "EnterEmergencyMode(\"Maximum altitude exceeded\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 371,
          "context": "EnterEmergencyMode(\"Maximum angle exceeded\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 377,
          "context": "EnterEmergencyMode(\"Communication lost\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 383,
          "context": "void EnterEmergencyMode(const char* reason) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 87,
          "context": "void EnterEmergencyMode(const char* reason);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "reason",
          "type": "const char*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_765",
      "name": "ExitEmergencyMode",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 406,
          "context": "void ExitEmergencyMode(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 88,
          "context": "void ExitEmergencyMode(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_766",
      "name": "UpdatePIDParameters",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 272,
          "context": "UpdatePIDParameters(cmdData.data.config.param, cmdData.data.config.value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 281,
          "context": "void UpdatePIDParameters(SystemParameter param, float value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 89,
          "context": "void UpdatePIDParameters(SystemParameter param, float value);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "param",
          "type": "SystemParameter"
        },
        {
          "name": "value",
          "type": "float"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_767",
      "name": "градусах",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "в"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_768",
      "name": "точки",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "достижения"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_769",
      "name": "умолчанию",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "по"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_770",
      "name": "Navigation_Init",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 24,
          "context": "void Navigation_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 41,
          "context": "Navigation_Init();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 51,
          "context": "void Navigation_Init(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_771",
      "name": "Navigation_Update",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 121,
          "context": "Navigation_Update();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 252,
          "context": "void Navigation_UpdateHomePosition(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 267,
          "context": "void Navigation_Update(void) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 52,
          "context": "void Navigation_Update(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 76,
          "context": "void Navigation_UpdateHomePosition(const GPSPosition* position);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_772",
      "name": "Navigation_SetHomePosition",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 53,
          "context": "void Navigation_SetHomePosition(GPSPosition* position);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "position",
          "type": "GPSPosition*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_773",
      "name": "Navigation_Start",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 99,
          "context": "void Navigation_Start(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 54,
          "context": "void Navigation_Start(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_774",
      "name": "Navigation_Stop",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 397,
          "context": "Navigation_Stop();              // Останавливаем текущую навигацию"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 415,
          "context": "Navigation_Stop();              // Останавливаем текущую навигацию"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 39,
          "context": "Navigation_Stop();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 116,
          "context": "void Navigation_Stop(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 55,
          "context": "void Navigation_Stop(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_775",
      "name": "Navigation_Pause",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 106,
          "context": "void Navigation_Pause(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 56,
          "context": "void Navigation_Pause(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_776",
      "name": "Navigation_Resume",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 110,
          "context": "void Navigation_Resume(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 57,
          "context": "void Navigation_Resume(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_777",
      "name": "Navigation_IsActive",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 124,
          "context": "if (!Navigation_IsActive()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 121,
          "context": "bool Navigation_IsActive(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 58,
          "context": "bool Navigation_IsActive(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_778",
      "name": "Navigation_AddWaypoint",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 256,
          "context": "Navigation_AddWaypoint(&targetPoint);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 44,
          "context": "bool Navigation_AddWaypoint(const Waypoint* waypoint) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 61,
          "context": "bool Navigation_AddWaypoint(const Waypoint* waypoint);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "waypoint",
          "type": "const Waypoint*"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_779",
      "name": "Navigation_RemoveWaypoint",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 60,
          "context": "bool Navigation_RemoveWaypoint(uint8_t index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 62,
          "context": "bool Navigation_RemoveWaypoint(uint8_t index);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "index",
          "type": "uint8_t"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_780",
      "name": "Navigation_GetWaypoint",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 86,
          "context": "uint8_t Navigation_GetWaypointCount(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 90,
          "context": "bool Navigation_GetWaypoint(uint8_t index, Waypoint* waypoint) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 63,
          "context": "bool Navigation_GetWaypoint(uint8_t index, Waypoint* waypoint);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "index",
          "type": "uint8_t"
        },
        {
          "name": "waypoint",
          "type": "Waypoint*"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_781",
      "name": "Navigation_ClearWaypoints",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 255,
          "context": "Navigation_ClearWaypoints();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 398,
          "context": "Navigation_ClearWaypoints();    // Очищаем все точки маршрута"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 416,
          "context": "Navigation_ClearWaypoints();    // Очищаем все точки маршрута"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 40,
          "context": "Navigation_ClearWaypoints();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 80,
          "context": "void Navigation_ClearWaypoints(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 64,
          "context": "void Navigation_ClearWaypoints(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_782",
      "name": "Navigation_GetCurrentPosition",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 322,
          "context": "Navigation_GetCurrentPosition(&currentPos);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 131,
          "context": "void Navigation_GetCurrentPosition(GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 67,
          "context": "void Navigation_GetCurrentPosition(GPSPosition* position);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "position",
          "type": "GPSPosition*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_783",
      "name": "Navigation_GetCurrentAltitude",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 323,
          "context": "float altitude = Navigation_GetCurrentAltitude();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 137,
          "context": "float Navigation_GetCurrentAltitude(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 68,
          "context": "float Navigation_GetCurrentAltitude(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_784",
      "name": "Navigation_GetCurrentHeading",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 141,
          "context": "float Navigation_GetCurrentHeading(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 69,
          "context": "float Navigation_GetCurrentHeading(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_785",
      "name": "Navigation_GetDistanceToTarget",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 324,
          "context": "float distanceToTarget = Navigation_GetDistanceToTarget();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 145,
          "context": "float Navigation_GetDistanceToTarget(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 70,
          "context": "float Navigation_GetDistanceToTarget(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_786",
      "name": "Navigation_GetBearingToTarget",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 149,
          "context": "float Navigation_GetBearingToTarget(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 71,
          "context": "float Navigation_GetBearingToTarget(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "float"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_787",
      "name": "Navigation_IsValidPosition",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 49,
          "context": "if (!Navigation_IsValidPosition(&waypoint->position)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 227,
          "context": "bool Navigation_IsValidPosition(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 253,
          "context": "if (position != NULL && Navigation_IsValidPosition(position)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 72,
          "context": "bool Navigation_IsValidPosition(const GPSPosition* position);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "position",
          "type": "const GPSPosition*"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_788",
      "name": "Navigation_IsInSafeZone",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 242,
          "context": "bool Navigation_IsInSafeZone(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 73,
          "context": "bool Navigation_IsInSafeZone(const GPSPosition* position);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "position",
          "type": "const GPSPosition*"
        }
      ],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_789",
      "name": "Navigation_UpdateHomePosition",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 252,
          "context": "void Navigation_UpdateHomePosition(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 76,
          "context": "void Navigation_UpdateHomePosition(const GPSPosition* position);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "position",
          "type": "const GPSPosition*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_790",
      "name": "Navigation_EmulateGPSPosition",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 154,
          "context": "void Navigation_EmulateGPSPosition(float latitude, float longitude, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 79,
          "context": "void Navigation_EmulateGPSPosition(float latitude, float longitude, float altitude);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "latitude",
          "type": "float"
        },
        {
          "name": "longitude",
          "type": "float"
        },
        {
          "name": "altitude",
          "type": "float"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_791",
      "name": "Navigation_EmulateMovement",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 163,
          "context": "void Navigation_EmulateMovement(float speed, float heading) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 80,
          "context": "void Navigation_EmulateMovement(float speed, float heading);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "speed",
          "type": "float"
        },
        {
          "name": "heading",
          "type": "float"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_792",
      "name": "Navigation_EmulateAltitudeChange",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 178,
          "context": "void Navigation_EmulateAltitudeChange(float vertical_speed) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 81,
          "context": "void Navigation_EmulateAltitudeChange(float vertical_speed);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "vertical_speed",
          "type": "float"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_793",
      "name": "pack",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 34,
          "context": "#pragma pack(push, 4)  // Выравнивание по 4 байта для оптимизации"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 41,
          "context": "uint32_t packetsSent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 42,
          "context": "uint32_t packetsReceived;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 51,
          "context": "#pragma pack(pop)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 55,
          "context": "static bool ValidatePacket(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 56,
          "context": "static void ProcessReceivedPacket(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 170,
          "context": "CommPacket* packet = (CommPacket*)(commState.rxBuffer + processedIndex);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 173,
          "context": "uint16_t packetSize = sizeof(CommPacket) - COMM_MAX_PACKET_SIZE + packet->length;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 174,
          "context": "if (processedIndex + packetSize > commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 179,
          "context": "if (ValidatePacket(packet)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 180,
          "context": "ProcessReceivedPacket(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 181,
          "context": "commState.packetsReceived++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 187,
          "context": "processedIndex += packetSize;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 210,
          "context": "CommPacket packet;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 211,
          "context": "packet.type = type;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 212,
          "context": "packet.length = length;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 215,
          "context": "memcpy(packet.data, data, (size_t)length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 219,
          "context": "packet.checksum = CalculateChecksum((const uint8_t*)&packet, (uint16_t)(sizeof(CommPacket) - sizeof(uint16_t)));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 222,
          "context": "if (UART_Send((const uint8_t*)&packet, (uint16_t)sizeof(CommPacket))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 223,
          "context": "commState.packetsSent++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 260,
          "context": "void Communication_HandleCommand(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 261,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 265,
          "context": "CommandType cmd = packet->data[0];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 301,
          "context": "void Communication_HandleConfig(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 302,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_CONFIG) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 332,
          "context": "return commState.packetsSent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 336,
          "context": "return commState.packetsReceived;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 402,
          "context": "static bool ValidatePacket(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 403,
          "context": "if (packet == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 408,
          "context": "if (packet->length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 414,
          "context": "(uint8_t*)packet,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 415,
          "context": "sizeof(CommPacket) - sizeof(packet->checksum)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 418,
          "context": "return calculatedChecksum == packet->checksum;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 421,
          "context": "static void ProcessReceivedPacket(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 422,
          "context": "switch (packet->type) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 429,
          "context": "Communication_HandleCommand(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 433,
          "context": "Communication_HandleConfig(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 441,
          "context": "Communication_SendError(0x02, \"Unknown packet type\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 8,
          "context": "#include \"D:/keil/pack/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 70,
          "context": "#pragma pack(push, 4)  // Выравнивание по 4 байта"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 90,
          "context": "#pragma pack(pop)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 43,
          "context": "#pragma pack(push, 2)  // Выравнивание по 2 байта для оптимизации размера пакетов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 73,
          "context": "#pragma pack(pop)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 97,
          "context": "void Communication_HandleCommand(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 98,
          "context": "void Communication_HandleConfig(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 7,
          "context": "#pragma pack(push, 4)  // Выравнивание по 4 байта для оптимизации"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 46,
          "context": "#pragma pack(pop)  // Восстанавливаем стандартное выравнивание"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "pragma"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_794",
      "name": "гироскопа",
      "description": "Структура для данных акселерометра и гироскопа (MPU6050)",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [],
      "comments": "Структура для данных акселерометра и гироскопа (MPU6050)",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "и"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_795",
      "name": "X",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 363,
          "context": "if (sensorData.baro.altitude > MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 369,
          "context": "if (fabsf(sensorData.imu.accel_x) > MAX_ANGLE ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 370,
          "context": "fabsf(sensorData.imu.accel_y) > MAX_ANGLE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 97,
          "context": "uint16_t pwm_value = (uint16_t)((throttle * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100U + PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 108,
          "context": "int32_t pwm_delta = ((int32_t)yaw * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 170,
          "context": "uint16_t hover_pwm = PWM_MAX_VALUE / 2;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 179,
          "context": "uint16_t ascent_pwm = (uint16_t)(PWM_MAX_VALUE * 0.7f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 188,
          "context": "uint16_t descent_pwm = (uint16_t)(PWM_MAX_VALUE * 0.3f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 230,
          "context": "float pwm_factor = (float)actuators_state.motors[i].pwm_value / PWM_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 250,
          "context": "if (*pwm_value > PWM_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 251,
          "context": "*pwm_value = PWM_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 9,
          "context": "#define UART_FR_RXFE    0x10    // Флаг пустого буфера приема"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 10,
          "context": "#define UART_FR_TXFF    0x20    // Флаг заполненного буфера передачи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 14,
          "context": "#define GPIO_PA0_U0RX   0x01    // UART0 RX на PA0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 15,
          "context": "#define GPIO_PA1_U0TX   0x02    // UART0 TX на PA1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 73,
          "context": "GPIO_PORTA_AFSEL_R |= (GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 74,
          "context": "GPIO_PORTA_DEN_R |= (GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 75,
          "context": "GPIO_PORTA_AMSEL_R &= ~(GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 106,
          "context": "if (UART0_FR_R & UART_FR_RXFE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 124,
          "context": "while (UART0_FR_R & UART_FR_TXFF) {}  // Ждем освобождения буфера передачи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 173,
          "context": "uint16_t packetSize = sizeof(CommPacket) - COMM_MAX_PACKET_SIZE + packet->length;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 205,
          "context": "if (!commState.initialized || length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 245,
          "context": "char message[COMM_MAX_PACKET_SIZE - 1];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 408,
          "context": "if (packet->length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 30,
          "context": "#ifndef ADC0_SSMUX1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 31,
          "context": "#define ADC0_SSMUX1_R          (*((volatile uint32_t *)0x40038044))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 39,
          "context": "#define ADC1_SSMUX1_R       (*((volatile uint32_t *)(ADC1_BASE + 0x40)))  // Мультиплексор выборки SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 46,
          "context": "#define ADC0_EMUX_R            (*((volatile uint32_t *)0x40038014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 47,
          "context": "#define ADC0_SSMUX3_R          (*((volatile uint32_t *)0x400380A0))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 58,
          "context": "#define ADC_EMUX_EM1_M      0x000000F0  // SS1 Trigger Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 77,
          "context": "LogEntry logBuffer[DIAG_MAX_LOG_ENTRIES];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 303,
          "context": "ADC0_EMUX_R &= ~ADC_EMUX_EM1_M;            // Программный запуск"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 304,
          "context": "ADC0_SSMUX1_R = (0 << 0) |                 // Канал 0 (напряжение)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 314,
          "context": "ADC0_SAC_R = ADC_SAC_AVG_64X;             // 64x усреднение"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 329,
          "context": "float voltage = (voltage_raw * VREF) / ADC_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 330,
          "context": "float current = ((current_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / CURRENT_SENSE_MV_A;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 331,
          "context": "float temp = ((temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_MV_C;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 340,
          "context": "(BATTERY_MAX_VOLTAGE - BATTERY_MIN_VOLTAGE) * 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 357,
          "context": "if (temp >= BATTERY_MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 386,
          "context": "ADC1_EMUX_R &= ~ADC_EMUX_EM0_M;            // Программный запуск"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 389,
          "context": "ADC1_SSMUX0_R = (TEMP_MCU_CHANNEL << 0)   | // Встроенный сенсор MCU"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 407,
          "context": "ADC1_SAC_R = ADC_SAC_AVG_64X;              // 64x усреднение"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 424,
          "context": "float mcu_voltage = (mcu_temp_raw * VREF) / ADC_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 428,
          "context": "float motors_temp = ((motors_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 429,
          "context": "float board_temp = ((board_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 430,
          "context": "float ambient_temp = ((ambient_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 534,
          "context": "if (!diagState.initialized || diagState.logCount >= DIAG_MAX_LOG_ENTRIES) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 903,
          "context": "SendDebugMessage(\"Log Entries: %lu/%d\", diagState.logCount, DIAG_MAX_LOG_ENTRIES);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 935,
          "context": "#define POWER_TEST_VOLTAGE_MAX   12.6f   // В"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 936,
          "context": "#define POWER_TEST_CURRENT_MAX   15.0f   // А"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 937,
          "context": "#define POWER_TEST_TEMP_MAX      45.0f   // °C"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 939,
          "context": "#define POWER_TEST_SUPPLY_MAX    3.4f    // В"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 960,
          "context": "else if (batteryVoltage > POWER_TEST_VOLTAGE_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 972,
          "context": "if (batteryCurrent > POWER_TEST_CURRENT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 984,
          "context": "if (batteryTemp > POWER_TEST_TEMP_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1011,
          "context": "if (sensorSupply < POWER_TEST_SUPPLY_MIN || sensorSupply > POWER_TEST_SUPPLY_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1032,
          "context": "#define IMU_TEST_ACCEL_MAX      4.0f    // g"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1033,
          "context": "#define IMU_TEST_GYRO_MAX       50.0f   // deg/s"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1035,
          "context": "#define BARO_TEST_ALT_MAX       5000.0f // м"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1037,
          "context": "#define MAG_TEST_FIELD_MAX      0.8f    // Гаусс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1049,
          "context": "float accel_magnitude = sqrtf(powf(imuData.accelX, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1053,
          "context": "float gyro_magnitude = sqrtf(powf(imuData.gyroX, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1058,
          "context": "if (accel_magnitude > IMU_TEST_ACCEL_MAX || gyro_magnitude > IMU_TEST_GYRO_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1080,
          "context": "if (altitude < BARO_TEST_ALT_MIN || altitude > BARO_TEST_ALT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1102,
          "context": ".magX = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1107,
          "context": "float mag_magnitude = sqrtf(powf(magData.magX, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1111,
          "context": "if (mag_magnitude < MAG_TEST_FIELD_MIN || mag_magnitude > MAG_TEST_FIELD_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1145,
          "context": "#define MOTOR_TEST_CURRENT_MAX   2.0f    // А на мотор"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1146,
          "context": "#define MOTOR_TEST_TEMP_MAX      60.0f   // °C"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1147,
          "context": "#define MOTOR_TEST_VIB_MAX       2.0f    // g"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1208,
          "context": "if (motorData[i].current > MOTOR_TEST_CURRENT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1232,
          "context": "if (motorData[i].temperature > MOTOR_TEST_TEMP_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1242,
          "context": "if (motorData[i].vibration > MOTOR_TEST_VIB_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1485,
          "context": "if (adcResult.value == 0 || adcResult.value >= ADC_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1551,
          "context": "const uint32_t MAX_CONVERSION_ATTEMPTS = 1000;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1555,
          "context": "if (conversionAttempts >= MAX_CONVERSION_ATTEMPTS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1644,
          "context": ".magX = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1759,
          "context": "ADC1_SSMUX1_R = ADC_AIN0;  // Выбираем канал AIN0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1767,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1781,
          "context": "ADC1_SSMUX1_R = ADC_AIN4;  // Выбираем канал AIN4"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1790,
          "context": "ADC1_SSMUX1_R = ADC_AIN5;  // Выбираем канал AIN5"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1799,
          "context": "ADC1_SSMUX1_R = ADC_AIN6;  // Выбираем канал AIN6"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1889,
          "context": "const float MAX_TEMP = 1800.0f;  // Максимальная температур для термопар"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1891,
          "context": "if (temperature < MIN_TEMP || temperature > MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1904,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 14,
          "context": "static Waypoint waypoints[MAX_WAYPOINTS];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 45,
          "context": "if (waypoint == NULL || waypoint_count >= MAX_WAYPOINTS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 185,
          "context": "} else if (nav_state.current_position.altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 186,
          "context": "nav_state.current_position.altitude = NAV_MAX_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 235,
          "context": "position->altitude < NAV_MIN_ALTITUDE || position->altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 21,
          "context": "#define MAX_ROLL_ANGLE  45.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 22,
          "context": "#define MAX_PITCH_ANGLE 45.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 23,
          "context": "#define MAX_YAW_RATE    180.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 99,
          "context": "stabState.targetSetPoint.roll = ClampValue(roll, -MAX_ROLL_ANGLE, MAX_ROLL_ANGLE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 100,
          "context": "stabState.targetSetPoint.pitch = ClampValue(pitch, -MAX_PITCH_ANGLE, MAX_PITCH_ANGLE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 18,
          "context": "#define PWM_MAX_VALUE     1000 // Максимальное значение PWM (полная мощность)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 19,
          "context": "#define COMM_MAX_PACKET_SIZE 64"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 48,
          "context": "uint8_t data[COMM_MAX_PACKET_SIZE];  // Данные"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 107,
          "context": "#define MAX_SAFE_TEMPERATURE   125.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 124,
          "context": "float accelX;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 127,
          "context": "float gyroX;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 130,
          "context": "float magX;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 242,
          "context": "#define ADC1_EMUX_R          (*((volatile uint32_t *)0x40039014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 243,
          "context": "#define ADC1_SSMUX0_R        (*((volatile uint32_t *)0x40039040))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 256,
          "context": "#define ADC_EMUX_EM0_M       0x0000000F"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 267,
          "context": "#define ADC_SAC_AVG_64X       0x00000006"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 269,
          "context": "#define ADC_EMUX_EM1_M        0x000000F0  // SS1 Trigger Select mask"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 438,
          "context": "#define MAX_MOTORS 4"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 441,
          "context": "#define DIAG_MAX_LOG_ENTRIES 100"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 504,
          "context": "#define ADC_MAX_VALUE          4095     // Максимальное значение АЦП (12 бит)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 510,
          "context": "#define BATTERY_MAX_VOLTAGE    12.6f    // Максимальное напряжение батареи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 514,
          "context": "#define BATTERY_MAX_TEMP       60.0f    // Максимальная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 33,
          "context": "#define SYSCTL_XTAL_16MHZ      0x00000540"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 37,
          "context": "#define MAX_ALTITUDE           100.0f   // Максимальная высота (м)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 39,
          "context": "#define MAX_ANGLE              45.0f    // Максимальный угол наклона (градусы)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 40,
          "context": "#define MAX_YAW_RATE          90.0f    // Максимальная скорость рыскания (градусы/с)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 44,
          "context": "#define MAX_WAYPOINTS 20"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 47,
          "context": "#define NAV_MAX_ALTITUDE       120.0f  // Максимальная разрешенная высота"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "оси"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_796",
      "name": "Y",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 29,
          "context": "#define SYSCTL_RCC2_R            (*((volatile uint32_t *)0x400FE070))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 30,
          "context": "#define SYSCTL_RIS_R             (*((volatile uint32_t *)0x400FE050))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 31,
          "context": "#define SYSCTL_RCGC2_R          (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 34,
          "context": "#define SYSCTL_RCC2_USERCC2     0x80000000  // Use RCC2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 35,
          "context": "#define SYSCTL_RCC2_BYPASS2     0x00000800  // PLL Bypass 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 36,
          "context": "#define SYSCTL_RCC2_PWRDN2      0x00002000  // Power-Down PLL 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 37,
          "context": "#define SYSCTL_RCC2_SYSDIV2_MASK 0x1F800000  // System Clock Divisor 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 38,
          "context": "#define SYSCTL_RCC2_SYSDIV2LSB   0x00400000  // System Clock Divisor 2 LSB"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 41,
          "context": "#define SYSCTL_RCC2_OSCSRC2_MASK_INV 0xFFFFFF8F  // Инвертированная маска для OSCSRC2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 42,
          "context": "#define SYSCTL_RCC2_PWRDN2_MASK_INV  0xFFFFDFFF  // Инвертированная маска для PWRDN2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 43,
          "context": "#define SYSCTL_RCC2_SYSDIV_MASK_INV  0xE07FFFFF  // Инвертированная маска для SYSDIV2 и LSB"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 46,
          "context": "#define SYSCTL_RCC2_OSCSRC2_MASK 0x00000070  // Oscillator Source 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 47,
          "context": "#define SYSCTL_RCC2_OSCSRC2_MO   0x00000000  // Main Oscillator"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 50,
          "context": "#define SYSCTL_RIS_PLLLRIS      0x00000040  // PLL Lock Raw Interrupt Status"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 53,
          "context": "#define SYSCTL_PERIPH_GPIOF    0xf0000805  // GPIO F peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 54,
          "context": "#define SYSCTL_PERIPH_GPIOE    0xf0000804  // GPIO E peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 55,
          "context": "#define SYSCTL_PERIPH_GPIOD    0xf0000803  // GPIO D peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 56,
          "context": "#define SYSCTL_PERIPH_GPIOC    0xf0000802  // GPIO C peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 57,
          "context": "#define SYSCTL_PERIPH_GPIOB    0xf0000801  // GPIO B peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 58,
          "context": "#define SYSCTL_PERIPH_GPIOA    0xf0000800  // GPIO A peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 67,
          "context": "#define TELEMETRY_FREQ_HZ      10      // Частота отправки телеметрии (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 80,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 85,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 146,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / TELEMETRY_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 162,
          "context": "EnablePeripheral(SYSCTL_PERIPH_GPIOF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 165,
          "context": "while(!IsPeripheralReady(SYSCTL_PERIPH_GPIOF)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 208,
          "context": "case DRONE_STATE_FLYING:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 213,
          "context": "case DRONE_STATE_EMERGENCY:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 232,
          "context": "if (rxPacket.type == PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 239,
          "context": "case CMD_TYPE_POSITION:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 240,
          "context": "if (currentState == DRONE_STATE_FLYING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 260,
          "context": "case CMD_TYPE_ATTITUDE:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 271,
          "context": "case CMD_TYPE_CONFIG:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 296,
          "context": "case PARAM_PID_YAW:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 357,
          "context": "if (sensorData.imu.temperature < MIN_BATTERY_VOLTAGE) { // Временно используем temperature как voltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 386,
          "context": "currentState = DRONE_STATE_EMERGENCY;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 389,
          "context": "Diagnostics_Log(LOG_CRITICAL, DIAG_EVENT_SYSTEM_START, reason, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 102,
          "context": "void Actuators_SetYaw(int16_t yaw) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 197,
          "context": "Actuators_SetYaw(yaw_rate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 11,
          "context": "#define UART_FR_BUSY    0x08    // Флаг занятости UART"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 19,
          "context": "#define SYSTICK_FREQ_HZ    1000    // Частота системного таймера (1 кГц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 30,
          "context": "#define SYSCTL_RCGCUART_R     (*((volatile uint32_t *)0x400FE104))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 32,
          "context": "#define SYSCTL_PRGPIO_R       (*((volatile uint32_t *)0x400FEA08))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 66,
          "context": "SYSCTL_RCGCUART_R |= (1U << 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 67,
          "context": "SYSCTL_RCGCGPIO_R |= (1U << 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 70,
          "context": "while((SYSCTL_PRGPIO_R & (1U << 0)) == 0) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 235,
          "context": "return Communication_Send(PACKET_TYPE_TELEMETRY, telemetry, sizeof(TelemetryData));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 239,
          "context": "return Communication_Send(PACKET_TYPE_STATUS, &status, sizeof(status));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 256,
          "context": "return Communication_Send(PACKET_TYPE_ERROR, &errorData,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 261,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 291,
          "context": "case CMD_EMERGENCY_STOP:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 302,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_CONFIG) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 423,
          "context": "case PACKET_TYPE_HEARTBEAT:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 425,
          "context": "Communication_Send(PACKET_TYPE_HEARTBEAT, NULL, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 428,
          "context": "case PACKET_TYPE_COMMAND:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 432,
          "context": "case PACKET_TYPE_CONFIG:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 436,
          "context": "case PACKET_TYPE_WAYPOINT:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 16,
          "context": "#define SYSCTL_BASE            0x400FE000  // Базовый адрес системного контроллера"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 17,
          "context": "#define SYSCTL_RCGCWD_R        (*((volatile uint32_t *)(SYSCTL_BASE + 0x600)))  // Регистр тактирования Watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 18,
          "context": "#define SYSCTL_PRWD_R          (*((volatile uint32_t *)(SYSCTL_BASE + 0xA00)))  // Регистр готовности Watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 162,
          "context": "diagState.systemState = SYSTEM_STATE_OK;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 191,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START, \"Diagnostics initialized\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 230,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_BATTERY_CRITICAL, \"Battery critically low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 232,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_BATTERY_LOW, \"Battery low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 255,
          "context": "Diagnostics_Log(LOG_CRITICAL, DIAG_EVENT_SYSTEM_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 273,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_BATTERY_LOW,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 289,
          "context": "SYSCTL_RCGCGPIO_R |= SYSCTL_RCGCGPIO_R4;  // Порт E"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 290,
          "context": "SYSCTL_RCGCADC_R |= SYSCTL_RCGCADC_R0;    // ADC0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 293,
          "context": "while(!(SYSCTL_PRGPIO_R & SYSCTL_PRGPIO_R4)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 294,
          "context": "while(!(SYSCTL_PRADC_R & SYSCTL_PRADC_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 339,
          "context": "float battery_level = (voltage - BATTERY_MIN_VOLTAGE) /"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 340,
          "context": "(BATTERY_MAX_VOLTAGE - BATTERY_MIN_VOLTAGE) * 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 348,
          "context": "if (voltage <= BATTERY_CRITICAL_VOLTAGE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 349,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_LOW_BATTERY,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 352,
          "context": "else if (voltage <= BATTERY_LOW_VOLTAGE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 353,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_LOW_BATTERY,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 357,
          "context": "if (temp >= BATTERY_MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 369,
          "context": "SYSCTL_RCGCGPIO_R |= (SYSCTL_RCGCGPIO_R3 | SYSCTL_RCGCGPIO_R4);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 370,
          "context": "SYSCTL_RCGCADC_R |= SYSCTL_RCGCADC_R1;    // ADC1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 373,
          "context": "while(!(SYSCTL_PRGPIO_R & (SYSCTL_PRGPIO_R3 | SYSCTL_PRGPIO_R4))) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 374,
          "context": "while(!(SYSCTL_PRADC_R & SYSCTL_PRADC_R1)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 549,
          "context": "diagState.systemState = SYSTEM_STATE_CRITICAL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 551,
          "context": "diagState.systemState = SYSTEM_STATE_ERROR;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 559,
          "context": "diagState.systemState = SYSTEM_STATE_OK;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 622,
          "context": "case DIAG_EVENT_SYSTEM_START:     return \"SYSTEM_START\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 623,
          "context": "case DIAG_EVENT_SYSTEM_STOP:      return \"SYSTEM_STOP\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 625,
          "context": "case DIAG_EVENT_LOW_BATTERY:      return \"LOW_BATTERY\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 626,
          "context": "case DIAG_EVENT_BATTERY_CRITICAL: return \"BATTERY_CRITICAL\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 627,
          "context": "case DIAG_EVENT_BATTERY_LOW:      return \"BATTERY_LOW\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 635,
          "context": "case DIAG_EVENT_SYSTEM_ERROR:     return \"SYSTEM_ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 654,
          "context": "if (diagState.systemState == SYSTEM_STATE_ERROR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 655,
          "context": "diagState.systemState = SYSTEM_STATE_OK;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 662,
          "context": "SYSCTL_RCGCWD_R |= SYSCTL_RCGCWD_R0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 665,
          "context": "while(!(SYSCTL_PRWD_R & SYSCTL_PRWD_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 697,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 736,
          "context": "NVIC_SYS_CTRL_R |= NVIC_SYS_CTRL_SLEEPDEEP; // Включаем режим сна"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 745,
          "context": "NVIC_SYS_CTRL_R |= NVIC_SYS_CTRL_SLEEPDEEP; // Включаем глубокий сон"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 751,
          "context": "NVIC_SYS_CTRL_R &= ~NVIC_SYS_CTRL_SLEEPDEEP; // Отключаем режим сна"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 759,
          "context": "savedPeripheralState = SYSCTL_RCGC2_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 765,
          "context": "SYSCTL_RCGC2_R = savedPeripheralState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 768,
          "context": "volatile uint32_t delay = SYSCTL_RCGC2_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 792,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_STOP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 818,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 867,
          "context": "diagState.systemState == SYSTEM_STATE_OK ? \"OK\" :"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 868,
          "context": "diagState.systemState == SYSTEM_STATE_WARNING ? \"WARNING\" :"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 869,
          "context": "diagState.systemState == SYSTEM_STATE_ERROR ? \"ERROR\" : \"CRITICAL\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 879,
          "context": "SendDebugMessage(\"Charging: %s\", diagState.powerState.isCharging ? \"Yes\" : \"No\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 918,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START, \"Running self-test\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 931,
          "context": "#define POWER_ERR_SUPPLY_FAIL    0x0005"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 938,
          "context": "#define POWER_TEST_SUPPLY_MIN    3.2f    // В (для 3.3В цепей)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 939,
          "context": "#define POWER_TEST_SUPPLY_MAX    3.4f    // В"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 996,
          "context": "status.code = POWER_ERR_SUPPLY_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1011,
          "context": "if (sensorSupply < POWER_TEST_SUPPLY_MIN || sensorSupply > POWER_TEST_SUPPLY_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1033,
          "context": "#define IMU_TEST_GYRO_MAX       50.0f   // deg/s"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1050,
          "context": "powf(imuData.accelY, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1054,
          "context": "powf(imuData.gyroY, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1058,
          "context": "if (accel_magnitude > IMU_TEST_ACCEL_MAX || gyro_magnitude > IMU_TEST_GYRO_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1103,
          "context": ".magY = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1108,
          "context": "powf(magData.magY, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1274,
          "context": "#define COMM_ERR_RC_QUALITY     0x0302"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1275,
          "context": "#define COMM_ERR_TELEMETRY_FAIL 0x0303"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1279,
          "context": "#define SAFETY_ERR_WATCHDOG     0x0401"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1280,
          "context": "#define SAFETY_ERR_EEPROM       0x0402"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1281,
          "context": "#define SAFETY_ERR_FLASH        0x0403"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1282,
          "context": "#define SAFETY_ERR_PARACHUTE    0x0404"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1283,
          "context": "#define SAFETY_ERR_KILLSWITCH   0x0405"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1287,
          "context": "#define RC_TEST_MIN_QUALITY     75      // %"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1288,
          "context": "#define TELEMETRY_TEST_TIMEOUT  1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1324,
          "context": "if (rcQuality < RC_TEST_MIN_QUALITY) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1326,
          "context": "status.code = COMM_ERR_RC_QUALITY;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1339,
          "context": "while (GetCurrentTime() - startTime < TELEMETRY_TEST_TIMEOUT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1349,
          "context": "status.code = COMM_ERR_TELEMETRY_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1380,
          "context": "status.code = SAFETY_ERR_WATCHDOG;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1391,
          "context": "status.code = SAFETY_ERR_EEPROM;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1402,
          "context": "status.code = SAFETY_ERR_FLASH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1414,
          "context": "status.code = SAFETY_ERR_PARACHUTE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1426,
          "context": "status.code = SAFETY_ERR_KILLSWITCH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1498,
          "context": "switch (TEMP_SENSOR_TYPE_LINEAR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1499,
          "context": "case TEMP_SENSOR_TYPE_LINEAR:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1508,
          "context": "(uint32_t)TEMP_SENSOR_TYPE_LINEAR);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1572,
          "context": ".error = SYSTICK_ERROR_NONE"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1577,
          "context": "result.error = SYSTICK_ERROR_INVALID_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1578,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SYSTEM_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1589,
          "context": "if (startTicks.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1590,
          "context": "return SYSTICK_ERROR_INVALID_START;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1599,
          "context": "if (currentTicks.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1600,
          "context": "return SYSTICK_ERROR_DURING_DELAY;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1611,
          "context": "return SYSTICK_ERROR_NONE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1620,
          "context": ".error = SYSTICK_ERROR_NONE"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1625,
          "context": "if (currentTicksResult.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1626,
          "context": "result.error = SYSTICK_ERROR_INVALID_CURRENT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1645,
          "context": ".magY = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1740,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SYSTEM_ERROR, selfTestResult.message, selfTestResult.totalErrors);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1752,
          "context": "#define ADC_CHANNEL_BATTERY_TEMP     ADC_AIN4   // Канал АЦП для температур батареи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1809,
          "context": "} ThermocoupleCoefficients[THERMOCOUPLE_TYPE_COUNT] = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1810,
          "context": "[THERMOCOUPLE_TYPE_K] = {0.0, 39.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1811,
          "context": "[THERMOCOUPLE_TYPE_J] = {0.0, 35.0, -0.00015, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1812,
          "context": "[THERMOCOUPLE_TYPE_T] = {0.0, 40.0, -0.0002, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1813,
          "context": "[THERMOCOUPLE_TYPE_E] = {0.0, 38.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1814,
          "context": "[THERMOCOUPLE_TYPE_N] = {0.0, 37.0, -0.00012, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1815,
          "context": "[THERMOCOUPLE_TYPE_R] = {0.0, 36.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1816,
          "context": "[THERMOCOUPLE_TYPE_S] = {0.0, 35.0, -0.00015, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1817,
          "context": "[THERMOCOUPLE_TYPE_B] = {0.0, 34.0, -0.0002, 0.0}      // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1837,
          "context": "switch (TEMP_SENSOR_TYPE_LINEAR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1838,
          "context": "case TEMP_SENSOR_TYPE_LINEAR:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1847,
          "context": "(uint32_t)TEMP_SENSOR_TYPE_LINEAR);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1865,
          "context": "if (type < 0 || type >= THERMOCOUPLE_TYPE_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2028,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2078,
          "context": "} ThermocoupleCoefficients[THERMOCOUPLE_TYPE_COUNT] = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2079,
          "context": "[THERMOCOUPLE_TYPE_K] = {0.0, 39.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2080,
          "context": "[THERMOCOUPLE_TYPE_J] = {0.0, 35.0, -0.00015, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2081,
          "context": "[THERMOCOUPLE_TYPE_T] = {0.0, 40.0, -0.0002, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2082,
          "context": "[THERMOCOUPLE_TYPE_E] = {0.0, 38.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2083,
          "context": "[THERMOCOUPLE_TYPE_N] = {0.0, 37.0, -0.00012, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2084,
          "context": "[THERMOCOUPLE_TYPE_R] = {0.0, 36.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2085,
          "context": "[THERMOCOUPLE_TYPE_S] = {0.0, 35.0, -0.00015, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2086,
          "context": "[THERMOCOUPLE_TYPE_B] = {0.0, 34.0, -0.0002, 0.0}      // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 12,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 17,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 24,
          "context": "SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 14,
          "context": "static Waypoint waypoints[MAX_WAYPOINTS];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 45,
          "context": "if (waypoint == NULL || waypoint_count >= MAX_WAYPOINTS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 284,
          "context": "if (nav_state.distance_to_target <= NAV_WAYPOINT_RADIUS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 159,
          "context": "static float filteredYaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 169,
          "context": "filteredYaw += imu.gyro_z * dt;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 172,
          "context": "while (filteredYaw >= 360.0f) filteredYaw -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 173,
          "context": "while (filteredYaw < 0.0f) filteredYaw += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 177,
          "context": "orientation->yaw = filteredYaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 17,
          "context": "#define UPDATE_FREQUENCY 100"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 18,
          "context": "#define DT (1.0f / UPDATE_FREQUENCY)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 23,
          "context": "#define MAX_YAW_RATE    180.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 55,
          "context": "void Actuators_SetYaw(int16_t yaw);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 23,
          "context": "PACKET_TYPE_HEARTBEAT    = 0x00,  // Проверка соединения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 24,
          "context": "PACKET_TYPE_TELEMETRY    = 0x01,  // Телеметрия (сенсоры, положение, статус)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 25,
          "context": "PACKET_TYPE_COMMAND      = 0x02,  // Команды управления"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 26,
          "context": "PACKET_TYPE_CONFIG       = 0x03,  // Настройка параметров"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 27,
          "context": "PACKET_TYPE_WAYPOINT     = 0x04,  // Данные маршрутных точек"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 28,
          "context": "PACKET_TYPE_STATUS       = 0x05,  // Статус дрона"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 29,
          "context": "PACKET_TYPE_ERROR        = 0xFF   // Сообщения об ошибках"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 40,
          "context": "CMD_EMERGENCY_STOP = 0x07  // Аварийная остановка"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 21,
          "context": "DIAG_EVENT_SYSTEM_START = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 22,
          "context": "DIAG_EVENT_SYSTEM_STOP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 24,
          "context": "DIAG_EVENT_LOW_BATTERY,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 25,
          "context": "DIAG_EVENT_BATTERY_CRITICAL,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 26,
          "context": "DIAG_EVENT_BATTERY_LOW,     // Added missing event"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 34,
          "context": "DIAG_EVENT_SYSTEM_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 59,
          "context": "SYSTICK_ERROR_NONE = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 60,
          "context": "SYSTICK_ERROR_INVALID_VALUE,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 61,
          "context": "SYSTICK_ERROR_INVALID_START,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 62,
          "context": "SYSTICK_ERROR_DURING_DELAY,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 63,
          "context": "SYSTICK_ERROR_INVALID_CURRENT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 75,
          "context": "SYSTEM_STATE_OK = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 76,
          "context": "SYSTEM_STATE_WARNING,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 77,
          "context": "SYSTEM_STATE_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 78,
          "context": "SYSTEM_STATE_CRITICAL"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 83,
          "context": "THERMOCOUPLE_TYPE_K = 0,    // Type K thermocouple"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 84,
          "context": "THERMOCOUPLE_TYPE_J,        // Type J thermocouple"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 85,
          "context": "THERMOCOUPLE_TYPE_T,        // Type T thermocouple"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 86,
          "context": "THERMOCOUPLE_TYPE_E,        // Type E thermocouple"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 87,
          "context": "THERMOCOUPLE_TYPE_N,        // Type N thermocouple"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 88,
          "context": "THERMOCOUPLE_TYPE_R,        // Type R thermocouple"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 89,
          "context": "THERMOCOUPLE_TYPE_S,        // Type S thermocouple"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 90,
          "context": "THERMOCOUPLE_TYPE_B,        // Type B thermocouple"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 91,
          "context": "THERMOCOUPLE_TYPE_COUNT     // Number of thermocouple types"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 95,
          "context": "#define TEMP_SENSOR_TYPE_LINEAR    0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 96,
          "context": "#define TEMP_SENSOR_TYPE_NTC       1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 97,
          "context": "#define TEMP_SENSOR_TYPE_PTC       2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 98,
          "context": "#define TEMP_SENSOR_TYPE_THERMO    3"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 125,
          "context": "float accelY;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 128,
          "context": "float gyroY;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 131,
          "context": "float magY;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 232,
          "context": "#define SYSCTL_RCGCGPIO_R    (*((volatile uint32_t *)0x400FE608))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 233,
          "context": "#define SYSCTL_RCGCADC_R     (*((volatile uint32_t *)0x400FE638))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 234,
          "context": "#define SYSCTL_PRGPIO_R      (*((volatile uint32_t *)0x400FEA08))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 235,
          "context": "#define SYSCTL_PRADC_R       (*((volatile uint32_t *)0x400FEA38))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 236,
          "context": "#define SYSCTL_RCGC2_R       (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 291,
          "context": "#define NVIC_SYS_CTRL_R      (*((volatile uint32_t *)0xE000ED10))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 292,
          "context": "#define NVIC_SYS_CTRL_SLEEPDEEP 0x00000004"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 301,
          "context": "#define NVIC_APINT_VECTKEY   0x05FA0000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 302,
          "context": "#define NVIC_APINT_SYSRESETREQ 0x00000004"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 305,
          "context": "#define SYSCTL_RCGCWD_R      (*((volatile uint32_t *)0x400FE600))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 306,
          "context": "#define SYSCTL_PRWD_R        (*((volatile uint32_t *)0x400FEA00))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 309,
          "context": "#define SYSCTL_RCGCWD_R0     0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 310,
          "context": "#define SYSCTL_PRWD_R0       0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 434,
          "context": "#define WATCHDOG_ERR_EARLY_RESET  0x0502  // Сброс произошел раньше времени"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 444,
          "context": "#define SYSCTL_RCGCGPIO_R3    0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 445,
          "context": "#define SYSCTL_RCGCGPIO_R4    0x00000010"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 446,
          "context": "#define SYSCTL_RCGCADC_R0     0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 447,
          "context": "#define SYSCTL_RCGCADC_R1     0x00000002"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 448,
          "context": "#define SYSCTL_PRGPIO_R3      0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 449,
          "context": "#define SYSCTL_PRGPIO_R4      0x00000010"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 450,
          "context": "#define SYSCTL_PRADC_R0       0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 451,
          "context": "#define SYSCTL_PRADC_R1       0x00000002"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 510,
          "context": "#define BATTERY_MAX_VOLTAGE    12.6f    // Максимальное напряжение батареи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 511,
          "context": "#define BATTERY_MIN_VOLTAGE    9.0f     // Минимальное напряжение батареи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 512,
          "context": "#define BATTERY_LOW_VOLTAGE    10.0f    // Напряжение для предупреждения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 513,
          "context": "#define BATTERY_CRITICAL_VOLTAGE 9.5f   // Критическое напряжение"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 514,
          "context": "#define BATTERY_MAX_TEMP       60.0f    // Максимальная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 26,
          "context": "#define SYSCTL_RCGC2_R         (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 27,
          "context": "#define SYSCTL_RCGC2_GPIOF     0x00000020  // Port F Clock Gating Control"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 30,
          "context": "#define SYSCTL_SYSDIV_2_5      0x04000000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 31,
          "context": "#define SYSCTL_USE_PLL         0x00000000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 32,
          "context": "#define SYSCTL_OSC_MAIN        0x00000000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 33,
          "context": "#define SYSCTL_XTAL_16MHZ      0x00000540"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 36,
          "context": "#define SYSCTL_PERIPH_GPIOF    0xf0000805  // GPIO F peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 37,
          "context": "#define SYSCTL_PERIPH_GPIOE    0xf0000804  // GPIO E peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 38,
          "context": "#define SYSCTL_PERIPH_GPIOD    0xf0000803  // GPIO D peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 39,
          "context": "#define SYSCTL_PERIPH_GPIOC    0xf0000802  // GPIO C peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 40,
          "context": "#define SYSCTL_PERIPH_GPIOB    0xf0000801  // GPIO B peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 41,
          "context": "#define SYSCTL_PERIPH_GPIOA    0xf0000800  // GPIO A peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 25,
          "context": "DRONE_STATE_FLYING,         // Полет"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 27,
          "context": "DRONE_STATE_EMERGENCY       // Аварийный режим"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 32,
          "context": "#define TELEMETRY_FREQ_HZ      10      // Частота отправки телеметрии (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 38,
          "context": "#define MIN_BATTERY_VOLTAGE    10.5f    // Минимальное напряжение батареи (В)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 40,
          "context": "#define MAX_YAW_RATE          90.0f    // Максимальная скорость рыскания (градусы/с)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 46,
          "context": "PARAM_PID_YAW,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 52,
          "context": "CMD_TYPE_POSITION = 0,     // Команда позиционирования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 53,
          "context": "CMD_TYPE_ATTITUDE,         // Команда управления ориентацией"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 54,
          "context": "CMD_TYPE_CONFIG           // Команда конфигурации"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 44,
          "context": "#define MAX_WAYPOINTS 20"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 45,
          "context": "#define NAV_WAYPOINT_RADIUS    3.0f   // Радиус достижения точки (метры)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 1,
          "context": "#ifndef TELEMETRY_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 2,
          "context": "#define TELEMETRY_H"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "оси"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_797",
      "name": "Z",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 66,
          "context": "#define MAIN_LOOP_FREQ_HZ      200     // Частота основного цикла (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 67,
          "context": "#define TELEMETRY_FREQ_HZ      10      // Частота отправки телеметрии (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 68,
          "context": "#define DIAGNOSTIC_FREQ_HZ      1       // Частота диагностики (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 146,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / TELEMETRY_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 151,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / DIAGNOSTIC_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 19,
          "context": "#define SYSTICK_FREQ_HZ    1000    // Частота системного таймера (1 кГц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 47,
          "context": "uint8_t rxBuffer[COMM_BUFFER_SIZE];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 48,
          "context": "uint8_t txBuffer[COMM_BUFFER_SIZE];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 161,
          "context": "(uint16_t)(COMM_BUFFER_SIZE - commState.rxIndex)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 173,
          "context": "uint16_t packetSize = sizeof(CommPacket) - COMM_MAX_PACKET_SIZE + packet->length;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 205,
          "context": "if (!commState.initialized || length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 245,
          "context": "char message[COMM_MAX_PACKET_SIZE - 1];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 408,
          "context": "if (packet->length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 93,
          "context": "#define DEBUG_BUFFER_SIZE 128"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 94,
          "context": "static char debugBuffer[DEBUG_BUFFER_SIZE];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 591,
          "context": "vsnprintf(debugBuffer, DEBUG_BUFFER_SIZE, format, args);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 596,
          "context": "if (len < DEBUG_BUFFER_SIZE - 2) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 632,
          "context": "case DIAG_EVENT_STABILIZATION_ERROR: return \"STABILIZATION_ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1051,
          "context": "powf(imuData.accelZ, 2));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1055,
          "context": "powf(imuData.gyroZ, 2));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1104,
          "context": ".magZ = 0.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1109,
          "context": "powf(magData.magZ, 2));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1445,
          "context": "result.error = ADC_ERROR_NOT_INITIALIZED;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1526,
          "context": "return ADC_ERROR_NOT_INITIALIZED;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1543,
          "context": "status.error = ADC_ERROR_NOT_INITIALIZED;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1646,
          "context": ".magZ = 0.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 242,
          "context": "bool Navigation_IsInSafeZone(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 17,
          "context": "#define COMM_BUFFER_SIZE     256"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 19,
          "context": "#define COMM_MAX_PACKET_SIZE 64"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 48,
          "context": "uint8_t data[COMM_MAX_PACKET_SIZE];  // Данные"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 31,
          "context": "DIAG_EVENT_STABILIZATION_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 51,
          "context": "ADC_ERROR_NOT_INITIALIZED,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 126,
          "context": "float accelZ;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 129,
          "context": "float gyroZ;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 132,
          "context": "float magZ;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 33,
          "context": "#define SYSCTL_XTAL_16MHZ      0x00000540"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 31,
          "context": "#define MAIN_LOOP_FREQ_HZ      200     // Частота основного цикла (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 32,
          "context": "#define TELEMETRY_FREQ_HZ      10      // Частота отправки телеметрии (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 33,
          "context": "#define DIAGNOSTIC_FREQ_HZ      1       // Частота диагностики (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 73,
          "context": "bool Navigation_IsInSafeZone(const GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 1,
          "context": "#ifndef STABILIZATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 2,
          "context": "#define STABILIZATION_H"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "оси"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_798",
      "name": "барометра",
      "description": "Структура для данных барометра (BMP280)",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [],
      "comments": "Структура для данных барометра (BMP280)",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "данных"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_799",
      "name": "гПа",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "в"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_801",
      "name": "Sensors_Init",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 49,
          "context": "void Sensors_Init(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_802",
      "name": "Sensors_Update",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 107,
          "context": "if (!Sensors_Update()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 203,
          "context": "void Sensors_Update(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 50,
          "context": "bool Sensors_Update(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_803",
      "name": "Sensors_IsCalibrated",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 51,
          "context": "bool Sensors_IsCalibrated(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_804",
      "name": "Sensors_GetAllData",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 113,
          "context": "Sensors_GetAllData(&sensorData);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 318,
          "context": "Sensors_GetAllData(&sensorData);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 181,
          "context": "void Sensors_GetAllData(SensorData* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 52,
          "context": "void Sensors_GetAllData(SensorData* data);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "data",
          "type": "SensorData*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_805",
      "name": "Sensors_GetBaroData",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 195,
          "context": "void Sensors_GetBaroData(BMP280_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 116,
          "context": "Sensors_GetBaroData(&altData);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 53,
          "context": "void Sensors_GetBaroData(BMP280_Data* data);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "data",
          "type": "BMP280_Data*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_806",
      "name": "Stabilization_Init",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 37,
          "context": "void Stabilization_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 36,
          "context": "void Stabilization_Init(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_807",
      "name": "Stabilization_Update",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 130,
          "context": "Stabilization_Update();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 105,
          "context": "void Stabilization_Update(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 37,
          "context": "void Stabilization_Update(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_808",
      "name": "Stabilization_ResetPID",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 94,
          "context": "Stabilization_ResetPID();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 158,
          "context": "Stabilization_ResetPID();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 163,
          "context": "Stabilization_ResetPID();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 173,
          "context": "void Stabilization_ResetPID(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 38,
          "context": "void Stabilization_ResetPID(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_809",
      "name": "Stabilization_ConfigurePID",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 305,
          "context": "Stabilization_ConfigurePID("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 53,
          "context": "Stabilization_ConfigurePID("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 61,
          "context": "void Stabilization_ConfigurePID(float rollKp, float rollKi, float rollKd,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 41,
          "context": "void Stabilization_ConfigurePID(float rollKp, float rollKi, float rollKd,"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "rollKp",
          "type": "float"
        },
        {
          "name": "rollKi",
          "type": "float"
        },
        {
          "name": "rollKd",
          "type": "float"
        },
        {
          "name": "pitchKp",
          "type": "float"
        },
        {
          "name": "pitchKi",
          "type": "float"
        },
        {
          "name": "pitchKd",
          "type": "float"
        },
        {
          "name": "yawKp",
          "type": "float"
        },
        {
          "name": "yawKi",
          "type": "float"
        },
        {
          "name": "yawKd",
          "type": "float"
        },
        {
          "name": "altKp",
          "type": "float"
        },
        {
          "name": "altKi",
          "type": "float"
        },
        {
          "name": "altKd",
          "type": "float"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_810",
      "name": "Stabilization_SetTargetOrientation",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 262,
          "context": "Stabilization_SetTargetOrientation("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 97,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 47,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "roll",
          "type": "float"
        },
        {
          "name": "pitch",
          "type": "float"
        },
        {
          "name": "yaw",
          "type": "float"
        },
        {
          "name": "altitude",
          "type": "float"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_811",
      "name": "Stabilization_GetCurrentOrientation",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 144,
          "context": "void Stabilization_GetCurrentOrientation(Orientation* orientation) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 48,
          "context": "void Stabilization_GetCurrentOrientation(Orientation* orientation);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "orientation",
          "type": "Orientation*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_812",
      "name": "Stabilization_GetCurrentSetPoint",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 49,
          "context": "void Stabilization_GetCurrentSetPoint(SetPoint* setPoint);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [
        {
          "name": "setPoint",
          "type": "SetPoint*"
        }
      ],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_813",
      "name": "Stabilization_Enable",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 156,
          "context": "void Stabilization_Enable(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 52,
          "context": "void Stabilization_Enable(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_814",
      "name": "Stabilization_Disable",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 161,
          "context": "void Stabilization_Disable(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 53,
          "context": "void Stabilization_Disable(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_815",
      "name": "Stabilization_IsEnabled",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 131,
          "context": "if (Stabilization_IsEnabled() == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 169,
          "context": "bool Stabilization_IsEnabled(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 54,
          "context": "bool Stabilization_IsEnabled(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [
        {
          "name": "return",
          "type": "bool"
        }
      ],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_816",
      "name": "Telemetry_Init",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 10,
          "context": "void Telemetry_Init(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_817",
      "name": "Telemetry_Update",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 11,
          "context": "void Telemetry_Update(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    },
    {
      "id": "func_818",
      "name": "Telemetry_Send",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 12,
          "context": "void Telemetry_Send(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "input_params": [],
      "output_params": [],
      "is_static": false,
      "scope": "global",
      "dependencies": [],
      "called_by": []
    }
  ],
  "constants": [
    {
      "id": "const_001",
      "name": "GPIO_PORTA_BASE",
      "description": "бб",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 21,
          "context": "#define GPIO_PORTA_BASE        0x40004000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 18,
          "context": "#define GPIO_PORTA_BASE        0x40004000"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x40004000",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_002",
      "name": "GPIO_PORTB_BASE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 22,
          "context": "#define GPIO_PORTB_BASE        0x40005000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 19,
          "context": "#define GPIO_PORTB_BASE        0x40005000"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x40005000",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_003",
      "name": "GPIO_PORTC_BASE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 23,
          "context": "#define GPIO_PORTC_BASE        0x40006000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 20,
          "context": "#define GPIO_PORTC_BASE        0x40006000"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x40006000",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_004",
      "name": "GPIO_PORTD_BASE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 24,
          "context": "#define GPIO_PORTD_BASE        0x40007000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 21,
          "context": "#define GPIO_PORTD_BASE        0x40007000"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x40007000",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_005",
      "name": "GPIO_PORTE_BASE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 25,
          "context": "#define GPIO_PORTE_BASE        0x40024000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 22,
          "context": "#define GPIO_PORTE_BASE        0x40024000"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x40024000",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_006",
      "name": "GPIO_PORTF_BASE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 26,
          "context": "#define GPIO_PORTF_BASE        0x40025000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 61,
          "context": "#define GPIO_PORTF_DIR_R       (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x400)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 62,
          "context": "#define GPIO_PORTF_DEN_R       (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x51C)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 63,
          "context": "#define GPIO_PORTF_DATA_R      (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x3FC)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 23,
          "context": "#define GPIO_PORTF_BASE        0x40025000"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x40025000",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_007",
      "name": "SYSCTL_RCC2_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 29,
          "context": "#define SYSCTL_RCC2_R            (*((volatile uint32_t *)0x400FE070))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x400FE070))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_008",
      "name": "SYSCTL_RIS_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 30,
          "context": "#define SYSCTL_RIS_R             (*((volatile uint32_t *)0x400FE050))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x400FE050))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_009",
      "name": "SYSCTL_RCGC2_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 31,
          "context": "#define SYSCTL_RCGC2_R          (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 80,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 85,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 759,
          "context": "savedPeripheralState = SYSCTL_RCGC2_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 765,
          "context": "SYSCTL_RCGC2_R = savedPeripheralState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 768,
          "context": "volatile uint32_t delay = SYSCTL_RCGC2_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 12,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 17,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 24,
          "context": "SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 236,
          "context": "#define SYSCTL_RCGC2_R       (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 26,
          "context": "#define SYSCTL_RCGC2_R         (*((volatile uint32_t *)0x400FE108))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x400FE108))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_010",
      "name": "SYSCTL_RCC2_USERCC2",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 34,
          "context": "#define SYSCTL_RCC2_USERCC2     0x80000000  // Use RCC2"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x80000000  // Use RCC2",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_011",
      "name": "SYSCTL_RCC2_BYPASS2",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 35,
          "context": "#define SYSCTL_RCC2_BYPASS2     0x00000800  // PLL Bypass 2"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000800  // PLL Bypass 2",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_012",
      "name": "SYSCTL_RCC2_PWRDN2",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 36,
          "context": "#define SYSCTL_RCC2_PWRDN2      0x00002000  // Power-Down PLL 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 42,
          "context": "#define SYSCTL_RCC2_PWRDN2_MASK_INV  0xFFFFDFFF  // Инвертированная маска для PWRDN2"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00002000  // Power-Down PLL 2",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_013",
      "name": "SYSCTL_RCC2_SYSDIV2_MASK",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 37,
          "context": "#define SYSCTL_RCC2_SYSDIV2_MASK 0x1F800000  // System Clock Divisor 2"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x1F800000  // System Clock Divisor 2",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_014",
      "name": "SYSCTL_RCC2_SYSDIV2LSB",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 38,
          "context": "#define SYSCTL_RCC2_SYSDIV2LSB   0x00400000  // System Clock Divisor 2 LSB"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00400000  // System Clock Divisor 2 LSB",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_015",
      "name": "SYSCTL_RCC2_OSCSRC2_MASK_INV",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 41,
          "context": "#define SYSCTL_RCC2_OSCSRC2_MASK_INV 0xFFFFFF8F  // Инвертированная маска для OSCSRC2"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0xFFFFFF8F  // Инвертированная маска для OSCSRC2",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_016",
      "name": "SYSCTL_RCC2_PWRDN2_MASK_INV",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 42,
          "context": "#define SYSCTL_RCC2_PWRDN2_MASK_INV  0xFFFFDFFF  // Инвертированная маска для PWRDN2"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0xFFFFDFFF  // Инвертированная маска для PWRDN2",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_017",
      "name": "SYSCTL_RCC2_SYSDIV_MASK_INV",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 43,
          "context": "#define SYSCTL_RCC2_SYSDIV_MASK_INV  0xE07FFFFF  // Инвертированная маска для SYSDIV2 и LSB"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0xE07FFFFF  // Инвертированная маска для SYSDIV2 и LSB",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_018",
      "name": "SYSCTL_RCC2_OSCSRC2_MASK",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 41,
          "context": "#define SYSCTL_RCC2_OSCSRC2_MASK_INV 0xFFFFFF8F  // Инвертированная маска для OSCSRC2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 46,
          "context": "#define SYSCTL_RCC2_OSCSRC2_MASK 0x00000070  // Oscillator Source 2"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000070  // Oscillator Source 2",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_019",
      "name": "SYSCTL_RCC2_OSCSRC2_MO",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 47,
          "context": "#define SYSCTL_RCC2_OSCSRC2_MO   0x00000000  // Main Oscillator"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000000  // Main Oscillator",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_020",
      "name": "SYSCTL_RIS_PLLLRIS",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 50,
          "context": "#define SYSCTL_RIS_PLLLRIS      0x00000040  // PLL Lock Raw Interrupt Status"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000040  // PLL Lock Raw Interrupt Status",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_021",
      "name": "SYSCTL_PERIPH_GPIOF",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 53,
          "context": "#define SYSCTL_PERIPH_GPIOF    0xf0000805  // GPIO F peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 162,
          "context": "EnablePeripheral(SYSCTL_PERIPH_GPIOF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 165,
          "context": "while(!IsPeripheralReady(SYSCTL_PERIPH_GPIOF)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 36,
          "context": "#define SYSCTL_PERIPH_GPIOF    0xf0000805  // GPIO F peripheral"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0xf0000805  // GPIO F peripheral",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_022",
      "name": "SYSCTL_PERIPH_GPIOE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 54,
          "context": "#define SYSCTL_PERIPH_GPIOE    0xf0000804  // GPIO E peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 37,
          "context": "#define SYSCTL_PERIPH_GPIOE    0xf0000804  // GPIO E peripheral"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0xf0000804  // GPIO E peripheral",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_023",
      "name": "SYSCTL_PERIPH_GPIOD",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 55,
          "context": "#define SYSCTL_PERIPH_GPIOD    0xf0000803  // GPIO D peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 38,
          "context": "#define SYSCTL_PERIPH_GPIOD    0xf0000803  // GPIO D peripheral"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0xf0000803  // GPIO D peripheral",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_024",
      "name": "SYSCTL_PERIPH_GPIOC",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 56,
          "context": "#define SYSCTL_PERIPH_GPIOC    0xf0000802  // GPIO C peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 39,
          "context": "#define SYSCTL_PERIPH_GPIOC    0xf0000802  // GPIO C peripheral"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0xf0000802  // GPIO C peripheral",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_025",
      "name": "SYSCTL_PERIPH_GPIOB",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 57,
          "context": "#define SYSCTL_PERIPH_GPIOB    0xf0000801  // GPIO B peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 40,
          "context": "#define SYSCTL_PERIPH_GPIOB    0xf0000801  // GPIO B peripheral"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0xf0000801  // GPIO B peripheral",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_026",
      "name": "SYSCTL_PERIPH_GPIOA",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 58,
          "context": "#define SYSCTL_PERIPH_GPIOA    0xf0000800  // GPIO A peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 41,
          "context": "#define SYSCTL_PERIPH_GPIOA    0xf0000800  // GPIO A peripheral"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0xf0000800  // GPIO A peripheral",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_027",
      "name": "GPIO_PORTF_DIR_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 61,
          "context": "#define GPIO_PORTF_DIR_R       (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x400)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 168,
          "context": "GPIO_PORTF_DIR_R |= (GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x400)))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_028",
      "name": "GPIO_PORTF_DEN_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 62,
          "context": "#define GPIO_PORTF_DEN_R       (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x51C)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 171,
          "context": "GPIO_PORTF_DEN_R |= (GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x51C)))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_029",
      "name": "GPIO_PORTF_DATA_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 63,
          "context": "#define GPIO_PORTF_DATA_R      (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x3FC)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 187,
          "context": "uint32_t ledState = GPIO_PORTF_DATA_R & LED_MASK_CLEAR;  // Очищаем биты LED"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 221,
          "context": "GPIO_PORTF_DATA_R = ledState;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x3FC)))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_030",
      "name": "MAIN_LOOP_FREQ_HZ",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 66,
          "context": "#define MAIN_LOOP_FREQ_HZ      200     // Частота основного цикла (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 146,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / TELEMETRY_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 151,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / DIAGNOSTIC_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 31,
          "context": "#define MAIN_LOOP_FREQ_HZ      200     // Частота основного цикла (Гц)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "200     // Частота основного цикла (Гц)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_031",
      "name": "TELEMETRY_FREQ_HZ",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 67,
          "context": "#define TELEMETRY_FREQ_HZ      10      // Частота отправки телеметрии (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 146,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / TELEMETRY_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 32,
          "context": "#define TELEMETRY_FREQ_HZ      10      // Частота отправки телеметрии (Гц)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "10      // Частота отправки телеметрии (Гц)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_032",
      "name": "DIAGNOSTIC_FREQ_HZ",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 68,
          "context": "#define DIAGNOSTIC_FREQ_HZ      1       // Частота диагностики (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 151,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / DIAGNOSTIC_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 33,
          "context": "#define DIAGNOSTIC_FREQ_HZ      1       // Частота диагностики (Гц)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "1       // Частота диагностики (Гц)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_033",
      "name": "WDT_TIMEOUT_MS",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 69,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 34,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "1000    // Таймаут watchdog (мс)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_034",
      "name": "LED_MASK_CLEAR",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 182,
          "context": "#define LED_MASK_CLEAR     0xFFFFFFF9  // 1111 1111 1111 1111 1111 1111 1111 1001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 187,
          "context": "uint32_t ledState = GPIO_PORTF_DATA_R & LED_MASK_CLEAR;  // Очищаем биты LED"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0xFFFFFFF9  // 1111 1111 1111 1111 1111 1111 1111 1001",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_035",
      "name": "LED_RED",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 183,
          "context": "#define LED_RED            0x00000002  // Красный LED (PIN_1)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 204,
          "context": "ledState |= LED_RED;  // Красный - вооружен"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 210,
          "context": "ledState |= (LED_RED | LED_GREEN);  // Желтый - в полете"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 216,
          "context": "ledState |= LED_RED;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000002  // Красный LED (PIN_1)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_036",
      "name": "LED_BLUE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 184,
          "context": "#define LED_BLUE           0x00000004  // Синий LED (PIN_2)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 192,
          "context": "ledState |= LED_BLUE;  // Синий - инициализация"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 200,
          "context": "ledState |= (LED_GREEN | LED_BLUE);  // Бирюзовый - калибровка"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000004  // Синий LED (PIN_2)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_037",
      "name": "LED_GREEN",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 185,
          "context": "#define LED_GREEN          0x00000008  // Зеленый LED (PIN_3)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 196,
          "context": "ledState |= LED_GREEN;  // Зеленый - готов к работе"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 200,
          "context": "ledState |= (LED_GREEN | LED_BLUE);  // Бирюзовый - калибровка"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 210,
          "context": "ledState |= (LED_RED | LED_GREEN);  // Желтый - в полете"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000008  // Зеленый LED (PIN_3)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_038",
      "name": "UART_FR_RXFE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 9,
          "context": "#define UART_FR_RXFE    0x10    // Флаг пустого буфера приема"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 106,
          "context": "if (UART0_FR_R & UART_FR_RXFE) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x10    // Флаг пустого буфера приема",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_039",
      "name": "UART_FR_TXFF",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 10,
          "context": "#define UART_FR_TXFF    0x20    // Флаг заполненного буфера передачи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 124,
          "context": "while (UART0_FR_R & UART_FR_TXFF) {}  // Ждем освобождения буфера передачи"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x20    // Флаг заполненного буфера передачи",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_040",
      "name": "UART_FR_BUSY",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 11,
          "context": "#define UART_FR_BUSY    0x08    // Флаг занятости UART"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x08    // Флаг занятости UART",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_041",
      "name": "GPIO_PA0_U0RX",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 14,
          "context": "#define GPIO_PA0_U0RX   0x01    // UART0 RX на PA0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 73,
          "context": "GPIO_PORTA_AFSEL_R |= (GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 74,
          "context": "GPIO_PORTA_DEN_R |= (GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 75,
          "context": "GPIO_PORTA_AMSEL_R &= ~(GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x01    // UART0 RX на PA0",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_042",
      "name": "GPIO_PA1_U0TX",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 15,
          "context": "#define GPIO_PA1_U0TX   0x02    // UART0 TX на PA1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 73,
          "context": "GPIO_PORTA_AFSEL_R |= (GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 74,
          "context": "GPIO_PORTA_DEN_R |= (GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 75,
          "context": "GPIO_PORTA_AMSEL_R &= ~(GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x02    // UART0 TX на PA1",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_043",
      "name": "COMM_TIMEOUT_MS",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 18,
          "context": "#define COMM_TIMEOUT_MS     1000    // Таймаут соединения (1 секунда)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 349,
          "context": "if (commState.currentTime - commState.lastPacketTime > COMM_TIMEOUT_MS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 378,
          "context": "if (currentTime - commState.lastPacketTime > COMM_TIMEOUT_MS) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "1000    // Таймаут соединения (1 секунда)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_044",
      "name": "SYSTICK_FREQ_HZ",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 19,
          "context": "#define SYSTICK_FREQ_HZ    1000    // Частота системного таймера (1 кГц)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "1000    // Частота системного таймера (1 кГц)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_045",
      "name": "UART0_DR_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 22,
          "context": "#define UART0_DR_R              (*((volatile uint32_t *)0x4000C000))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 109,
          "context": "buffer[count] = (uint8_t)(UART0_DR_R & 0xFF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 125,
          "context": "UART0_DR_R = (uint32_t)data[i];"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x4000C000))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_046",
      "name": "UART0_FR_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 23,
          "context": "#define UART0_FR_R              (*((volatile uint32_t *)0x4000C018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 106,
          "context": "if (UART0_FR_R & UART_FR_RXFE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 124,
          "context": "while (UART0_FR_R & UART_FR_TXFF) {}  // Ждем освобождения буфера передачи"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x4000C018))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_047",
      "name": "UART0_IBRD_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 24,
          "context": "#define UART0_IBRD_R           (*((volatile uint32_t *)0x4000C024))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 86,
          "context": "UART0_IBRD_R = brdi;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x4000C024))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_048",
      "name": "UART0_FBRD_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 25,
          "context": "#define UART0_FBRD_R           (*((volatile uint32_t *)0x4000C028))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 87,
          "context": "UART0_FBRD_R = brdf;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x4000C028))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_049",
      "name": "UART0_LCRH_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 26,
          "context": "#define UART0_LCRH_R           (*((volatile uint32_t *)0x4000C02C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 90,
          "context": "UART0_LCRH_R = 0x60;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x4000C02C))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_050",
      "name": "UART0_CTL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 27,
          "context": "#define UART0_CTL_R            (*((volatile uint32_t *)0x4000C030))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 79,
          "context": "UART0_CTL_R &= ~0x01;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 93,
          "context": "UART0_CTL_R |= 0x01;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x4000C030))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_051",
      "name": "SYSCTL_RCGCUART_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 30,
          "context": "#define SYSCTL_RCGCUART_R     (*((volatile uint32_t *)0x400FE104))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 66,
          "context": "SYSCTL_RCGCUART_R |= (1U << 0);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x400FE104))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_052",
      "name": "SYSCTL_PRGPIO_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 32,
          "context": "#define SYSCTL_PRGPIO_R       (*((volatile uint32_t *)0x400FEA08))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 70,
          "context": "while((SYSCTL_PRGPIO_R & (1U << 0)) == 0) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 293,
          "context": "while(!(SYSCTL_PRGPIO_R & SYSCTL_PRGPIO_R4)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 373,
          "context": "while(!(SYSCTL_PRGPIO_R & (SYSCTL_PRGPIO_R3 | SYSCTL_PRGPIO_R4))) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 234,
          "context": "#define SYSCTL_PRGPIO_R      (*((volatile uint32_t *)0x400FEA08))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 448,
          "context": "#define SYSCTL_PRGPIO_R3      0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 449,
          "context": "#define SYSCTL_PRGPIO_R4      0x00000010"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x400FEA08))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_053",
      "name": "NAN",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 11,
          "context": "#ifndef NAN"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 12,
          "context": "#define NAN (0.0f/0.0f)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1481,
          "context": "return NAN;  // Возвращаем NaN при ошибке"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1489,
          "context": "return NAN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1509,
          "context": "return NAN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1768,
          "context": "return NAN;  // Возвращаем NaN для некорректного индекса"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1848,
          "context": "return NAN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1869,
          "context": "return NAN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1895,
          "context": "return NAN;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(0.0f/0.0f)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_054",
      "name": "SYSCTL_BASE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 16,
          "context": "#define SYSCTL_BASE            0x400FE000  // Базовый адрес системного контроллера"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 17,
          "context": "#define SYSCTL_RCGCWD_R        (*((volatile uint32_t *)(SYSCTL_BASE + 0x600)))  // Регистр тактирования Watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 18,
          "context": "#define SYSCTL_PRWD_R          (*((volatile uint32_t *)(SYSCTL_BASE + 0xA00)))  // Регистр готовности Watchdog"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x400FE000  // Базовый адрес системного контроллера",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_055",
      "name": "SYSCTL_RCGCWD_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 17,
          "context": "#define SYSCTL_RCGCWD_R        (*((volatile uint32_t *)(SYSCTL_BASE + 0x600)))  // Регистр тактирования Watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 662,
          "context": "SYSCTL_RCGCWD_R |= SYSCTL_RCGCWD_R0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 305,
          "context": "#define SYSCTL_RCGCWD_R      (*((volatile uint32_t *)0x400FE600))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 309,
          "context": "#define SYSCTL_RCGCWD_R0     0x00000001"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)(SYSCTL_BASE + 0x600)))  // Регистр тактирования Watchdog",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_056",
      "name": "SYSCTL_PRWD_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 18,
          "context": "#define SYSCTL_PRWD_R          (*((volatile uint32_t *)(SYSCTL_BASE + 0xA00)))  // Регистр готовности Watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 665,
          "context": "while(!(SYSCTL_PRWD_R & SYSCTL_PRWD_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 306,
          "context": "#define SYSCTL_PRWD_R        (*((volatile uint32_t *)0x400FEA00))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 310,
          "context": "#define SYSCTL_PRWD_R0       0x00000001"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)(SYSCTL_BASE + 0xA00)))  // Регистр готовности Watchdog",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_057",
      "name": "NVIC_BASE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 21,
          "context": "#define NVIC_BASE              0xE000E000  // Базовый адрес контроллера прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 22,
          "context": "#define NVIC_PRIO_R(n)         (*((volatile uint32_t *)(NVIC_BASE + 0x400 + ((n) * 4))))  // Регистры приоритета прерываний"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0xE000E000  // Базовый адрес контроллера прерываний",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_058",
      "name": "NVIC_ST_CTRL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 356,
          "context": "NVIC_ST_CTRL_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 365,
          "context": "NVIC_ST_CTRL_R = NVIC_ST_CTRL_ENABLE |"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 25,
          "context": "#define NVIC_ST_CTRL_R          (*((volatile uint32_t *)0xE000E010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 120,
          "context": "NVIC_ST_CTRL_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 132,
          "context": "NVIC_ST_CTRL_R = 0x07;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 327,
          "context": "#define NVIC_ST_CTRL_R       (*((volatile uint32_t *)0xE000E010))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0xE000E010))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_059",
      "name": "NVIC_ST_RELOAD_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 359,
          "context": "NVIC_ST_RELOAD_R = SystemCoreClock / 1000 - 1;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 26,
          "context": "#define NVIC_ST_RELOAD_R        (*((volatile uint32_t *)0xE000E014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 123,
          "context": "NVIC_ST_RELOAD_R = 16000 - 1;  // (16MHz / 1000Hz) - 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1576,
          "context": "if (result.ticks == 0 || result.ticks > NVIC_ST_RELOAD_R) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1607,
          "context": "elapsedTicks = (NVIC_ST_RELOAD_R - currentTicks.ticks) + startValue;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1636,
          "context": "result.elapsedTicks = (NVIC_ST_RELOAD_R - currentTicks) + startTicks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 328,
          "context": "#define NVIC_ST_RELOAD_R     (*((volatile uint32_t *)0xE000E014))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0xE000E014))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_060",
      "name": "NVIC_ST_CURRENT_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 362,
          "context": "NVIC_ST_CURRENT_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 27,
          "context": "#define NVIC_ST_CURRENT_R       (*((volatile uint32_t *)0xE000E018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 126,
          "context": "NVIC_ST_CURRENT_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1571,
          "context": ".ticks = NVIC_ST_CURRENT_R,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 329,
          "context": "#define NVIC_ST_CURRENT_R    (*((volatile uint32_t *)0xE000E018))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0xE000E018))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_061",
      "name": "ADC0_SSMUX1_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 30,
          "context": "#ifndef ADC0_SSMUX1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 31,
          "context": "#define ADC0_SSMUX1_R          (*((volatile uint32_t *)0x40038044))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 304,
          "context": "ADC0_SSMUX1_R = (0 << 0) |                 // Канал 0 (напряжение)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40038044))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_062",
      "name": "ADC0_SSCTL1_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 33,
          "context": "#ifndef ADC0_SSCTL1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 34,
          "context": "#define ADC0_SSCTL1_R          (*((volatile uint32_t *)0x40038048))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 307,
          "context": "ADC0_SSCTL1_R = (0 << 0) |                // Первый канал"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40038048))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_063",
      "name": "ADC1_BASE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 38,
          "context": "#define ADC1_BASE            0x40039000  // Базовый адрес ADC1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 39,
          "context": "#define ADC1_SSMUX1_R       (*((volatile uint32_t *)(ADC1_BASE + 0x40)))  // Мультиплексор выборки SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 40,
          "context": "#define ADC1_SSCTL1_R       (*((volatile uint32_t *)(ADC1_BASE + 0x44)))  // Управление и статус SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 41,
          "context": "#define ADC1_SSFIFO1_R      (*((volatile uint32_t *)(ADC1_BASE + 0x48)))  // FIFO данных SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 42,
          "context": "#define ADC1_ISC_R          (*((volatile uint32_t *)(ADC1_BASE + 0x50)))  // Регистр очистки прерываний"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x40039000  // Базовый адрес ADC1",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_064",
      "name": "ADC1_SSMUX1_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 39,
          "context": "#define ADC1_SSMUX1_R       (*((volatile uint32_t *)(ADC1_BASE + 0x40)))  // Мультиплексор выборки SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1759,
          "context": "ADC1_SSMUX1_R = ADC_AIN0;  // Выбираем канал AIN0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1781,
          "context": "ADC1_SSMUX1_R = ADC_AIN4;  // Выбираем канал AIN4"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1790,
          "context": "ADC1_SSMUX1_R = ADC_AIN5;  // Выбираем канал AIN5"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1799,
          "context": "ADC1_SSMUX1_R = ADC_AIN6;  // Выбираем канал AIN6"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)(ADC1_BASE + 0x40)))  // Мультиплексор выборки SS1",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_065",
      "name": "ADC1_SSCTL1_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 40,
          "context": "#define ADC1_SSCTL1_R       (*((volatile uint32_t *)(ADC1_BASE + 0x44)))  // Управление и статус SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1760,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1782,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1791,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1800,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)(ADC1_BASE + 0x44)))  // Управление и статус SS1",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_066",
      "name": "ADC1_SSFIFO1_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 41,
          "context": "#define ADC1_SSFIFO1_R      (*((volatile uint32_t *)(ADC1_BASE + 0x48)))  // FIFO данных SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1761,
          "context": "ADC1_SSFIFO1_R;            // Очистка FIFO"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1763,
          "context": "return ADC1_SSFIFO1_R;     // Возвращаем значение АЦП"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1783,
          "context": "ADC1_SSFIFO1_R;            // Очистка FIFO"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1785,
          "context": "return ADC1_SSFIFO1_R;     // Возвращаем значение АЦП"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1792,
          "context": "ADC1_SSFIFO1_R;            // Очистка FIFO"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1794,
          "context": "return ADC1_SSFIFO1_R;     // Возвращаем значение АЦП"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1801,
          "context": "ADC1_SSFIFO1_R;            // Очистка FIFO"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1803,
          "context": "return ADC1_SSFIFO1_R;     // Возвращаем значение АЦП"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)(ADC1_BASE + 0x48)))  // FIFO данных SS1",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_067",
      "name": "ADC1_ISC_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 42,
          "context": "#define ADC1_ISC_R          (*((volatile uint32_t *)(ADC1_BASE + 0x50)))  // Регистр очистки прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 467,
          "context": "ADC1_ISC_R = ADC_ISC_IN0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1762,
          "context": "ADC1_ISC_R = ADC_ISC_IN1;  // Сброс флага прерывания"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1784,
          "context": "ADC1_ISC_R = ADC_ISC_IN1;  // Сброс флага прерывания"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1793,
          "context": "ADC1_ISC_R = ADC_ISC_IN1;  // Сброс флага прерывания"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1802,
          "context": "ADC1_ISC_R = ADC_ISC_IN1;  // Сброс флага прерывания"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1923,
          "context": "ADC1_ISC_R = (1 << adcChannel);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)(ADC1_BASE + 0x50)))  // Регистр очистки прерываний",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_068",
      "name": "ADC0_ACTSS_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 45,
          "context": "#define ADC0_ACTSS_R           (*((volatile uint32_t *)0x40038000))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 302,
          "context": "ADC0_ACTSS_R &= ~ADC_ACTSS_ASEN1;          // Отключаем секвенсор для настройки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 311,
          "context": "ADC0_ACTSS_R |= ADC_ACTSS_ASEN1;          // Включаем секвенсор"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40038000))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_069",
      "name": "ADC0_EMUX_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 46,
          "context": "#define ADC0_EMUX_R            (*((volatile uint32_t *)0x40038014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 303,
          "context": "ADC0_EMUX_R &= ~ADC_EMUX_EM1_M;            // Программный запуск"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40038014))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_070",
      "name": "ADC0_SSMUX3_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 47,
          "context": "#define ADC0_SSMUX3_R          (*((volatile uint32_t *)0x400380A0))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x400380A0))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_071",
      "name": "ADC0_SSCTL3_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 48,
          "context": "#define ADC0_SSCTL3_R          (*((volatile uint32_t *)0x400380A4))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x400380A4))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_072",
      "name": "ADC0_PSSI_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 49,
          "context": "#define ADC0_PSSI_R            (*((volatile uint32_t *)0x40038028))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 202,
          "context": "ADC0_PSSI_R = ADC_PSSI_SS3;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1450,
          "context": "ADC0_PSSI_R = 0x0008;  // Запуск SS3"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1529,
          "context": "ADC0_PSSI_R = 0x0008;  // Запуск SS3"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40038028))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_073",
      "name": "ADC0_RIS_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 50,
          "context": "#define ADC0_RIS_R             (*((volatile uint32_t *)0x40038004))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 205,
          "context": "while(!(ADC0_RIS_R & ADC_RIS_INR3)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1454,
          "context": "while((ADC0_RIS_R & 0x08) == 0 && timeout > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1547,
          "context": "status.complete = (ADC0_RIS_R & 0x08) != 0;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40038004))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_074",
      "name": "ADC0_ISC_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 51,
          "context": "#define ADC0_ISC_R             (*((volatile uint32_t *)0x4003800C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 211,
          "context": "ADC0_ISC_R = ADC_RIS_INR3;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 363,
          "context": "ADC0_ISC_R = ADC_ISC_IN1;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1469,
          "context": "ADC0_ISC_R = 0x0008;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x4003800C))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_075",
      "name": "ADC0_SSFIFO3_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 52,
          "context": "#define ADC0_SSFIFO3_R         (*((volatile uint32_t *)0x400380A8))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 208,
          "context": "uint32_t result = ADC0_SSFIFO3_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1465,
          "context": "result.value = ADC0_SSFIFO3_R;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x400380A8))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_076",
      "name": "ADC0_PC_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 53,
          "context": "#define ADC0_PC_R              (*((volatile uint32_t *)0x40038FC4))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40038FC4))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_077",
      "name": "ADC_PSSI_SS1",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 56,
          "context": "#define ADC_PSSI_SS1        0x00000002  // SS1 Initiate"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 272,
          "context": "#define ADC_PSSI_SS1          0x00000002  // SS1 Initiate"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000002  // SS1 Initiate",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_078",
      "name": "ADC_ACTSS_ASEN1",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 57,
          "context": "#define ADC_ACTSS_ASEN1     0x00000002  // SS1 Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 302,
          "context": "ADC0_ACTSS_R &= ~ADC_ACTSS_ASEN1;          // Отключаем секвенсор для настройки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 311,
          "context": "ADC0_ACTSS_R |= ADC_ACTSS_ASEN1;          // Включаем секвенсор"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 268,
          "context": "#define ADC_ACTSS_ASEN1       0x00000002  // SS1 Enable"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000002  // SS1 Enable",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_079",
      "name": "ADC_EMUX_EM1_M",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 58,
          "context": "#define ADC_EMUX_EM1_M      0x000000F0  // SS1 Trigger Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 303,
          "context": "ADC0_EMUX_R &= ~ADC_EMUX_EM1_M;            // Программный запуск"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 269,
          "context": "#define ADC_EMUX_EM1_M        0x000000F0  // SS1 Trigger Select mask"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x000000F0  // SS1 Trigger Select",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_080",
      "name": "ADC_AIN0",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 61,
          "context": "#define ADC_AIN0   0   // Канал АЦП для температур микроконтроллера"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1750,
          "context": "#define ADC_CHANNEL_MCU_TEMP         ADC_AIN0   // Канал АЦП для температур"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1759,
          "context": "ADC1_SSMUX1_R = ADC_AIN0;  // Выбираем канал AIN0"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0   // Канал АЦП для температур микроконтроллера",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_081",
      "name": "ADC_AIN1",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 62,
          "context": "#define ADC_AIN1   1   // Базовый канал для температур моторов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1751,
          "context": "#define ADC_CHANNEL_MOTOR_TEMP_BASE  ADC_AIN1   // Базовый канал для температур моторов"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "1   // Базовый канал для температур моторов",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_082",
      "name": "ADC_AIN4",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 63,
          "context": "#define ADC_AIN4   4   // Канал АЦП для температур батареи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1752,
          "context": "#define ADC_CHANNEL_BATTERY_TEMP     ADC_AIN4   // Канал АЦП для температур батареи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1781,
          "context": "ADC1_SSMUX1_R = ADC_AIN4;  // Выбираем канал AIN4"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "4   // Канал АЦП для температур батареи",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_083",
      "name": "ADC_AIN5",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 64,
          "context": "#define ADC_AIN5   5   // Канал АЦП для температур платы"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1753,
          "context": "#define ADC_CHANNEL_BOARD_TEMP       ADC_AIN5   // Канал АЦП для температур платы"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1790,
          "context": "ADC1_SSMUX1_R = ADC_AIN5;  // Выбираем канал AIN5"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 418,
          "context": "#define ADC_CHANNEL_MOTOR_CURRENT_BASE  ADC_AIN5   // Базовый канал для измерения тока моторов"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "5   // Канал АЦП для температур платы",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_084",
      "name": "ADC_AIN6",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 65,
          "context": "#define ADC_AIN6   6   // Канал АЦП для температур окружающей среды"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1754,
          "context": "#define ADC_CHANNEL_ENV_TEMP         ADC_AIN6   // Канал АЦП для температур окружающей среды"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1799,
          "context": "ADC1_SSMUX1_R = ADC_AIN6;  // Выбираем канал AIN6"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "6   // Канал АЦП для температур окружающей среды",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_085",
      "name": "ADC_ISC_IN1",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 67,
          "context": "#define ADC_ISC_IN1 0x02  // Флаг прерывания для канала 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 363,
          "context": "ADC0_ISC_R = ADC_ISC_IN1;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1762,
          "context": "ADC1_ISC_R = ADC_ISC_IN1;  // Сброс флага прерывания"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1784,
          "context": "ADC1_ISC_R = ADC_ISC_IN1;  // Сброс флага прерывания"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1793,
          "context": "ADC1_ISC_R = ADC_ISC_IN1;  // Сброс флага прерывания"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1802,
          "context": "ADC1_ISC_R = ADC_ISC_IN1;  // Сброс флага прерывания"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x02  // Флаг прерывания для канала 1",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_086",
      "name": "DEBUG_BUFFER_SIZE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 93,
          "context": "#define DEBUG_BUFFER_SIZE 128"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 94,
          "context": "static char debugBuffer[DEBUG_BUFFER_SIZE];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 591,
          "context": "vsnprintf(debugBuffer, DEBUG_BUFFER_SIZE, format, args);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 596,
          "context": "if (len < DEBUG_BUFFER_SIZE - 2) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "128",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_087",
      "name": "POWER_ERR_VOLTAGE_LOW",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 927,
          "context": "#define POWER_ERR_VOLTAGE_LOW    0x0001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 953,
          "context": "status.code = POWER_ERR_VOLTAGE_LOW;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0001",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_088",
      "name": "POWER_ERR_VOLTAGE_HIGH",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 928,
          "context": "#define POWER_ERR_VOLTAGE_HIGH   0x0002"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 962,
          "context": "status.code = POWER_ERR_VOLTAGE_HIGH;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0002",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_089",
      "name": "POWER_ERR_CURRENT_HIGH",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 929,
          "context": "#define POWER_ERR_CURRENT_HIGH   0x0003"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 974,
          "context": "status.code = POWER_ERR_CURRENT_HIGH;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0003",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_090",
      "name": "POWER_ERR_TEMP_HIGH",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 930,
          "context": "#define POWER_ERR_TEMP_HIGH      0x0004"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 986,
          "context": "status.code = POWER_ERR_TEMP_HIGH;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0004",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_091",
      "name": "POWER_ERR_SUPPLY_FAIL",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 931,
          "context": "#define POWER_ERR_SUPPLY_FAIL    0x0005"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 996,
          "context": "status.code = POWER_ERR_SUPPLY_FAIL;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0005",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_092",
      "name": "POWER_TEST_VOLTAGE_MIN",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 934,
          "context": "#define POWER_TEST_VOLTAGE_MIN   10.5f   // В"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 951,
          "context": "if (batteryVoltage < POWER_TEST_VOLTAGE_MIN) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "10.5f   // В",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_093",
      "name": "POWER_TEST_VOLTAGE_MAX",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 935,
          "context": "#define POWER_TEST_VOLTAGE_MAX   12.6f   // В"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 960,
          "context": "else if (batteryVoltage > POWER_TEST_VOLTAGE_MAX) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "12.6f   // В",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_094",
      "name": "POWER_TEST_CURRENT_MAX",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 936,
          "context": "#define POWER_TEST_CURRENT_MAX   15.0f   // А"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 972,
          "context": "if (batteryCurrent > POWER_TEST_CURRENT_MAX) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "15.0f   // А",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_095",
      "name": "POWER_TEST_TEMP_MAX",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 937,
          "context": "#define POWER_TEST_TEMP_MAX      45.0f   // °C"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 984,
          "context": "if (batteryTemp > POWER_TEST_TEMP_MAX) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "45.0f   // °C",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_096",
      "name": "POWER_TEST_SUPPLY_MIN",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 938,
          "context": "#define POWER_TEST_SUPPLY_MIN    3.2f    // В (для 3.3В цепей)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1011,
          "context": "if (sensorSupply < POWER_TEST_SUPPLY_MIN || sensorSupply > POWER_TEST_SUPPLY_MAX) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "3.2f    // В (для 3.3В цепей)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_097",
      "name": "POWER_TEST_SUPPLY_MAX",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 939,
          "context": "#define POWER_TEST_SUPPLY_MAX    3.4f    // В"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1011,
          "context": "if (sensorSupply < POWER_TEST_SUPPLY_MIN || sensorSupply > POWER_TEST_SUPPLY_MAX) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "3.4f    // В",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_098",
      "name": "SENSOR_ERR_IMU_FAIL",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1021,
          "context": "#define SENSOR_ERR_IMU_FAIL      0x0101"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0101",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_099",
      "name": "SENSOR_ERR_IMU_SELFTEST",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1022,
          "context": "#define SENSOR_ERR_IMU_SELFTEST  0x0102"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0102",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_100",
      "name": "SENSOR_ERR_IMU_RANGE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1023,
          "context": "#define SENSOR_ERR_IMU_RANGE     0x0103"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1060,
          "context": "status.code = SENSOR_ERR_IMU_RANGE;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0103",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_101",
      "name": "SENSOR_ERR_BARO_FAIL",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1024,
          "context": "#define SENSOR_ERR_BARO_FAIL     0x0104"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1071,
          "context": "status.code = SENSOR_ERR_BARO_FAIL;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0104",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_102",
      "name": "SENSOR_ERR_BARO_RANGE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1025,
          "context": "#define SENSOR_ERR_BARO_RANGE    0x0105"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1082,
          "context": "status.code = SENSOR_ERR_BARO_RANGE;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0105",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_103",
      "name": "SENSOR_ERR_MAG_FAIL",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1026,
          "context": "#define SENSOR_ERR_MAG_FAIL      0x0106"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1093,
          "context": "status.code = SENSOR_ERR_MAG_FAIL;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0106",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_104",
      "name": "SENSOR_ERR_MAG_RANGE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1027,
          "context": "#define SENSOR_ERR_MAG_RANGE     0x0107"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1113,
          "context": "status.code = SENSOR_ERR_MAG_RANGE;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0107",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_105",
      "name": "SENSOR_ERR_GPS_FAIL",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1028,
          "context": "#define SENSOR_ERR_GPS_FAIL      0x0108"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1124,
          "context": "status.code = SENSOR_ERR_GPS_FAIL;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0108",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_106",
      "name": "SENSOR_ERR_ADC_FAIL",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1029,
          "context": "#define SENSOR_ERR_ADC_FAIL      0x0109"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0109",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_107",
      "name": "IMU_TEST_ACCEL_MAX",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1032,
          "context": "#define IMU_TEST_ACCEL_MAX      4.0f    // g"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1058,
          "context": "if (accel_magnitude > IMU_TEST_ACCEL_MAX || gyro_magnitude > IMU_TEST_GYRO_MAX) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "4.0f    // g",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_108",
      "name": "IMU_TEST_GYRO_MAX",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1033,
          "context": "#define IMU_TEST_GYRO_MAX       50.0f   // deg/s"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1058,
          "context": "if (accel_magnitude > IMU_TEST_ACCEL_MAX || gyro_magnitude > IMU_TEST_GYRO_MAX) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "50.0f   // deg/s",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_109",
      "name": "BARO_TEST_ALT_MIN",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1034,
          "context": "#define BARO_TEST_ALT_MIN       -100.0f // м"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1080,
          "context": "if (altitude < BARO_TEST_ALT_MIN || altitude > BARO_TEST_ALT_MAX) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "-100.0f // м",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_110",
      "name": "BARO_TEST_ALT_MAX",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1035,
          "context": "#define BARO_TEST_ALT_MAX       5000.0f // м"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1080,
          "context": "if (altitude < BARO_TEST_ALT_MIN || altitude > BARO_TEST_ALT_MAX) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "5000.0f // м",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_111",
      "name": "MAG_TEST_FIELD_MIN",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1036,
          "context": "#define MAG_TEST_FIELD_MIN      0.2f    // Гаусс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1111,
          "context": "if (mag_magnitude < MAG_TEST_FIELD_MIN || mag_magnitude > MAG_TEST_FIELD_MAX) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0.2f    // Гаусс",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_112",
      "name": "MAG_TEST_FIELD_MAX",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1037,
          "context": "#define MAG_TEST_FIELD_MAX      0.8f    // Гаусс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1111,
          "context": "if (mag_magnitude < MAG_TEST_FIELD_MIN || mag_magnitude > MAG_TEST_FIELD_MAX) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0.8f    // Гаусс",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_113",
      "name": "MOTOR_ERR_NOT_RESPONDING",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1136,
          "context": "#define MOTOR_ERR_NOT_RESPONDING 0x0201"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1187,
          "context": "status.code = MOTOR_ERR_NOT_RESPONDING;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0201",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_114",
      "name": "MOTOR_ERR_HIGH_CURRENT",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1137,
          "context": "#define MOTOR_ERR_HIGH_CURRENT   0x0202"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1210,
          "context": "status.code = MOTOR_ERR_HIGH_CURRENT;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0202",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_115",
      "name": "MOTOR_ERR_NO_ROTATION",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1138,
          "context": "#define MOTOR_ERR_NO_ROTATION    0x0203"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1222,
          "context": "status.code = MOTOR_ERR_NO_ROTATION;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0203",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_116",
      "name": "MOTOR_ERR_VIBRATION",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1139,
          "context": "#define MOTOR_ERR_VIBRATION      0x0204"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1244,
          "context": "status.code = MOTOR_ERR_VIBRATION;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0204",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_117",
      "name": "MOTOR_ERR_TEMP_HIGH",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1140,
          "context": "#define MOTOR_ERR_TEMP_HIGH      0x0205"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1234,
          "context": "status.code = MOTOR_ERR_TEMP_HIGH;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0205",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_118",
      "name": "MOTOR_ERR_ESC_FAIL",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1141,
          "context": "#define MOTOR_ERR_ESC_FAIL       0x0206"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1171,
          "context": "status.code = MOTOR_ERR_ESC_FAIL;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0206",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_119",
      "name": "MOTOR_TEST_SPEED",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1144,
          "context": "#define MOTOR_TEST_SPEED         10.0f   // % от максимальной скорости"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1196,
          "context": "SetMotorSpeed(i, MOTOR_TEST_SPEED);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "10.0f   // % от максимальной скорости",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_120",
      "name": "MOTOR_TEST_CURRENT_MAX",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1145,
          "context": "#define MOTOR_TEST_CURRENT_MAX   2.0f    // А на мотор"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1208,
          "context": "if (motorData[i].current > MOTOR_TEST_CURRENT_MAX) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "2.0f    // А на мотор",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_121",
      "name": "MOTOR_TEST_TEMP_MAX",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1146,
          "context": "#define MOTOR_TEST_TEMP_MAX      60.0f   // °C"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1232,
          "context": "if (motorData[i].temperature > MOTOR_TEST_TEMP_MAX) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "60.0f   // °C",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_122",
      "name": "MOTOR_TEST_VIB_MAX",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1147,
          "context": "#define MOTOR_TEST_VIB_MAX       2.0f    // g"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1242,
          "context": "if (motorData[i].vibration > MOTOR_TEST_VIB_MAX) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "2.0f    // g",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_123",
      "name": "MOTOR_TEST_TIMEOUT",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1148,
          "context": "#define MOTOR_TEST_TIMEOUT       1000    // мс"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "1000    // мс",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_124",
      "name": "COMM_ERR_RC_FAIL",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1273,
          "context": "#define COMM_ERR_RC_FAIL        0x0301"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1315,
          "context": "status.code = COMM_ERR_RC_FAIL;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0301",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_125",
      "name": "COMM_ERR_RC_QUALITY",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1274,
          "context": "#define COMM_ERR_RC_QUALITY     0x0302"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1326,
          "context": "status.code = COMM_ERR_RC_QUALITY;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0302",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_126",
      "name": "COMM_ERR_TELEMETRY_FAIL",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1275,
          "context": "#define COMM_ERR_TELEMETRY_FAIL 0x0303"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1349,
          "context": "status.code = COMM_ERR_TELEMETRY_FAIL;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0303",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_127",
      "name": "COMM_ERR_BACKUP_FAIL",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1276,
          "context": "#define COMM_ERR_BACKUP_FAIL    0x0304"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1359,
          "context": "status.code = COMM_ERR_BACKUP_FAIL;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0304",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_128",
      "name": "SAFETY_ERR_WATCHDOG",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1279,
          "context": "#define SAFETY_ERR_WATCHDOG     0x0401"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1380,
          "context": "status.code = SAFETY_ERR_WATCHDOG;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0401",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_129",
      "name": "SAFETY_ERR_EEPROM",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1280,
          "context": "#define SAFETY_ERR_EEPROM       0x0402"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1391,
          "context": "status.code = SAFETY_ERR_EEPROM;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0402",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_130",
      "name": "SAFETY_ERR_FLASH",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1281,
          "context": "#define SAFETY_ERR_FLASH        0x0403"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1402,
          "context": "status.code = SAFETY_ERR_FLASH;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0403",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_131",
      "name": "SAFETY_ERR_PARACHUTE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1282,
          "context": "#define SAFETY_ERR_PARACHUTE    0x0404"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1414,
          "context": "status.code = SAFETY_ERR_PARACHUTE;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0404",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_132",
      "name": "SAFETY_ERR_KILLSWITCH",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1283,
          "context": "#define SAFETY_ERR_KILLSWITCH   0x0405"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1426,
          "context": "status.code = SAFETY_ERR_KILLSWITCH;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0405",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_133",
      "name": "RC_TEST_TIMEOUT",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1286,
          "context": "#define RC_TEST_TIMEOUT         1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1305,
          "context": "while (GetCurrentTime() - startTime < RC_TEST_TIMEOUT) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "1000    // мс",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_134",
      "name": "RC_TEST_MIN_QUALITY",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1287,
          "context": "#define RC_TEST_MIN_QUALITY     75      // %"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1324,
          "context": "if (rcQuality < RC_TEST_MIN_QUALITY) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "75      // %",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_135",
      "name": "TELEMETRY_TEST_TIMEOUT",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1288,
          "context": "#define TELEMETRY_TEST_TIMEOUT  1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1339,
          "context": "while (GetCurrentTime() - startTime < TELEMETRY_TEST_TIMEOUT) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "1000    // мс",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_136",
      "name": "ADC_CHANNEL_MCU_TEMP",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1750,
          "context": "#define ADC_CHANNEL_MCU_TEMP         ADC_AIN0   // Канал АЦП для температур"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "ADC_AIN0   // Канал АЦП для температур",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_137",
      "name": "ADC_CHANNEL_MOTOR_TEMP_BASE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1751,
          "context": "#define ADC_CHANNEL_MOTOR_TEMP_BASE  ADC_AIN1   // Базовый канал для температур моторов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1772,
          "context": "uint32_t channel = ADC_CHANNEL_MOTOR_TEMP_BASE + motorIndex;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "ADC_AIN1   // Базовый канал для температур моторов",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_138",
      "name": "ADC_CHANNEL_BATTERY_TEMP",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1752,
          "context": "#define ADC_CHANNEL_BATTERY_TEMP     ADC_AIN4   // Канал АЦП для температур батареи"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "ADC_AIN4   // Канал АЦП для температур батареи",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_139",
      "name": "ADC_CHANNEL_BOARD_TEMP",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1753,
          "context": "#define ADC_CHANNEL_BOARD_TEMP       ADC_AIN5   // Канал АЦП для температур платы"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "ADC_AIN5   // Канал АЦП для температур платы",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_140",
      "name": "ADC_CHANNEL_ENV_TEMP",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1754,
          "context": "#define ADC_CHANNEL_ENV_TEMP         ADC_AIN6   // Канал АЦП для температур окружающей среды"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "ADC_AIN6   // Канал АЦП для температур окружающей среды",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_141",
      "name": "MAX_CONVERSION_ATTEMPTS",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1551,
          "context": "const uint32_t MAX_CONVERSION_ATTEMPTS = 1000;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1555,
          "context": "if (conversionAttempts >= MAX_CONVERSION_ATTEMPTS) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "value": "1000",
      "is_define": false,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_142",
      "name": "MIN_TEMP",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1888,
          "context": "const float MIN_TEMP = -200.0f;  // Минимальная температур для термопар"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1891,
          "context": "if (temperature < MIN_TEMP || temperature > MAX_TEMP) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "value": "-200.0f",
      "is_define": false,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_143",
      "name": "MAX_TEMP",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 357,
          "context": "if (temp >= BATTERY_MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1889,
          "context": "const float MAX_TEMP = 1800.0f;  // Максимальная температур для термопар"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1891,
          "context": "if (temperature < MIN_TEMP || temperature > MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 514,
          "context": "#define BATTERY_MAX_TEMP       60.0f    // Максимальная температура"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "value": "1800.0f",
      "is_define": false,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_144",
      "name": "EARTH_RADIUS",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 10,
          "context": "#define EARTH_RADIUS 6371000.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 165,
          "context": "float speed_deg = speed / (EARTH_RADIUS * DEG_TO_RAD(1.0f));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 208,
          "context": "return EARTH_RADIUS * c;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "6371000.0f",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_145",
      "name": "UPDATE_FREQUENCY",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 17,
          "context": "#define UPDATE_FREQUENCY 100"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 18,
          "context": "#define DT (1.0f / UPDATE_FREQUENCY)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "100",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_146",
      "name": "DT",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 69,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 671,
          "context": "WATCHDOG0_CTL_R &= ~WDT_CTL_INTEN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 683,
          "context": "WATCHDOG0_CTL_R |= (WDT_CTL_RESEN | WDT_CTL_INTEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 702,
          "context": "void WDT0_Handler(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 704,
          "context": "WATCHDOG0_ICR_R = WDT_ICR_M;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 718,
          "context": "return (WATCHDOG0_RIS_R & WDT_RIS_WDTRIS) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2006,
          "context": "WATCHDOG0_CTL_R &= ~(WDT_CTL_INTEN | WDT_CTL_RESEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2014,
          "context": "WATCHDOG0_CTL_R |= (WDT_CTL_RESEN | WDT_CTL_INTEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 18,
          "context": "#define DT (1.0f / UPDATE_FREQUENCY)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 198,
          "context": "pid->integral += error * DT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 202,
          "context": "float dTerm = pid->kD * (error - pid->prevError) / DT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 287,
          "context": "#define WDT_CTL_INTEN        0x00000001  // Разрешение прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 288,
          "context": "#define WDT_CTL_RESEN        0x00000002  // Разрешение сброса системы"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 471,
          "context": "#define WDT_RIS_WDTRIS        0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 472,
          "context": "#define WDT_ICR_M             0xFFFFFFFF  // Watchdog Timer Interrupt Clear Mask"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 490,
          "context": "void WDT0_Handler(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 34,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(1.0f / UPDATE_FREQUENCY)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_147",
      "name": "MAX_ROLL_ANGLE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 21,
          "context": "#define MAX_ROLL_ANGLE  45.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 99,
          "context": "stabState.targetSetPoint.roll = ClampValue(roll, -MAX_ROLL_ANGLE, MAX_ROLL_ANGLE);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "45.0f",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_148",
      "name": "MAX_PITCH_ANGLE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 22,
          "context": "#define MAX_PITCH_ANGLE 45.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 100,
          "context": "stabState.targetSetPoint.pitch = ClampValue(pitch, -MAX_PITCH_ANGLE, MAX_PITCH_ANGLE);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "45.0f",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_149",
      "name": "MAX_YAW_RATE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 23,
          "context": "#define MAX_YAW_RATE    180.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 40,
          "context": "#define MAX_YAW_RATE          90.0f    // Максимальная скорость рыскания (градусы/с)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "180.0f",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_150",
      "name": "ACTUATORS_H",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 1,
          "context": "#ifndef ACTUATORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 2,
          "context": "#define ACTUATORS_H"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "#include <stdint.h>",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_151",
      "name": "MOTOR_COUNT",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 19,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 32,
          "context": "if (motor_index >= MOTOR_COUNT || emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 42,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 48,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 55,
          "context": "if (motor_index >= MOTOR_COUNT || emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 62,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 73,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 80,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 87,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 152,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 159,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 227,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 242,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 8,
          "context": "#define MOTOR_COUNT 4"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 31,
          "context": "MotorState motors[MOTOR_COUNT];"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "4",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_152",
      "name": "MOTOR_FRONT_LEFT",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 110,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm + pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 124,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm - pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 138,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm + roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 11,
          "context": "#define MOTOR_FRONT_LEFT  0"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_153",
      "name": "MOTOR_FRONT_RIGHT",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 112,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 125,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 140,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 12,
          "context": "#define MOTOR_FRONT_RIGHT 1"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "1",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_154",
      "name": "MOTOR_BACK_LEFT",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 113,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm - pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 126,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm + pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 139,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm + roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 13,
          "context": "#define MOTOR_BACK_LEFT   2"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "2",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_155",
      "name": "MOTOR_BACK_RIGHT",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 111,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm + pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 127,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm + pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 141,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm - roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 14,
          "context": "#define MOTOR_BACK_RIGHT  3"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "3",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_156",
      "name": "PWM_MIN_VALUE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 38,
          "context": "actuators_state.motors[motor_index].is_running = (pwm_value > (uint16_t)PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 66,
          "context": "actuators_state.motors[motor_index].pwm_value = PWM_MIN_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 97,
          "context": "uint16_t pwm_value = (uint16_t)((throttle * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100U + PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 108,
          "context": "int32_t pwm_delta = ((int32_t)yaw * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 17,
          "context": "#define PWM_MIN_VALUE     0    // Минимальное значение PWM (мотор выключен)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0    // Минимальное значение PWM (мотор выключен)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_157",
      "name": "PWM_MAX_VALUE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 97,
          "context": "uint16_t pwm_value = (uint16_t)((throttle * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100U + PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 108,
          "context": "int32_t pwm_delta = ((int32_t)yaw * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 170,
          "context": "uint16_t hover_pwm = PWM_MAX_VALUE / 2;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 179,
          "context": "uint16_t ascent_pwm = (uint16_t)(PWM_MAX_VALUE * 0.7f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 188,
          "context": "uint16_t descent_pwm = (uint16_t)(PWM_MAX_VALUE * 0.3f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 230,
          "context": "float pwm_factor = (float)actuators_state.motors[i].pwm_value / PWM_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 250,
          "context": "if (*pwm_value > PWM_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 251,
          "context": "*pwm_value = PWM_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 18,
          "context": "#define PWM_MAX_VALUE     1000 // Максимальное значение PWM (полная мощность)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "1000 // Максимальное значение PWM (полная мощность)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_158",
      "name": "PWM_IDLE_VALUE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 19,
          "context": "#define PWM_IDLE_VALUE    100  // Значение PWM на холостом ходу"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "100  // Значение PWM на холостом ходу",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_159",
      "name": "COMMUNICATION_H",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 1,
          "context": "#ifndef COMMUNICATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 2,
          "context": "#define COMMUNICATION_H"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "#include <stdint.h>",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_160",
      "name": "GPIO_PORTA_AFSEL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 73,
          "context": "GPIO_PORTA_AFSEL_R |= (GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 11,
          "context": "#define GPIO_PORTA_AFSEL_R    (*((volatile uint32_t *)0x40004420))  // Port A Alternate Function Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 461,
          "context": "#define GPIO_PORTA_AFSEL_R    (*((volatile uint32_t *)0x40004420))  // Port A Alternate Function Select"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40004420))  // Port A Alternate Function Select",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_161",
      "name": "GPIO_PORTA_DEN_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 74,
          "context": "GPIO_PORTA_DEN_R |= (GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 12,
          "context": "#define GPIO_PORTA_DEN_R      (*((volatile uint32_t *)0x4000451C))  // Port A Digital Enable"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x4000451C))  // Port A Digital Enable",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_162",
      "name": "GPIO_PORTA_AMSEL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 75,
          "context": "GPIO_PORTA_AMSEL_R &= ~(GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 13,
          "context": "#define GPIO_PORTA_AMSEL_R    (*((volatile uint32_t *)0x40004528))  // Port A Analog Mode Select"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40004528))  // Port A Analog Mode Select",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_163",
      "name": "GPIO_PORTA_PCTL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 76,
          "context": "GPIO_PORTA_PCTL_R = (GPIO_PORTA_PCTL_R & 0xFFFFFF00) | 0x00000011;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 14,
          "context": "#define GPIO_PORTA_PCTL_R     (*((volatile uint32_t *)0x4000452C))  // Port A Port Control"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x4000452C))  // Port A Port Control",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_164",
      "name": "COMM_BUFFER_SIZE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 47,
          "context": "uint8_t rxBuffer[COMM_BUFFER_SIZE];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 48,
          "context": "uint8_t txBuffer[COMM_BUFFER_SIZE];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 161,
          "context": "(uint16_t)(COMM_BUFFER_SIZE - commState.rxIndex)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 17,
          "context": "#define COMM_BUFFER_SIZE     256"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "256",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_165",
      "name": "COMM_BAUDRATE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 138,
          "context": "commState.baudRate = COMM_BAUDRATE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 18,
          "context": "#define COMM_BAUDRATE       115200"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "115200",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_166",
      "name": "COMM_MAX_PACKET_SIZE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 173,
          "context": "uint16_t packetSize = sizeof(CommPacket) - COMM_MAX_PACKET_SIZE + packet->length;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 205,
          "context": "if (!commState.initialized || length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 245,
          "context": "char message[COMM_MAX_PACKET_SIZE - 1];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 408,
          "context": "if (packet->length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 19,
          "context": "#define COMM_MAX_PACKET_SIZE 64"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 48,
          "context": "uint8_t data[COMM_MAX_PACKET_SIZE];  // Данные"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "64",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_167",
      "name": "DIAGNOSTICS_H",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 1,
          "context": "#ifndef DIAGNOSTICS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 2,
          "context": "#define DIAGNOSTICS_H"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "#include <stdint.h>",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_168",
      "name": "TEMP_SENSOR_TYPE_LINEAR",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1498,
          "context": "switch (TEMP_SENSOR_TYPE_LINEAR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1499,
          "context": "case TEMP_SENSOR_TYPE_LINEAR:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1508,
          "context": "(uint32_t)TEMP_SENSOR_TYPE_LINEAR);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1837,
          "context": "switch (TEMP_SENSOR_TYPE_LINEAR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1838,
          "context": "case TEMP_SENSOR_TYPE_LINEAR:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1847,
          "context": "(uint32_t)TEMP_SENSOR_TYPE_LINEAR);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 95,
          "context": "#define TEMP_SENSOR_TYPE_LINEAR    0"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_169",
      "name": "TEMP_SENSOR_TYPE_NTC",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 96,
          "context": "#define TEMP_SENSOR_TYPE_NTC       1"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "1",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_170",
      "name": "TEMP_SENSOR_TYPE_PTC",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 97,
          "context": "#define TEMP_SENSOR_TYPE_PTC       2"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "2",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_171",
      "name": "TEMP_SENSOR_TYPE_THERMO",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 98,
          "context": "#define TEMP_SENSOR_TYPE_THERMO    3"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "3",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_172",
      "name": "TEMP_MCU_WARNING",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 443,
          "context": "else if (mcu_temp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 481,
          "context": "} else if (diagState.thermalState.mcuTemp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 576,
          "context": "return (diagState.thermalState.mcuTemp >= TEMP_MCU_WARNING ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 101,
          "context": "#define TEMP_MCU_WARNING      85.0f"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "85.0f",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_173",
      "name": "TEMP_MCU_CRITICAL",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 439,
          "context": "if (mcu_temp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 476,
          "context": "if (diagState.thermalState.mcuTemp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 102,
          "context": "#define TEMP_MCU_CRITICAL     95.0f"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "95.0f",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_174",
      "name": "TEMP_MOTORS_WARNING",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 452,
          "context": "else if (motors_temp >= TEMP_MOTORS_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 495,
          "context": "} else if (diagState.thermalState.motorTemps[i] >= TEMP_MOTORS_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 577,
          "context": "diagState.thermalState.motorTemps[0] >= TEMP_MOTORS_WARNING ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 103,
          "context": "#define TEMP_MOTORS_WARNING   70.0f"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "70.0f",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_175",
      "name": "TEMP_MOTORS_CRITICAL",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 448,
          "context": "if (motors_temp >= TEMP_MOTORS_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 490,
          "context": "if (diagState.thermalState.motorTemps[i] >= TEMP_MOTORS_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 104,
          "context": "#define TEMP_MOTORS_CRITICAL  80.0f"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "80.0f",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_176",
      "name": "TEMP_BOARD_WARNING",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 461,
          "context": "else if (board_temp >= TEMP_BOARD_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 509,
          "context": "} else if (diagState.thermalState.boardTemp >= TEMP_BOARD_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 578,
          "context": "diagState.thermalState.boardTemp >= TEMP_BOARD_WARNING);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 105,
          "context": "#define TEMP_BOARD_WARNING    60.0f"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "60.0f",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_177",
      "name": "TEMP_BOARD_CRITICAL",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 457,
          "context": "if (board_temp >= TEMP_BOARD_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 504,
          "context": "if (diagState.thermalState.boardTemp >= TEMP_BOARD_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 106,
          "context": "#define TEMP_BOARD_CRITICAL   70.0f"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "70.0f",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_178",
      "name": "MAX_SAFE_TEMPERATURE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 107,
          "context": "#define MAX_SAFE_TEMPERATURE   125.0f"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "125.0f",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_179",
      "name": "TEST_PASS",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 947,
          "context": "status.status = TEST_PASS;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1045,
          "context": "status.status = TEST_PASS;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1165,
          "context": "status.status = TEST_PASS;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1296,
          "context": "status.status = TEST_PASS;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1375,
          "context": "status.status = TEST_PASS;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 110,
          "context": "#define TEST_PASS    0"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_180",
      "name": "TEST_WARNING",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 985,
          "context": "status.status = TEST_WARNING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1112,
          "context": "status.status = TEST_WARNING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1123,
          "context": "status.status = TEST_WARNING;  // GPS не критичен, поэтому WARNING"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1233,
          "context": "status.status = TEST_WARNING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1243,
          "context": "status.status = TEST_WARNING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1325,
          "context": "status.status = TEST_WARNING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1348,
          "context": "status.status = TEST_WARNING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1358,
          "context": "status.status = TEST_WARNING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1683,
          "context": "else if (selfTestResult.powerTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1695,
          "context": "else if (selfTestResult.sensorTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1707,
          "context": "else if (selfTestResult.motorTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1719,
          "context": "else if (selfTestResult.commTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1731,
          "context": "else if (selfTestResult.safetyTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 111,
          "context": "#define TEST_WARNING 1"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "1",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_181",
      "name": "TEST_FAIL",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 952,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 961,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 973,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 995,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1059,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1070,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1081,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1092,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1170,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1186,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1209,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1221,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1314,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1379,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1390,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1401,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1413,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1425,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1678,
          "context": "if (selfTestResult.powerTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1686,
          "context": "selfTestResult.systemStatus.powerSystemOperational = (selfTestResult.powerTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1690,
          "context": "if (selfTestResult.sensorTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1698,
          "context": "selfTestResult.systemStatus.sensorsOperational = (selfTestResult.sensorTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1702,
          "context": "if (selfTestResult.motorTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1710,
          "context": "selfTestResult.systemStatus.motorsOperational = (selfTestResult.motorTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1714,
          "context": "if (selfTestResult.commTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1722,
          "context": "selfTestResult.systemStatus.communicationOperational = (selfTestResult.commTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1726,
          "context": "if (selfTestResult.safetyTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1734,
          "context": "selfTestResult.systemStatus.safetySystemOperational = (selfTestResult.safetyTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 112,
          "context": "#define TEST_FAIL    2"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "2",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_182",
      "name": "TEST_NOT_RUN",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 113,
          "context": "#define TEST_NOT_RUN 3"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "3",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_183",
      "name": "SYSCTL_RCGCGPIO_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 67,
          "context": "SYSCTL_RCGCGPIO_R |= (1U << 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 289,
          "context": "SYSCTL_RCGCGPIO_R |= SYSCTL_RCGCGPIO_R4;  // Порт E"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 369,
          "context": "SYSCTL_RCGCGPIO_R |= (SYSCTL_RCGCGPIO_R3 | SYSCTL_RCGCGPIO_R4);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 232,
          "context": "#define SYSCTL_RCGCGPIO_R    (*((volatile uint32_t *)0x400FE608))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 444,
          "context": "#define SYSCTL_RCGCGPIO_R3    0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 445,
          "context": "#define SYSCTL_RCGCGPIO_R4    0x00000010"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x400FE608))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_184",
      "name": "SYSCTL_RCGCADC_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 290,
          "context": "SYSCTL_RCGCADC_R |= SYSCTL_RCGCADC_R0;    // ADC0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 370,
          "context": "SYSCTL_RCGCADC_R |= SYSCTL_RCGCADC_R1;    // ADC1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 233,
          "context": "#define SYSCTL_RCGCADC_R     (*((volatile uint32_t *)0x400FE638))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 446,
          "context": "#define SYSCTL_RCGCADC_R0     0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 447,
          "context": "#define SYSCTL_RCGCADC_R1     0x00000002"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x400FE638))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_185",
      "name": "SYSCTL_PRGPIO_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 32,
          "context": "#define SYSCTL_PRGPIO_R       (*((volatile uint32_t *)0x400FEA08))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 70,
          "context": "while((SYSCTL_PRGPIO_R & (1U << 0)) == 0) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 293,
          "context": "while(!(SYSCTL_PRGPIO_R & SYSCTL_PRGPIO_R4)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 373,
          "context": "while(!(SYSCTL_PRGPIO_R & (SYSCTL_PRGPIO_R3 | SYSCTL_PRGPIO_R4))) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 234,
          "context": "#define SYSCTL_PRGPIO_R      (*((volatile uint32_t *)0x400FEA08))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 448,
          "context": "#define SYSCTL_PRGPIO_R3      0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 449,
          "context": "#define SYSCTL_PRGPIO_R4      0x00000010"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x400FEA08))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_186",
      "name": "SYSCTL_PRADC_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 294,
          "context": "while(!(SYSCTL_PRADC_R & SYSCTL_PRADC_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 374,
          "context": "while(!(SYSCTL_PRADC_R & SYSCTL_PRADC_R1)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 235,
          "context": "#define SYSCTL_PRADC_R       (*((volatile uint32_t *)0x400FEA38))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 450,
          "context": "#define SYSCTL_PRADC_R0       0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 451,
          "context": "#define SYSCTL_PRADC_R1       0x00000002"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x400FEA38))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_187",
      "name": "SYSCTL_RCGC2_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 31,
          "context": "#define SYSCTL_RCGC2_R          (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 80,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 85,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 759,
          "context": "savedPeripheralState = SYSCTL_RCGC2_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 765,
          "context": "SYSCTL_RCGC2_R = savedPeripheralState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 768,
          "context": "volatile uint32_t delay = SYSCTL_RCGC2_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 12,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 17,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 24,
          "context": "SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 236,
          "context": "#define SYSCTL_RCGC2_R       (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 26,
          "context": "#define SYSCTL_RCGC2_R         (*((volatile uint32_t *)0x400FE108))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x400FE108))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_188",
      "name": "GPIO_PORTD_DEN_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 380,
          "context": "GPIO_PORTD_DEN_R &= ~(1<<3);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 238,
          "context": "#define GPIO_PORTD_DEN_R     (*((volatile uint32_t *)0x4005751C))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x4005751C))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_189",
      "name": "GPIO_PORTD_AMSEL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 382,
          "context": "GPIO_PORTD_AMSEL_R |= (1<<3);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 239,
          "context": "#define GPIO_PORTD_AMSEL_R   (*((volatile uint32_t *)0x40057528))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40057528))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_190",
      "name": "ADC1_ACTSS_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 385,
          "context": "ADC1_ACTSS_R &= ~ADC_ACTSS_ASEN0;          // Отключаем секвенсор для настройки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 404,
          "context": "ADC1_ACTSS_R |= ADC_ACTSS_ASEN0;           // Включаем секвенсор"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 241,
          "context": "#define ADC1_ACTSS_R         (*((volatile uint32_t *)0x40039000))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40039000))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_191",
      "name": "ADC1_EMUX_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 386,
          "context": "ADC1_EMUX_R &= ~ADC_EMUX_EM0_M;            // Программный запуск"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 242,
          "context": "#define ADC1_EMUX_R          (*((volatile uint32_t *)0x40039014))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40039014))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_192",
      "name": "ADC1_SSMUX0_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 389,
          "context": "ADC1_SSMUX0_R = (TEMP_MCU_CHANNEL << 0)   | // Встроенный сенсор MCU"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 243,
          "context": "#define ADC1_SSMUX0_R        (*((volatile uint32_t *)0x40039040))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40039040))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_193",
      "name": "ADC1_SSCTL0_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 395,
          "context": "ADC1_SSCTL0_R = (0 << 0)                   | // Первый канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 244,
          "context": "#define ADC1_SSCTL0_R        (*((volatile uint32_t *)0x40039044))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40039044))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_194",
      "name": "ADC1_TSSEL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 402,
          "context": "ADC1_TSSEL_R |= (1 << TEMP_MCU_CHANNEL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 245,
          "context": "#define ADC1_TSSEL_R         (*((volatile uint32_t *)0x4003901C))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x4003901C))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_195",
      "name": "ADC1_SAC_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 407,
          "context": "ADC1_SAC_R = ADC_SAC_AVG_64X;              // 64x усреднение"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 246,
          "context": "#define ADC1_SAC_R           (*((volatile uint32_t *)0x40039030))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40039030))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_196",
      "name": "ADC1_IM_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 410,
          "context": "ADC1_IM_R |= ADC_IM_MASK0;                 // Маска прерывания секвенсора 0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 247,
          "context": "#define ADC1_IM_R            (*((volatile uint32_t *)0x40039008))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40039008))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_197",
      "name": "ADC1_SSFIF00_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 248,
          "context": "#define ADC1_SSFIF00_R       (*((volatile uint32_t *)0x40039048))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40039048))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_198",
      "name": "ADC0_SAC_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 314,
          "context": "ADC0_SAC_R = ADC_SAC_AVG_64X;             // 64x усреднение"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 250,
          "context": "#define ADC0_SAC_R           (*((volatile uint32_t *)0x40038030))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40038030))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_199",
      "name": "ADC0_IM_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 317,
          "context": "ADC0_IM_R |= ADC_IM_MASK1;                // Маска прерывания секвенсора 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 251,
          "context": "#define ADC0_IM_R            (*((volatile uint32_t *)0x40038008))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40038008))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_200",
      "name": "ADC0_SSFIFO1_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 324,
          "context": "uint32_t voltage_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 325,
          "context": "uint32_t current_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 326,
          "context": "uint32_t temp_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 252,
          "context": "#define ADC0_SSFIFO1_R       (*((volatile uint32_t *)0x40038048))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40038048))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_201",
      "name": "ADC_ACTSS_ASEN0",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 385,
          "context": "ADC1_ACTSS_R &= ~ADC_ACTSS_ASEN0;          // Отключаем секвенсор для настройки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 404,
          "context": "ADC1_ACTSS_R |= ADC_ACTSS_ASEN0;           // Включаем секвенсор"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 255,
          "context": "#define ADC_ACTSS_ASEN0      0x00000001"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000001",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_202",
      "name": "ADC_EMUX_EM0_M",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 386,
          "context": "ADC1_EMUX_R &= ~ADC_EMUX_EM0_M;            // Программный запуск"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 256,
          "context": "#define ADC_EMUX_EM0_M       0x0000000F"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0000000F",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_203",
      "name": "ADC_SSCTL0_IE3",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 398,
          "context": "(ADC_SSCTL0_IE3 |           // Прерывание после последнего"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 257,
          "context": "#define ADC_SSCTL0_IE3       0x00000800"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000800",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_204",
      "name": "ADC_SSCTL0_END3",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 399,
          "context": "ADC_SSCTL0_END3);          // Последний канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 258,
          "context": "#define ADC_SSCTL0_END3      0x00000400"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000400",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_205",
      "name": "ADC_IM_MASK0",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 410,
          "context": "ADC1_IM_R |= ADC_IM_MASK0;                 // Маска прерывания секвенсора 0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 259,
          "context": "#define ADC_IM_MASK0         0x00000001"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000001",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_206",
      "name": "INT_ADC1SS0",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 411,
          "context": "NVIC_EN1_R |= (1 << (INT_ADC1SS0 - 48));   // Включаем прерывание в NVIC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 260,
          "context": "#define INT_ADC1SS0          51"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "51",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_207",
      "name": "ADC_PSSI_SS3",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 202,
          "context": "ADC0_PSSI_R = ADC_PSSI_SS3;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 263,
          "context": "#define ADC_PSSI_SS3          0x00000008"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000008",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_208",
      "name": "ADC_RIS_INR3",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 205,
          "context": "while(!(ADC0_RIS_R & ADC_RIS_INR3)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 211,
          "context": "ADC0_ISC_R = ADC_RIS_INR3;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 264,
          "context": "#define ADC_RIS_INR3          0x00000008"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000008",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_209",
      "name": "ADC_SSCTL0_IE2",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 309,
          "context": "(ADC_SSCTL0_IE2 |         // Прерывание после последнего"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 265,
          "context": "#define ADC_SSCTL0_IE2        0x00000400"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000400",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_210",
      "name": "ADC_SSCTL0_END2",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 310,
          "context": "ADC_SSCTL0_END2);        // Последний канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 266,
          "context": "#define ADC_SSCTL0_END2       0x00000800"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000800",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_211",
      "name": "ADC_SAC_AVG_64X",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 314,
          "context": "ADC0_SAC_R = ADC_SAC_AVG_64X;             // 64x усреднение"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 407,
          "context": "ADC1_SAC_R = ADC_SAC_AVG_64X;              // 64x усреднение"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 267,
          "context": "#define ADC_SAC_AVG_64X       0x00000006"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000006",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_212",
      "name": "ADC_ACTSS_ASEN1",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 57,
          "context": "#define ADC_ACTSS_ASEN1     0x00000002  // SS1 Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 302,
          "context": "ADC0_ACTSS_R &= ~ADC_ACTSS_ASEN1;          // Отключаем секвенсор для настройки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 311,
          "context": "ADC0_ACTSS_R |= ADC_ACTSS_ASEN1;          // Включаем секвенсор"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 268,
          "context": "#define ADC_ACTSS_ASEN1       0x00000002  // SS1 Enable"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000002  // SS1 Enable",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_213",
      "name": "ADC_EMUX_EM1_M",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 58,
          "context": "#define ADC_EMUX_EM1_M      0x000000F0  // SS1 Trigger Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 303,
          "context": "ADC0_EMUX_R &= ~ADC_EMUX_EM1_M;            // Программный запуск"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 269,
          "context": "#define ADC_EMUX_EM1_M        0x000000F0  // SS1 Trigger Select mask"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x000000F0  // SS1 Trigger Select mask",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_214",
      "name": "ADC_IM_MASK1",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 317,
          "context": "ADC0_IM_R |= ADC_IM_MASK1;                // Маска прерывания секвенсора 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 270,
          "context": "#define ADC_IM_MASK1          0x00000002  // SS1 Interrupt Mask"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000002  // SS1 Interrupt Mask",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_215",
      "name": "ADC_RIS_INR1",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 271,
          "context": "#define ADC_RIS_INR1          0x00000002  // SS1 Interrupt Status"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000002  // SS1 Interrupt Status",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_216",
      "name": "ADC_PSSI_SS1",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 56,
          "context": "#define ADC_PSSI_SS1        0x00000002  // SS1 Initiate"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 272,
          "context": "#define ADC_PSSI_SS1          0x00000002  // SS1 Initiate"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000002  // SS1 Initiate",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_217",
      "name": "ADC_SSCTL1_IE2",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 273,
          "context": "#define ADC_SSCTL1_IE2        0x00000400  // Sample 2 Interrupt Enable"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000400  // Sample 2 Interrupt Enable",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_218",
      "name": "ADC_SSCTL1_END2",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 274,
          "context": "#define ADC_SSCTL1_END2       0x00000800  // Sample 2 is End of Sequence"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000800  // Sample 2 is End of Sequence",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_219",
      "name": "INT_ADC0SS1",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 318,
          "context": "NVIC_EN0_R |= (1 << (INT_ADC0SS1 - 16));  // Включаем прерывание в NVIC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 277,
          "context": "#define INT_ADC0SS1          15  // ADC0 Sequencer 1 interrupt"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "15  // ADC0 Sequencer 1 interrupt",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_220",
      "name": "WATCHDOG0_LOAD_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 678,
          "context": "WATCHDOG0_LOAD_R = reload_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1996,
          "context": "uint32_t originalLoad = WATCHDOG0_LOAD_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2009,
          "context": "WATCHDOG0_LOAD_R = testTimeout;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2037,
          "context": "WATCHDOG0_LOAD_R = originalLoad;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 280,
          "context": "#define WATCHDOG0_LOAD_R     (*((volatile uint32_t *)0x40000000))  // Регистр загрузки WDT"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40000000))  // Регистр загрузки WDT",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_221",
      "name": "WATCHDOG0_CTL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 671,
          "context": "WATCHDOG0_CTL_R &= ~WDT_CTL_INTEN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 683,
          "context": "WATCHDOG0_CTL_R |= (WDT_CTL_RESEN | WDT_CTL_INTEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1997,
          "context": "uint32_t originalCtl = WATCHDOG0_CTL_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2006,
          "context": "WATCHDOG0_CTL_R &= ~(WDT_CTL_INTEN | WDT_CTL_RESEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2014,
          "context": "WATCHDOG0_CTL_R |= (WDT_CTL_RESEN | WDT_CTL_INTEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2038,
          "context": "WATCHDOG0_CTL_R = originalCtl;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 281,
          "context": "#define WATCHDOG0_CTL_R      (*((volatile uint32_t *)0x40000008))  // Регистр управления WDT"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40000008))  // Регистр управления WDT",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_222",
      "name": "WATCHDOG0_ICR_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 695,
          "context": "WATCHDOG0_ICR_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 704,
          "context": "WATCHDOG0_ICR_R = WDT_ICR_M;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 712,
          "context": "WATCHDOG0_ICR_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2026,
          "context": "WATCHDOG0_ICR_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 282,
          "context": "#define WATCHDOG0_ICR_R      (*((volatile uint32_t *)0x4000000C))  // Регистр очистки прерываний WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 469,
          "context": "#define WATCHDOG0_ICR_R       (*((volatile uint32_t *)0x40000008))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x4000000C))  // Регистр очистки прерываний WDT",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_223",
      "name": "WATCHDOG0_LOCK_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 668,
          "context": "WATCHDOG0_LOCK_R = 0x1ACCE551;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2003,
          "context": "WATCHDOG0_LOCK_R = 0x1ACCE551;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 283,
          "context": "#define WATCHDOG0_LOCK_R     (*((volatile uint32_t *)0x40000C00))  // Регистр блокировки WDT"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40000C00))  // Регистр блокировки WDT",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_224",
      "name": "WATCHDOG0_ICR_M",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 284,
          "context": "#define WATCHDOG0_ICR_M      (*((volatile uint32_t *)0x40000010))  // Регистр очистки прерываний WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 470,
          "context": "#define WATCHDOG0_ICR_M       (*((volatile uint32_t *)0x40000010))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40000010))  // Регистр очистки прерываний WDT",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_225",
      "name": "WDT_CTL_INTEN",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 671,
          "context": "WATCHDOG0_CTL_R &= ~WDT_CTL_INTEN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 683,
          "context": "WATCHDOG0_CTL_R |= (WDT_CTL_RESEN | WDT_CTL_INTEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2006,
          "context": "WATCHDOG0_CTL_R &= ~(WDT_CTL_INTEN | WDT_CTL_RESEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2014,
          "context": "WATCHDOG0_CTL_R |= (WDT_CTL_RESEN | WDT_CTL_INTEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 287,
          "context": "#define WDT_CTL_INTEN        0x00000001  // Разрешение прерываний"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000001  // Разрешение прерываний",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_226",
      "name": "WDT_CTL_RESEN",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 683,
          "context": "WATCHDOG0_CTL_R |= (WDT_CTL_RESEN | WDT_CTL_INTEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2006,
          "context": "WATCHDOG0_CTL_R &= ~(WDT_CTL_INTEN | WDT_CTL_RESEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2014,
          "context": "WATCHDOG0_CTL_R |= (WDT_CTL_RESEN | WDT_CTL_INTEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 288,
          "context": "#define WDT_CTL_RESEN        0x00000002  // Разрешение сброса системы"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000002  // Разрешение сброса системы",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_227",
      "name": "NVIC_SYS_CTRL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 736,
          "context": "NVIC_SYS_CTRL_R |= NVIC_SYS_CTRL_SLEEPDEEP; // Включаем режим сна"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 745,
          "context": "NVIC_SYS_CTRL_R |= NVIC_SYS_CTRL_SLEEPDEEP; // Включаем глубокий сон"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 751,
          "context": "NVIC_SYS_CTRL_R &= ~NVIC_SYS_CTRL_SLEEPDEEP; // Отключаем режим сна"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 291,
          "context": "#define NVIC_SYS_CTRL_R      (*((volatile uint32_t *)0xE000ED10))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0xE000ED10))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_228",
      "name": "NVIC_SYS_CTRL_SLEEPDEEP",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 736,
          "context": "NVIC_SYS_CTRL_R |= NVIC_SYS_CTRL_SLEEPDEEP; // Включаем режим сна"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 745,
          "context": "NVIC_SYS_CTRL_R |= NVIC_SYS_CTRL_SLEEPDEEP; // Включаем глубокий сон"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 751,
          "context": "NVIC_SYS_CTRL_R &= ~NVIC_SYS_CTRL_SLEEPDEEP; // Отключаем режим сна"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 292,
          "context": "#define NVIC_SYS_CTRL_SLEEPDEEP 0x00000004"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000004",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_229",
      "name": "NVIC_EN0_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 318,
          "context": "NVIC_EN0_R |= (1 << (INT_ADC0SS1 - 16));  // Включаем прерывание в NVIC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 686,
          "context": "NVIC_EN0_R |= (1 << INT_WATCHDOG);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 779,
          "context": "NVIC_EN0_R |= (1 << INT_UART0);       // UART0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 780,
          "context": "NVIC_EN0_R |= (1 << INT_WTIMER0A);    // WatchDog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2017,
          "context": "NVIC_EN0_R |= (1 << INT_WATCHDOG);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 298,
          "context": "#define NVIC_EN0_R            (*((volatile uint32_t *)0xE000E100))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0xE000E100))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_230",
      "name": "NVIC_PRI0_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 689,
          "context": "NVIC_PRI0_R = (NVIC_PRI0_R & 0xFFFFFFF0) | 0x0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2020,
          "context": "NVIC_PRI0_R = (NVIC_PRI0_R & 0xFFFFFFF0) | 0x0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 299,
          "context": "#define NVIC_PRI0_R          (*((volatile uint32_t *)0xE000E400))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0xE000E400))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_231",
      "name": "NVIC_APINT_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 187,
          "context": "if (NVIC_APINT_R & 0x10000) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 300,
          "context": "#define NVIC_APINT_R         (*((volatile uint32_t *)0xE000ED0C))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0xE000ED0C))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_232",
      "name": "NVIC_APINT_VECTKEY",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 301,
          "context": "#define NVIC_APINT_VECTKEY   0x05FA0000"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x05FA0000",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_233",
      "name": "NVIC_APINT_SYSRESETREQ",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 302,
          "context": "#define NVIC_APINT_SYSRESETREQ 0x00000004"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000004",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_234",
      "name": "SYSCTL_RCGCWD_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 17,
          "context": "#define SYSCTL_RCGCWD_R        (*((volatile uint32_t *)(SYSCTL_BASE + 0x600)))  // Регистр тактирования Watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 662,
          "context": "SYSCTL_RCGCWD_R |= SYSCTL_RCGCWD_R0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 305,
          "context": "#define SYSCTL_RCGCWD_R      (*((volatile uint32_t *)0x400FE600))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 309,
          "context": "#define SYSCTL_RCGCWD_R0     0x00000001"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x400FE600))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_235",
      "name": "SYSCTL_PRWD_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 18,
          "context": "#define SYSCTL_PRWD_R          (*((volatile uint32_t *)(SYSCTL_BASE + 0xA00)))  // Регистр готовности Watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 665,
          "context": "while(!(SYSCTL_PRWD_R & SYSCTL_PRWD_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 306,
          "context": "#define SYSCTL_PRWD_R        (*((volatile uint32_t *)0x400FEA00))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 310,
          "context": "#define SYSCTL_PRWD_R0       0x00000001"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x400FEA00))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_236",
      "name": "SYSCTL_RCGCWD_R0",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 662,
          "context": "SYSCTL_RCGCWD_R |= SYSCTL_RCGCWD_R0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 309,
          "context": "#define SYSCTL_RCGCWD_R0     0x00000001"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000001",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_237",
      "name": "SYSCTL_PRWD_R0",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 665,
          "context": "while(!(SYSCTL_PRWD_R & SYSCTL_PRWD_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 310,
          "context": "#define SYSCTL_PRWD_R0       0x00000001"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000001",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_238",
      "name": "MCU_TEMP_SLOPE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 425,
          "context": "float mcu_temp = ((mcu_voltage * 1000.0f) / MCU_TEMP_SLOPE) + MCU_TEMP_OFFSET;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 313,
          "context": "#define MCU_TEMP_SLOPE       1.0f    // Slope for MCU temperature conversion"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "1.0f    // Slope for MCU temperature conversion",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_239",
      "name": "MCU_TEMP_OFFSET",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 425,
          "context": "float mcu_temp = ((mcu_voltage * 1000.0f) / MCU_TEMP_SLOPE) + MCU_TEMP_OFFSET;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 314,
          "context": "#define MCU_TEMP_OFFSET      0.0f    // Offset for MCU temperature conversion"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0.0f    // Offset for MCU temperature conversion",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_240",
      "name": "TEMP_SENSOR_SLOPE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 428,
          "context": "float motors_temp = ((motors_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 429,
          "context": "float board_temp = ((board_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 430,
          "context": "float ambient_temp = ((ambient_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 315,
          "context": "#define TEMP_SENSOR_SLOPE    10.0f   // mV/°C for external temperature sensors"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "10.0f   // mV/°C for external temperature sensors",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_241",
      "name": "TEMP_MCU_CHANNEL",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 389,
          "context": "ADC1_SSMUX0_R = (TEMP_MCU_CHANNEL << 0)   | // Встроенный сенсор MCU"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 402,
          "context": "ADC1_TSSEL_R |= (1 << TEMP_MCU_CHANNEL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 318,
          "context": "#define TEMP_MCU_CHANNEL     0       // Internal temperature sensor channel"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0       // Internal temperature sensor channel",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_242",
      "name": "NVIC_EN1_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 411,
          "context": "NVIC_EN1_R |= (1 << (INT_ADC1SS0 - 48));   // Включаем прерывание в NVIC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 321,
          "context": "#define NVIC_EN1_R           (*((volatile uint32_t *)0xE000E104))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0xE000E104))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_243",
      "name": "ADC1_SSFIFO0_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 417,
          "context": "uint32_t mcu_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 418,
          "context": "uint32_t motors_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 419,
          "context": "uint32_t board_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 420,
          "context": "uint32_t ambient_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1920,
          "context": "uint32_t result = ADC1_SSFIFO0_R & 0xFFF;  // 12-bit ADC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 324,
          "context": "#define ADC1_SSFIFO0_R       (*((volatile uint32_t *)0x40039044))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40039044))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_244",
      "name": "NVIC_ST_CTRL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 356,
          "context": "NVIC_ST_CTRL_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 365,
          "context": "NVIC_ST_CTRL_R = NVIC_ST_CTRL_ENABLE |"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 25,
          "context": "#define NVIC_ST_CTRL_R          (*((volatile uint32_t *)0xE000E010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 120,
          "context": "NVIC_ST_CTRL_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 132,
          "context": "NVIC_ST_CTRL_R = 0x07;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 327,
          "context": "#define NVIC_ST_CTRL_R       (*((volatile uint32_t *)0xE000E010))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0xE000E010))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_245",
      "name": "NVIC_ST_RELOAD_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 359,
          "context": "NVIC_ST_RELOAD_R = SystemCoreClock / 1000 - 1;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 26,
          "context": "#define NVIC_ST_RELOAD_R        (*((volatile uint32_t *)0xE000E014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 123,
          "context": "NVIC_ST_RELOAD_R = 16000 - 1;  // (16MHz / 1000Hz) - 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1576,
          "context": "if (result.ticks == 0 || result.ticks > NVIC_ST_RELOAD_R) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1607,
          "context": "elapsedTicks = (NVIC_ST_RELOAD_R - currentTicks.ticks) + startValue;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1636,
          "context": "result.elapsedTicks = (NVIC_ST_RELOAD_R - currentTicks) + startTicks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 328,
          "context": "#define NVIC_ST_RELOAD_R     (*((volatile uint32_t *)0xE000E014))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0xE000E014))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_246",
      "name": "NVIC_ST_CURRENT_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 362,
          "context": "NVIC_ST_CURRENT_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 27,
          "context": "#define NVIC_ST_CURRENT_R       (*((volatile uint32_t *)0xE000E018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 126,
          "context": "NVIC_ST_CURRENT_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1571,
          "context": ".ticks = NVIC_ST_CURRENT_R,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 329,
          "context": "#define NVIC_ST_CURRENT_R    (*((volatile uint32_t *)0xE000E018))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0xE000E018))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_247",
      "name": "NVIC_ST_CTRL_ENABLE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 365,
          "context": "NVIC_ST_CTRL_R = NVIC_ST_CTRL_ENABLE |"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 332,
          "context": "#define NVIC_ST_CTRL_ENABLE  0x00000001  // Включение таймера"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000001  // Включение таймера",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_248",
      "name": "NVIC_ST_CTRL_INTEN",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 366,
          "context": "NVIC_ST_CTRL_INTEN |"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 333,
          "context": "#define NVIC_ST_CTRL_INTEN   0x00000002  // Включение прерываний"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000002  // Включение прерываний",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_249",
      "name": "NVIC_ST_CTRL_CLKSRC",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 367,
          "context": "NVIC_ST_CTRL_CLKSRC;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 334,
          "context": "#define NVIC_ST_CTRL_CLKSRC  0x00000004  // Выбор источника тактирования (системная частота)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000004  // Выбор источника тактирования (системная частота)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_250",
      "name": "ADC_CHANNEL_MOTOR_CURRENT_BASE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1909,
          "context": "uint32_t adcChannel = ADC_CHANNEL_MOTOR_CURRENT_BASE + motorIndex;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 418,
          "context": "#define ADC_CHANNEL_MOTOR_CURRENT_BASE  ADC_AIN5   // Базовый канал для измерения тока моторов"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "ADC_AIN5   // Базовый канал для измерения тока моторов",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_251",
      "name": "BACKUP_COMM_ERR_NOT_RESPONDING",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 425,
          "context": "#define BACKUP_COMM_ERR_NOT_RESPONDING  0x0401"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0401",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_252",
      "name": "BACKUP_COMM_ERR_CRC",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 426,
          "context": "#define BACKUP_COMM_ERR_CRC            0x0402"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0402",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_253",
      "name": "BACKUP_COMM_ERR_TIMEOUT",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 427,
          "context": "#define BACKUP_COMM_ERR_TIMEOUT        0x0403"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0403",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_254",
      "name": "WATCHDOG_ERR_NO_RESET",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 433,
          "context": "#define WATCHDOG_ERR_NO_RESET     0x0501  // Watchdog не вызвал сброс"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0501  // Watchdog не вызвал сброс",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_255",
      "name": "WATCHDOG_ERR_EARLY_RESET",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 434,
          "context": "#define WATCHDOG_ERR_EARLY_RESET  0x0502  // Сброс произошел раньше времени"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0502  // Сброс произошел раньше времени",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_256",
      "name": "WATCHDOG_ERR_LATE_RESET",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 435,
          "context": "#define WATCHDOG_ERR_LATE_RESET   0x0503  // Сброс произошел позже времени"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x0503  // Сброс произошел позже времени",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_257",
      "name": "MAX_MOTORS",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1767,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1904,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 438,
          "context": "#define MAX_MOTORS 4"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "4",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_258",
      "name": "DIAG_MAX_LOG_ENTRIES",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 77,
          "context": "LogEntry logBuffer[DIAG_MAX_LOG_ENTRIES];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 534,
          "context": "if (!diagState.initialized || diagState.logCount >= DIAG_MAX_LOG_ENTRIES) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 903,
          "context": "SendDebugMessage(\"Log Entries: %lu/%d\", diagState.logCount, DIAG_MAX_LOG_ENTRIES);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 441,
          "context": "#define DIAG_MAX_LOG_ENTRIES 100"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "100",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_259",
      "name": "SYSCTL_RCGCGPIO_R3",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 369,
          "context": "SYSCTL_RCGCGPIO_R |= (SYSCTL_RCGCGPIO_R3 | SYSCTL_RCGCGPIO_R4);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 444,
          "context": "#define SYSCTL_RCGCGPIO_R3    0x00000008"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000008",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_260",
      "name": "SYSCTL_RCGCGPIO_R4",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 289,
          "context": "SYSCTL_RCGCGPIO_R |= SYSCTL_RCGCGPIO_R4;  // Порт E"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 369,
          "context": "SYSCTL_RCGCGPIO_R |= (SYSCTL_RCGCGPIO_R3 | SYSCTL_RCGCGPIO_R4);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 445,
          "context": "#define SYSCTL_RCGCGPIO_R4    0x00000010"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000010",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_261",
      "name": "SYSCTL_RCGCADC_R0",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 290,
          "context": "SYSCTL_RCGCADC_R |= SYSCTL_RCGCADC_R0;    // ADC0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 446,
          "context": "#define SYSCTL_RCGCADC_R0     0x00000001"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000001",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_262",
      "name": "SYSCTL_RCGCADC_R1",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 370,
          "context": "SYSCTL_RCGCADC_R |= SYSCTL_RCGCADC_R1;    // ADC1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 447,
          "context": "#define SYSCTL_RCGCADC_R1     0x00000002"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000002",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_263",
      "name": "SYSCTL_PRGPIO_R3",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 373,
          "context": "while(!(SYSCTL_PRGPIO_R & (SYSCTL_PRGPIO_R3 | SYSCTL_PRGPIO_R4))) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 448,
          "context": "#define SYSCTL_PRGPIO_R3      0x00000008"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000008",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_264",
      "name": "SYSCTL_PRGPIO_R4",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 293,
          "context": "while(!(SYSCTL_PRGPIO_R & SYSCTL_PRGPIO_R4)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 373,
          "context": "while(!(SYSCTL_PRGPIO_R & (SYSCTL_PRGPIO_R3 | SYSCTL_PRGPIO_R4))) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 449,
          "context": "#define SYSCTL_PRGPIO_R4      0x00000010"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000010",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_265",
      "name": "SYSCTL_PRADC_R0",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 294,
          "context": "while(!(SYSCTL_PRADC_R & SYSCTL_PRADC_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 450,
          "context": "#define SYSCTL_PRADC_R0       0x00000001"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000001",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_266",
      "name": "SYSCTL_PRADC_R1",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 374,
          "context": "while(!(SYSCTL_PRADC_R & SYSCTL_PRADC_R1)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 451,
          "context": "#define SYSCTL_PRADC_R1       0x00000002"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000002",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_267",
      "name": "ADC1_PSSI_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1912,
          "context": "ADC1_PSSI_R |= (1 << adcChannel);  // Запуск преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 454,
          "context": "#define ADC1_PSSI_R           (*((volatile uint32_t *)0x40039028))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40039028))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_268",
      "name": "ADC1_RIS_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1915,
          "context": "while(!(ADC1_RIS_R & (1 << adcChannel))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 455,
          "context": "#define ADC1_RIS_R            (*((volatile uint32_t *)0x40039004))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40039004))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_269",
      "name": "ADC_ISC_IN0",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 467,
          "context": "ADC1_ISC_R = ADC_ISC_IN0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 456,
          "context": "#define ADC_ISC_IN0           0x00000001"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000001",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_270",
      "name": "GPIO_PORTA_IM_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 783,
          "context": "GPIO_PORTA_IM_R |= 0x03;              // Разрешаем прерывания на PA0-PA1 (UART)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 459,
          "context": "#define GPIO_PORTA_IM_R       (*((volatile uint32_t *)0x40004010))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40004010))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_271",
      "name": "GPIO_PORTA_IEV_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 784,
          "context": "GPIO_PORTA_IEV_R &= ~0x03;            // Прерывание по спаду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 460,
          "context": "#define GPIO_PORTA_IEV_R      (*((volatile uint32_t *)0x4000440C))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x4000440C))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_272",
      "name": "GPIO_PORTA_AFSEL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 73,
          "context": "GPIO_PORTA_AFSEL_R |= (GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 11,
          "context": "#define GPIO_PORTA_AFSEL_R    (*((volatile uint32_t *)0x40004420))  // Port A Alternate Function Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 461,
          "context": "#define GPIO_PORTA_AFSEL_R    (*((volatile uint32_t *)0x40004420))  // Port A Alternate Function Select"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40004420))  // Port A Alternate Function Select",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_273",
      "name": "GPIO_PORTE_AFSEL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 297,
          "context": "GPIO_PORTE_AFSEL_R |= (1<<3) | (1<<2) | (1<<1);  // Альтернативная функция"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 377,
          "context": "GPIO_PORTE_AFSEL_R |= (1<<4) | (1<<5);     // PE4, PE5"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 462,
          "context": "#define GPIO_PORTE_AFSEL_R    (*((volatile uint32_t *)0x40024420))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40024420))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_274",
      "name": "GPIO_PORTE_DEN_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 298,
          "context": "GPIO_PORTE_DEN_R &= ~((1<<3) | (1<<2) | (1<<1)); // Отключаем цифровой режим"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 379,
          "context": "GPIO_PORTE_DEN_R &= ~((1<<4) | (1<<5));    // Отключаем цифровой режим"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 463,
          "context": "#define GPIO_PORTE_DEN_R      (*((volatile uint32_t *)0x4002451C))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x4002451C))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_275",
      "name": "GPIO_PORTE_AMSEL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 299,
          "context": "GPIO_PORTE_AMSEL_R |= (1<<3) | (1<<2) | (1<<1);  // Включаем аналоговый режим"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 381,
          "context": "GPIO_PORTE_AMSEL_R |= (1<<4) | (1<<5);     // Включаем аналоговый режим"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 464,
          "context": "#define GPIO_PORTE_AMSEL_R    (*((volatile uint32_t *)0x40024528))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40024528))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_276",
      "name": "GPIO_PORTD_AFSEL_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 378,
          "context": "GPIO_PORTD_AFSEL_R |= (1<<3);              // PD3"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 465,
          "context": "#define GPIO_PORTD_AFSEL_R    (*((volatile uint32_t *)0x40007420))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40007420))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_277",
      "name": "WATCHDOG0_RIS_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 718,
          "context": "return (WATCHDOG0_RIS_R & WDT_RIS_WDTRIS) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 468,
          "context": "#define WATCHDOG0_RIS_R       (*((volatile uint32_t *)0x40000004))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x40000004))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_280",
      "name": "WDT_RIS_WDTRIS",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 718,
          "context": "return (WATCHDOG0_RIS_R & WDT_RIS_WDTRIS) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 471,
          "context": "#define WDT_RIS_WDTRIS        0x00000001"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000001",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_281",
      "name": "WDT_ICR_M",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 704,
          "context": "WATCHDOG0_ICR_R = WDT_ICR_M;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 472,
          "context": "#define WDT_ICR_M             0xFFFFFFFF  // Watchdog Timer Interrupt Clear Mask"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0xFFFFFFFF  // Watchdog Timer Interrupt Clear Mask",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_282",
      "name": "INT_UART0",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 779,
          "context": "NVIC_EN0_R |= (1 << INT_UART0);       // UART0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 475,
          "context": "#define INT_UART0             21"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "21",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_283",
      "name": "INT_WTIMER0A",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 780,
          "context": "NVIC_EN0_R |= (1 << INT_WTIMER0A);    // WatchDog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 476,
          "context": "#define INT_WTIMER0A          94"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "94",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_284",
      "name": "INT_WATCHDOG",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 686,
          "context": "NVIC_EN0_R |= (1 << INT_WATCHDOG);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2017,
          "context": "NVIC_EN0_R |= (1 << INT_WATCHDOG);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 477,
          "context": "#define INT_WATCHDOG          18"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "18",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_285",
      "name": "VREF",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 329,
          "context": "float voltage = (voltage_raw * VREF) / ADC_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 330,
          "context": "float current = ((current_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / CURRENT_SENSE_MV_A;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 331,
          "context": "float temp = ((temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_MV_C;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 424,
          "context": "float mcu_voltage = (mcu_temp_raw * VREF) / ADC_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 428,
          "context": "float motors_temp = ((motors_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 429,
          "context": "float board_temp = ((board_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 430,
          "context": "float ambient_temp = ((ambient_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 503,
          "context": "#define VREF                    3.3f    // Опорное напряжение (В)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "3.3f    // Опорное напряжение (В)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_286",
      "name": "ADC_MAX_VALUE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 329,
          "context": "float voltage = (voltage_raw * VREF) / ADC_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 330,
          "context": "float current = ((current_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / CURRENT_SENSE_MV_A;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 331,
          "context": "float temp = ((temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_MV_C;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 424,
          "context": "float mcu_voltage = (mcu_temp_raw * VREF) / ADC_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 428,
          "context": "float motors_temp = ((motors_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 429,
          "context": "float board_temp = ((board_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 430,
          "context": "float ambient_temp = ((ambient_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1485,
          "context": "if (adcResult.value == 0 || adcResult.value >= ADC_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 504,
          "context": "#define ADC_MAX_VALUE          4095     // Максимальное значение АЦП (12 бит)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "4095     // Максимальное значение АЦП (12 бит)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_287",
      "name": "VOLTAGE_DIVIDER",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 505,
          "context": "#define VOLTAGE_DIVIDER        0.5f     // Коэффициент делителя напряжения"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0.5f     // Коэффициент делителя напряжения",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_288",
      "name": "CURRENT_SENSE_MV_A",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 330,
          "context": "float current = ((current_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / CURRENT_SENSE_MV_A;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 506,
          "context": "#define CURRENT_SENSE_MV_A     100.0f   // мВ/А для датчика тока"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "100.0f   // мВ/А для датчика тока",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_289",
      "name": "TEMP_SENSOR_MV_C",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 331,
          "context": "float temp = ((temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_MV_C;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 507,
          "context": "#define TEMP_SENSOR_MV_C       10.0f    // мВ/°C для температурного датчика"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "10.0f    // мВ/°C для температурного датчика",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_290",
      "name": "BATTERY_MAX_VOLTAGE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 340,
          "context": "(BATTERY_MAX_VOLTAGE - BATTERY_MIN_VOLTAGE) * 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 510,
          "context": "#define BATTERY_MAX_VOLTAGE    12.6f    // Максимальное напряжение батареи"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "12.6f    // Максимальное напряжение батареи",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_291",
      "name": "BATTERY_MIN_VOLTAGE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 339,
          "context": "float battery_level = (voltage - BATTERY_MIN_VOLTAGE) /"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 340,
          "context": "(BATTERY_MAX_VOLTAGE - BATTERY_MIN_VOLTAGE) * 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 511,
          "context": "#define BATTERY_MIN_VOLTAGE    9.0f     // Минимальное напряжение батареи"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "9.0f     // Минимальное напряжение батареи",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_292",
      "name": "BATTERY_LOW_VOLTAGE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 352,
          "context": "else if (voltage <= BATTERY_LOW_VOLTAGE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 512,
          "context": "#define BATTERY_LOW_VOLTAGE    10.0f    // Напряжение для предупреждения"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "10.0f    // Напряжение для предупреждения",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_293",
      "name": "BATTERY_CRITICAL_VOLTAGE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 348,
          "context": "if (voltage <= BATTERY_CRITICAL_VOLTAGE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 513,
          "context": "#define BATTERY_CRITICAL_VOLTAGE 9.5f   // Критическое напряжение"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "9.5f   // Критическое напряжение",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_294",
      "name": "BATTERY_MAX_TEMP",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 357,
          "context": "if (temp >= BATTERY_MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 514,
          "context": "#define BATTERY_MAX_TEMP       60.0f    // Максимальная температура"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "60.0f    // Максимальная температура",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_295",
      "name": "GPIO_H",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 1,
          "context": "#ifndef GPIO_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 2,
          "context": "#define GPIO_H"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "#include <stdint.h>",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_296",
      "name": "GPIO_PIN_0",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 8,
          "context": "#define GPIO_PIN_0              0x00000001  // GPIO pin 0"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000001  // GPIO pin 0",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_297",
      "name": "GPIO_PIN_1",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 168,
          "context": "GPIO_PORTF_DIR_R |= (GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 171,
          "context": "GPIO_PORTF_DEN_R |= (GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 9,
          "context": "#define GPIO_PIN_1              0x00000002  // GPIO pin 1"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000002  // GPIO pin 1",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_298",
      "name": "GPIO_PIN_2",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 168,
          "context": "GPIO_PORTF_DIR_R |= (GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 171,
          "context": "GPIO_PORTF_DEN_R |= (GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 10,
          "context": "#define GPIO_PIN_2              0x00000004  // GPIO pin 2"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000004  // GPIO pin 2",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_299",
      "name": "GPIO_PIN_3",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 168,
          "context": "GPIO_PORTF_DIR_R |= (GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 171,
          "context": "GPIO_PORTF_DEN_R |= (GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 11,
          "context": "#define GPIO_PIN_3              0x00000008  // GPIO pin 3"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000008  // GPIO pin 3",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_300",
      "name": "GPIO_PIN_4",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 12,
          "context": "#define GPIO_PIN_4              0x00000010  // GPIO pin 4"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000010  // GPIO pin 4",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_301",
      "name": "GPIO_PIN_5",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 13,
          "context": "#define GPIO_PIN_5              0x00000020  // GPIO pin 5"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000020  // GPIO pin 5",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_302",
      "name": "GPIO_PIN_6",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 14,
          "context": "#define GPIO_PIN_6              0x00000040  // GPIO pin 6"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000040  // GPIO pin 6",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_303",
      "name": "GPIO_PIN_7",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 15,
          "context": "#define GPIO_PIN_7              0x00000080  // GPIO pin 7"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000080  // GPIO pin 7",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_304",
      "name": "GPIO_PORTA_BASE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 21,
          "context": "#define GPIO_PORTA_BASE        0x40004000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 18,
          "context": "#define GPIO_PORTA_BASE        0x40004000"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x40004000",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_305",
      "name": "GPIO_PORTB_BASE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 22,
          "context": "#define GPIO_PORTB_BASE        0x40005000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 19,
          "context": "#define GPIO_PORTB_BASE        0x40005000"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x40005000",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_306",
      "name": "GPIO_PORTC_BASE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 23,
          "context": "#define GPIO_PORTC_BASE        0x40006000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 20,
          "context": "#define GPIO_PORTC_BASE        0x40006000"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x40006000",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_307",
      "name": "GPIO_PORTD_BASE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 24,
          "context": "#define GPIO_PORTD_BASE        0x40007000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 21,
          "context": "#define GPIO_PORTD_BASE        0x40007000"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x40007000",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_308",
      "name": "GPIO_PORTE_BASE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 25,
          "context": "#define GPIO_PORTE_BASE        0x40024000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 22,
          "context": "#define GPIO_PORTE_BASE        0x40024000"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x40024000",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_309",
      "name": "GPIO_PORTF_BASE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 26,
          "context": "#define GPIO_PORTF_BASE        0x40025000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 61,
          "context": "#define GPIO_PORTF_DIR_R       (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x400)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 62,
          "context": "#define GPIO_PORTF_DEN_R       (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x51C)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 63,
          "context": "#define GPIO_PORTF_DATA_R      (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x3FC)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 23,
          "context": "#define GPIO_PORTF_BASE        0x40025000"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x40025000",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_310",
      "name": "SYSCTL_RCGC2_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 31,
          "context": "#define SYSCTL_RCGC2_R          (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 80,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 85,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 759,
          "context": "savedPeripheralState = SYSCTL_RCGC2_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 765,
          "context": "SYSCTL_RCGC2_R = savedPeripheralState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 768,
          "context": "volatile uint32_t delay = SYSCTL_RCGC2_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 12,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 17,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 24,
          "context": "SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 236,
          "context": "#define SYSCTL_RCGC2_R       (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 26,
          "context": "#define SYSCTL_RCGC2_R         (*((volatile uint32_t *)0x400FE108))"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "(*((volatile uint32_t *)0x400FE108))",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_311",
      "name": "SYSCTL_RCGC2_GPIOF",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 24,
          "context": "SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 27,
          "context": "#define SYSCTL_RCGC2_GPIOF     0x00000020  // Port F Clock Gating Control"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000020  // Port F Clock Gating Control",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_312",
      "name": "SYSCTL_SYSDIV_2_5",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 30,
          "context": "#define SYSCTL_SYSDIV_2_5      0x04000000"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x04000000",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_313",
      "name": "SYSCTL_USE_PLL",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 31,
          "context": "#define SYSCTL_USE_PLL         0x00000000"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000000",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_314",
      "name": "SYSCTL_OSC_MAIN",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 32,
          "context": "#define SYSCTL_OSC_MAIN        0x00000000"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000000",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_315",
      "name": "SYSCTL_XTAL_16MHZ",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 33,
          "context": "#define SYSCTL_XTAL_16MHZ      0x00000540"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0x00000540",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_316",
      "name": "SYSCTL_PERIPH_GPIOF",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 53,
          "context": "#define SYSCTL_PERIPH_GPIOF    0xf0000805  // GPIO F peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 162,
          "context": "EnablePeripheral(SYSCTL_PERIPH_GPIOF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 165,
          "context": "while(!IsPeripheralReady(SYSCTL_PERIPH_GPIOF)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 36,
          "context": "#define SYSCTL_PERIPH_GPIOF    0xf0000805  // GPIO F peripheral"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0xf0000805  // GPIO F peripheral",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_317",
      "name": "SYSCTL_PERIPH_GPIOE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 54,
          "context": "#define SYSCTL_PERIPH_GPIOE    0xf0000804  // GPIO E peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 37,
          "context": "#define SYSCTL_PERIPH_GPIOE    0xf0000804  // GPIO E peripheral"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0xf0000804  // GPIO E peripheral",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_318",
      "name": "SYSCTL_PERIPH_GPIOD",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 55,
          "context": "#define SYSCTL_PERIPH_GPIOD    0xf0000803  // GPIO D peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 38,
          "context": "#define SYSCTL_PERIPH_GPIOD    0xf0000803  // GPIO D peripheral"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0xf0000803  // GPIO D peripheral",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_319",
      "name": "SYSCTL_PERIPH_GPIOC",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 56,
          "context": "#define SYSCTL_PERIPH_GPIOC    0xf0000802  // GPIO C peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 39,
          "context": "#define SYSCTL_PERIPH_GPIOC    0xf0000802  // GPIO C peripheral"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0xf0000802  // GPIO C peripheral",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_320",
      "name": "SYSCTL_PERIPH_GPIOB",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 57,
          "context": "#define SYSCTL_PERIPH_GPIOB    0xf0000801  // GPIO B peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 40,
          "context": "#define SYSCTL_PERIPH_GPIOB    0xf0000801  // GPIO B peripheral"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0xf0000801  // GPIO B peripheral",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_321",
      "name": "SYSCTL_PERIPH_GPIOA",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 58,
          "context": "#define SYSCTL_PERIPH_GPIOA    0xf0000800  // GPIO A peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 41,
          "context": "#define SYSCTL_PERIPH_GPIOA    0xf0000800  // GPIO A peripheral"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "0xf0000800  // GPIO A peripheral",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_322",
      "name": "MAIN_H",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 1,
          "context": "#ifndef MAIN_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 2,
          "context": "#define MAIN_H"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "#include <stdint.h>",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_323",
      "name": "MAIN_LOOP_FREQ_HZ",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 66,
          "context": "#define MAIN_LOOP_FREQ_HZ      200     // Частота основного цикла (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 146,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / TELEMETRY_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 151,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / DIAGNOSTIC_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 31,
          "context": "#define MAIN_LOOP_FREQ_HZ      200     // Частота основного цикла (Гц)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "200     // Частота основного цикла (Гц)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_324",
      "name": "TELEMETRY_FREQ_HZ",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 67,
          "context": "#define TELEMETRY_FREQ_HZ      10      // Частота отправки телеметрии (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 146,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / TELEMETRY_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 32,
          "context": "#define TELEMETRY_FREQ_HZ      10      // Частота отправки телеметрии (Гц)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "10      // Частота отправки телеметрии (Гц)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_325",
      "name": "DIAGNOSTIC_FREQ_HZ",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 68,
          "context": "#define DIAGNOSTIC_FREQ_HZ      1       // Частота диагностики (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 151,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / DIAGNOSTIC_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 33,
          "context": "#define DIAGNOSTIC_FREQ_HZ      1       // Частота диагностики (Гц)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "1       // Частота диагностики (Гц)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_326",
      "name": "WDT_TIMEOUT_MS",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 69,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 34,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "1000    // Таймаут watchdog (мс)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_327",
      "name": "MAX_ALTITUDE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 363,
          "context": "if (sensorData.baro.altitude > MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 185,
          "context": "} else if (nav_state.current_position.altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 186,
          "context": "nav_state.current_position.altitude = NAV_MAX_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 235,
          "context": "position->altitude < NAV_MIN_ALTITUDE || position->altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 37,
          "context": "#define MAX_ALTITUDE           100.0f   // Максимальная высота (м)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 47,
          "context": "#define NAV_MAX_ALTITUDE       120.0f  // Максимальная разрешенная высота"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "100.0f   // Максимальная высота (м)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_328",
      "name": "MIN_BATTERY_VOLTAGE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 357,
          "context": "if (sensorData.imu.temperature < MIN_BATTERY_VOLTAGE) { // Временно используем temperature как voltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 38,
          "context": "#define MIN_BATTERY_VOLTAGE    10.5f    // Минимальное напряжение батареи (В)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "10.5f    // Минимальное напряжение батареи (В)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_329",
      "name": "MAX_ANGLE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 369,
          "context": "if (fabsf(sensorData.imu.accel_x) > MAX_ANGLE ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 370,
          "context": "fabsf(sensorData.imu.accel_y) > MAX_ANGLE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 39,
          "context": "#define MAX_ANGLE              45.0f    // Максимальный угол наклона (градусы)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "45.0f    // Максимальный угол наклона (градусы)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_330",
      "name": "MAX_YAW_RATE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 23,
          "context": "#define MAX_YAW_RATE    180.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 40,
          "context": "#define MAX_YAW_RATE          90.0f    // Максимальная скорость рыскания (градусы/с)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "90.0f    // Максимальная скорость рыскания (градусы/с)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_331",
      "name": "NAVIGATION_H",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 1,
          "context": "#ifndef NAVIGATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 2,
          "context": "#define NAVIGATION_H"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "#include <stdint.h>",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_332",
      "name": "MAX_WAYPOINTS",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 14,
          "context": "static Waypoint waypoints[MAX_WAYPOINTS];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 45,
          "context": "if (waypoint == NULL || waypoint_count >= MAX_WAYPOINTS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 44,
          "context": "#define MAX_WAYPOINTS 20"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "20",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_333",
      "name": "NAV_WAYPOINT_RADIUS",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 284,
          "context": "if (nav_state.distance_to_target <= NAV_WAYPOINT_RADIUS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 45,
          "context": "#define NAV_WAYPOINT_RADIUS    3.0f   // Радиус достижения точки (метры)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "3.0f   // Радиус достижения точки (метры)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_334",
      "name": "NAV_MIN_ALTITUDE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 32,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 182,
          "context": "if (nav_state.current_position.altitude < NAV_MIN_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 183,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 235,
          "context": "position->altitude < NAV_MIN_ALTITUDE || position->altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 46,
          "context": "#define NAV_MIN_ALTITUDE       5.0f    // Минимальная безопасная высота"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "5.0f    // Минимальная безопасная высота",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_335",
      "name": "NAV_MAX_ALTITUDE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 185,
          "context": "} else if (nav_state.current_position.altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 186,
          "context": "nav_state.current_position.altitude = NAV_MAX_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 235,
          "context": "position->altitude < NAV_MIN_ALTITUDE || position->altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 47,
          "context": "#define NAV_MAX_ALTITUDE       120.0f  // Максимальная разрешенная высота"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "120.0f  // Максимальная разрешенная высота",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_336",
      "name": "NAV_DEFAULT_SPEED",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 249,
          "context": ".speed = NAV_DEFAULT_SPEED,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 48,
          "context": "#define NAV_DEFAULT_SPEED      5.0f    // Скорость по умолчанию (м/с)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "5.0f    // Скорость по умолчанию (м/с)",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_337",
      "name": "SENSORS_H",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 1,
          "context": "#ifndef SENSORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 2,
          "context": "#define SENSORS_H"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "#include <stdint.h>",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_338",
      "name": "STABILIZATION_H",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 1,
          "context": "#ifndef STABILIZATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 2,
          "context": "#define STABILIZATION_H"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "#include <stdint.h>",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    },
    {
      "id": "const_339",
      "name": "TELEMETRY_H",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 1,
          "context": "#ifndef TELEMETRY_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 2,
          "context": "#define TELEMETRY_H"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "define",
      "value": "#include <stdint.h>",
      "is_define": true,
      "scope": "global",
      "dependencies": []
    }
  ],
  "variables": [
    {
      "id": "var_001",
      "name": "SystemCoreClock",
      "description": "123",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 14,
          "context": "extern uint32_t SystemCoreClock;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 359,
          "context": "NVIC_ST_RELOAD_R = SystemCoreClock / 1000 - 1;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2000,
          "context": "uint32_t testTimeout = SystemCoreClock / 10;  // 100мс при текущей частоте"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 337,
          "context": "extern uint32_t SystemCoreClock;  // Глобальная переменная тактовой частоты микроконтроллера"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "local",
      "is_static": true,
      "valid_range": {}
    },
    {
      "id": "var_002",
      "name": "sensorData",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 76,
          "context": "static SensorData sensorData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 113,
          "context": "Sensors_GetAllData(&sensorData);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 318,
          "context": "Sensors_GetAllData(&sensorData);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 346,
          "context": "telemetry.gpsStatus = (sensorData.isCalibrated ? 1 : 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 357,
          "context": "if (sensorData.imu.temperature < MIN_BATTERY_VOLTAGE) { // Временно используем temperature как voltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 363,
          "context": "if (sensorData.baro.altitude > MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 369,
          "context": "if (fabsf(sensorData.imu.accel_x) > MAX_ANGLE ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 370,
          "context": "fabsf(sensorData.imu.accel_y) > MAX_ANGLE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 76,
          "context": "SensorData sensorData;         // Данные с датчиков"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "SensorData",
      "scope": "static",
      "is_static": true,
      "valid_range": {}
    },
    {
      "id": "var_003",
      "name": "actState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 137,
          "context": "ActuatorsState actState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 138,
          "context": "Actuators_GetState(&actState);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 139,
          "context": "if (actState.all_motors_enabled == false) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "ActuatorsState",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_004",
      "name": "break",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 193,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 197,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 201,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 205,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 211,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 218,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 258,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 269,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 273,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 292,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 295,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 298,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 301,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 107,
          "context": "break;  // Буфер приема пуст"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 175,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 269,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 273,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 277,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 281,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 285,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 289,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 293,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 297,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 426,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 430,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 434,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 438,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 442,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 737,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 746,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 752,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1308,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1342,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1502,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1841,
          "context": "break;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "инициализация",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_009",
      "name": "rxPacket",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 226,
          "context": "CommPacket rxPacket;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 230,
          "context": "if (Communication_Receive(&rxPacket)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 232,
          "context": "if (rxPacket.type == PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 234,
          "context": "if (rxPacket.length == sizeof(CommandPacket)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 235,
          "context": "memcpy(&cmdData, rxPacket.data, sizeof(CommandPacket));"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "CommPacket",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_010",
      "name": "cmdData",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 227,
          "context": "CommandPacket cmdData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 235,
          "context": "memcpy(&cmdData, rxPacket.data, sizeof(CommandPacket));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 238,
          "context": "switch (cmdData.type) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 244,
          "context": ".latitude = cmdData.data.position.x,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 245,
          "context": ".longitude = cmdData.data.position.y,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 246,
          "context": ".altitude = cmdData.data.position.z,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 263,
          "context": "cmdData.data.attitude.roll,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 264,
          "context": "cmdData.data.attitude.pitch,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 265,
          "context": "cmdData.data.attitude.yaw,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 272,
          "context": "UpdatePIDParameters(cmdData.data.config.param, cmdData.data.config.value);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "CommandPacket",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_011",
      "name": "telemetry",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 11,
          "context": "#include \"include/telemetry.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 315,
          "context": "TelemetryData telemetry;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 333,
          "context": "telemetry.batteryVoltage = powerState.batteryVoltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 334,
          "context": "telemetry.temperature = thermalState.mcuTemp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 335,
          "context": "telemetry.position = currentPos;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 340,
          "context": "telemetry.orientation = currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 342,
          "context": "telemetry.altitude = altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 343,
          "context": "telemetry.groundSpeed = distanceToTarget;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 344,
          "context": "telemetry.verticalSpeed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 345,
          "context": "telemetry.flightMode = (uint8_t)currentState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 346,
          "context": "telemetry.gpsStatus = (sensorData.isCalibrated ? 1 : 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 347,
          "context": "telemetry.batteryStatus = powerState.batteryLevel;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 348,
          "context": "telemetry.errorFlags = (uint8_t)Diagnostics_GetErrorCount();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 351,
          "context": "Communication_SendTelemetry(&telemetry);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 45,
          "context": "uint16_t telemetryRateHz;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 139,
          "context": "commState.telemetryRateHz = 10; // По умолчанию 10 Гц"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 231,
          "context": "bool Communication_SendTelemetry(const TelemetryData* telemetry) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 232,
          "context": "if (telemetry == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 235,
          "context": "return Communication_Send(PACKET_TYPE_TELEMETRY, telemetry, sizeof(TelemetryData));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 328,
          "context": "commState.telemetryRateHz = rateHz;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1335,
          "context": "bool telemetryResponded = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1341,
          "context": "telemetryResponded = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1347,
          "context": "if (!telemetryResponded) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 92,
          "context": "bool Communication_SendTelemetry(const TelemetryData* telemetry);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "TelemetryData",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_012",
      "name": "currentPos",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 321,
          "context": "GPSPosition currentPos;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 322,
          "context": "Navigation_GetCurrentPosition(&currentPos);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 335,
          "context": "telemetry.position = currentPos;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "GPSPosition",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_013",
      "name": "powerState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 327,
          "context": "PowerState powerState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 329,
          "context": "Diagnostics_GetPowerState(&powerState);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 333,
          "context": "telemetry.batteryVoltage = powerState.batteryVoltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 347,
          "context": "telemetry.batteryStatus = powerState.batteryLevel;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 79,
          "context": "PowerState powerState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 169,
          "context": "memset(&diagState.powerState, 0, sizeof(PowerState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 217,
          "context": "diagState.powerState.batteryVoltage = voltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 221,
          "context": "diagState.powerState.batteryLevel = 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 223,
          "context": "diagState.powerState.batteryLevel = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 225,
          "context": "diagState.powerState.batteryLevel = (uint8_t)((voltage - 9.0f) * 27.78f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 262,
          "context": "state->batteryVoltage = diagState.powerState.batteryVoltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 263,
          "context": "state->batteryLevel = diagState.powerState.batteryLevel;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 264,
          "context": "state->batteryTemp = diagState.powerState.batteryTemp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 265,
          "context": "state->batteryCurrent = diagState.powerState.batteryCurrent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 266,
          "context": "state->isCharging = diagState.powerState.isCharging;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 267,
          "context": "state->isLowBattery = diagState.powerState.isLowBattery;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 268,
          "context": "state->isCriticalBattery = diagState.powerState.isCriticalBattery;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 269,
          "context": "state->uptime = diagState.powerState.uptime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 279,
          "context": "return diagState.powerState.batteryVoltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 283,
          "context": "return diagState.powerState.batteryLevel;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 334,
          "context": "diagState.powerState.batteryVoltage = voltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 335,
          "context": "diagState.powerState.batteryCurrent = current;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 336,
          "context": "diagState.powerState.batteryTemp = temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 341,
          "context": "diagState.powerState.batteryLevel = (battery_level > 100.0f) ? 100.0f :"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 345,
          "context": "diagState.powerState.uptime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 865,
          "context": "SendDebugMessage(\"Uptime: %lu ms\", diagState.powerState.uptime);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 875,
          "context": "diagState.powerState.batteryVoltage,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 876,
          "context": "diagState.powerState.batteryLevel);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 877,
          "context": "SendDebugMessage(\"Current: %.2fA\", diagState.powerState.batteryCurrent);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 878,
          "context": "SendDebugMessage(\"Battery Temp: %.1f°C\", diagState.powerState.batteryTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 879,
          "context": "SendDebugMessage(\"Charging: %s\", diagState.powerState.isCharging ? \"Yes\" : \"No\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 950,
          "context": "float batteryVoltage = diagState.powerState.batteryVoltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 971,
          "context": "float batteryCurrent = diagState.powerState.batteryCurrent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 983,
          "context": "float batteryTemp = diagState.powerState.batteryTemp;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "PowerState",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_014",
      "name": "thermalState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 328,
          "context": "ThermalState thermalState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 330,
          "context": "Diagnostics_GetThermalState(&thermalState);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 334,
          "context": "telemetry.temperature = thermalState.mcuTemp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 80,
          "context": "ThermalState thermalState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 170,
          "context": "memset(&diagState.thermalState, 0, sizeof(ThermalState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 433,
          "context": "diagState.thermalState.mcuTemp = mcu_temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 434,
          "context": "diagState.thermalState.motorTemps[0] = motors_temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 435,
          "context": "diagState.thermalState.boardTemp = board_temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 436,
          "context": "diagState.thermalState.ambientTemp = ambient_temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 472,
          "context": "diagState.thermalState.isCritical = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 473,
          "context": "diagState.thermalState.isWarning = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 476,
          "context": "if (diagState.thermalState.mcuTemp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 477,
          "context": "diagState.thermalState.isCritical = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 480,
          "context": "(uint32_t)(diagState.thermalState.mcuTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 481,
          "context": "} else if (diagState.thermalState.mcuTemp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 482,
          "context": "diagState.thermalState.isWarning = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 485,
          "context": "(uint32_t)(diagState.thermalState.mcuTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 490,
          "context": "if (diagState.thermalState.motorTemps[i] >= TEMP_MOTORS_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 491,
          "context": "diagState.thermalState.isCritical = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 494,
          "context": "(uint32_t)(diagState.thermalState.motorTemps[i] * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 495,
          "context": "} else if (diagState.thermalState.motorTemps[i] >= TEMP_MOTORS_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 496,
          "context": "diagState.thermalState.isWarning = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 499,
          "context": "(uint32_t)(diagState.thermalState.motorTemps[i] * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 504,
          "context": "if (diagState.thermalState.boardTemp >= TEMP_BOARD_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 505,
          "context": "diagState.thermalState.isCritical = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 508,
          "context": "(uint32_t)(diagState.thermalState.boardTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 509,
          "context": "} else if (diagState.thermalState.boardTemp >= TEMP_BOARD_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 510,
          "context": "diagState.thermalState.isWarning = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 513,
          "context": "(uint32_t)(diagState.thermalState.boardTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 522,
          "context": "diagState.thermalState.motorTemps[i] = temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 529,
          "context": "*state = diagState.thermalState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 576,
          "context": "return (diagState.thermalState.mcuTemp >= TEMP_MCU_WARNING ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 577,
          "context": "diagState.thermalState.motorTemps[0] >= TEMP_MOTORS_WARNING ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 578,
          "context": "diagState.thermalState.boardTemp >= TEMP_BOARD_WARNING);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 883,
          "context": "SendDebugMessage(\"MCU Temp: %.1f°C\", diagState.thermalState.mcuTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 884,
          "context": "SendDebugMessage(\"Board Temp: %.1f°C\", diagState.thermalState.boardTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 886,
          "context": "diagState.thermalState.motorTemps[0],"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 887,
          "context": "diagState.thermalState.motorTemps[1],"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 888,
          "context": "diagState.thermalState.motorTemps[2],"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 889,
          "context": "diagState.thermalState.motorTemps[3]);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 890,
          "context": "SendDebugMessage(\"Ambient Temp: %.1f°C\", diagState.thermalState.ambientTemp);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "ThermalState",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_015",
      "name": "currentOrientation",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\main.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 338,
          "context": "Orientation currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 339,
          "context": "Sensors_GetOrientation(&currentOrientation);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 340,
          "context": "telemetry.orientation = currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 29,
          "context": "Orientation currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 48,
          "context": "stabState.currentOrientation.roll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 49,
          "context": "stabState.currentOrientation.pitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 50,
          "context": "stabState.currentOrientation.yaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 113,
          "context": "Orientation currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 117,
          "context": "Sensors_GetOrientation(&currentOrientation);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 120,
          "context": "stabState.currentOrientation.roll = currentOrientation.roll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 121,
          "context": "stabState.currentOrientation.pitch = currentOrientation.pitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 122,
          "context": "stabState.currentOrientation.yaw = currentOrientation.yaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 125,
          "context": "float rollError = stabState.targetSetPoint.roll - stabState.currentOrientation.roll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 126,
          "context": "float pitchError = stabState.targetSetPoint.pitch - stabState.currentOrientation.pitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 127,
          "context": "float yawError = stabState.targetSetPoint.yaw - stabState.currentOrientation.yaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 146,
          "context": "*orientation = stabState.currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 29,
          "context": "Orientation currentOrientation;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "Orientation",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_016",
      "name": "0",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 21,
          "context": "#define GPIO_PORTA_BASE        0x40004000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 22,
          "context": "#define GPIO_PORTB_BASE        0x40005000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 23,
          "context": "#define GPIO_PORTC_BASE        0x40006000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 24,
          "context": "#define GPIO_PORTD_BASE        0x40007000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 25,
          "context": "#define GPIO_PORTE_BASE        0x40024000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 26,
          "context": "#define GPIO_PORTF_BASE        0x40025000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 29,
          "context": "#define SYSCTL_RCC2_R            (*((volatile uint32_t *)0x400FE070))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 30,
          "context": "#define SYSCTL_RIS_R             (*((volatile uint32_t *)0x400FE050))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 31,
          "context": "#define SYSCTL_RCGC2_R          (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 34,
          "context": "#define SYSCTL_RCC2_USERCC2     0x80000000  // Use RCC2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 35,
          "context": "#define SYSCTL_RCC2_BYPASS2     0x00000800  // PLL Bypass 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 36,
          "context": "#define SYSCTL_RCC2_PWRDN2      0x00002000  // Power-Down PLL 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 37,
          "context": "#define SYSCTL_RCC2_SYSDIV2_MASK 0x1F800000  // System Clock Divisor 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 38,
          "context": "#define SYSCTL_RCC2_SYSDIV2LSB   0x00400000  // System Clock Divisor 2 LSB"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 41,
          "context": "#define SYSCTL_RCC2_OSCSRC2_MASK_INV 0xFFFFFF8F  // Инвертированная маска для OSCSRC2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 42,
          "context": "#define SYSCTL_RCC2_PWRDN2_MASK_INV  0xFFFFDFFF  // Инвертированная маска для PWRDN2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 43,
          "context": "#define SYSCTL_RCC2_SYSDIV_MASK_INV  0xE07FFFFF  // Инвертированная маска для SYSDIV2 и LSB"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 46,
          "context": "#define SYSCTL_RCC2_OSCSRC2_MASK 0x00000070  // Oscillator Source 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 47,
          "context": "#define SYSCTL_RCC2_OSCSRC2_MO   0x00000000  // Main Oscillator"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 50,
          "context": "#define SYSCTL_RIS_PLLLRIS      0x00000040  // PLL Lock Raw Interrupt Status"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 53,
          "context": "#define SYSCTL_PERIPH_GPIOF    0xf0000805  // GPIO F peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 54,
          "context": "#define SYSCTL_PERIPH_GPIOE    0xf0000804  // GPIO E peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 55,
          "context": "#define SYSCTL_PERIPH_GPIOD    0xf0000803  // GPIO D peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 56,
          "context": "#define SYSCTL_PERIPH_GPIOC    0xf0000802  // GPIO C peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 57,
          "context": "#define SYSCTL_PERIPH_GPIOB    0xf0000801  // GPIO B peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 58,
          "context": "#define SYSCTL_PERIPH_GPIOA    0xf0000800  // GPIO A peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 61,
          "context": "#define GPIO_PORTF_DIR_R       (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x400)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 62,
          "context": "#define GPIO_PORTF_DEN_R       (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x51C)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 63,
          "context": "#define GPIO_PORTF_DATA_R      (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x3FC)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 66,
          "context": "#define MAIN_LOOP_FREQ_HZ      200     // Частота основного цикла (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 67,
          "context": "#define TELEMETRY_FREQ_HZ      10      // Частота отправки телеметрии (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 69,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 72,
          "context": "static uint32_t mainLoopCounter = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 80,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 85,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 146,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / TELEMETRY_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 151,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / DIAGNOSTIC_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 182,
          "context": "#define LED_MASK_CLEAR     0xFFFFFFF9  // 1111 1111 1111 1111 1111 1111 1111 1001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 183,
          "context": "#define LED_RED            0x00000002  // Красный LED (PIN_1)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 184,
          "context": "#define LED_BLUE           0x00000004  // Синий LED (PIN_2)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 185,
          "context": "#define LED_GREEN          0x00000008  // Зеленый LED (PIN_3)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 215,
          "context": "if ((mainLoopCounter % 10) < 5) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 250,
          "context": ".hover_time = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 266,
          "context": "0.0f  // Сохраняем текущую высоту"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 283,
          "context": "static float roll_kp = 1.0f, roll_ki = 0.1f, roll_kd = 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 284,
          "context": "static float pitch_kp = 1.0f, pitch_ki = 0.1f, pitch_kd = 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 285,
          "context": "static float yaw_kp = 2.0f, yaw_ki = 0.15f, yaw_kd = 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 286,
          "context": "static float alt_kp = 1.5f, alt_ki = 0.2f, alt_kd = 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 344,
          "context": "telemetry.verticalSpeed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 346,
          "context": "telemetry.gpsStatus = (sensorData.isCalibrated ? 1 : 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 389,
          "context": "Diagnostics_Log(LOG_CRITICAL, DIAG_EVENT_SYSTEM_START, reason, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 392,
          "context": "Communication_SendError(0x01, reason);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 420,
          "context": "Communication_SendStatus(0x00);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 5,
          "context": "static ActuatorsState actuators_state = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 7,
          "context": "static uint32_t system_time_ms = 0; // Эмуляция системного времени"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 16,
          "context": "memset(&actuators_state, 0, sizeof(ActuatorsState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 19,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 20,
          "context": "actuators_state.motors[i].temperature = 25.0f; // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 42,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 49,
          "context": "return 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 73,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 80,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 97,
          "context": "uint16_t pwm_value = (uint16_t)((throttle * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100U + PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 108,
          "context": "int32_t pwm_delta = ((int32_t)yaw * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 153,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 160,
          "context": "return 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 179,
          "context": "uint16_t ascent_pwm = (uint16_t)(PWM_MAX_VALUE * 0.7f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 188,
          "context": "uint16_t descent_pwm = (uint16_t)(PWM_MAX_VALUE * 0.3f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 227,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 231,
          "context": "actuators_state.motors[i].temperature += pwm_factor * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 234,
          "context": "if (actuators_state.motors[i].temperature > 25.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 235,
          "context": "actuators_state.motors[i].temperature -= 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 242,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 244,
          "context": "actuators_state.motors[i].runtime += 10; // Предполагаем вызов каждые 10 мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 9,
          "context": "#define UART_FR_RXFE    0x10    // Флаг пустого буфера приема"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 10,
          "context": "#define UART_FR_TXFF    0x20    // Флаг заполненного буфера передачи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 11,
          "context": "#define UART_FR_BUSY    0x08    // Флаг занятости UART"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 14,
          "context": "#define GPIO_PA0_U0RX   0x01    // UART0 RX на PA0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 15,
          "context": "#define GPIO_PA1_U0TX   0x02    // UART0 TX на PA1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 18,
          "context": "#define COMM_TIMEOUT_MS     1000    // Таймаут соединения (1 секунда)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 19,
          "context": "#define SYSTICK_FREQ_HZ    1000    // Частота системного таймера (1 кГц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 22,
          "context": "#define UART0_DR_R              (*((volatile uint32_t *)0x4000C000))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 23,
          "context": "#define UART0_FR_R              (*((volatile uint32_t *)0x4000C018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 24,
          "context": "#define UART0_IBRD_R           (*((volatile uint32_t *)0x4000C024))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 25,
          "context": "#define UART0_FBRD_R           (*((volatile uint32_t *)0x4000C028))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 26,
          "context": "#define UART0_LCRH_R           (*((volatile uint32_t *)0x4000C02C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 27,
          "context": "#define UART0_CTL_R            (*((volatile uint32_t *)0x4000C030))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 30,
          "context": "#define SYSCTL_RCGCUART_R     (*((volatile uint32_t *)0x400FE104))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 32,
          "context": "#define SYSCTL_PRGPIO_R       (*((volatile uint32_t *)0x400FEA08))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 50,
          "context": "} commState = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 66,
          "context": "SYSCTL_RCGCUART_R |= (1U << 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 67,
          "context": "SYSCTL_RCGCGPIO_R |= (1U << 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 70,
          "context": "while((SYSCTL_PRGPIO_R & (1U << 0)) == 0) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 73,
          "context": "GPIO_PORTA_AFSEL_R |= (GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 74,
          "context": "GPIO_PORTA_DEN_R |= (GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 75,
          "context": "GPIO_PORTA_AMSEL_R &= ~(GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 76,
          "context": "GPIO_PORTA_PCTL_R = (GPIO_PORTA_PCTL_R & 0xFFFFFF00) | 0x00000011;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 79,
          "context": "UART0_CTL_R &= ~0x01;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 82,
          "context": "uint32_t systemClock = 16000000; // 16 MHz"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 84,
          "context": "uint32_t brdf = (uint32_t)(((float)systemClock / (16.0f * (float)baudRate) - brdi) * 64.0f + 0.5f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 86,
          "context": "UART0_IBRD_R = brdi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 87,
          "context": "UART0_FBRD_R = brdf;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 90,
          "context": "UART0_LCRH_R = 0x60;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 93,
          "context": "UART0_CTL_R |= 0x01;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 99,
          "context": "uint16_t count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 101,
          "context": "if (buffer == NULL || maxLength == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 102,
          "context": "return 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 106,
          "context": "if (UART0_FR_R & UART_FR_RXFE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 109,
          "context": "buffer[count] = (uint8_t)(UART0_DR_R & 0xFF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 119,
          "context": "if (data == NULL || length == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 123,
          "context": "for (i = 0; i < length; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 124,
          "context": "while (UART0_FR_R & UART_FR_TXFF) {}  // Ждем освобождения буфера передачи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 125,
          "context": "UART0_DR_R = (uint32_t)data[i];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 137,
          "context": "memset(&commState, 0, sizeof(commState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 139,
          "context": "commState.telemetryRateHz = 10; // По умолчанию 10 Гц"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 164,
          "context": "if (bytesReceived > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 168,
          "context": "uint16_t processedIndex = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 191,
          "context": "if (processedIndex > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 214,
          "context": "if (data != NULL && length > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 251,
          "context": "errorData.message[sizeof(errorData.message) - 1] = '\\0';"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 253,
          "context": "errorData.message[0] = '\\0';"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 265,
          "context": "CommandType cmd = packet->data[0];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 296,
          "context": "Communication_SendError(0x01, \"Unknown command\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 356,
          "context": "NVIC_ST_CTRL_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 359,
          "context": "NVIC_ST_RELOAD_R = SystemCoreClock / 1000 - 1;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 362,
          "context": "NVIC_ST_CURRENT_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 382,
          "context": "Communication_SendError(0x03, \"Connection lost\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 388,
          "context": "Communication_SendStatus(0x01); // 0x01 - связь восстановлена"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 395,
          "context": "uint16_t checksum = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 396,
          "context": "for(uint16_t i = 0; i < length; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 425,
          "context": "Communication_Send(PACKET_TYPE_HEARTBEAT, NULL, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 441,
          "context": "Communication_SendError(0x02, \"Unknown packet type\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 452,
          "context": "if(length) *length = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 8,
          "context": "#include \"D:/keil/pack/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 12,
          "context": "#define NAN (0.0f/0.0f)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 16,
          "context": "#define SYSCTL_BASE            0x400FE000  // Базовый адрес системного контроллера"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 17,
          "context": "#define SYSCTL_RCGCWD_R        (*((volatile uint32_t *)(SYSCTL_BASE + 0x600)))  // Регистр тактирования Watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 18,
          "context": "#define SYSCTL_PRWD_R          (*((volatile uint32_t *)(SYSCTL_BASE + 0xA00)))  // Регистр готовности Watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 21,
          "context": "#define NVIC_BASE              0xE000E000  // Базовый адрес контроллера прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 22,
          "context": "#define NVIC_PRIO_R(n)         (*((volatile uint32_t *)(NVIC_BASE + 0x400 + ((n) * 4))))  // Регистры приоритета прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 25,
          "context": "#define NVIC_ST_CTRL_R          (*((volatile uint32_t *)0xE000E010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 26,
          "context": "#define NVIC_ST_RELOAD_R        (*((volatile uint32_t *)0xE000E014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 27,
          "context": "#define NVIC_ST_CURRENT_R       (*((volatile uint32_t *)0xE000E018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 30,
          "context": "#ifndef ADC0_SSMUX1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 31,
          "context": "#define ADC0_SSMUX1_R          (*((volatile uint32_t *)0x40038044))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 33,
          "context": "#ifndef ADC0_SSCTL1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 34,
          "context": "#define ADC0_SSCTL1_R          (*((volatile uint32_t *)0x40038048))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 38,
          "context": "#define ADC1_BASE            0x40039000  // Базовый адрес ADC1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 39,
          "context": "#define ADC1_SSMUX1_R       (*((volatile uint32_t *)(ADC1_BASE + 0x40)))  // Мультиплексор выборки SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 40,
          "context": "#define ADC1_SSCTL1_R       (*((volatile uint32_t *)(ADC1_BASE + 0x44)))  // Управление и статус SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 41,
          "context": "#define ADC1_SSFIFO1_R      (*((volatile uint32_t *)(ADC1_BASE + 0x48)))  // FIFO данных SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 42,
          "context": "#define ADC1_ISC_R          (*((volatile uint32_t *)(ADC1_BASE + 0x50)))  // Регистр очистки прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 45,
          "context": "#define ADC0_ACTSS_R           (*((volatile uint32_t *)0x40038000))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 46,
          "context": "#define ADC0_EMUX_R            (*((volatile uint32_t *)0x40038014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 47,
          "context": "#define ADC0_SSMUX3_R          (*((volatile uint32_t *)0x400380A0))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 48,
          "context": "#define ADC0_SSCTL3_R          (*((volatile uint32_t *)0x400380A4))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 49,
          "context": "#define ADC0_PSSI_R            (*((volatile uint32_t *)0x40038028))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 50,
          "context": "#define ADC0_RIS_R             (*((volatile uint32_t *)0x40038004))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 51,
          "context": "#define ADC0_ISC_R             (*((volatile uint32_t *)0x4003800C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 52,
          "context": "#define ADC0_SSFIFO3_R         (*((volatile uint32_t *)0x400380A8))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 53,
          "context": "#define ADC0_PC_R              (*((volatile uint32_t *)0x40038FC4))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 56,
          "context": "#define ADC_PSSI_SS1        0x00000002  // SS1 Initiate"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 57,
          "context": "#define ADC_ACTSS_ASEN1     0x00000002  // SS1 Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 58,
          "context": "#define ADC_EMUX_EM1_M      0x000000F0  // SS1 Trigger Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 61,
          "context": "#define ADC_AIN0   0   // Канал АЦП для температур микроконтроллера"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 67,
          "context": "#define ADC_ISC_IN1 0x02  // Флаг прерывания для канала 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 89,
          "context": "} diagState = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 97,
          "context": "static volatile uint32_t systemMillis = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 120,
          "context": "NVIC_ST_CTRL_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 123,
          "context": "NVIC_ST_RELOAD_R = 16000 - 1;  // (16MHz / 1000Hz) - 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 126,
          "context": "NVIC_ST_CURRENT_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 132,
          "context": "NVIC_ST_CTRL_R = 0x07;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 154,
          "context": "memset(&diagState, 0, sizeof(diagState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 163,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 164,
          "context": "diagState.startTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 165,
          "context": "diagState.logCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 166,
          "context": "diagState.watchdogTimeout = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 169,
          "context": "memset(&diagState.powerState, 0, sizeof(PowerState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 170,
          "context": "memset(&diagState.thermalState, 0, sizeof(ThermalState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 173,
          "context": "diagState.perfStartTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 174,
          "context": "diagState.perfMaxTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 175,
          "context": "diagState.perfMinTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 176,
          "context": "diagState.perfTotalTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 177,
          "context": "diagState.perfCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 187,
          "context": "if (NVIC_APINT_R & 0x10000) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 188,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_WATCHDOG_RESET, \"System reset by watchdog\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 191,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START, \"Diagnostics initialized\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 202,
          "context": "ADC0_PSSI_R = ADC_PSSI_SS3;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 205,
          "context": "while(!(ADC0_RIS_R & ADC_RIS_INR3)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 208,
          "context": "uint32_t result = ADC0_SSFIFO3_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 211,
          "context": "ADC0_ISC_R = ADC_RIS_INR3;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 214,
          "context": "float voltage = (result * 3.3f) / 4096.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 221,
          "context": "diagState.powerState.batteryLevel = 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 222,
          "context": "} else if (voltage <= 9.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 223,
          "context": "diagState.powerState.batteryLevel = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 225,
          "context": "diagState.powerState.batteryLevel = (uint8_t)((voltage - 9.0f) * 27.78f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 230,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_BATTERY_CRITICAL, \"Battery critically low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 231,
          "context": "} else if (voltage <= 10.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 232,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_BATTERY_LOW, \"Battery low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 256,
          "context": "\"Attempt to get power state with NULL pointer\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 272,
          "context": "if (state->batteryLevel < 20.0f) {  // Порог низкого заряда 20%"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 290,
          "context": "SYSCTL_RCGCADC_R |= SYSCTL_RCGCADC_R0;    // ADC0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 294,
          "context": "while(!(SYSCTL_PRADC_R & SYSCTL_PRADC_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 302,
          "context": "ADC0_ACTSS_R &= ~ADC_ACTSS_ASEN1;          // Отключаем секвенсор для настройки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 303,
          "context": "ADC0_EMUX_R &= ~ADC_EMUX_EM1_M;            // Программный запуск"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 304,
          "context": "ADC0_SSMUX1_R = (0 << 0) |                 // Канал 0 (напряжение)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 307,
          "context": "ADC0_SSCTL1_R = (0 << 0) |                // Первый канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 308,
          "context": "(0 << 4) |                // Второй канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 309,
          "context": "(ADC_SSCTL0_IE2 |         // Прерывание после последнего"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 310,
          "context": "ADC_SSCTL0_END2);        // Последний канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 311,
          "context": "ADC0_ACTSS_R |= ADC_ACTSS_ASEN1;          // Включаем секвенсор"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 314,
          "context": "ADC0_SAC_R = ADC_SAC_AVG_64X;             // 64x усреднение"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 317,
          "context": "ADC0_IM_R |= ADC_IM_MASK1;                // Маска прерывания секвенсора 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 318,
          "context": "NVIC_EN0_R |= (1 << (INT_ADC0SS1 - 16));  // Включаем прерывание в NVIC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 322,
          "context": "void ADC0SS1_Handler(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 324,
          "context": "uint32_t voltage_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 325,
          "context": "uint32_t current_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 326,
          "context": "uint32_t temp_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 330,
          "context": "float current = ((current_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / CURRENT_SENSE_MV_A;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 331,
          "context": "float temp = ((temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_MV_C;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 340,
          "context": "(BATTERY_MAX_VOLTAGE - BATTERY_MIN_VOLTAGE) * 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 341,
          "context": "diagState.powerState.batteryLevel = (battery_level > 100.0f) ? 100.0f :"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 342,
          "context": "(battery_level < 0.0f) ? 0.0f : battery_level;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 350,
          "context": "\"Critical battery voltage\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 354,
          "context": "\"Low battery voltage\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 359,
          "context": "\"Critical battery temperature\", (uint32_t)(temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 363,
          "context": "ADC0_ISC_R = ADC_ISC_IN1;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 385,
          "context": "ADC1_ACTSS_R &= ~ADC_ACTSS_ASEN0;          // Отключаем секвенсор для настройки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 386,
          "context": "ADC1_EMUX_R &= ~ADC_EMUX_EM0_M;            // Программный запуск"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 389,
          "context": "ADC1_SSMUX0_R = (TEMP_MCU_CHANNEL << 0)   | // Встроенный сенсор MCU"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 395,
          "context": "ADC1_SSCTL0_R = (0 << 0)                   | // Первый канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 396,
          "context": "(0 << 4)                   | // Второй канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 397,
          "context": "(0 << 8)                   | // Третий канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 398,
          "context": "(ADC_SSCTL0_IE3 |           // Прерывание после последнего"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 399,
          "context": "ADC_SSCTL0_END3);          // Последний канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 404,
          "context": "ADC1_ACTSS_R |= ADC_ACTSS_ASEN0;           // Включаем секвенсор"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 410,
          "context": "ADC1_IM_R |= ADC_IM_MASK0;                 // Маска прерывания секвенсора 0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 411,
          "context": "NVIC_EN1_R |= (1 << (INT_ADC1SS0 - 48));   // Включаем прерывание в NVIC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 415,
          "context": "void ADC1SS0_Handler(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 417,
          "context": "uint32_t mcu_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 418,
          "context": "uint32_t motors_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 419,
          "context": "uint32_t board_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 420,
          "context": "uint32_t ambient_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 425,
          "context": "float mcu_temp = ((mcu_voltage * 1000.0f) / MCU_TEMP_SLOPE) + MCU_TEMP_OFFSET;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 428,
          "context": "float motors_temp = ((motors_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 429,
          "context": "float board_temp = ((board_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 430,
          "context": "float ambient_temp = ((ambient_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 434,
          "context": "diagState.thermalState.motorTemps[0] = motors_temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 441,
          "context": "\"Critical MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 445,
          "context": "\"High MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 450,
          "context": "\"Critical motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 454,
          "context": "\"High motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 459,
          "context": "\"Critical board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 463,
          "context": "\"High board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 467,
          "context": "ADC1_ISC_R = ADC_ISC_IN0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 480,
          "context": "(uint32_t)(diagState.thermalState.mcuTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 485,
          "context": "(uint32_t)(diagState.thermalState.mcuTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 489,
          "context": "for (int i = 0; i < 4; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 494,
          "context": "(uint32_t)(diagState.thermalState.motorTemps[i] * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 499,
          "context": "(uint32_t)(diagState.thermalState.motorTemps[i] * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 508,
          "context": "(uint32_t)(diagState.thermalState.boardTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 513,
          "context": "(uint32_t)(diagState.thermalState.boardTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 519,
          "context": "for (int i = 0; i < 4; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 557,
          "context": "diagState.logCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 558,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 577,
          "context": "diagState.thermalState.motorTemps[0] >= TEMP_MOTORS_WARNING ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 599,
          "context": "debugBuffer[len + 2] = '\\0';"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 653,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 662,
          "context": "SYSCTL_RCGCWD_R |= SYSCTL_RCGCWD_R0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 665,
          "context": "while(!(SYSCTL_PRWD_R & SYSCTL_PRWD_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 668,
          "context": "WATCHDOG0_LOCK_R = 0x1ACCE551;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 671,
          "context": "WATCHDOG0_CTL_R &= ~WDT_CTL_INTEN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 675,
          "context": "uint32_t reload_value = timeout_ms * 1000; // преобразуем мс в тики"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 678,
          "context": "WATCHDOG0_LOAD_R = reload_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 683,
          "context": "WATCHDOG0_CTL_R |= (WDT_CTL_RESEN | WDT_CTL_INTEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 686,
          "context": "NVIC_EN0_R |= (1 << INT_WATCHDOG);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 689,
          "context": "NVIC_PRI0_R = (NVIC_PRI0_R & 0xFFFFFFF0) | 0x0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 695,
          "context": "WATCHDOG0_ICR_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 702,
          "context": "void WDT0_Handler(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 704,
          "context": "WATCHDOG0_ICR_R = WDT_ICR_M;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 706,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_WATCHDOG_RESET, \"Watchdog reset occurred\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 712,
          "context": "WATCHDOG0_ICR_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 718,
          "context": "return (WATCHDOG0_RIS_R & WDT_RIS_WDTRIS) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 726,
          "context": "static uint32_t savedPeripheralState = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 779,
          "context": "NVIC_EN0_R |= (1 << INT_UART0);       // UART0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 780,
          "context": "NVIC_EN0_R |= (1 << INT_WTIMER0A);    // WatchDog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 783,
          "context": "GPIO_PORTA_IM_R |= 0x03;              // Разрешаем прерывания на PA0-PA1 (UART)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 784,
          "context": "GPIO_PORTA_IEV_R &= ~0x03;            // Прерывание по спаду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 793,
          "context": "\"Entering low power mode\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 819,
          "context": "\"Exiting low power mode\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 831,
          "context": "if (diagState.perfCount == 0 || elapsed > diagState.perfMaxTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 834,
          "context": "if (diagState.perfCount == 0 || elapsed < diagState.perfMinTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 845,
          "context": "diagState.perfMaxTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 846,
          "context": "diagState.perfMinTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 847,
          "context": "diagState.perfTotalTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 848,
          "context": "diagState.perfCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 874,
          "context": "SendDebugMessage(\"Battery: %.2fV (%.0f%%)\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 886,
          "context": "diagState.thermalState.motorTemps[0],"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 895,
          "context": "if (diagState.perfCount > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 905,
          "context": "if (diagState.logCount > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 918,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START, \"Running self-test\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 927,
          "context": "#define POWER_ERR_VOLTAGE_LOW    0x0001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 928,
          "context": "#define POWER_ERR_VOLTAGE_HIGH   0x0002"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 929,
          "context": "#define POWER_ERR_CURRENT_HIGH   0x0003"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 930,
          "context": "#define POWER_ERR_TEMP_HIGH      0x0004"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 931,
          "context": "#define POWER_ERR_SUPPLY_FAIL    0x0005"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 934,
          "context": "#define POWER_TEST_VOLTAGE_MIN   10.5f   // В"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 936,
          "context": "#define POWER_TEST_CURRENT_MAX   15.0f   // А"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 937,
          "context": "#define POWER_TEST_TEMP_MAX      45.0f   // °C"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 943,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 944,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 945,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 955,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 964,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 976,
          "context": "status.data = (uint32_t)(batteryCurrent * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 988,
          "context": "status.data = (uint32_t)(batteryTemp * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 998,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1021,
          "context": "#define SENSOR_ERR_IMU_FAIL      0x0101"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1022,
          "context": "#define SENSOR_ERR_IMU_SELFTEST  0x0102"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1023,
          "context": "#define SENSOR_ERR_IMU_RANGE     0x0103"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1024,
          "context": "#define SENSOR_ERR_BARO_FAIL     0x0104"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1025,
          "context": "#define SENSOR_ERR_BARO_RANGE    0x0105"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1026,
          "context": "#define SENSOR_ERR_MAG_FAIL      0x0106"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1027,
          "context": "#define SENSOR_ERR_MAG_RANGE     0x0107"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1028,
          "context": "#define SENSOR_ERR_GPS_FAIL      0x0108"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1029,
          "context": "#define SENSOR_ERR_ADC_FAIL      0x0109"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1032,
          "context": "#define IMU_TEST_ACCEL_MAX      4.0f    // g"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1033,
          "context": "#define IMU_TEST_GYRO_MAX       50.0f   // deg/s"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1034,
          "context": "#define BARO_TEST_ALT_MIN       -100.0f // м"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1035,
          "context": "#define BARO_TEST_ALT_MAX       5000.0f // м"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1036,
          "context": "#define MAG_TEST_FIELD_MIN      0.2f    // Гаусс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1037,
          "context": "#define MAG_TEST_FIELD_MAX      0.8f    // Гаусс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1041,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1042,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1043,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1046,
          "context": "IMUData imuData = {0};  // Добавляем объявление переменной"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1062,
          "context": "status.data = (uint32_t)(accel_magnitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1073,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1084,
          "context": "status.data = (uint32_t)(altitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1095,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1102,
          "context": ".magX = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1103,
          "context": ".magY = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1104,
          "context": ".magZ = 0.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1115,
          "context": "status.data = (uint32_t)(mag_magnitude * 1000);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1126,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1136,
          "context": "#define MOTOR_ERR_NOT_RESPONDING 0x0201"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1137,
          "context": "#define MOTOR_ERR_HIGH_CURRENT   0x0202"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1138,
          "context": "#define MOTOR_ERR_NO_ROTATION    0x0203"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1139,
          "context": "#define MOTOR_ERR_VIBRATION      0x0204"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1140,
          "context": "#define MOTOR_ERR_TEMP_HIGH      0x0205"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1141,
          "context": "#define MOTOR_ERR_ESC_FAIL       0x0206"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1144,
          "context": "#define MOTOR_TEST_SPEED         10.0f   // % от максимальной скорости"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1145,
          "context": "#define MOTOR_TEST_CURRENT_MAX   2.0f    // А на мотор"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1146,
          "context": "#define MOTOR_TEST_TEMP_MAX      60.0f   // °C"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1147,
          "context": "#define MOTOR_TEST_VIB_MAX       2.0f    // g"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1148,
          "context": "#define MOTOR_TEST_TIMEOUT       1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1161,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1162,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1163,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1173,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1180,
          "context": "for (int i = 0; i < 4; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1182,
          "context": "memset(&motorData[i], 0, sizeof(MotorTestData));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1199,
          "context": "DelayMs(500);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1215,
          "context": "SetMotorSpeed(i, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1220,
          "context": "if (motorData[i].rpm < 100.0f) {  // Минимальные обороты для теста"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1227,
          "context": "SetMotorSpeed(i, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1252,
          "context": "SetMotorSpeed(i, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1255,
          "context": "DelayMs(500);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1273,
          "context": "#define COMM_ERR_RC_FAIL        0x0301"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1274,
          "context": "#define COMM_ERR_RC_QUALITY     0x0302"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1275,
          "context": "#define COMM_ERR_TELEMETRY_FAIL 0x0303"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1276,
          "context": "#define COMM_ERR_BACKUP_FAIL    0x0304"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1279,
          "context": "#define SAFETY_ERR_WATCHDOG     0x0401"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1280,
          "context": "#define SAFETY_ERR_EEPROM       0x0402"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1281,
          "context": "#define SAFETY_ERR_FLASH        0x0403"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1282,
          "context": "#define SAFETY_ERR_PARACHUTE    0x0404"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1283,
          "context": "#define SAFETY_ERR_KILLSWITCH   0x0405"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1286,
          "context": "#define RC_TEST_TIMEOUT         1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1288,
          "context": "#define TELEMETRY_TEST_TIMEOUT  1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1292,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1293,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1294,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1317,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1351,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1361,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1371,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1372,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1373,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1382,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1393,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1404,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1416,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1428,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1441,
          "context": "ADCResult result = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1450,
          "context": "ADC0_PSSI_R = 0x0008;  // Запуск SS3"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1453,
          "context": "uint32_t timeout = 10000;  // Примерно 10000 циклов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1454,
          "context": "while((ADC0_RIS_R & 0x08) == 0 && timeout > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1459,
          "context": "if (timeout == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1465,
          "context": "result.value = ADC0_SSFIFO3_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1469,
          "context": "ADC0_ISC_R = 0x0008;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1485,
          "context": "if (adcResult.value == 0 || adcResult.value >= ADC_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1493,
          "context": "float voltage = (adcResult.value * 3.3f) / 4096.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1501,
          "context": "temperature = (voltage * 100.0f);  // Пример преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1517,
          "context": "return 25.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1529,
          "context": "ADC0_PSSI_R = 0x0008;  // Запуск SS3"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1547,
          "context": "status.complete = (ADC0_RIS_R & 0x08) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1550,
          "context": "static uint32_t conversionAttempts = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1551,
          "context": "const uint32_t MAX_CONVERSION_ATTEMPTS = 1000;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1557,
          "context": "conversionAttempts = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1560,
          "context": "conversionAttempts = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1576,
          "context": "if (result.ticks == 0 || result.ticks > NVIC_ST_RELOAD_R) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1594,
          "context": "uint32_t elapsedTicks = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1619,
          "context": ".elapsedTicks = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1644,
          "context": ".magX = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1645,
          "context": ".magY = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1646,
          "context": ".magZ = 0.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1651,
          "context": "memset(&selfTestResult, 0, sizeof(SelfTestResult));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1652,
          "context": "selfTestResult.totalErrors = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1653,
          "context": "selfTestResult.totalWarnings = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1665,
          "context": "selfTestResult.powerTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1666,
          "context": "selfTestResult.sensorTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1667,
          "context": "selfTestResult.motorTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1668,
          "context": "selfTestResult.batteryTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1669,
          "context": "selfTestResult.commTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1670,
          "context": "selfTestResult.safetyTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1738,
          "context": "if (selfTestResult.totalErrors > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1745,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SELF_TEST, selfTestResult.message, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1750,
          "context": "#define ADC_CHANNEL_MCU_TEMP         ADC_AIN0   // Канал АЦП для температур"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1759,
          "context": "ADC1_SSMUX1_R = ADC_AIN0;  // Выбираем канал AIN0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1760,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1767,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1782,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1791,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1800,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1810,
          "context": "[THERMOCOUPLE_TYPE_K] = {0.0, 39.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1811,
          "context": "[THERMOCOUPLE_TYPE_J] = {0.0, 35.0, -0.00015, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1812,
          "context": "[THERMOCOUPLE_TYPE_T] = {0.0, 40.0, -0.0002, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1813,
          "context": "[THERMOCOUPLE_TYPE_E] = {0.0, 38.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1814,
          "context": "[THERMOCOUPLE_TYPE_N] = {0.0, 37.0, -0.00012, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1815,
          "context": "[THERMOCOUPLE_TYPE_R] = {0.0, 36.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1816,
          "context": "[THERMOCOUPLE_TYPE_S] = {0.0, 35.0, -0.00015, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1817,
          "context": "[THERMOCOUPLE_TYPE_B] = {0.0, 34.0, -0.0002, 0.0}      // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1828,
          "context": "return 25.0f;  // Возвращаем стандартную температур окружающей среды"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1832,
          "context": "float voltage = (adcResult.value * 3.3f) / 4096.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1840,
          "context": "temperature = (voltage * 100.0f);  // Пример преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1856,
          "context": "return 25.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1865,
          "context": "if (type < 0 || type >= THERMOCOUPLE_TYPE_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1888,
          "context": "const float MIN_TEMP = -200.0f;  // Минимальная температур для термопар"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1889,
          "context": "const float MAX_TEMP = 1800.0f;  // Максимальная температур для термопар"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1894,
          "context": "(uint32_t)(temperature * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1904,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1905,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1920,
          "context": "uint32_t result = ADC1_SSFIFO0_R & 0xFFF;  // 12-bit ADC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1927,
          "context": "float voltage = (result * 3.3f) / 4096.0f;  // Преобразование в вольты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1928,
          "context": "float current = (voltage * 20.0f) / 3.3f;   // Преобразование в амперы"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1935,
          "context": "static uint32_t lastBackupCommTest = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1947,
          "context": "if (currentTime - lastBackupCommTest < 1000) {  // Тестируем не чаще раза в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1954,
          "context": "uint8_t testPacket[] = {0xAA, 0x55, 0x00, 0xFF};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1964,
          "context": "while (GetCurrentTime() - startTime < 100) {  // Таймаут 100 мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1967,
          "context": "if (response[0] == 0x55 && response[1] == 0xAA &&"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1968,
          "context": "response[2] == 0xFF && response[3] == 0x00) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1996,
          "context": "uint32_t originalLoad = WATCHDOG0_LOAD_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1997,
          "context": "uint32_t originalCtl = WATCHDOG0_CTL_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2000,
          "context": "uint32_t testTimeout = SystemCoreClock / 10;  // 100мс при текущей частоте"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2003,
          "context": "WATCHDOG0_LOCK_R = 0x1ACCE551;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2006,
          "context": "WATCHDOG0_CTL_R &= ~(WDT_CTL_INTEN | WDT_CTL_RESEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2009,
          "context": "WATCHDOG0_LOAD_R = testTimeout;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2014,
          "context": "WATCHDOG0_CTL_R |= (WDT_CTL_RESEN | WDT_CTL_INTEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2017,
          "context": "NVIC_EN0_R |= (1 << INT_WATCHDOG);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2020,
          "context": "NVIC_PRI0_R = (NVIC_PRI0_R & 0xFFFFFFF0) | 0x0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2023,
          "context": "diagState.watchdogTimeout = 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2026,
          "context": "WATCHDOG0_ICR_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2029,
          "context": "\"Watchdog initialized\", 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2037,
          "context": "WATCHDOG0_LOAD_R = originalLoad;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2038,
          "context": "WATCHDOG0_CTL_R = originalCtl;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2055,
          "context": "float GetBaroAltitude(void) { return 0.0f; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2056,
          "context": "uint16_t GetMotorRPM(void) { return 0; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2057,
          "context": "float GetMotorVibration(void) { return 0.0f; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2058,
          "context": "uint8_t GetRCLinkQuality(void) { return 100; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2068,
          "context": "return 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2072,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2079,
          "context": "[THERMOCOUPLE_TYPE_K] = {0.0, 39.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2080,
          "context": "[THERMOCOUPLE_TYPE_J] = {0.0, 35.0, -0.00015, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2081,
          "context": "[THERMOCOUPLE_TYPE_T] = {0.0, 40.0, -0.0002, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2082,
          "context": "[THERMOCOUPLE_TYPE_E] = {0.0, 38.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2083,
          "context": "[THERMOCOUPLE_TYPE_N] = {0.0, 37.0, -0.00012, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2084,
          "context": "[THERMOCOUPLE_TYPE_R] = {0.0, 36.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2085,
          "context": "[THERMOCOUPLE_TYPE_S] = {0.0, 35.0, -0.00015, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2086,
          "context": "[THERMOCOUPLE_TYPE_B] = {0.0, 34.0, -0.0002, 0.0}      // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 5,
          "context": "*((volatile uint32_t *)(port + 0x400)) = pins;  // GPIO_O_DIR"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 7,
          "context": "*((volatile uint32_t *)(port + 0x51C)) = pins;  // GPIO_O_DEN"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 12,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 17,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 6,
          "context": "#define DEG_TO_RAD(x) ((x) * 0.017453292519943295)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 7,
          "context": "#define RAD_TO_DEG(x) ((x) * 57.295779513082323)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 10,
          "context": "#define EARTH_RADIUS 6371000.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 13,
          "context": "static NavigationState nav_state = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 15,
          "context": "static uint8_t waypoint_count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 16,
          "context": "static uint8_t current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 17,
          "context": "static GPSPosition home_position = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 25,
          "context": "memset(&nav_state, 0, sizeof(NavigationState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 26,
          "context": "memset(waypoints, 0, sizeof(waypoints));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 27,
          "context": "waypoint_count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 28,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 33,
          "context": "nav_state.heading = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 34,
          "context": "nav_state.ground_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 35,
          "context": "nav_state.vertical_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 81,
          "context": "memset(waypoints, 0, sizeof(waypoints));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 82,
          "context": "waypoint_count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 83,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 100,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 102,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 111,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 118,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 165,
          "context": "float speed_deg = speed / (EARTH_RADIUS * DEG_TO_RAD(1.0f));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 184,
          "context": "vertical_speed = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 187,
          "context": "vertical_speed = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 195,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 213,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 233,
          "context": "if (position->latitude < -90.0f || position->latitude > 90.0f ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 234,
          "context": "position->longitude < -180.0f || position->longitude > 180.0f ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 249,
          "context": "return distance <= 1000.0f; // Безопасная зона - 1 км от дома"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 261,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 271,
          "context": "if (!nav_state.navigation_active || waypoint_count == 0 ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 295,
          "context": "while (heading < 0.0f) heading += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 296,
          "context": "while (heading >= 360.0f) heading -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 11,
          "context": "bool mpu6050_initialized;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 12,
          "context": "bool bmp280_initialized;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 16,
          "context": ".mpu6050_initialized = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 17,
          "context": ".bmp280_initialized = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 18,
          "context": ".current_altitude = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 19,
          "context": ".rotation_angle = 0.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 23,
          "context": "static MPU6050_Data mpu6050_data = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 24,
          "context": "static BMP280_Data bmp280_data = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 27,
          "context": "static float vertical_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 29,
          "context": "void MPU6050_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 31,
          "context": "mpu6050_data.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 32,
          "context": "mpu6050_data.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 33,
          "context": "mpu6050_data.accel_z = 1.0f;  // 1g в состоянии покоя"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 34,
          "context": "mpu6050_data.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 35,
          "context": "mpu6050_data.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 36,
          "context": "mpu6050_data.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 37,
          "context": "mpu6050_data.temperature = 25.0f;  // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 39,
          "context": "sensor_state.mpu6050_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 42,
          "context": "void BMP280_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 44,
          "context": "bmp280_data.pressure = 1013.25f;  // Стандартное атмосферное давление (гПа)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 45,
          "context": "bmp280_data.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 46,
          "context": "bmp280_data.temperature = 25.0f;  // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 48,
          "context": "sensor_state.bmp280_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 51,
          "context": "void MPU6050_Read(MPU6050_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 52,
          "context": "if (!sensor_state.mpu6050_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 57,
          "context": "*data = mpu6050_data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 60,
          "context": "void BMP280_Read(BMP280_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 61,
          "context": "if (!sensor_state.bmp280_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 66,
          "context": "*data = bmp280_data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 69,
          "context": "void MPU6050_Calibrate(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 71,
          "context": "mpu6050_data.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 72,
          "context": "mpu6050_data.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 73,
          "context": "mpu6050_data.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 74,
          "context": "mpu6050_data.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 75,
          "context": "mpu6050_data.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 76,
          "context": "mpu6050_data.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 79,
          "context": "void BMP280_Calibrate(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 81,
          "context": "bmp280_data.pressure = 1013.25f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 82,
          "context": "bmp280_data.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 88,
          "context": "mpu6050_data.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 89,
          "context": "mpu6050_data.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 90,
          "context": "mpu6050_data.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 91,
          "context": "mpu6050_data.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 92,
          "context": "mpu6050_data.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 93,
          "context": "mpu6050_data.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 96,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 97,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 98,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f); // Примерное изменение давления с высотой"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 103,
          "context": "vertical_speed = 2.0f; // м/с"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 104,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f; // Предполагаем вызов каждые 100мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 106,
          "context": "mpu6050_data.accel_z = 1.2f; // Повышенная нагрузка при наборе высоты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 107,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 108,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 114,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 115,
          "context": "if (sensor_state.current_altitude < 0.0f) sensor_state.current_altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 117,
          "context": "mpu6050_data.accel_z = 0.8f; // Пониженная нагрузка при снижении"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 118,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 119,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 124,
          "context": "sensor_state.rotation_angle += 45.0f * 0.1f; // 45 градусов в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 125,
          "context": "if (sensor_state.rotation_angle >= 360.0f) sensor_state.rotation_angle -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 127,
          "context": "mpu6050_data.gyro_z = 45.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 128,
          "context": "mpu6050_data.accel_x = (float)sin(sensor_state.rotation_angle * 3.14159f / 180.0f) * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 129,
          "context": "mpu6050_data.accel_y = (float)cos(sensor_state.rotation_angle * 3.14159f / 180.0f) * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 134,
          "context": "mpu6050_data.accel_x = 0.2f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 135,
          "context": "mpu6050_data.gyro_y = -5.0f; // Небольшой наклон вперед"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 138,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 139,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 140,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 143,
          "context": "void Sensors_GetIMUData(MPU6050_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 146,
          "context": "*data = mpu6050_data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 152,
          "context": "MPU6050_Data imu;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 157,
          "context": "static float filteredRoll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 158,
          "context": "static float filteredPitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 159,
          "context": "static float filteredYaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 162,
          "context": "float accelRoll = atan2f(imu.accel_y, imu.accel_z) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 163,
          "context": "float accelPitch = atan2f(-imu.accel_x, sqrtf(imu.accel_y * imu.accel_y + imu.accel_z * imu.accel_z)) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 166,
          "context": "float dt = 0.01f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 167,
          "context": "filteredRoll = 0.96f * (filteredRoll + imu.gyro_x * dt) + 0.04f * accelRoll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 168,
          "context": "filteredPitch = 0.96f * (filteredPitch + imu.gyro_y * dt) + 0.04f * accelPitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 172,
          "context": "while (filteredYaw >= 360.0f) filteredYaw -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 173,
          "context": "while (filteredYaw < 0.0f) filteredYaw += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 183,
          "context": "data->imu.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 184,
          "context": "data->imu.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 185,
          "context": "data->imu.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 186,
          "context": "data->imu.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 187,
          "context": "data->imu.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 188,
          "context": "data->imu.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 189,
          "context": "data->baro.pressure = 1013.25f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 190,
          "context": "data->baro.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 195,
          "context": "void Sensors_GetBaroData(BMP280_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 197,
          "context": "data->pressure = 1013.25f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 198,
          "context": "data->altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 199,
          "context": "data->temperature = 25.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 13,
          "context": "#define DEG_TO_RAD(x) ((x) * 0.017453292519943295)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 14,
          "context": "#define RAD_TO_DEG(x) ((x) * 57.295779513082323)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 17,
          "context": "#define UPDATE_FREQUENCY 100"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 18,
          "context": "#define DT (1.0f / UPDATE_FREQUENCY)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 21,
          "context": "#define MAX_ROLL_ANGLE  45.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 22,
          "context": "#define MAX_PITCH_ANGLE 45.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 23,
          "context": "#define MAX_YAW_RATE    180.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 42,
          "context": "stabState.targetSetPoint.roll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 43,
          "context": "stabState.targetSetPoint.pitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 44,
          "context": "stabState.targetSetPoint.yaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 45,
          "context": "stabState.targetSetPoint.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 48,
          "context": "stabState.currentOrientation.roll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 49,
          "context": "stabState.currentOrientation.pitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 50,
          "context": "stabState.currentOrientation.yaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 54,
          "context": "1.0f, 0.1f, 0.05f,  // Roll"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 55,
          "context": "1.0f, 0.1f, 0.05f,  // Pitch"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 56,
          "context": "2.0f, 0.15f, 0.1f,  // Yaw"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 57,
          "context": "1.5f, 0.2f, 0.1f    // Altitude"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 69,
          "context": "stabState.rollPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 70,
          "context": "stabState.rollPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 76,
          "context": "stabState.pitchPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 77,
          "context": "stabState.pitchPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 83,
          "context": "stabState.yawPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 84,
          "context": "stabState.yawPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 90,
          "context": "stabState.altitudePID.outputMin = 0.0f;  // Минимальная тяга"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 91,
          "context": "stabState.altitudePID.outputMax = 1.0f;  // Максимальная тяга"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 102,
          "context": "stabState.targetSetPoint.altitude = fmaxf(altitude, 0.0f);  // Высота не может быть отрицательной"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 111,
          "context": "MPU6050_Data imuData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 112,
          "context": "BMP280_Data altData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 131,
          "context": "while (yawError > 180.0f) yawError -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 132,
          "context": "while (yawError < -180.0f) yawError += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 166,
          "context": "Actuators_SetAllMotors(0.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 175,
          "context": "stabState.rollPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 176,
          "context": "stabState.rollPID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 178,
          "context": "stabState.pitchPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 179,
          "context": "stabState.pitchPID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 181,
          "context": "stabState.yawPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 182,
          "context": "stabState.yawPID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 184,
          "context": "stabState.altitudePID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 185,
          "context": "stabState.altitudePID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 191,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 235,
          "context": "m1 = ClampValue(m1, 0.0f, 1.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 236,
          "context": "m2 = ClampValue(m2, 0.0f, 1.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 237,
          "context": "m3 = ClampValue(m3, 0.0f, 1.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 238,
          "context": "m4 = ClampValue(m4, 0.0f, 1.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 241,
          "context": "Actuators_SetMotor(0, m1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 11,
          "context": "#define MOTOR_FRONT_LEFT  0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 17,
          "context": "#define PWM_MIN_VALUE     0    // Минимальное значение PWM (мотор выключен)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 18,
          "context": "#define PWM_MAX_VALUE     1000 // Максимальное значение PWM (полная мощность)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 19,
          "context": "#define PWM_IDLE_VALUE    100  // Значение PWM на холостом ходу"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 11,
          "context": "#define GPIO_PORTA_AFSEL_R    (*((volatile uint32_t *)0x40004420))  // Port A Alternate Function Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 12,
          "context": "#define GPIO_PORTA_DEN_R      (*((volatile uint32_t *)0x4000451C))  // Port A Digital Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 13,
          "context": "#define GPIO_PORTA_AMSEL_R    (*((volatile uint32_t *)0x40004528))  // Port A Analog Mode Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 14,
          "context": "#define GPIO_PORTA_PCTL_R     (*((volatile uint32_t *)0x4000452C))  // Port A Port Control"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 18,
          "context": "#define COMM_BAUDRATE       115200"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 23,
          "context": "PACKET_TYPE_HEARTBEAT    = 0x00,  // Проверка соединения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 24,
          "context": "PACKET_TYPE_TELEMETRY    = 0x01,  // Телеметрия (сенсоры, положение, статус)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 25,
          "context": "PACKET_TYPE_COMMAND      = 0x02,  // Команды управления"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 26,
          "context": "PACKET_TYPE_CONFIG       = 0x03,  // Настройка параметров"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 27,
          "context": "PACKET_TYPE_WAYPOINT     = 0x04,  // Данные маршрутных точек"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 28,
          "context": "PACKET_TYPE_STATUS       = 0x05,  // Статус дрона"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 29,
          "context": "PACKET_TYPE_ERROR        = 0xFF   // Сообщения об ошибках"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 34,
          "context": "CMD_ARM           = 0x01,  // Активация моторов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 35,
          "context": "CMD_DISARM        = 0x02,  // Деактивация моторов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 36,
          "context": "CMD_TAKEOFF       = 0x03,  // Взлет"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 37,
          "context": "CMD_LAND          = 0x04,  // Посадка"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 38,
          "context": "CMD_RTH           = 0x05,  // Возврат домой"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 39,
          "context": "CMD_HOLD          = 0x06,  // Удержание позиции"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 40,
          "context": "CMD_EMERGENCY_STOP = 0x07  // Аварийная остановка"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 11,
          "context": "LOG_DEBUG = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 21,
          "context": "DIAG_EVENT_SYSTEM_START = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 42,
          "context": "TEST_RESULT_PASS = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 50,
          "context": "ADC_ERROR_NONE = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 59,
          "context": "SYSTICK_ERROR_NONE = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 68,
          "context": "POWER_MODE_NORMAL = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 75,
          "context": "SYSTEM_STATE_OK = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 83,
          "context": "THERMOCOUPLE_TYPE_K = 0,    // Type K thermocouple"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 95,
          "context": "#define TEMP_SENSOR_TYPE_LINEAR    0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 101,
          "context": "#define TEMP_MCU_WARNING      85.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 102,
          "context": "#define TEMP_MCU_CRITICAL     95.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 103,
          "context": "#define TEMP_MOTORS_WARNING   70.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 104,
          "context": "#define TEMP_MOTORS_CRITICAL  80.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 105,
          "context": "#define TEMP_BOARD_WARNING    60.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 106,
          "context": "#define TEMP_BOARD_CRITICAL   70.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 107,
          "context": "#define MAX_SAFE_TEMPERATURE   125.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 110,
          "context": "#define TEST_PASS    0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 226,
          "context": "float R0;             // Сопротивление при 0°C"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 228,
          "context": "} pt100Params;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 232,
          "context": "#define SYSCTL_RCGCGPIO_R    (*((volatile uint32_t *)0x400FE608))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 233,
          "context": "#define SYSCTL_RCGCADC_R     (*((volatile uint32_t *)0x400FE638))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 234,
          "context": "#define SYSCTL_PRGPIO_R      (*((volatile uint32_t *)0x400FEA08))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 235,
          "context": "#define SYSCTL_PRADC_R       (*((volatile uint32_t *)0x400FEA38))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 236,
          "context": "#define SYSCTL_RCGC2_R       (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 238,
          "context": "#define GPIO_PORTD_DEN_R     (*((volatile uint32_t *)0x4005751C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 239,
          "context": "#define GPIO_PORTD_AMSEL_R   (*((volatile uint32_t *)0x40057528))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 241,
          "context": "#define ADC1_ACTSS_R         (*((volatile uint32_t *)0x40039000))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 242,
          "context": "#define ADC1_EMUX_R          (*((volatile uint32_t *)0x40039014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 243,
          "context": "#define ADC1_SSMUX0_R        (*((volatile uint32_t *)0x40039040))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 244,
          "context": "#define ADC1_SSCTL0_R        (*((volatile uint32_t *)0x40039044))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 245,
          "context": "#define ADC1_TSSEL_R         (*((volatile uint32_t *)0x4003901C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 246,
          "context": "#define ADC1_SAC_R           (*((volatile uint32_t *)0x40039030))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 247,
          "context": "#define ADC1_IM_R            (*((volatile uint32_t *)0x40039008))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 248,
          "context": "#define ADC1_SSFIF00_R       (*((volatile uint32_t *)0x40039048))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 250,
          "context": "#define ADC0_SAC_R           (*((volatile uint32_t *)0x40038030))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 251,
          "context": "#define ADC0_IM_R            (*((volatile uint32_t *)0x40038008))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 252,
          "context": "#define ADC0_SSFIFO1_R       (*((volatile uint32_t *)0x40038048))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 255,
          "context": "#define ADC_ACTSS_ASEN0      0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 256,
          "context": "#define ADC_EMUX_EM0_M       0x0000000F"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 257,
          "context": "#define ADC_SSCTL0_IE3       0x00000800"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 258,
          "context": "#define ADC_SSCTL0_END3      0x00000400"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 259,
          "context": "#define ADC_IM_MASK0         0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 260,
          "context": "#define INT_ADC1SS0          51"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 263,
          "context": "#define ADC_PSSI_SS3          0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 264,
          "context": "#define ADC_RIS_INR3          0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 265,
          "context": "#define ADC_SSCTL0_IE2        0x00000400"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 266,
          "context": "#define ADC_SSCTL0_END2       0x00000800"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 267,
          "context": "#define ADC_SAC_AVG_64X       0x00000006"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 268,
          "context": "#define ADC_ACTSS_ASEN1       0x00000002  // SS1 Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 269,
          "context": "#define ADC_EMUX_EM1_M        0x000000F0  // SS1 Trigger Select mask"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 270,
          "context": "#define ADC_IM_MASK1          0x00000002  // SS1 Interrupt Mask"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 271,
          "context": "#define ADC_RIS_INR1          0x00000002  // SS1 Interrupt Status"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 272,
          "context": "#define ADC_PSSI_SS1          0x00000002  // SS1 Initiate"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 273,
          "context": "#define ADC_SSCTL1_IE2        0x00000400  // Sample 2 Interrupt Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 274,
          "context": "#define ADC_SSCTL1_END2       0x00000800  // Sample 2 is End of Sequence"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 277,
          "context": "#define INT_ADC0SS1          15  // ADC0 Sequencer 1 interrupt"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 280,
          "context": "#define WATCHDOG0_LOAD_R     (*((volatile uint32_t *)0x40000000))  // Регистр загрузки WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 281,
          "context": "#define WATCHDOG0_CTL_R      (*((volatile uint32_t *)0x40000008))  // Регистр управления WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 282,
          "context": "#define WATCHDOG0_ICR_R      (*((volatile uint32_t *)0x4000000C))  // Регистр очистки прерываний WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 283,
          "context": "#define WATCHDOG0_LOCK_R     (*((volatile uint32_t *)0x40000C00))  // Регистр блокировки WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 284,
          "context": "#define WATCHDOG0_ICR_M      (*((volatile uint32_t *)0x40000010))  // Регистр очистки прерываний WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 287,
          "context": "#define WDT_CTL_INTEN        0x00000001  // Разрешение прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 288,
          "context": "#define WDT_CTL_RESEN        0x00000002  // Разрешение сброса системы"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 291,
          "context": "#define NVIC_SYS_CTRL_R      (*((volatile uint32_t *)0xE000ED10))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 292,
          "context": "#define NVIC_SYS_CTRL_SLEEPDEEP 0x00000004"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 298,
          "context": "#define NVIC_EN0_R            (*((volatile uint32_t *)0xE000E100))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 299,
          "context": "#define NVIC_PRI0_R          (*((volatile uint32_t *)0xE000E400))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 300,
          "context": "#define NVIC_APINT_R         (*((volatile uint32_t *)0xE000ED0C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 301,
          "context": "#define NVIC_APINT_VECTKEY   0x05FA0000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 302,
          "context": "#define NVIC_APINT_SYSRESETREQ 0x00000004"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 305,
          "context": "#define SYSCTL_RCGCWD_R      (*((volatile uint32_t *)0x400FE600))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 306,
          "context": "#define SYSCTL_PRWD_R        (*((volatile uint32_t *)0x400FEA00))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 309,
          "context": "#define SYSCTL_RCGCWD_R0     0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 310,
          "context": "#define SYSCTL_PRWD_R0       0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 313,
          "context": "#define MCU_TEMP_SLOPE       1.0f    // Slope for MCU temperature conversion"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 314,
          "context": "#define MCU_TEMP_OFFSET      0.0f    // Offset for MCU temperature conversion"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 315,
          "context": "#define TEMP_SENSOR_SLOPE    10.0f   // mV/°C for external temperature sensors"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 318,
          "context": "#define TEMP_MCU_CHANNEL     0       // Internal temperature sensor channel"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 321,
          "context": "#define NVIC_EN1_R           (*((volatile uint32_t *)0xE000E104))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 324,
          "context": "#define ADC1_SSFIFO0_R       (*((volatile uint32_t *)0x40039044))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 327,
          "context": "#define NVIC_ST_CTRL_R       (*((volatile uint32_t *)0xE000E010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 328,
          "context": "#define NVIC_ST_RELOAD_R     (*((volatile uint32_t *)0xE000E014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 329,
          "context": "#define NVIC_ST_CURRENT_R    (*((volatile uint32_t *)0xE000E018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 332,
          "context": "#define NVIC_ST_CTRL_ENABLE  0x00000001  // Включение таймера"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 333,
          "context": "#define NVIC_ST_CTRL_INTEN   0x00000002  // Включение прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 334,
          "context": "#define NVIC_ST_CTRL_CLKSRC  0x00000004  // Выбор источника тактирования (системная частота)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 425,
          "context": "#define BACKUP_COMM_ERR_NOT_RESPONDING  0x0401"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 426,
          "context": "#define BACKUP_COMM_ERR_CRC            0x0402"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 427,
          "context": "#define BACKUP_COMM_ERR_TIMEOUT        0x0403"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 433,
          "context": "#define WATCHDOG_ERR_NO_RESET     0x0501  // Watchdog не вызвал сброс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 434,
          "context": "#define WATCHDOG_ERR_EARLY_RESET  0x0502  // Сброс произошел раньше времени"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 435,
          "context": "#define WATCHDOG_ERR_LATE_RESET   0x0503  // Сброс произошел позже времени"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 441,
          "context": "#define DIAG_MAX_LOG_ENTRIES 100"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 444,
          "context": "#define SYSCTL_RCGCGPIO_R3    0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 445,
          "context": "#define SYSCTL_RCGCGPIO_R4    0x00000010"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 446,
          "context": "#define SYSCTL_RCGCADC_R0     0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 447,
          "context": "#define SYSCTL_RCGCADC_R1     0x00000002"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 448,
          "context": "#define SYSCTL_PRGPIO_R3      0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 449,
          "context": "#define SYSCTL_PRGPIO_R4      0x00000010"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 450,
          "context": "#define SYSCTL_PRADC_R0       0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 451,
          "context": "#define SYSCTL_PRADC_R1       0x00000002"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 454,
          "context": "#define ADC1_PSSI_R           (*((volatile uint32_t *)0x40039028))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 455,
          "context": "#define ADC1_RIS_R            (*((volatile uint32_t *)0x40039004))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 456,
          "context": "#define ADC_ISC_IN0           0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 459,
          "context": "#define GPIO_PORTA_IM_R       (*((volatile uint32_t *)0x40004010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 460,
          "context": "#define GPIO_PORTA_IEV_R      (*((volatile uint32_t *)0x4000440C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 461,
          "context": "#define GPIO_PORTA_AFSEL_R    (*((volatile uint32_t *)0x40004420))  // Port A Alternate Function Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 462,
          "context": "#define GPIO_PORTE_AFSEL_R    (*((volatile uint32_t *)0x40024420))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 463,
          "context": "#define GPIO_PORTE_DEN_R      (*((volatile uint32_t *)0x4002451C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 464,
          "context": "#define GPIO_PORTE_AMSEL_R    (*((volatile uint32_t *)0x40024528))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 465,
          "context": "#define GPIO_PORTD_AFSEL_R    (*((volatile uint32_t *)0x40007420))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 468,
          "context": "#define WATCHDOG0_RIS_R       (*((volatile uint32_t *)0x40000004))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 469,
          "context": "#define WATCHDOG0_ICR_R       (*((volatile uint32_t *)0x40000008))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 470,
          "context": "#define WATCHDOG0_ICR_M       (*((volatile uint32_t *)0x40000010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 471,
          "context": "#define WDT_RIS_WDTRIS        0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 472,
          "context": "#define WDT_ICR_M             0xFFFFFFFF  // Watchdog Timer Interrupt Clear Mask"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 475,
          "context": "#define INT_UART0             21"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 476,
          "context": "#define INT_WTIMER0A          94"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 490,
          "context": "void WDT0_Handler(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 504,
          "context": "#define ADC_MAX_VALUE          4095     // Максимальное значение АЦП (12 бит)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 505,
          "context": "#define VOLTAGE_DIVIDER        0.5f     // Коэффициент делителя напряжения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 506,
          "context": "#define CURRENT_SENSE_MV_A     100.0f   // мВ/А для датчика тока"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 507,
          "context": "#define TEMP_SENSOR_MV_C       10.0f    // мВ/°C для температурного датчика"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 511,
          "context": "#define BATTERY_MIN_VOLTAGE    9.0f     // Минимальное напряжение батареи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 512,
          "context": "#define BATTERY_LOW_VOLTAGE    10.0f    // Напряжение для предупреждения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 514,
          "context": "#define BATTERY_MAX_TEMP       60.0f    // Максимальная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 8,
          "context": "#define GPIO_PIN_0              0x00000001  // GPIO pin 0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 9,
          "context": "#define GPIO_PIN_1              0x00000002  // GPIO pin 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 10,
          "context": "#define GPIO_PIN_2              0x00000004  // GPIO pin 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 11,
          "context": "#define GPIO_PIN_3              0x00000008  // GPIO pin 3"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 12,
          "context": "#define GPIO_PIN_4              0x00000010  // GPIO pin 4"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 13,
          "context": "#define GPIO_PIN_5              0x00000020  // GPIO pin 5"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 14,
          "context": "#define GPIO_PIN_6              0x00000040  // GPIO pin 6"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 15,
          "context": "#define GPIO_PIN_7              0x00000080  // GPIO pin 7"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 18,
          "context": "#define GPIO_PORTA_BASE        0x40004000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 19,
          "context": "#define GPIO_PORTB_BASE        0x40005000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 20,
          "context": "#define GPIO_PORTC_BASE        0x40006000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 21,
          "context": "#define GPIO_PORTD_BASE        0x40007000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 22,
          "context": "#define GPIO_PORTE_BASE        0x40024000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 23,
          "context": "#define GPIO_PORTF_BASE        0x40025000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 26,
          "context": "#define SYSCTL_RCGC2_R         (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 27,
          "context": "#define SYSCTL_RCGC2_GPIOF     0x00000020  // Port F Clock Gating Control"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 30,
          "context": "#define SYSCTL_SYSDIV_2_5      0x04000000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 31,
          "context": "#define SYSCTL_USE_PLL         0x00000000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 32,
          "context": "#define SYSCTL_OSC_MAIN        0x00000000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 33,
          "context": "#define SYSCTL_XTAL_16MHZ      0x00000540"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 36,
          "context": "#define SYSCTL_PERIPH_GPIOF    0xf0000805  // GPIO F peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 37,
          "context": "#define SYSCTL_PERIPH_GPIOE    0xf0000804  // GPIO E peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 38,
          "context": "#define SYSCTL_PERIPH_GPIOD    0xf0000803  // GPIO D peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 39,
          "context": "#define SYSCTL_PERIPH_GPIOC    0xf0000802  // GPIO C peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 40,
          "context": "#define SYSCTL_PERIPH_GPIOB    0xf0000801  // GPIO B peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 41,
          "context": "#define SYSCTL_PERIPH_GPIOA    0xf0000800  // GPIO A peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 31,
          "context": "#define MAIN_LOOP_FREQ_HZ      200     // Частота основного цикла (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 32,
          "context": "#define TELEMETRY_FREQ_HZ      10      // Частота отправки телеметрии (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 34,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 37,
          "context": "#define MAX_ALTITUDE           100.0f   // Максимальная высота (м)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 38,
          "context": "#define MIN_BATTERY_VOLTAGE    10.5f    // Минимальное напряжение батареи (В)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 39,
          "context": "#define MAX_ANGLE              45.0f    // Максимальный угол наклона (градусы)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 40,
          "context": "#define MAX_YAW_RATE          90.0f    // Максимальная скорость рыскания (градусы/с)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 44,
          "context": "PARAM_PID_ROLL = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 52,
          "context": "CMD_TYPE_POSITION = 0,     // Команда позиционирования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 44,
          "context": "#define MAX_WAYPOINTS 20"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 45,
          "context": "#define NAV_WAYPOINT_RADIUS    3.0f   // Радиус достижения точки (метры)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 46,
          "context": "#define NAV_MIN_ALTITUDE       5.0f    // Минимальная безопасная высота"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 47,
          "context": "#define NAV_MAX_ALTITUDE       120.0f  // Максимальная разрешенная высота"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 48,
          "context": "#define NAV_DEFAULT_SPEED      5.0f    // Скорость по умолчанию (м/с)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 23,
          "context": "} MPU6050_Data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 30,
          "context": "} BMP280_Data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 41,
          "context": "MPU6050_Data imu;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 42,
          "context": "BMP280_Data baro;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 53,
          "context": "void Sensors_GetBaroData(BMP280_Data* data);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_017",
      "name": "false",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 73,
          "context": "static bool isEmergencyMode = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 131,
          "context": "if (Stabilization_IsEnabled() == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 139,
          "context": "if (actState.all_motors_enabled == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 251,
          "context": ".reached = false"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 408,
          "context": "isEmergencyMode = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 6,
          "context": "static bool emergency_stop_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 23,
          "context": "emergency_stop_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 65,
          "context": "actuators_state.motors[motor_index].is_running = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 83,
          "context": "actuators_state.all_motors_enabled = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 88,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 218,
          "context": "emergency_stop_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 120,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 146,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 206,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 228,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 233,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 350,
          "context": "commState.connected = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 380,
          "context": "commState.connected = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 404,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 409,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 180,
          "context": "diagState.lowPowerMode = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 181,
          "context": "diagState.debugEnabled = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 182,
          "context": "diagState.watchdogEnabled = false;  // Инициализируем флаг watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 472,
          "context": "diagState.thermalState.isCritical = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 473,
          "context": "diagState.thermalState.isWarning = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 568,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 815,
          "context": "diagState.lowPowerMode = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1012,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1301,
          "context": "bool rcResponded = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1335,
          "context": "bool telemetryResponded = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1538,
          "context": ".complete = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1654,
          "context": "selfTestResult.isTestComplete = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1658,
          "context": "selfTestResult.systemStatus.powerSystemOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1659,
          "context": "selfTestResult.systemStatus.sensorsOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1660,
          "context": "selfTestResult.systemStatus.motorsOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1661,
          "context": "selfTestResult.systemStatus.communicationOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1662,
          "context": "selfTestResult.systemStatus.safetySystemOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1681,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1693,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1705,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1717,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1729,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1741,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1934,
          "context": "static bool backupCommAvailable = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1957,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1974,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1985,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1992,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2053,
          "context": "bool HasGPS(void) { return false; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2054,
          "context": "bool HasParachute(void) { return false; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 18,
          "context": "static bool home_position_set = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 29,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 46,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 50,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 54,
          "context": "waypoints[waypoint_count].reached = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 62,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 92,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 107,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 117,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 229,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 236,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 244,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 289,
          "context": "nav_state.navigation_active = false; // Достигли последней точки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 16,
          "context": ".mpu6050_initialized = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 17,
          "context": ".bmp280_initialized = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 39,
          "context": "stabState.enabled = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 162,
          "context": "stabState.enabled = false;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_019",
      "name": "emergency_stop_active",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 6,
          "context": "static bool emergency_stop_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 23,
          "context": "emergency_stop_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 32,
          "context": "if (motor_index >= MOTOR_COUNT || emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 55,
          "context": "if (motor_index >= MOTOR_COUNT || emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 70,
          "context": "if (emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 95,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 103,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 117,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 131,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 167,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 176,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 185,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 194,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 201,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 209,
          "context": "emergency_stop_active = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 214,
          "context": "return emergency_stop_active;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 218,
          "context": "emergency_stop_active = false;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_020",
      "name": "initialized",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 37,
          "context": "bool initialized;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 132,
          "context": "if (commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 149,
          "context": "commState.initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 154,
          "context": "if (!commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 205,
          "context": "if (!commState.initialized || length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 321,
          "context": "if (commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 72,
          "context": "bool initialized;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 150,
          "context": "if (diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 184,
          "context": "diagState.initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 191,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START, \"Diagnostics initialized\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 197,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 534,
          "context": "if (!diagState.initialized || diagState.logCount >= DIAG_MAX_LOG_ENTRIES) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 698,
          "context": "\"Watchdog initialized\", timeout_ms);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 853,
          "context": "if (diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1444,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1525,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1542,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2029,
          "context": "\"Watchdog initialized\", 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 11,
          "context": "bool mpu6050_initialized;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 12,
          "context": "bool bmp280_initialized;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 16,
          "context": ".mpu6050_initialized = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 17,
          "context": ".bmp280_initialized = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 39,
          "context": "sensor_state.mpu6050_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 48,
          "context": "sensor_state.bmp280_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 52,
          "context": "if (!sensor_state.mpu6050_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 61,
          "context": "if (!sensor_state.bmp280_initialized || data == NULL) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_021",
      "name": "connected",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 38,
          "context": "bool connected;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 311,
          "context": "return commState.connected;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 350,
          "context": "commState.connected = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 379,
          "context": "if (commState.connected) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 380,
          "context": "commState.connected = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 385,
          "context": "if (!commState.connected) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 386,
          "context": "commState.connected = true;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_022",
      "name": "lastPacketTime",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 39,
          "context": "uint32_t lastPacketTime;    // Время последнего принятого пакета"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 182,
          "context": "commState.lastPacketTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 315,
          "context": "return commState.lastPacketTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 349,
          "context": "if (commState.currentTime - commState.lastPacketTime > COMM_TIMEOUT_MS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 378,
          "context": "if (currentTime - commState.lastPacketTime > COMM_TIMEOUT_MS) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_023",
      "name": "currentTime",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 40,
          "context": "uint32_t currentTime;       // Текущее время в миллисекундах"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 346,
          "context": "commState.currentTime++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 349,
          "context": "if (commState.currentTime - commState.lastPacketTime > COMM_TIMEOUT_MS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 371,
          "context": "return commState.currentTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 375,
          "context": "uint32_t currentTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 378,
          "context": "if (currentTime - commState.lastPacketTime > COMM_TIMEOUT_MS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1944,
          "context": "uint32_t currentTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1947,
          "context": "if (currentTime - lastBackupCommTest < 1000) {  // Тестируем не чаще раза в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1951,
          "context": "lastBackupCommTest = currentTime;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_024",
      "name": "packetsSent",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 41,
          "context": "uint32_t packetsSent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 223,
          "context": "commState.packetsSent++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 332,
          "context": "return commState.packetsSent;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_025",
      "name": "packetsReceived",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 42,
          "context": "uint32_t packetsReceived;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 181,
          "context": "commState.packetsReceived++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 336,
          "context": "return commState.packetsReceived;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_026",
      "name": "errorCount",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 43,
          "context": "uint32_t errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 184,
          "context": "commState.errorCount++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 227,
          "context": "commState.errorCount++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 340,
          "context": "return commState.errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 74,
          "context": "uint32_t errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 163,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 545,
          "context": "diagState.errorCount++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 558,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 649,
          "context": "return diagState.errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 653,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 870,
          "context": "SendDebugMessage(\"Error Count: %lu\", diagState.errorCount);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_027",
      "name": "baudRate",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 44,
          "context": "uint32_t baudRate;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 64,
          "context": "bool UART_Init(uint32_t baudRate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 83,
          "context": "uint32_t brdi = systemClock / (16 * baudRate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 84,
          "context": "uint32_t brdf = (uint32_t)(((float)systemClock / (16.0f * (float)baudRate) - brdi) * 64.0f + 0.5f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 138,
          "context": "commState.baudRate = COMM_BAUDRATE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 145,
          "context": "if (!UART_Init(commState.baudRate)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 318,
          "context": "void Communication_SetBaudRate(uint32_t baudRate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 319,
          "context": "if (baudRate != commState.baudRate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 320,
          "context": "commState.baudRate = baudRate;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 322,
          "context": "UART_Init(baudRate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 76,
          "context": "bool UART_Init(uint32_t baudRate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 104,
          "context": "void Communication_SetBaudRate(uint32_t baudRate);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_028",
      "name": "telemetryRateHz",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 45,
          "context": "uint16_t telemetryRateHz;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 139,
          "context": "commState.telemetryRateHz = 10; // По умолчанию 10 Гц"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 328,
          "context": "commState.telemetryRateHz = rateHz;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint16_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_029",
      "name": "padding",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 46,
          "context": "uint16_t padding;           // Явное выравнивание"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint16_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_030",
      "name": "rxIndex",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 49,
          "context": "uint16_t rxIndex;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 160,
          "context": "&commState.rxBuffer[commState.rxIndex],"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 161,
          "context": "(uint16_t)(COMM_BUFFER_SIZE - commState.rxIndex)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 165,
          "context": "commState.rxIndex = (uint16_t)(commState.rxIndex + bytesReceived);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 169,
          "context": "while (processedIndex + sizeof(CommPacket) <= commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 174,
          "context": "if (processedIndex + packetSize > commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 192,
          "context": "if (processedIndex < commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 195,
          "context": "commState.rxIndex - processedIndex);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 197,
          "context": "commState.rxIndex -= processedIndex;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint16_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_031",
      "name": "true",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 247,
          "context": ".valid = true"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 385,
          "context": "isEmergencyMode = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 58,
          "context": "actuators_state.motors[motor_index].is_running = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 76,
          "context": "actuators_state.all_motors_enabled = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 209,
          "context": "emergency_stop_active = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 95,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 128,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 133,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 149,
          "context": "commState.initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 150,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 224,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 386,
          "context": "commState.connected = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 151,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 184,
          "context": "diagState.initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 192,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 477,
          "context": "diagState.thermalState.isCritical = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 482,
          "context": "diagState.thermalState.isWarning = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 491,
          "context": "diagState.thermalState.isCritical = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 496,
          "context": "diagState.thermalState.isWarning = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 505,
          "context": "diagState.thermalState.isCritical = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 510,
          "context": "diagState.thermalState.isWarning = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 572,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 691,
          "context": "diagState.watchdogEnabled = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 789,
          "context": "diagState.lowPowerMode = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1017,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1307,
          "context": "rcResponded = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1341,
          "context": "telemetryResponded = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1680,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1692,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1704,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1716,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1728,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1737,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1746,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1948,
          "context": "return true;  // Возвращаем последний результат"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1969,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1980,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2022,
          "context": "diagState.watchdogEnabled = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2040,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2044,
          "context": "bool TestBarometer(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2045,
          "context": "bool TestESC(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2046,
          "context": "bool TestGPS(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2047,
          "context": "bool TestEEPROM(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2048,
          "context": "bool TestFlashMemory(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2049,
          "context": "bool TestKillSwitch(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2050,
          "context": "bool TestMagnetometer(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2051,
          "context": "bool TestMotorResponse(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2052,
          "context": "bool TestParachuteSystem(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2060,
          "context": "bool IsRCTestResponseReceived(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2061,
          "context": "bool IsTelemetryAckReceived(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 57,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 77,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 96,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 101,
          "context": "nav_state.navigation_active = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 112,
          "context": "nav_state.navigation_active = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 158,
          "context": "nav_state.current_position.valid = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 239,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 255,
          "context": "home_position_set = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 285,
          "context": "waypoints[current_waypoint_index].reached = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 39,
          "context": "sensor_state.mpu6050_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 48,
          "context": "sensor_state.bmp280_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 191,
          "context": "data->isCalibrated = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 157,
          "context": "stabState.enabled = true;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_032",
      "name": "0",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 21,
          "context": "#define GPIO_PORTA_BASE        0x40004000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 22,
          "context": "#define GPIO_PORTB_BASE        0x40005000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 23,
          "context": "#define GPIO_PORTC_BASE        0x40006000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 24,
          "context": "#define GPIO_PORTD_BASE        0x40007000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 25,
          "context": "#define GPIO_PORTE_BASE        0x40024000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 26,
          "context": "#define GPIO_PORTF_BASE        0x40025000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 29,
          "context": "#define SYSCTL_RCC2_R            (*((volatile uint32_t *)0x400FE070))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 30,
          "context": "#define SYSCTL_RIS_R             (*((volatile uint32_t *)0x400FE050))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 31,
          "context": "#define SYSCTL_RCGC2_R          (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 34,
          "context": "#define SYSCTL_RCC2_USERCC2     0x80000000  // Use RCC2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 35,
          "context": "#define SYSCTL_RCC2_BYPASS2     0x00000800  // PLL Bypass 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 36,
          "context": "#define SYSCTL_RCC2_PWRDN2      0x00002000  // Power-Down PLL 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 37,
          "context": "#define SYSCTL_RCC2_SYSDIV2_MASK 0x1F800000  // System Clock Divisor 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 38,
          "context": "#define SYSCTL_RCC2_SYSDIV2LSB   0x00400000  // System Clock Divisor 2 LSB"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 41,
          "context": "#define SYSCTL_RCC2_OSCSRC2_MASK_INV 0xFFFFFF8F  // Инвертированная маска для OSCSRC2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 42,
          "context": "#define SYSCTL_RCC2_PWRDN2_MASK_INV  0xFFFFDFFF  // Инвертированная маска для PWRDN2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 43,
          "context": "#define SYSCTL_RCC2_SYSDIV_MASK_INV  0xE07FFFFF  // Инвертированная маска для SYSDIV2 и LSB"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 46,
          "context": "#define SYSCTL_RCC2_OSCSRC2_MASK 0x00000070  // Oscillator Source 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 47,
          "context": "#define SYSCTL_RCC2_OSCSRC2_MO   0x00000000  // Main Oscillator"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 50,
          "context": "#define SYSCTL_RIS_PLLLRIS      0x00000040  // PLL Lock Raw Interrupt Status"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 53,
          "context": "#define SYSCTL_PERIPH_GPIOF    0xf0000805  // GPIO F peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 54,
          "context": "#define SYSCTL_PERIPH_GPIOE    0xf0000804  // GPIO E peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 55,
          "context": "#define SYSCTL_PERIPH_GPIOD    0xf0000803  // GPIO D peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 56,
          "context": "#define SYSCTL_PERIPH_GPIOC    0xf0000802  // GPIO C peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 57,
          "context": "#define SYSCTL_PERIPH_GPIOB    0xf0000801  // GPIO B peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 58,
          "context": "#define SYSCTL_PERIPH_GPIOA    0xf0000800  // GPIO A peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 61,
          "context": "#define GPIO_PORTF_DIR_R       (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x400)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 62,
          "context": "#define GPIO_PORTF_DEN_R       (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x51C)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 63,
          "context": "#define GPIO_PORTF_DATA_R      (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x3FC)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 66,
          "context": "#define MAIN_LOOP_FREQ_HZ      200     // Частота основного цикла (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 67,
          "context": "#define TELEMETRY_FREQ_HZ      10      // Частота отправки телеметрии (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 69,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 72,
          "context": "static uint32_t mainLoopCounter = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 80,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 85,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 146,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / TELEMETRY_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 151,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / DIAGNOSTIC_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 182,
          "context": "#define LED_MASK_CLEAR     0xFFFFFFF9  // 1111 1111 1111 1111 1111 1111 1111 1001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 183,
          "context": "#define LED_RED            0x00000002  // Красный LED (PIN_1)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 184,
          "context": "#define LED_BLUE           0x00000004  // Синий LED (PIN_2)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 185,
          "context": "#define LED_GREEN          0x00000008  // Зеленый LED (PIN_3)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 215,
          "context": "if ((mainLoopCounter % 10) < 5) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 250,
          "context": ".hover_time = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 266,
          "context": "0.0f  // Сохраняем текущую высоту"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 283,
          "context": "static float roll_kp = 1.0f, roll_ki = 0.1f, roll_kd = 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 284,
          "context": "static float pitch_kp = 1.0f, pitch_ki = 0.1f, pitch_kd = 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 285,
          "context": "static float yaw_kp = 2.0f, yaw_ki = 0.15f, yaw_kd = 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 286,
          "context": "static float alt_kp = 1.5f, alt_ki = 0.2f, alt_kd = 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 344,
          "context": "telemetry.verticalSpeed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 346,
          "context": "telemetry.gpsStatus = (sensorData.isCalibrated ? 1 : 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 389,
          "context": "Diagnostics_Log(LOG_CRITICAL, DIAG_EVENT_SYSTEM_START, reason, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 392,
          "context": "Communication_SendError(0x01, reason);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 420,
          "context": "Communication_SendStatus(0x00);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 5,
          "context": "static ActuatorsState actuators_state = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 7,
          "context": "static uint32_t system_time_ms = 0; // Эмуляция системного времени"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 16,
          "context": "memset(&actuators_state, 0, sizeof(ActuatorsState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 19,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 20,
          "context": "actuators_state.motors[i].temperature = 25.0f; // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 42,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 49,
          "context": "return 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 73,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 80,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 97,
          "context": "uint16_t pwm_value = (uint16_t)((throttle * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100U + PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 108,
          "context": "int32_t pwm_delta = ((int32_t)yaw * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 153,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 160,
          "context": "return 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 179,
          "context": "uint16_t ascent_pwm = (uint16_t)(PWM_MAX_VALUE * 0.7f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 188,
          "context": "uint16_t descent_pwm = (uint16_t)(PWM_MAX_VALUE * 0.3f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 227,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 231,
          "context": "actuators_state.motors[i].temperature += pwm_factor * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 234,
          "context": "if (actuators_state.motors[i].temperature > 25.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 235,
          "context": "actuators_state.motors[i].temperature -= 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 242,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 244,
          "context": "actuators_state.motors[i].runtime += 10; // Предполагаем вызов каждые 10 мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 9,
          "context": "#define UART_FR_RXFE    0x10    // Флаг пустого буфера приема"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 10,
          "context": "#define UART_FR_TXFF    0x20    // Флаг заполненного буфера передачи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 11,
          "context": "#define UART_FR_BUSY    0x08    // Флаг занятости UART"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 14,
          "context": "#define GPIO_PA0_U0RX   0x01    // UART0 RX на PA0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 15,
          "context": "#define GPIO_PA1_U0TX   0x02    // UART0 TX на PA1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 18,
          "context": "#define COMM_TIMEOUT_MS     1000    // Таймаут соединения (1 секунда)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 19,
          "context": "#define SYSTICK_FREQ_HZ    1000    // Частота системного таймера (1 кГц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 22,
          "context": "#define UART0_DR_R              (*((volatile uint32_t *)0x4000C000))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 23,
          "context": "#define UART0_FR_R              (*((volatile uint32_t *)0x4000C018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 24,
          "context": "#define UART0_IBRD_R           (*((volatile uint32_t *)0x4000C024))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 25,
          "context": "#define UART0_FBRD_R           (*((volatile uint32_t *)0x4000C028))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 26,
          "context": "#define UART0_LCRH_R           (*((volatile uint32_t *)0x4000C02C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 27,
          "context": "#define UART0_CTL_R            (*((volatile uint32_t *)0x4000C030))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 30,
          "context": "#define SYSCTL_RCGCUART_R     (*((volatile uint32_t *)0x400FE104))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 32,
          "context": "#define SYSCTL_PRGPIO_R       (*((volatile uint32_t *)0x400FEA08))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 50,
          "context": "} commState = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 66,
          "context": "SYSCTL_RCGCUART_R |= (1U << 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 67,
          "context": "SYSCTL_RCGCGPIO_R |= (1U << 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 70,
          "context": "while((SYSCTL_PRGPIO_R & (1U << 0)) == 0) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 73,
          "context": "GPIO_PORTA_AFSEL_R |= (GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 74,
          "context": "GPIO_PORTA_DEN_R |= (GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 75,
          "context": "GPIO_PORTA_AMSEL_R &= ~(GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 76,
          "context": "GPIO_PORTA_PCTL_R = (GPIO_PORTA_PCTL_R & 0xFFFFFF00) | 0x00000011;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 79,
          "context": "UART0_CTL_R &= ~0x01;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 82,
          "context": "uint32_t systemClock = 16000000; // 16 MHz"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 84,
          "context": "uint32_t brdf = (uint32_t)(((float)systemClock / (16.0f * (float)baudRate) - brdi) * 64.0f + 0.5f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 86,
          "context": "UART0_IBRD_R = brdi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 87,
          "context": "UART0_FBRD_R = brdf;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 90,
          "context": "UART0_LCRH_R = 0x60;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 93,
          "context": "UART0_CTL_R |= 0x01;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 99,
          "context": "uint16_t count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 101,
          "context": "if (buffer == NULL || maxLength == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 102,
          "context": "return 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 106,
          "context": "if (UART0_FR_R & UART_FR_RXFE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 109,
          "context": "buffer[count] = (uint8_t)(UART0_DR_R & 0xFF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 119,
          "context": "if (data == NULL || length == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 123,
          "context": "for (i = 0; i < length; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 124,
          "context": "while (UART0_FR_R & UART_FR_TXFF) {}  // Ждем освобождения буфера передачи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 125,
          "context": "UART0_DR_R = (uint32_t)data[i];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 137,
          "context": "memset(&commState, 0, sizeof(commState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 139,
          "context": "commState.telemetryRateHz = 10; // По умолчанию 10 Гц"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 164,
          "context": "if (bytesReceived > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 168,
          "context": "uint16_t processedIndex = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 191,
          "context": "if (processedIndex > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 214,
          "context": "if (data != NULL && length > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 251,
          "context": "errorData.message[sizeof(errorData.message) - 1] = '\\0';"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 253,
          "context": "errorData.message[0] = '\\0';"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 265,
          "context": "CommandType cmd = packet->data[0];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 296,
          "context": "Communication_SendError(0x01, \"Unknown command\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 356,
          "context": "NVIC_ST_CTRL_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 359,
          "context": "NVIC_ST_RELOAD_R = SystemCoreClock / 1000 - 1;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 362,
          "context": "NVIC_ST_CURRENT_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 382,
          "context": "Communication_SendError(0x03, \"Connection lost\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 388,
          "context": "Communication_SendStatus(0x01); // 0x01 - связь восстановлена"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 395,
          "context": "uint16_t checksum = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 396,
          "context": "for(uint16_t i = 0; i < length; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 425,
          "context": "Communication_Send(PACKET_TYPE_HEARTBEAT, NULL, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 441,
          "context": "Communication_SendError(0x02, \"Unknown packet type\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 452,
          "context": "if(length) *length = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 8,
          "context": "#include \"D:/keil/pack/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 12,
          "context": "#define NAN (0.0f/0.0f)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 16,
          "context": "#define SYSCTL_BASE            0x400FE000  // Базовый адрес системного контроллера"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 17,
          "context": "#define SYSCTL_RCGCWD_R        (*((volatile uint32_t *)(SYSCTL_BASE + 0x600)))  // Регистр тактирования Watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 18,
          "context": "#define SYSCTL_PRWD_R          (*((volatile uint32_t *)(SYSCTL_BASE + 0xA00)))  // Регистр готовности Watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 21,
          "context": "#define NVIC_BASE              0xE000E000  // Базовый адрес контроллера прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 22,
          "context": "#define NVIC_PRIO_R(n)         (*((volatile uint32_t *)(NVIC_BASE + 0x400 + ((n) * 4))))  // Регистры приоритета прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 25,
          "context": "#define NVIC_ST_CTRL_R          (*((volatile uint32_t *)0xE000E010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 26,
          "context": "#define NVIC_ST_RELOAD_R        (*((volatile uint32_t *)0xE000E014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 27,
          "context": "#define NVIC_ST_CURRENT_R       (*((volatile uint32_t *)0xE000E018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 30,
          "context": "#ifndef ADC0_SSMUX1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 31,
          "context": "#define ADC0_SSMUX1_R          (*((volatile uint32_t *)0x40038044))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 33,
          "context": "#ifndef ADC0_SSCTL1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 34,
          "context": "#define ADC0_SSCTL1_R          (*((volatile uint32_t *)0x40038048))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 38,
          "context": "#define ADC1_BASE            0x40039000  // Базовый адрес ADC1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 39,
          "context": "#define ADC1_SSMUX1_R       (*((volatile uint32_t *)(ADC1_BASE + 0x40)))  // Мультиплексор выборки SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 40,
          "context": "#define ADC1_SSCTL1_R       (*((volatile uint32_t *)(ADC1_BASE + 0x44)))  // Управление и статус SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 41,
          "context": "#define ADC1_SSFIFO1_R      (*((volatile uint32_t *)(ADC1_BASE + 0x48)))  // FIFO данных SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 42,
          "context": "#define ADC1_ISC_R          (*((volatile uint32_t *)(ADC1_BASE + 0x50)))  // Регистр очистки прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 45,
          "context": "#define ADC0_ACTSS_R           (*((volatile uint32_t *)0x40038000))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 46,
          "context": "#define ADC0_EMUX_R            (*((volatile uint32_t *)0x40038014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 47,
          "context": "#define ADC0_SSMUX3_R          (*((volatile uint32_t *)0x400380A0))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 48,
          "context": "#define ADC0_SSCTL3_R          (*((volatile uint32_t *)0x400380A4))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 49,
          "context": "#define ADC0_PSSI_R            (*((volatile uint32_t *)0x40038028))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 50,
          "context": "#define ADC0_RIS_R             (*((volatile uint32_t *)0x40038004))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 51,
          "context": "#define ADC0_ISC_R             (*((volatile uint32_t *)0x4003800C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 52,
          "context": "#define ADC0_SSFIFO3_R         (*((volatile uint32_t *)0x400380A8))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 53,
          "context": "#define ADC0_PC_R              (*((volatile uint32_t *)0x40038FC4))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 56,
          "context": "#define ADC_PSSI_SS1        0x00000002  // SS1 Initiate"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 57,
          "context": "#define ADC_ACTSS_ASEN1     0x00000002  // SS1 Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 58,
          "context": "#define ADC_EMUX_EM1_M      0x000000F0  // SS1 Trigger Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 61,
          "context": "#define ADC_AIN0   0   // Канал АЦП для температур микроконтроллера"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 67,
          "context": "#define ADC_ISC_IN1 0x02  // Флаг прерывания для канала 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 89,
          "context": "} diagState = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 97,
          "context": "static volatile uint32_t systemMillis = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 120,
          "context": "NVIC_ST_CTRL_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 123,
          "context": "NVIC_ST_RELOAD_R = 16000 - 1;  // (16MHz / 1000Hz) - 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 126,
          "context": "NVIC_ST_CURRENT_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 132,
          "context": "NVIC_ST_CTRL_R = 0x07;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 154,
          "context": "memset(&diagState, 0, sizeof(diagState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 163,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 164,
          "context": "diagState.startTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 165,
          "context": "diagState.logCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 166,
          "context": "diagState.watchdogTimeout = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 169,
          "context": "memset(&diagState.powerState, 0, sizeof(PowerState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 170,
          "context": "memset(&diagState.thermalState, 0, sizeof(ThermalState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 173,
          "context": "diagState.perfStartTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 174,
          "context": "diagState.perfMaxTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 175,
          "context": "diagState.perfMinTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 176,
          "context": "diagState.perfTotalTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 177,
          "context": "diagState.perfCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 187,
          "context": "if (NVIC_APINT_R & 0x10000) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 188,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_WATCHDOG_RESET, \"System reset by watchdog\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 191,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START, \"Diagnostics initialized\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 202,
          "context": "ADC0_PSSI_R = ADC_PSSI_SS3;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 205,
          "context": "while(!(ADC0_RIS_R & ADC_RIS_INR3)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 208,
          "context": "uint32_t result = ADC0_SSFIFO3_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 211,
          "context": "ADC0_ISC_R = ADC_RIS_INR3;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 214,
          "context": "float voltage = (result * 3.3f) / 4096.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 221,
          "context": "diagState.powerState.batteryLevel = 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 222,
          "context": "} else if (voltage <= 9.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 223,
          "context": "diagState.powerState.batteryLevel = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 225,
          "context": "diagState.powerState.batteryLevel = (uint8_t)((voltage - 9.0f) * 27.78f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 230,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_BATTERY_CRITICAL, \"Battery critically low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 231,
          "context": "} else if (voltage <= 10.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 232,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_BATTERY_LOW, \"Battery low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 256,
          "context": "\"Attempt to get power state with NULL pointer\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 272,
          "context": "if (state->batteryLevel < 20.0f) {  // Порог низкого заряда 20%"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 290,
          "context": "SYSCTL_RCGCADC_R |= SYSCTL_RCGCADC_R0;    // ADC0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 294,
          "context": "while(!(SYSCTL_PRADC_R & SYSCTL_PRADC_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 302,
          "context": "ADC0_ACTSS_R &= ~ADC_ACTSS_ASEN1;          // Отключаем секвенсор для настройки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 303,
          "context": "ADC0_EMUX_R &= ~ADC_EMUX_EM1_M;            // Программный запуск"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 304,
          "context": "ADC0_SSMUX1_R = (0 << 0) |                 // Канал 0 (напряжение)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 307,
          "context": "ADC0_SSCTL1_R = (0 << 0) |                // Первый канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 308,
          "context": "(0 << 4) |                // Второй канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 309,
          "context": "(ADC_SSCTL0_IE2 |         // Прерывание после последнего"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 310,
          "context": "ADC_SSCTL0_END2);        // Последний канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 311,
          "context": "ADC0_ACTSS_R |= ADC_ACTSS_ASEN1;          // Включаем секвенсор"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 314,
          "context": "ADC0_SAC_R = ADC_SAC_AVG_64X;             // 64x усреднение"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 317,
          "context": "ADC0_IM_R |= ADC_IM_MASK1;                // Маска прерывания секвенсора 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 318,
          "context": "NVIC_EN0_R |= (1 << (INT_ADC0SS1 - 16));  // Включаем прерывание в NVIC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 322,
          "context": "void ADC0SS1_Handler(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 324,
          "context": "uint32_t voltage_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 325,
          "context": "uint32_t current_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 326,
          "context": "uint32_t temp_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 330,
          "context": "float current = ((current_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / CURRENT_SENSE_MV_A;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 331,
          "context": "float temp = ((temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_MV_C;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 340,
          "context": "(BATTERY_MAX_VOLTAGE - BATTERY_MIN_VOLTAGE) * 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 341,
          "context": "diagState.powerState.batteryLevel = (battery_level > 100.0f) ? 100.0f :"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 342,
          "context": "(battery_level < 0.0f) ? 0.0f : battery_level;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 350,
          "context": "\"Critical battery voltage\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 354,
          "context": "\"Low battery voltage\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 359,
          "context": "\"Critical battery temperature\", (uint32_t)(temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 363,
          "context": "ADC0_ISC_R = ADC_ISC_IN1;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 385,
          "context": "ADC1_ACTSS_R &= ~ADC_ACTSS_ASEN0;          // Отключаем секвенсор для настройки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 386,
          "context": "ADC1_EMUX_R &= ~ADC_EMUX_EM0_M;            // Программный запуск"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 389,
          "context": "ADC1_SSMUX0_R = (TEMP_MCU_CHANNEL << 0)   | // Встроенный сенсор MCU"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 395,
          "context": "ADC1_SSCTL0_R = (0 << 0)                   | // Первый канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 396,
          "context": "(0 << 4)                   | // Второй канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 397,
          "context": "(0 << 8)                   | // Третий канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 398,
          "context": "(ADC_SSCTL0_IE3 |           // Прерывание после последнего"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 399,
          "context": "ADC_SSCTL0_END3);          // Последний канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 404,
          "context": "ADC1_ACTSS_R |= ADC_ACTSS_ASEN0;           // Включаем секвенсор"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 410,
          "context": "ADC1_IM_R |= ADC_IM_MASK0;                 // Маска прерывания секвенсора 0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 411,
          "context": "NVIC_EN1_R |= (1 << (INT_ADC1SS0 - 48));   // Включаем прерывание в NVIC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 415,
          "context": "void ADC1SS0_Handler(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 417,
          "context": "uint32_t mcu_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 418,
          "context": "uint32_t motors_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 419,
          "context": "uint32_t board_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 420,
          "context": "uint32_t ambient_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 425,
          "context": "float mcu_temp = ((mcu_voltage * 1000.0f) / MCU_TEMP_SLOPE) + MCU_TEMP_OFFSET;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 428,
          "context": "float motors_temp = ((motors_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 429,
          "context": "float board_temp = ((board_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 430,
          "context": "float ambient_temp = ((ambient_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 434,
          "context": "diagState.thermalState.motorTemps[0] = motors_temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 441,
          "context": "\"Critical MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 445,
          "context": "\"High MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 450,
          "context": "\"Critical motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 454,
          "context": "\"High motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 459,
          "context": "\"Critical board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 463,
          "context": "\"High board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 467,
          "context": "ADC1_ISC_R = ADC_ISC_IN0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 480,
          "context": "(uint32_t)(diagState.thermalState.mcuTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 485,
          "context": "(uint32_t)(diagState.thermalState.mcuTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 489,
          "context": "for (int i = 0; i < 4; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 494,
          "context": "(uint32_t)(diagState.thermalState.motorTemps[i] * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 499,
          "context": "(uint32_t)(diagState.thermalState.motorTemps[i] * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 508,
          "context": "(uint32_t)(diagState.thermalState.boardTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 513,
          "context": "(uint32_t)(diagState.thermalState.boardTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 519,
          "context": "for (int i = 0; i < 4; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 557,
          "context": "diagState.logCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 558,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 577,
          "context": "diagState.thermalState.motorTemps[0] >= TEMP_MOTORS_WARNING ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 599,
          "context": "debugBuffer[len + 2] = '\\0';"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 653,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 662,
          "context": "SYSCTL_RCGCWD_R |= SYSCTL_RCGCWD_R0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 665,
          "context": "while(!(SYSCTL_PRWD_R & SYSCTL_PRWD_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 668,
          "context": "WATCHDOG0_LOCK_R = 0x1ACCE551;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 671,
          "context": "WATCHDOG0_CTL_R &= ~WDT_CTL_INTEN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 675,
          "context": "uint32_t reload_value = timeout_ms * 1000; // преобразуем мс в тики"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 678,
          "context": "WATCHDOG0_LOAD_R = reload_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 683,
          "context": "WATCHDOG0_CTL_R |= (WDT_CTL_RESEN | WDT_CTL_INTEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 686,
          "context": "NVIC_EN0_R |= (1 << INT_WATCHDOG);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 689,
          "context": "NVIC_PRI0_R = (NVIC_PRI0_R & 0xFFFFFFF0) | 0x0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 695,
          "context": "WATCHDOG0_ICR_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 702,
          "context": "void WDT0_Handler(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 704,
          "context": "WATCHDOG0_ICR_R = WDT_ICR_M;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 706,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_WATCHDOG_RESET, \"Watchdog reset occurred\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 712,
          "context": "WATCHDOG0_ICR_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 718,
          "context": "return (WATCHDOG0_RIS_R & WDT_RIS_WDTRIS) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 726,
          "context": "static uint32_t savedPeripheralState = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 779,
          "context": "NVIC_EN0_R |= (1 << INT_UART0);       // UART0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 780,
          "context": "NVIC_EN0_R |= (1 << INT_WTIMER0A);    // WatchDog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 783,
          "context": "GPIO_PORTA_IM_R |= 0x03;              // Разрешаем прерывания на PA0-PA1 (UART)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 784,
          "context": "GPIO_PORTA_IEV_R &= ~0x03;            // Прерывание по спаду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 793,
          "context": "\"Entering low power mode\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 819,
          "context": "\"Exiting low power mode\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 831,
          "context": "if (diagState.perfCount == 0 || elapsed > diagState.perfMaxTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 834,
          "context": "if (diagState.perfCount == 0 || elapsed < diagState.perfMinTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 845,
          "context": "diagState.perfMaxTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 846,
          "context": "diagState.perfMinTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 847,
          "context": "diagState.perfTotalTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 848,
          "context": "diagState.perfCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 874,
          "context": "SendDebugMessage(\"Battery: %.2fV (%.0f%%)\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 886,
          "context": "diagState.thermalState.motorTemps[0],"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 895,
          "context": "if (diagState.perfCount > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 905,
          "context": "if (diagState.logCount > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 918,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START, \"Running self-test\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 927,
          "context": "#define POWER_ERR_VOLTAGE_LOW    0x0001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 928,
          "context": "#define POWER_ERR_VOLTAGE_HIGH   0x0002"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 929,
          "context": "#define POWER_ERR_CURRENT_HIGH   0x0003"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 930,
          "context": "#define POWER_ERR_TEMP_HIGH      0x0004"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 931,
          "context": "#define POWER_ERR_SUPPLY_FAIL    0x0005"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 934,
          "context": "#define POWER_TEST_VOLTAGE_MIN   10.5f   // В"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 936,
          "context": "#define POWER_TEST_CURRENT_MAX   15.0f   // А"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 937,
          "context": "#define POWER_TEST_TEMP_MAX      45.0f   // °C"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 943,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 944,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 945,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 955,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 964,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 976,
          "context": "status.data = (uint32_t)(batteryCurrent * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 988,
          "context": "status.data = (uint32_t)(batteryTemp * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 998,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1021,
          "context": "#define SENSOR_ERR_IMU_FAIL      0x0101"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1022,
          "context": "#define SENSOR_ERR_IMU_SELFTEST  0x0102"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1023,
          "context": "#define SENSOR_ERR_IMU_RANGE     0x0103"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1024,
          "context": "#define SENSOR_ERR_BARO_FAIL     0x0104"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1025,
          "context": "#define SENSOR_ERR_BARO_RANGE    0x0105"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1026,
          "context": "#define SENSOR_ERR_MAG_FAIL      0x0106"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1027,
          "context": "#define SENSOR_ERR_MAG_RANGE     0x0107"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1028,
          "context": "#define SENSOR_ERR_GPS_FAIL      0x0108"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1029,
          "context": "#define SENSOR_ERR_ADC_FAIL      0x0109"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1032,
          "context": "#define IMU_TEST_ACCEL_MAX      4.0f    // g"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1033,
          "context": "#define IMU_TEST_GYRO_MAX       50.0f   // deg/s"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1034,
          "context": "#define BARO_TEST_ALT_MIN       -100.0f // м"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1035,
          "context": "#define BARO_TEST_ALT_MAX       5000.0f // м"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1036,
          "context": "#define MAG_TEST_FIELD_MIN      0.2f    // Гаусс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1037,
          "context": "#define MAG_TEST_FIELD_MAX      0.8f    // Гаусс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1041,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1042,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1043,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1046,
          "context": "IMUData imuData = {0};  // Добавляем объявление переменной"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1062,
          "context": "status.data = (uint32_t)(accel_magnitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1073,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1084,
          "context": "status.data = (uint32_t)(altitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1095,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1102,
          "context": ".magX = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1103,
          "context": ".magY = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1104,
          "context": ".magZ = 0.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1115,
          "context": "status.data = (uint32_t)(mag_magnitude * 1000);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1126,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1136,
          "context": "#define MOTOR_ERR_NOT_RESPONDING 0x0201"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1137,
          "context": "#define MOTOR_ERR_HIGH_CURRENT   0x0202"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1138,
          "context": "#define MOTOR_ERR_NO_ROTATION    0x0203"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1139,
          "context": "#define MOTOR_ERR_VIBRATION      0x0204"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1140,
          "context": "#define MOTOR_ERR_TEMP_HIGH      0x0205"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1141,
          "context": "#define MOTOR_ERR_ESC_FAIL       0x0206"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1144,
          "context": "#define MOTOR_TEST_SPEED         10.0f   // % от максимальной скорости"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1145,
          "context": "#define MOTOR_TEST_CURRENT_MAX   2.0f    // А на мотор"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1146,
          "context": "#define MOTOR_TEST_TEMP_MAX      60.0f   // °C"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1147,
          "context": "#define MOTOR_TEST_VIB_MAX       2.0f    // g"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1148,
          "context": "#define MOTOR_TEST_TIMEOUT       1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1161,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1162,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1163,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1173,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1180,
          "context": "for (int i = 0; i < 4; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1182,
          "context": "memset(&motorData[i], 0, sizeof(MotorTestData));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1199,
          "context": "DelayMs(500);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1215,
          "context": "SetMotorSpeed(i, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1220,
          "context": "if (motorData[i].rpm < 100.0f) {  // Минимальные обороты для теста"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1227,
          "context": "SetMotorSpeed(i, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1252,
          "context": "SetMotorSpeed(i, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1255,
          "context": "DelayMs(500);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1273,
          "context": "#define COMM_ERR_RC_FAIL        0x0301"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1274,
          "context": "#define COMM_ERR_RC_QUALITY     0x0302"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1275,
          "context": "#define COMM_ERR_TELEMETRY_FAIL 0x0303"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1276,
          "context": "#define COMM_ERR_BACKUP_FAIL    0x0304"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1279,
          "context": "#define SAFETY_ERR_WATCHDOG     0x0401"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1280,
          "context": "#define SAFETY_ERR_EEPROM       0x0402"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1281,
          "context": "#define SAFETY_ERR_FLASH        0x0403"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1282,
          "context": "#define SAFETY_ERR_PARACHUTE    0x0404"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1283,
          "context": "#define SAFETY_ERR_KILLSWITCH   0x0405"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1286,
          "context": "#define RC_TEST_TIMEOUT         1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1288,
          "context": "#define TELEMETRY_TEST_TIMEOUT  1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1292,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1293,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1294,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1317,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1351,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1361,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1371,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1372,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1373,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1382,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1393,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1404,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1416,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1428,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1441,
          "context": "ADCResult result = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1450,
          "context": "ADC0_PSSI_R = 0x0008;  // Запуск SS3"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1453,
          "context": "uint32_t timeout = 10000;  // Примерно 10000 циклов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1454,
          "context": "while((ADC0_RIS_R & 0x08) == 0 && timeout > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1459,
          "context": "if (timeout == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1465,
          "context": "result.value = ADC0_SSFIFO3_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1469,
          "context": "ADC0_ISC_R = 0x0008;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1485,
          "context": "if (adcResult.value == 0 || adcResult.value >= ADC_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1493,
          "context": "float voltage = (adcResult.value * 3.3f) / 4096.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1501,
          "context": "temperature = (voltage * 100.0f);  // Пример преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1517,
          "context": "return 25.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1529,
          "context": "ADC0_PSSI_R = 0x0008;  // Запуск SS3"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1547,
          "context": "status.complete = (ADC0_RIS_R & 0x08) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1550,
          "context": "static uint32_t conversionAttempts = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1551,
          "context": "const uint32_t MAX_CONVERSION_ATTEMPTS = 1000;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1557,
          "context": "conversionAttempts = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1560,
          "context": "conversionAttempts = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1576,
          "context": "if (result.ticks == 0 || result.ticks > NVIC_ST_RELOAD_R) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1594,
          "context": "uint32_t elapsedTicks = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1619,
          "context": ".elapsedTicks = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1644,
          "context": ".magX = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1645,
          "context": ".magY = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1646,
          "context": ".magZ = 0.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1651,
          "context": "memset(&selfTestResult, 0, sizeof(SelfTestResult));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1652,
          "context": "selfTestResult.totalErrors = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1653,
          "context": "selfTestResult.totalWarnings = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1665,
          "context": "selfTestResult.powerTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1666,
          "context": "selfTestResult.sensorTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1667,
          "context": "selfTestResult.motorTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1668,
          "context": "selfTestResult.batteryTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1669,
          "context": "selfTestResult.commTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1670,
          "context": "selfTestResult.safetyTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1738,
          "context": "if (selfTestResult.totalErrors > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1745,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SELF_TEST, selfTestResult.message, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1750,
          "context": "#define ADC_CHANNEL_MCU_TEMP         ADC_AIN0   // Канал АЦП для температур"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1759,
          "context": "ADC1_SSMUX1_R = ADC_AIN0;  // Выбираем канал AIN0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1760,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1767,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1782,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1791,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1800,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1810,
          "context": "[THERMOCOUPLE_TYPE_K] = {0.0, 39.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1811,
          "context": "[THERMOCOUPLE_TYPE_J] = {0.0, 35.0, -0.00015, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1812,
          "context": "[THERMOCOUPLE_TYPE_T] = {0.0, 40.0, -0.0002, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1813,
          "context": "[THERMOCOUPLE_TYPE_E] = {0.0, 38.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1814,
          "context": "[THERMOCOUPLE_TYPE_N] = {0.0, 37.0, -0.00012, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1815,
          "context": "[THERMOCOUPLE_TYPE_R] = {0.0, 36.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1816,
          "context": "[THERMOCOUPLE_TYPE_S] = {0.0, 35.0, -0.00015, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1817,
          "context": "[THERMOCOUPLE_TYPE_B] = {0.0, 34.0, -0.0002, 0.0}      // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1828,
          "context": "return 25.0f;  // Возвращаем стандартную температур окружающей среды"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1832,
          "context": "float voltage = (adcResult.value * 3.3f) / 4096.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1840,
          "context": "temperature = (voltage * 100.0f);  // Пример преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1856,
          "context": "return 25.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1865,
          "context": "if (type < 0 || type >= THERMOCOUPLE_TYPE_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1888,
          "context": "const float MIN_TEMP = -200.0f;  // Минимальная температур для термопар"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1889,
          "context": "const float MAX_TEMP = 1800.0f;  // Максимальная температур для термопар"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1894,
          "context": "(uint32_t)(temperature * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1904,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1905,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1920,
          "context": "uint32_t result = ADC1_SSFIFO0_R & 0xFFF;  // 12-bit ADC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1927,
          "context": "float voltage = (result * 3.3f) / 4096.0f;  // Преобразование в вольты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1928,
          "context": "float current = (voltage * 20.0f) / 3.3f;   // Преобразование в амперы"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1935,
          "context": "static uint32_t lastBackupCommTest = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1947,
          "context": "if (currentTime - lastBackupCommTest < 1000) {  // Тестируем не чаще раза в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1954,
          "context": "uint8_t testPacket[] = {0xAA, 0x55, 0x00, 0xFF};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1964,
          "context": "while (GetCurrentTime() - startTime < 100) {  // Таймаут 100 мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1967,
          "context": "if (response[0] == 0x55 && response[1] == 0xAA &&"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1968,
          "context": "response[2] == 0xFF && response[3] == 0x00) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1996,
          "context": "uint32_t originalLoad = WATCHDOG0_LOAD_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1997,
          "context": "uint32_t originalCtl = WATCHDOG0_CTL_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2000,
          "context": "uint32_t testTimeout = SystemCoreClock / 10;  // 100мс при текущей частоте"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2003,
          "context": "WATCHDOG0_LOCK_R = 0x1ACCE551;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2006,
          "context": "WATCHDOG0_CTL_R &= ~(WDT_CTL_INTEN | WDT_CTL_RESEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2009,
          "context": "WATCHDOG0_LOAD_R = testTimeout;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2014,
          "context": "WATCHDOG0_CTL_R |= (WDT_CTL_RESEN | WDT_CTL_INTEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2017,
          "context": "NVIC_EN0_R |= (1 << INT_WATCHDOG);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2020,
          "context": "NVIC_PRI0_R = (NVIC_PRI0_R & 0xFFFFFFF0) | 0x0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2023,
          "context": "diagState.watchdogTimeout = 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2026,
          "context": "WATCHDOG0_ICR_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2029,
          "context": "\"Watchdog initialized\", 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2037,
          "context": "WATCHDOG0_LOAD_R = originalLoad;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2038,
          "context": "WATCHDOG0_CTL_R = originalCtl;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2055,
          "context": "float GetBaroAltitude(void) { return 0.0f; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2056,
          "context": "uint16_t GetMotorRPM(void) { return 0; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2057,
          "context": "float GetMotorVibration(void) { return 0.0f; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2058,
          "context": "uint8_t GetRCLinkQuality(void) { return 100; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2068,
          "context": "return 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2072,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2079,
          "context": "[THERMOCOUPLE_TYPE_K] = {0.0, 39.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2080,
          "context": "[THERMOCOUPLE_TYPE_J] = {0.0, 35.0, -0.00015, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2081,
          "context": "[THERMOCOUPLE_TYPE_T] = {0.0, 40.0, -0.0002, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2082,
          "context": "[THERMOCOUPLE_TYPE_E] = {0.0, 38.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2083,
          "context": "[THERMOCOUPLE_TYPE_N] = {0.0, 37.0, -0.00012, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2084,
          "context": "[THERMOCOUPLE_TYPE_R] = {0.0, 36.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2085,
          "context": "[THERMOCOUPLE_TYPE_S] = {0.0, 35.0, -0.00015, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2086,
          "context": "[THERMOCOUPLE_TYPE_B] = {0.0, 34.0, -0.0002, 0.0}      // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 5,
          "context": "*((volatile uint32_t *)(port + 0x400)) = pins;  // GPIO_O_DIR"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 7,
          "context": "*((volatile uint32_t *)(port + 0x51C)) = pins;  // GPIO_O_DEN"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 12,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 17,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 6,
          "context": "#define DEG_TO_RAD(x) ((x) * 0.017453292519943295)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 7,
          "context": "#define RAD_TO_DEG(x) ((x) * 57.295779513082323)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 10,
          "context": "#define EARTH_RADIUS 6371000.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 13,
          "context": "static NavigationState nav_state = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 15,
          "context": "static uint8_t waypoint_count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 16,
          "context": "static uint8_t current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 17,
          "context": "static GPSPosition home_position = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 25,
          "context": "memset(&nav_state, 0, sizeof(NavigationState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 26,
          "context": "memset(waypoints, 0, sizeof(waypoints));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 27,
          "context": "waypoint_count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 28,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 33,
          "context": "nav_state.heading = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 34,
          "context": "nav_state.ground_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 35,
          "context": "nav_state.vertical_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 81,
          "context": "memset(waypoints, 0, sizeof(waypoints));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 82,
          "context": "waypoint_count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 83,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 100,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 102,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 111,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 118,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 165,
          "context": "float speed_deg = speed / (EARTH_RADIUS * DEG_TO_RAD(1.0f));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 184,
          "context": "vertical_speed = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 187,
          "context": "vertical_speed = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 195,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 213,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 233,
          "context": "if (position->latitude < -90.0f || position->latitude > 90.0f ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 234,
          "context": "position->longitude < -180.0f || position->longitude > 180.0f ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 249,
          "context": "return distance <= 1000.0f; // Безопасная зона - 1 км от дома"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 261,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 271,
          "context": "if (!nav_state.navigation_active || waypoint_count == 0 ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 295,
          "context": "while (heading < 0.0f) heading += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 296,
          "context": "while (heading >= 360.0f) heading -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 11,
          "context": "bool mpu6050_initialized;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 12,
          "context": "bool bmp280_initialized;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 16,
          "context": ".mpu6050_initialized = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 17,
          "context": ".bmp280_initialized = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 18,
          "context": ".current_altitude = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 19,
          "context": ".rotation_angle = 0.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 23,
          "context": "static MPU6050_Data mpu6050_data = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 24,
          "context": "static BMP280_Data bmp280_data = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 27,
          "context": "static float vertical_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 29,
          "context": "void MPU6050_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 31,
          "context": "mpu6050_data.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 32,
          "context": "mpu6050_data.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 33,
          "context": "mpu6050_data.accel_z = 1.0f;  // 1g в состоянии покоя"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 34,
          "context": "mpu6050_data.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 35,
          "context": "mpu6050_data.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 36,
          "context": "mpu6050_data.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 37,
          "context": "mpu6050_data.temperature = 25.0f;  // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 39,
          "context": "sensor_state.mpu6050_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 42,
          "context": "void BMP280_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 44,
          "context": "bmp280_data.pressure = 1013.25f;  // Стандартное атмосферное давление (гПа)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 45,
          "context": "bmp280_data.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 46,
          "context": "bmp280_data.temperature = 25.0f;  // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 48,
          "context": "sensor_state.bmp280_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 51,
          "context": "void MPU6050_Read(MPU6050_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 52,
          "context": "if (!sensor_state.mpu6050_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 57,
          "context": "*data = mpu6050_data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 60,
          "context": "void BMP280_Read(BMP280_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 61,
          "context": "if (!sensor_state.bmp280_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 66,
          "context": "*data = bmp280_data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 69,
          "context": "void MPU6050_Calibrate(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 71,
          "context": "mpu6050_data.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 72,
          "context": "mpu6050_data.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 73,
          "context": "mpu6050_data.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 74,
          "context": "mpu6050_data.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 75,
          "context": "mpu6050_data.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 76,
          "context": "mpu6050_data.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 79,
          "context": "void BMP280_Calibrate(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 81,
          "context": "bmp280_data.pressure = 1013.25f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 82,
          "context": "bmp280_data.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 88,
          "context": "mpu6050_data.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 89,
          "context": "mpu6050_data.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 90,
          "context": "mpu6050_data.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 91,
          "context": "mpu6050_data.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 92,
          "context": "mpu6050_data.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 93,
          "context": "mpu6050_data.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 96,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 97,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 98,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f); // Примерное изменение давления с высотой"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 103,
          "context": "vertical_speed = 2.0f; // м/с"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 104,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f; // Предполагаем вызов каждые 100мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 106,
          "context": "mpu6050_data.accel_z = 1.2f; // Повышенная нагрузка при наборе высоты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 107,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 108,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 114,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 115,
          "context": "if (sensor_state.current_altitude < 0.0f) sensor_state.current_altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 117,
          "context": "mpu6050_data.accel_z = 0.8f; // Пониженная нагрузка при снижении"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 118,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 119,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 124,
          "context": "sensor_state.rotation_angle += 45.0f * 0.1f; // 45 градусов в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 125,
          "context": "if (sensor_state.rotation_angle >= 360.0f) sensor_state.rotation_angle -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 127,
          "context": "mpu6050_data.gyro_z = 45.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 128,
          "context": "mpu6050_data.accel_x = (float)sin(sensor_state.rotation_angle * 3.14159f / 180.0f) * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 129,
          "context": "mpu6050_data.accel_y = (float)cos(sensor_state.rotation_angle * 3.14159f / 180.0f) * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 134,
          "context": "mpu6050_data.accel_x = 0.2f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 135,
          "context": "mpu6050_data.gyro_y = -5.0f; // Небольшой наклон вперед"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 138,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 139,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 140,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 143,
          "context": "void Sensors_GetIMUData(MPU6050_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 146,
          "context": "*data = mpu6050_data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 152,
          "context": "MPU6050_Data imu;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 157,
          "context": "static float filteredRoll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 158,
          "context": "static float filteredPitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 159,
          "context": "static float filteredYaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 162,
          "context": "float accelRoll = atan2f(imu.accel_y, imu.accel_z) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 163,
          "context": "float accelPitch = atan2f(-imu.accel_x, sqrtf(imu.accel_y * imu.accel_y + imu.accel_z * imu.accel_z)) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 166,
          "context": "float dt = 0.01f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 167,
          "context": "filteredRoll = 0.96f * (filteredRoll + imu.gyro_x * dt) + 0.04f * accelRoll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 168,
          "context": "filteredPitch = 0.96f * (filteredPitch + imu.gyro_y * dt) + 0.04f * accelPitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 172,
          "context": "while (filteredYaw >= 360.0f) filteredYaw -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 173,
          "context": "while (filteredYaw < 0.0f) filteredYaw += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 183,
          "context": "data->imu.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 184,
          "context": "data->imu.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 185,
          "context": "data->imu.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 186,
          "context": "data->imu.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 187,
          "context": "data->imu.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 188,
          "context": "data->imu.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 189,
          "context": "data->baro.pressure = 1013.25f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 190,
          "context": "data->baro.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 195,
          "context": "void Sensors_GetBaroData(BMP280_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 197,
          "context": "data->pressure = 1013.25f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 198,
          "context": "data->altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 199,
          "context": "data->temperature = 25.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 13,
          "context": "#define DEG_TO_RAD(x) ((x) * 0.017453292519943295)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 14,
          "context": "#define RAD_TO_DEG(x) ((x) * 57.295779513082323)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 17,
          "context": "#define UPDATE_FREQUENCY 100"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 18,
          "context": "#define DT (1.0f / UPDATE_FREQUENCY)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 21,
          "context": "#define MAX_ROLL_ANGLE  45.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 22,
          "context": "#define MAX_PITCH_ANGLE 45.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 23,
          "context": "#define MAX_YAW_RATE    180.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 42,
          "context": "stabState.targetSetPoint.roll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 43,
          "context": "stabState.targetSetPoint.pitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 44,
          "context": "stabState.targetSetPoint.yaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 45,
          "context": "stabState.targetSetPoint.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 48,
          "context": "stabState.currentOrientation.roll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 49,
          "context": "stabState.currentOrientation.pitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 50,
          "context": "stabState.currentOrientation.yaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 54,
          "context": "1.0f, 0.1f, 0.05f,  // Roll"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 55,
          "context": "1.0f, 0.1f, 0.05f,  // Pitch"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 56,
          "context": "2.0f, 0.15f, 0.1f,  // Yaw"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 57,
          "context": "1.5f, 0.2f, 0.1f    // Altitude"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 69,
          "context": "stabState.rollPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 70,
          "context": "stabState.rollPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 76,
          "context": "stabState.pitchPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 77,
          "context": "stabState.pitchPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 83,
          "context": "stabState.yawPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 84,
          "context": "stabState.yawPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 90,
          "context": "stabState.altitudePID.outputMin = 0.0f;  // Минимальная тяга"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 91,
          "context": "stabState.altitudePID.outputMax = 1.0f;  // Максимальная тяга"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 102,
          "context": "stabState.targetSetPoint.altitude = fmaxf(altitude, 0.0f);  // Высота не может быть отрицательной"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 111,
          "context": "MPU6050_Data imuData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 112,
          "context": "BMP280_Data altData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 131,
          "context": "while (yawError > 180.0f) yawError -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 132,
          "context": "while (yawError < -180.0f) yawError += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 166,
          "context": "Actuators_SetAllMotors(0.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 175,
          "context": "stabState.rollPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 176,
          "context": "stabState.rollPID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 178,
          "context": "stabState.pitchPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 179,
          "context": "stabState.pitchPID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 181,
          "context": "stabState.yawPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 182,
          "context": "stabState.yawPID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 184,
          "context": "stabState.altitudePID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 185,
          "context": "stabState.altitudePID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 191,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 235,
          "context": "m1 = ClampValue(m1, 0.0f, 1.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 236,
          "context": "m2 = ClampValue(m2, 0.0f, 1.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 237,
          "context": "m3 = ClampValue(m3, 0.0f, 1.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 238,
          "context": "m4 = ClampValue(m4, 0.0f, 1.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 241,
          "context": "Actuators_SetMotor(0, m1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 11,
          "context": "#define MOTOR_FRONT_LEFT  0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 17,
          "context": "#define PWM_MIN_VALUE     0    // Минимальное значение PWM (мотор выключен)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 18,
          "context": "#define PWM_MAX_VALUE     1000 // Максимальное значение PWM (полная мощность)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 19,
          "context": "#define PWM_IDLE_VALUE    100  // Значение PWM на холостом ходу"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 11,
          "context": "#define GPIO_PORTA_AFSEL_R    (*((volatile uint32_t *)0x40004420))  // Port A Alternate Function Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 12,
          "context": "#define GPIO_PORTA_DEN_R      (*((volatile uint32_t *)0x4000451C))  // Port A Digital Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 13,
          "context": "#define GPIO_PORTA_AMSEL_R    (*((volatile uint32_t *)0x40004528))  // Port A Analog Mode Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 14,
          "context": "#define GPIO_PORTA_PCTL_R     (*((volatile uint32_t *)0x4000452C))  // Port A Port Control"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 18,
          "context": "#define COMM_BAUDRATE       115200"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 23,
          "context": "PACKET_TYPE_HEARTBEAT    = 0x00,  // Проверка соединения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 24,
          "context": "PACKET_TYPE_TELEMETRY    = 0x01,  // Телеметрия (сенсоры, положение, статус)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 25,
          "context": "PACKET_TYPE_COMMAND      = 0x02,  // Команды управления"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 26,
          "context": "PACKET_TYPE_CONFIG       = 0x03,  // Настройка параметров"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 27,
          "context": "PACKET_TYPE_WAYPOINT     = 0x04,  // Данные маршрутных точек"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 28,
          "context": "PACKET_TYPE_STATUS       = 0x05,  // Статус дрона"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 29,
          "context": "PACKET_TYPE_ERROR        = 0xFF   // Сообщения об ошибках"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 34,
          "context": "CMD_ARM           = 0x01,  // Активация моторов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 35,
          "context": "CMD_DISARM        = 0x02,  // Деактивация моторов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 36,
          "context": "CMD_TAKEOFF       = 0x03,  // Взлет"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 37,
          "context": "CMD_LAND          = 0x04,  // Посадка"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 38,
          "context": "CMD_RTH           = 0x05,  // Возврат домой"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 39,
          "context": "CMD_HOLD          = 0x06,  // Удержание позиции"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 40,
          "context": "CMD_EMERGENCY_STOP = 0x07  // Аварийная остановка"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 11,
          "context": "LOG_DEBUG = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 21,
          "context": "DIAG_EVENT_SYSTEM_START = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 42,
          "context": "TEST_RESULT_PASS = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 50,
          "context": "ADC_ERROR_NONE = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 59,
          "context": "SYSTICK_ERROR_NONE = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 68,
          "context": "POWER_MODE_NORMAL = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 75,
          "context": "SYSTEM_STATE_OK = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 83,
          "context": "THERMOCOUPLE_TYPE_K = 0,    // Type K thermocouple"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 95,
          "context": "#define TEMP_SENSOR_TYPE_LINEAR    0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 101,
          "context": "#define TEMP_MCU_WARNING      85.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 102,
          "context": "#define TEMP_MCU_CRITICAL     95.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 103,
          "context": "#define TEMP_MOTORS_WARNING   70.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 104,
          "context": "#define TEMP_MOTORS_CRITICAL  80.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 105,
          "context": "#define TEMP_BOARD_WARNING    60.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 106,
          "context": "#define TEMP_BOARD_CRITICAL   70.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 107,
          "context": "#define MAX_SAFE_TEMPERATURE   125.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 110,
          "context": "#define TEST_PASS    0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 226,
          "context": "float R0;             // Сопротивление при 0°C"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 228,
          "context": "} pt100Params;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 232,
          "context": "#define SYSCTL_RCGCGPIO_R    (*((volatile uint32_t *)0x400FE608))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 233,
          "context": "#define SYSCTL_RCGCADC_R     (*((volatile uint32_t *)0x400FE638))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 234,
          "context": "#define SYSCTL_PRGPIO_R      (*((volatile uint32_t *)0x400FEA08))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 235,
          "context": "#define SYSCTL_PRADC_R       (*((volatile uint32_t *)0x400FEA38))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 236,
          "context": "#define SYSCTL_RCGC2_R       (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 238,
          "context": "#define GPIO_PORTD_DEN_R     (*((volatile uint32_t *)0x4005751C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 239,
          "context": "#define GPIO_PORTD_AMSEL_R   (*((volatile uint32_t *)0x40057528))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 241,
          "context": "#define ADC1_ACTSS_R         (*((volatile uint32_t *)0x40039000))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 242,
          "context": "#define ADC1_EMUX_R          (*((volatile uint32_t *)0x40039014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 243,
          "context": "#define ADC1_SSMUX0_R        (*((volatile uint32_t *)0x40039040))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 244,
          "context": "#define ADC1_SSCTL0_R        (*((volatile uint32_t *)0x40039044))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 245,
          "context": "#define ADC1_TSSEL_R         (*((volatile uint32_t *)0x4003901C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 246,
          "context": "#define ADC1_SAC_R           (*((volatile uint32_t *)0x40039030))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 247,
          "context": "#define ADC1_IM_R            (*((volatile uint32_t *)0x40039008))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 248,
          "context": "#define ADC1_SSFIF00_R       (*((volatile uint32_t *)0x40039048))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 250,
          "context": "#define ADC0_SAC_R           (*((volatile uint32_t *)0x40038030))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 251,
          "context": "#define ADC0_IM_R            (*((volatile uint32_t *)0x40038008))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 252,
          "context": "#define ADC0_SSFIFO1_R       (*((volatile uint32_t *)0x40038048))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 255,
          "context": "#define ADC_ACTSS_ASEN0      0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 256,
          "context": "#define ADC_EMUX_EM0_M       0x0000000F"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 257,
          "context": "#define ADC_SSCTL0_IE3       0x00000800"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 258,
          "context": "#define ADC_SSCTL0_END3      0x00000400"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 259,
          "context": "#define ADC_IM_MASK0         0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 260,
          "context": "#define INT_ADC1SS0          51"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 263,
          "context": "#define ADC_PSSI_SS3          0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 264,
          "context": "#define ADC_RIS_INR3          0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 265,
          "context": "#define ADC_SSCTL0_IE2        0x00000400"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 266,
          "context": "#define ADC_SSCTL0_END2       0x00000800"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 267,
          "context": "#define ADC_SAC_AVG_64X       0x00000006"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 268,
          "context": "#define ADC_ACTSS_ASEN1       0x00000002  // SS1 Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 269,
          "context": "#define ADC_EMUX_EM1_M        0x000000F0  // SS1 Trigger Select mask"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 270,
          "context": "#define ADC_IM_MASK1          0x00000002  // SS1 Interrupt Mask"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 271,
          "context": "#define ADC_RIS_INR1          0x00000002  // SS1 Interrupt Status"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 272,
          "context": "#define ADC_PSSI_SS1          0x00000002  // SS1 Initiate"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 273,
          "context": "#define ADC_SSCTL1_IE2        0x00000400  // Sample 2 Interrupt Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 274,
          "context": "#define ADC_SSCTL1_END2       0x00000800  // Sample 2 is End of Sequence"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 277,
          "context": "#define INT_ADC0SS1          15  // ADC0 Sequencer 1 interrupt"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 280,
          "context": "#define WATCHDOG0_LOAD_R     (*((volatile uint32_t *)0x40000000))  // Регистр загрузки WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 281,
          "context": "#define WATCHDOG0_CTL_R      (*((volatile uint32_t *)0x40000008))  // Регистр управления WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 282,
          "context": "#define WATCHDOG0_ICR_R      (*((volatile uint32_t *)0x4000000C))  // Регистр очистки прерываний WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 283,
          "context": "#define WATCHDOG0_LOCK_R     (*((volatile uint32_t *)0x40000C00))  // Регистр блокировки WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 284,
          "context": "#define WATCHDOG0_ICR_M      (*((volatile uint32_t *)0x40000010))  // Регистр очистки прерываний WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 287,
          "context": "#define WDT_CTL_INTEN        0x00000001  // Разрешение прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 288,
          "context": "#define WDT_CTL_RESEN        0x00000002  // Разрешение сброса системы"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 291,
          "context": "#define NVIC_SYS_CTRL_R      (*((volatile uint32_t *)0xE000ED10))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 292,
          "context": "#define NVIC_SYS_CTRL_SLEEPDEEP 0x00000004"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 298,
          "context": "#define NVIC_EN0_R            (*((volatile uint32_t *)0xE000E100))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 299,
          "context": "#define NVIC_PRI0_R          (*((volatile uint32_t *)0xE000E400))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 300,
          "context": "#define NVIC_APINT_R         (*((volatile uint32_t *)0xE000ED0C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 301,
          "context": "#define NVIC_APINT_VECTKEY   0x05FA0000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 302,
          "context": "#define NVIC_APINT_SYSRESETREQ 0x00000004"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 305,
          "context": "#define SYSCTL_RCGCWD_R      (*((volatile uint32_t *)0x400FE600))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 306,
          "context": "#define SYSCTL_PRWD_R        (*((volatile uint32_t *)0x400FEA00))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 309,
          "context": "#define SYSCTL_RCGCWD_R0     0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 310,
          "context": "#define SYSCTL_PRWD_R0       0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 313,
          "context": "#define MCU_TEMP_SLOPE       1.0f    // Slope for MCU temperature conversion"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 314,
          "context": "#define MCU_TEMP_OFFSET      0.0f    // Offset for MCU temperature conversion"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 315,
          "context": "#define TEMP_SENSOR_SLOPE    10.0f   // mV/°C for external temperature sensors"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 318,
          "context": "#define TEMP_MCU_CHANNEL     0       // Internal temperature sensor channel"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 321,
          "context": "#define NVIC_EN1_R           (*((volatile uint32_t *)0xE000E104))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 324,
          "context": "#define ADC1_SSFIFO0_R       (*((volatile uint32_t *)0x40039044))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 327,
          "context": "#define NVIC_ST_CTRL_R       (*((volatile uint32_t *)0xE000E010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 328,
          "context": "#define NVIC_ST_RELOAD_R     (*((volatile uint32_t *)0xE000E014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 329,
          "context": "#define NVIC_ST_CURRENT_R    (*((volatile uint32_t *)0xE000E018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 332,
          "context": "#define NVIC_ST_CTRL_ENABLE  0x00000001  // Включение таймера"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 333,
          "context": "#define NVIC_ST_CTRL_INTEN   0x00000002  // Включение прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 334,
          "context": "#define NVIC_ST_CTRL_CLKSRC  0x00000004  // Выбор источника тактирования (системная частота)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 425,
          "context": "#define BACKUP_COMM_ERR_NOT_RESPONDING  0x0401"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 426,
          "context": "#define BACKUP_COMM_ERR_CRC            0x0402"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 427,
          "context": "#define BACKUP_COMM_ERR_TIMEOUT        0x0403"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 433,
          "context": "#define WATCHDOG_ERR_NO_RESET     0x0501  // Watchdog не вызвал сброс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 434,
          "context": "#define WATCHDOG_ERR_EARLY_RESET  0x0502  // Сброс произошел раньше времени"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 435,
          "context": "#define WATCHDOG_ERR_LATE_RESET   0x0503  // Сброс произошел позже времени"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 441,
          "context": "#define DIAG_MAX_LOG_ENTRIES 100"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 444,
          "context": "#define SYSCTL_RCGCGPIO_R3    0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 445,
          "context": "#define SYSCTL_RCGCGPIO_R4    0x00000010"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 446,
          "context": "#define SYSCTL_RCGCADC_R0     0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 447,
          "context": "#define SYSCTL_RCGCADC_R1     0x00000002"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 448,
          "context": "#define SYSCTL_PRGPIO_R3      0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 449,
          "context": "#define SYSCTL_PRGPIO_R4      0x00000010"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 450,
          "context": "#define SYSCTL_PRADC_R0       0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 451,
          "context": "#define SYSCTL_PRADC_R1       0x00000002"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 454,
          "context": "#define ADC1_PSSI_R           (*((volatile uint32_t *)0x40039028))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 455,
          "context": "#define ADC1_RIS_R            (*((volatile uint32_t *)0x40039004))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 456,
          "context": "#define ADC_ISC_IN0           0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 459,
          "context": "#define GPIO_PORTA_IM_R       (*((volatile uint32_t *)0x40004010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 460,
          "context": "#define GPIO_PORTA_IEV_R      (*((volatile uint32_t *)0x4000440C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 461,
          "context": "#define GPIO_PORTA_AFSEL_R    (*((volatile uint32_t *)0x40004420))  // Port A Alternate Function Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 462,
          "context": "#define GPIO_PORTE_AFSEL_R    (*((volatile uint32_t *)0x40024420))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 463,
          "context": "#define GPIO_PORTE_DEN_R      (*((volatile uint32_t *)0x4002451C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 464,
          "context": "#define GPIO_PORTE_AMSEL_R    (*((volatile uint32_t *)0x40024528))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 465,
          "context": "#define GPIO_PORTD_AFSEL_R    (*((volatile uint32_t *)0x40007420))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 468,
          "context": "#define WATCHDOG0_RIS_R       (*((volatile uint32_t *)0x40000004))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 469,
          "context": "#define WATCHDOG0_ICR_R       (*((volatile uint32_t *)0x40000008))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 470,
          "context": "#define WATCHDOG0_ICR_M       (*((volatile uint32_t *)0x40000010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 471,
          "context": "#define WDT_RIS_WDTRIS        0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 472,
          "context": "#define WDT_ICR_M             0xFFFFFFFF  // Watchdog Timer Interrupt Clear Mask"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 475,
          "context": "#define INT_UART0             21"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 476,
          "context": "#define INT_WTIMER0A          94"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 490,
          "context": "void WDT0_Handler(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 504,
          "context": "#define ADC_MAX_VALUE          4095     // Максимальное значение АЦП (12 бит)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 505,
          "context": "#define VOLTAGE_DIVIDER        0.5f     // Коэффициент делителя напряжения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 506,
          "context": "#define CURRENT_SENSE_MV_A     100.0f   // мВ/А для датчика тока"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 507,
          "context": "#define TEMP_SENSOR_MV_C       10.0f    // мВ/°C для температурного датчика"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 511,
          "context": "#define BATTERY_MIN_VOLTAGE    9.0f     // Минимальное напряжение батареи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 512,
          "context": "#define BATTERY_LOW_VOLTAGE    10.0f    // Напряжение для предупреждения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 514,
          "context": "#define BATTERY_MAX_TEMP       60.0f    // Максимальная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 8,
          "context": "#define GPIO_PIN_0              0x00000001  // GPIO pin 0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 9,
          "context": "#define GPIO_PIN_1              0x00000002  // GPIO pin 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 10,
          "context": "#define GPIO_PIN_2              0x00000004  // GPIO pin 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 11,
          "context": "#define GPIO_PIN_3              0x00000008  // GPIO pin 3"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 12,
          "context": "#define GPIO_PIN_4              0x00000010  // GPIO pin 4"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 13,
          "context": "#define GPIO_PIN_5              0x00000020  // GPIO pin 5"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 14,
          "context": "#define GPIO_PIN_6              0x00000040  // GPIO pin 6"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 15,
          "context": "#define GPIO_PIN_7              0x00000080  // GPIO pin 7"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 18,
          "context": "#define GPIO_PORTA_BASE        0x40004000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 19,
          "context": "#define GPIO_PORTB_BASE        0x40005000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 20,
          "context": "#define GPIO_PORTC_BASE        0x40006000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 21,
          "context": "#define GPIO_PORTD_BASE        0x40007000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 22,
          "context": "#define GPIO_PORTE_BASE        0x40024000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 23,
          "context": "#define GPIO_PORTF_BASE        0x40025000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 26,
          "context": "#define SYSCTL_RCGC2_R         (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 27,
          "context": "#define SYSCTL_RCGC2_GPIOF     0x00000020  // Port F Clock Gating Control"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 30,
          "context": "#define SYSCTL_SYSDIV_2_5      0x04000000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 31,
          "context": "#define SYSCTL_USE_PLL         0x00000000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 32,
          "context": "#define SYSCTL_OSC_MAIN        0x00000000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 33,
          "context": "#define SYSCTL_XTAL_16MHZ      0x00000540"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 36,
          "context": "#define SYSCTL_PERIPH_GPIOF    0xf0000805  // GPIO F peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 37,
          "context": "#define SYSCTL_PERIPH_GPIOE    0xf0000804  // GPIO E peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 38,
          "context": "#define SYSCTL_PERIPH_GPIOD    0xf0000803  // GPIO D peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 39,
          "context": "#define SYSCTL_PERIPH_GPIOC    0xf0000802  // GPIO C peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 40,
          "context": "#define SYSCTL_PERIPH_GPIOB    0xf0000801  // GPIO B peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 41,
          "context": "#define SYSCTL_PERIPH_GPIOA    0xf0000800  // GPIO A peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 31,
          "context": "#define MAIN_LOOP_FREQ_HZ      200     // Частота основного цикла (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 32,
          "context": "#define TELEMETRY_FREQ_HZ      10      // Частота отправки телеметрии (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 34,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 37,
          "context": "#define MAX_ALTITUDE           100.0f   // Максимальная высота (м)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 38,
          "context": "#define MIN_BATTERY_VOLTAGE    10.5f    // Минимальное напряжение батареи (В)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 39,
          "context": "#define MAX_ANGLE              45.0f    // Максимальный угол наклона (градусы)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 40,
          "context": "#define MAX_YAW_RATE          90.0f    // Максимальная скорость рыскания (градусы/с)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 44,
          "context": "PARAM_PID_ROLL = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 52,
          "context": "CMD_TYPE_POSITION = 0,     // Команда позиционирования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 44,
          "context": "#define MAX_WAYPOINTS 20"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 45,
          "context": "#define NAV_WAYPOINT_RADIUS    3.0f   // Радиус достижения точки (метры)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 46,
          "context": "#define NAV_MIN_ALTITUDE       5.0f    // Минимальная безопасная высота"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 47,
          "context": "#define NAV_MAX_ALTITUDE       120.0f  // Максимальная разрешенная высота"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 48,
          "context": "#define NAV_DEFAULT_SPEED      5.0f    // Скорость по умолчанию (м/с)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 23,
          "context": "} MPU6050_Data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 30,
          "context": "} BMP280_Data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 41,
          "context": "MPU6050_Data imu;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 42,
          "context": "BMP280_Data baro;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 53,
          "context": "void Sensors_GetBaroData(BMP280_Data* data);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_033",
      "name": "count",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 99,
          "context": "uint16_t count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 105,
          "context": "while (count < maxLength) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 109,
          "context": "buffer[count] = (uint8_t)(UART0_DR_R & 0xFF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 110,
          "context": "count++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 113,
          "context": "return count;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 15,
          "context": "static uint8_t waypoint_count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 27,
          "context": "waypoint_count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 45,
          "context": "if (waypoint == NULL || waypoint_count >= MAX_WAYPOINTS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 53,
          "context": "waypoints[waypoint_count] = *waypoint;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 54,
          "context": "waypoints[waypoint_count].reached = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 55,
          "context": "waypoint_count++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 61,
          "context": "if (index >= waypoint_count) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 66,
          "context": "for (uint8_t i = index; i < waypoint_count - 1; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 70,
          "context": "waypoint_count--;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 82,
          "context": "waypoint_count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 87,
          "context": "return waypoint_count;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 91,
          "context": "if (index >= waypoint_count || waypoint == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 100,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 111,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 271,
          "context": "if (!nav_state.navigation_active || waypoint_count == 0 ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 272,
          "context": "current_waypoint_index >= waypoint_count) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 286,
          "context": "if (current_waypoint_index < waypoint_count - 1) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_034",
      "name": "i",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 1,
          "context": "#include \"include/main.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 2,
          "context": "#include <stddef.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 3,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 4,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 5,
          "context": "#include <string.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 6,
          "context": "#include <math.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 7,
          "context": "#include \"include/sensors.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 8,
          "context": "#include \"include/navigation.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 9,
          "context": "#include \"include/stabilization.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 10,
          "context": "#include \"include/communication.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 11,
          "context": "#include \"include/telemetry.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 14,
          "context": "extern uint32_t SystemCoreClock;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 15,
          "context": "extern void SystemInit(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 18,
          "context": "static DroneState currentState = DRONE_STATE_INIT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 21,
          "context": "#define GPIO_PORTA_BASE        0x40004000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 22,
          "context": "#define GPIO_PORTB_BASE        0x40005000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 23,
          "context": "#define GPIO_PORTC_BASE        0x40006000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 24,
          "context": "#define GPIO_PORTD_BASE        0x40007000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 25,
          "context": "#define GPIO_PORTE_BASE        0x40024000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 26,
          "context": "#define GPIO_PORTF_BASE        0x40025000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 29,
          "context": "#define SYSCTL_RCC2_R            (*((volatile uint32_t *)0x400FE070))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 30,
          "context": "#define SYSCTL_RIS_R             (*((volatile uint32_t *)0x400FE050))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 31,
          "context": "#define SYSCTL_RCGC2_R          (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 34,
          "context": "#define SYSCTL_RCC2_USERCC2     0x80000000  // Use RCC2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 35,
          "context": "#define SYSCTL_RCC2_BYPASS2     0x00000800  // PLL Bypass 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 36,
          "context": "#define SYSCTL_RCC2_PWRDN2      0x00002000  // Power-Down PLL 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 37,
          "context": "#define SYSCTL_RCC2_SYSDIV2_MASK 0x1F800000  // System Clock Divisor 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 38,
          "context": "#define SYSCTL_RCC2_SYSDIV2LSB   0x00400000  // System Clock Divisor 2 LSB"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 41,
          "context": "#define SYSCTL_RCC2_OSCSRC2_MASK_INV 0xFFFFFF8F  // Инвертированная маска для OSCSRC2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 42,
          "context": "#define SYSCTL_RCC2_PWRDN2_MASK_INV  0xFFFFDFFF  // Инвертированная маска для PWRDN2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 43,
          "context": "#define SYSCTL_RCC2_SYSDIV_MASK_INV  0xE07FFFFF  // Инвертированная маска для SYSDIV2 и LSB"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 46,
          "context": "#define SYSCTL_RCC2_OSCSRC2_MASK 0x00000070  // Oscillator Source 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 47,
          "context": "#define SYSCTL_RCC2_OSCSRC2_MO   0x00000000  // Main Oscillator"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 50,
          "context": "#define SYSCTL_RIS_PLLLRIS      0x00000040  // PLL Lock Raw Interrupt Status"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 53,
          "context": "#define SYSCTL_PERIPH_GPIOF    0xf0000805  // GPIO F peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 54,
          "context": "#define SYSCTL_PERIPH_GPIOE    0xf0000804  // GPIO E peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 55,
          "context": "#define SYSCTL_PERIPH_GPIOD    0xf0000803  // GPIO D peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 56,
          "context": "#define SYSCTL_PERIPH_GPIOC    0xf0000802  // GPIO C peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 57,
          "context": "#define SYSCTL_PERIPH_GPIOB    0xf0000801  // GPIO B peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 58,
          "context": "#define SYSCTL_PERIPH_GPIOA    0xf0000800  // GPIO A peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 61,
          "context": "#define GPIO_PORTF_DIR_R       (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x400)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 62,
          "context": "#define GPIO_PORTF_DEN_R       (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x51C)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 63,
          "context": "#define GPIO_PORTF_DATA_R      (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x3FC)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 66,
          "context": "#define MAIN_LOOP_FREQ_HZ      200     // Частота основного цикла (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 67,
          "context": "#define TELEMETRY_FREQ_HZ      10      // Частота отправки телеметрии (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 68,
          "context": "#define DIAGNOSTIC_FREQ_HZ      1       // Частота диагностики (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 69,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 72,
          "context": "static uint32_t mainLoopCounter = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 73,
          "context": "static bool isEmergencyMode = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 76,
          "context": "static SensorData sensorData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 79,
          "context": "bool IsPeripheralReady(uint32_t peripheral) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 80,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 84,
          "context": "void EnablePeripheral(uint32_t peripheral) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 85,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 87,
          "context": "while(!IsPeripheralReady(peripheral)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 91,
          "context": "static void InitializeGPIO(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 92,
          "context": "static void UpdateWatchdog(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 93,
          "context": "static void HandleLEDs(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 94,
          "context": "static void UpdateTelemetry(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 97,
          "context": "int main(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 99,
          "context": "SystemInit();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 102,
          "context": "while (1) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 107,
          "context": "if (!Sensors_Update()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 108,
          "context": "EnterEmergencyMode(\"Sensor update failed\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 109,
          "context": "continue;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 119,
          "context": "if (currentState >= DRONE_STATE_ARMED) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 121,
          "context": "Navigation_Update();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 124,
          "context": "if (!Navigation_IsActive()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 125,
          "context": "EnterEmergencyMode(\"Navigation update failed\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 126,
          "context": "continue;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 130,
          "context": "Stabilization_Update();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 131,
          "context": "if (Stabilization_IsEnabled() == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 132,
          "context": "EnterEmergencyMode(\"Stabilization update failed\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 133,
          "context": "continue;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 139,
          "context": "if (actState.all_motors_enabled == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 141,
          "context": "continue;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 146,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / TELEMETRY_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 151,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / DIAGNOSTIC_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 155,
          "context": "mainLoopCounter++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 160,
          "context": "static void InitializeGPIO(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 162,
          "context": "EnablePeripheral(SYSCTL_PERIPH_GPIOF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 165,
          "context": "while(!IsPeripheralReady(SYSCTL_PERIPH_GPIOF)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 175,
          "context": "static void UpdateWatchdog(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 176,
          "context": "Diagnostics_FeedWatchdog();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 180,
          "context": "static void HandleLEDs(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 182,
          "context": "#define LED_MASK_CLEAR     0xFFFFFFF9  // 1111 1111 1111 1111 1111 1111 1111 1001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 183,
          "context": "#define LED_RED            0x00000002  // Красный LED (PIN_1)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 184,
          "context": "#define LED_BLUE           0x00000004  // Синий LED (PIN_2)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 185,
          "context": "#define LED_GREEN          0x00000008  // Зеленый LED (PIN_3)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 187,
          "context": "uint32_t ledState = GPIO_PORTF_DATA_R & LED_MASK_CLEAR;  // Очищаем биты LED"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 190,
          "context": "switch (currentState) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 215,
          "context": "if ((mainLoopCounter % 10) < 5) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 225,
          "context": "void ProcessCommands(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 230,
          "context": "if (Communication_Receive(&rxPacket)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 232,
          "context": "if (rxPacket.type == PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 234,
          "context": "if (rxPacket.length == sizeof(CommandPacket)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 235,
          "context": "memcpy(&cmdData, rxPacket.data, sizeof(CommandPacket));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 238,
          "context": "switch (cmdData.type) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 240,
          "context": "if (currentState == DRONE_STATE_FLYING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 242,
          "context": "Waypoint targetPoint = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 243,
          "context": ".position = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 244,
          "context": ".latitude = cmdData.data.position.x,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 245,
          "context": ".longitude = cmdData.data.position.y,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 246,
          "context": ".altitude = cmdData.data.position.z,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 247,
          "context": ".valid = true"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 250,
          "context": ".hover_time = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 255,
          "context": "Navigation_ClearWaypoints();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 256,
          "context": "Navigation_AddWaypoint(&targetPoint);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 261,
          "context": "if (currentState >= DRONE_STATE_ARMED) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 262,
          "context": "Stabilization_SetTargetOrientation("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 263,
          "context": "cmdData.data.attitude.roll,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 264,
          "context": "cmdData.data.attitude.pitch,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 265,
          "context": "cmdData.data.attitude.yaw,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 272,
          "context": "UpdatePIDParameters(cmdData.data.config.param, cmdData.data.config.value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 281,
          "context": "void UpdatePIDParameters(SystemParameter param, float value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 283,
          "context": "static float roll_kp = 1.0f, roll_ki = 0.1f, roll_kd = 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 284,
          "context": "static float pitch_kp = 1.0f, pitch_ki = 0.1f, pitch_kd = 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 285,
          "context": "static float yaw_kp = 2.0f, yaw_ki = 0.15f, yaw_kd = 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 286,
          "context": "static float alt_kp = 1.5f, alt_ki = 0.2f, alt_kd = 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 289,
          "context": "switch (param) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 294,
          "context": "pitch_kp = value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 305,
          "context": "Stabilization_ConfigurePID("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 306,
          "context": "roll_kp, roll_ki, roll_kd,    // Roll PID"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 307,
          "context": "pitch_kp, pitch_ki, pitch_kd,  // Pitch PID"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 308,
          "context": "yaw_kp, yaw_ki, yaw_kd,       // Yaw PID"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 309,
          "context": "alt_kp, alt_ki, alt_kd        // Altitude PID"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 314,
          "context": "static void UpdateTelemetry(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 321,
          "context": "GPSPosition currentPos;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 322,
          "context": "Navigation_GetCurrentPosition(&currentPos);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 323,
          "context": "float altitude = Navigation_GetCurrentAltitude();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 324,
          "context": "float distanceToTarget = Navigation_GetDistanceToTarget();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 329,
          "context": "Diagnostics_GetPowerState(&powerState);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 330,
          "context": "Diagnostics_GetThermalState(&thermalState);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 335,
          "context": "telemetry.position = currentPos;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 338,
          "context": "Orientation currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 339,
          "context": "Sensors_GetOrientation(&currentOrientation);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 340,
          "context": "telemetry.orientation = currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 342,
          "context": "telemetry.altitude = altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 343,
          "context": "telemetry.groundSpeed = distanceToTarget;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 344,
          "context": "telemetry.verticalSpeed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 345,
          "context": "telemetry.flightMode = (uint8_t)currentState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 346,
          "context": "telemetry.gpsStatus = (sensorData.isCalibrated ? 1 : 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 348,
          "context": "telemetry.errorFlags = (uint8_t)Diagnostics_GetErrorCount();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 351,
          "context": "Communication_SendTelemetry(&telemetry);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 355,
          "context": "void CheckSafety(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 357,
          "context": "if (sensorData.imu.temperature < MIN_BATTERY_VOLTAGE) { // Временно используем temperature как voltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 363,
          "context": "if (sensorData.baro.altitude > MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 364,
          "context": "EnterEmergencyMode(\"Maximum altitude exceeded\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 369,
          "context": "if (fabsf(sensorData.imu.accel_x) > MAX_ANGLE ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 370,
          "context": "fabsf(sensorData.imu.accel_y) > MAX_ANGLE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 371,
          "context": "EnterEmergencyMode(\"Maximum angle exceeded\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 376,
          "context": "if (!Communication_IsConnected()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 377,
          "context": "EnterEmergencyMode(\"Communication lost\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 383,
          "context": "void EnterEmergencyMode(const char* reason) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 384,
          "context": "if (!isEmergencyMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 385,
          "context": "isEmergencyMode = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 389,
          "context": "Diagnostics_Log(LOG_CRITICAL, DIAG_EVENT_SYSTEM_START, reason, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 392,
          "context": "Communication_SendError(0x01, reason);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 397,
          "context": "Navigation_Stop();              // Останавливаем текущую навигацию"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 398,
          "context": "Navigation_ClearWaypoints();    // Очищаем все точки маршрута"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 406,
          "context": "void ExitEmergencyMode(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 407,
          "context": "if (isEmergencyMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 408,
          "context": "isEmergencyMode = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 412,
          "context": "Diagnostics_ClearLog();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 415,
          "context": "Navigation_Stop();              // Останавливаем текущую навигацию"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 416,
          "context": "Navigation_ClearWaypoints();    // Очищаем все точки маршрута"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 420,
          "context": "Communication_SendStatus(0x00);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 1,
          "context": "#include <string.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 2,
          "context": "#include \"../include/actuators.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 5,
          "context": "static ActuatorsState actuators_state = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 6,
          "context": "static bool emergency_stop_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 7,
          "context": "static uint32_t system_time_ms = 0; // Эмуляция системного времени"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 10,
          "context": "static void UpdateMotorTemperatures(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 11,
          "context": "static void UpdateMotorRuntimes(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 12,
          "context": "static void ClampPWMValue(uint16_t* pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 14,
          "context": "void Actuators_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 16,
          "context": "memset(&actuators_state, 0, sizeof(ActuatorsState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 19,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 20,
          "context": "actuators_state.motors[i].temperature = 25.0f; // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 23,
          "context": "emergency_stop_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 26,
          "context": "void Actuators_DeInit(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 28,
          "context": "Actuators_DisableAllMotors();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 31,
          "context": "void Actuators_SetMotorPWM(uint8_t motor_index, uint16_t pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 32,
          "context": "if (motor_index >= MOTOR_COUNT || emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 37,
          "context": "actuators_state.motors[motor_index].pwm_value = pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 38,
          "context": "actuators_state.motors[motor_index].is_running = (pwm_value > (uint16_t)PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 41,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 42,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 43,
          "context": "Actuators_SetMotorPWM(i, pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 47,
          "context": "uint16_t Actuators_GetMotorPWM(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 48,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 51,
          "context": "return actuators_state.motors[motor_index].pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 54,
          "context": "void Actuators_EnableMotor(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 55,
          "context": "if (motor_index >= MOTOR_COUNT || emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 58,
          "context": "actuators_state.motors[motor_index].is_running = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 61,
          "context": "void Actuators_DisableMotor(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 62,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 65,
          "context": "actuators_state.motors[motor_index].is_running = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 66,
          "context": "actuators_state.motors[motor_index].pwm_value = PWM_MIN_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 69,
          "context": "void Actuators_EnableAllMotors(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 70,
          "context": "if (emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 73,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 74,
          "context": "Actuators_EnableMotor(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 79,
          "context": "void Actuators_DisableAllMotors(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 80,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 81,
          "context": "Actuators_DisableMotor(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 86,
          "context": "bool Actuators_IsMotorEnabled(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 87,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 90,
          "context": "return actuators_state.motors[motor_index].is_running;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 94,
          "context": "void Actuators_SetThrottle(uint16_t throttle) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 95,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 97,
          "context": "uint16_t pwm_value = (uint16_t)((throttle * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100U + PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 102,
          "context": "void Actuators_SetYaw(int16_t yaw) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 103,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 107,
          "context": "uint16_t base_pwm = actuators_state.global_throttle;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 108,
          "context": "int32_t pwm_delta = ((int32_t)yaw * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 110,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm + pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 111,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm + pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 112,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 113,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm - pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 116,
          "context": "void Actuators_SetPitch(int16_t pitch) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 117,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 121,
          "context": "uint16_t base_pwm = actuators_state.global_throttle;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 122,
          "context": "int16_t pitch_pwm = pitch / 2;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 124,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm - pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 125,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 126,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm + pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 127,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm + pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 130,
          "context": "void Actuators_SetRoll(int16_t roll) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 131,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 135,
          "context": "uint16_t base_pwm = actuators_state.global_throttle;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 136,
          "context": "int16_t roll_pwm = roll / 2;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 138,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm + roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 139,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm + roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 140,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 141,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm - roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 145,
          "context": "void Actuators_GetState(ActuatorsState* state) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 146,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 151,
          "context": "float Actuators_GetMotorTemperature(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 152,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 155,
          "context": "return actuators_state.motors[motor_index].temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 158,
          "context": "uint32_t Actuators_GetMotorRuntime(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 159,
          "context": "if (motor_index >= MOTOR_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 162,
          "context": "return actuators_state.motors[motor_index].runtime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 166,
          "context": "void Actuators_EmulateHover(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 167,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 170,
          "context": "uint16_t hover_pwm = PWM_MAX_VALUE / 2;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 175,
          "context": "void Actuators_EmulateAscent(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 176,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 179,
          "context": "uint16_t ascent_pwm = (uint16_t)(PWM_MAX_VALUE * 0.7f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 184,
          "context": "void Actuators_EmulateDescent(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 185,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 188,
          "context": "uint16_t descent_pwm = (uint16_t)(PWM_MAX_VALUE * 0.3f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 193,
          "context": "void Actuators_EmulateRotation(int16_t yaw_rate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 194,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 200,
          "context": "void Actuators_EmulateForwardFlight(uint16_t speed) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 201,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 204,
          "context": "Actuators_SetPitch(-speed); // Отрицательный питч для движения вперед"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 208,
          "context": "void Actuators_EmergencyStop(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 209,
          "context": "emergency_stop_active = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 210,
          "context": "Actuators_DisableAllMotors();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 213,
          "context": "bool Actuators_IsEmergencyStopActive(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 214,
          "context": "return emergency_stop_active;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 217,
          "context": "void Actuators_ResetEmergencyStop(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 218,
          "context": "emergency_stop_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 222,
          "context": "void Actuators_SetAllMotors(float power) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 223,
          "context": "void Actuators_SetMotor(uint8_t index, float power) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 226,
          "context": "static void UpdateMotorTemperatures(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 227,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 228,
          "context": "if (actuators_state.motors[i].is_running) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 230,
          "context": "float pwm_factor = (float)actuators_state.motors[i].pwm_value / PWM_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 231,
          "context": "actuators_state.motors[i].temperature += pwm_factor * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 234,
          "context": "if (actuators_state.motors[i].temperature > 25.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 235,
          "context": "actuators_state.motors[i].temperature -= 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 241,
          "context": "static void UpdateMotorRuntimes(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 242,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 243,
          "context": "if (actuators_state.motors[i].is_running) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 244,
          "context": "actuators_state.motors[i].runtime += 10; // Предполагаем вызов каждые 10 мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 249,
          "context": "static void ClampPWMValue(uint16_t* pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 250,
          "context": "if (*pwm_value > PWM_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 1,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 2,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 3,
          "context": "#include <string.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 4,
          "context": "#include <TM4C123GH6PM.h>  // Используем системный путь"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 5,
          "context": "#include \"../include/communication.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 6,
          "context": "#include \"../include/diagnostics.h\"  // Добавляем для использования общих определений регистров"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 9,
          "context": "#define UART_FR_RXFE    0x10    // Флаг пустого буфера приема"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 10,
          "context": "#define UART_FR_TXFF    0x20    // Флаг заполненного буфера передачи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 11,
          "context": "#define UART_FR_BUSY    0x08    // Флаг занятости UART"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 14,
          "context": "#define GPIO_PA0_U0RX   0x01    // UART0 RX на PA0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 15,
          "context": "#define GPIO_PA1_U0TX   0x02    // UART0 TX на PA1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 18,
          "context": "#define COMM_TIMEOUT_MS     1000    // Таймаут соединения (1 секунда)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 19,
          "context": "#define SYSTICK_FREQ_HZ    1000    // Частота системного таймера (1 кГц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 22,
          "context": "#define UART0_DR_R              (*((volatile uint32_t *)0x4000C000))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 23,
          "context": "#define UART0_FR_R              (*((volatile uint32_t *)0x4000C018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 24,
          "context": "#define UART0_IBRD_R           (*((volatile uint32_t *)0x4000C024))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 25,
          "context": "#define UART0_FBRD_R           (*((volatile uint32_t *)0x4000C028))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 26,
          "context": "#define UART0_LCRH_R           (*((volatile uint32_t *)0x4000C02C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 27,
          "context": "#define UART0_CTL_R            (*((volatile uint32_t *)0x4000C030))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 30,
          "context": "#define SYSCTL_RCGCUART_R     (*((volatile uint32_t *)0x400FE104))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 32,
          "context": "#define SYSCTL_PRGPIO_R       (*((volatile uint32_t *)0x400FEA08))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 36,
          "context": "static struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 37,
          "context": "bool initialized;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 39,
          "context": "uint32_t lastPacketTime;    // Время последнего принятого пакета"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 40,
          "context": "uint32_t currentTime;       // Текущее время в миллисекундах"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 41,
          "context": "uint32_t packetsSent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 42,
          "context": "uint32_t packetsReceived;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 43,
          "context": "uint32_t errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 44,
          "context": "uint32_t baudRate;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 45,
          "context": "uint16_t telemetryRateHz;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 46,
          "context": "uint16_t padding;           // Явное выравнивание"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 47,
          "context": "uint8_t rxBuffer[COMM_BUFFER_SIZE];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 48,
          "context": "uint8_t txBuffer[COMM_BUFFER_SIZE];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 49,
          "context": "uint16_t rxIndex;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 54,
          "context": "static uint16_t CalculateChecksum(const uint8_t* data, uint16_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 55,
          "context": "static bool ValidatePacket(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 56,
          "context": "static void ProcessReceivedPacket(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 57,
          "context": "static void UpdateConnectionStatus(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 60,
          "context": "static void SysTick_Init(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 61,
          "context": "static uint32_t GetCurrentTime(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 64,
          "context": "bool UART_Init(uint32_t baudRate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 70,
          "context": "while((SYSCTL_PRGPIO_R & (1U << 0)) == 0) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 82,
          "context": "uint32_t systemClock = 16000000; // 16 MHz"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 83,
          "context": "uint32_t brdi = systemClock / (16 * baudRate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 84,
          "context": "uint32_t brdf = (uint32_t)(((float)systemClock / (16.0f * (float)baudRate) - brdi) * 64.0f + 0.5f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 86,
          "context": "UART0_IBRD_R = brdi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 98,
          "context": "uint16_t UART_Receive(uint8_t* buffer, uint16_t maxLength) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 99,
          "context": "uint16_t count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 101,
          "context": "if (buffer == NULL || maxLength == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 105,
          "context": "while (count < maxLength) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 106,
          "context": "if (UART0_FR_R & UART_FR_RXFE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 109,
          "context": "buffer[count] = (uint8_t)(UART0_DR_R & 0xFF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 116,
          "context": "bool UART_Send(const uint8_t* data, uint16_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 117,
          "context": "uint16_t i;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 119,
          "context": "if (data == NULL || length == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 123,
          "context": "for (i = 0; i < length; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 124,
          "context": "while (UART0_FR_R & UART_FR_TXFF) {}  // Ждем освобождения буфера передачи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 125,
          "context": "UART0_DR_R = (uint32_t)data[i];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 131,
          "context": "bool Communication_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 132,
          "context": "if (commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 137,
          "context": "memset(&commState, 0, sizeof(commState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 142,
          "context": "SysTick_Init();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 145,
          "context": "if (!UART_Init(commState.baudRate)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 149,
          "context": "commState.initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 153,
          "context": "void Communication_Process(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 154,
          "context": "if (!commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 159,
          "context": "uint16_t bytesReceived = UART_Receive("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 161,
          "context": "(uint16_t)(COMM_BUFFER_SIZE - commState.rxIndex)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 164,
          "context": "if (bytesReceived > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 165,
          "context": "commState.rxIndex = (uint16_t)(commState.rxIndex + bytesReceived);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 168,
          "context": "uint16_t processedIndex = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 169,
          "context": "while (processedIndex + sizeof(CommPacket) <= commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 173,
          "context": "uint16_t packetSize = sizeof(CommPacket) - COMM_MAX_PACKET_SIZE + packet->length;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 174,
          "context": "if (processedIndex + packetSize > commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 179,
          "context": "if (ValidatePacket(packet)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 180,
          "context": "ProcessReceivedPacket(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 181,
          "context": "commState.packetsReceived++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 182,
          "context": "commState.lastPacketTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 187,
          "context": "processedIndex += packetSize;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 191,
          "context": "if (processedIndex > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 192,
          "context": "if (processedIndex < commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 201,
          "context": "UpdateConnectionStatus();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 204,
          "context": "bool Communication_Send(PacketType type, const void* data, uint8_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 205,
          "context": "if (!commState.initialized || length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 214,
          "context": "if (data != NULL && length > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 215,
          "context": "memcpy(packet.data, data, (size_t)length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 219,
          "context": "packet.checksum = CalculateChecksum((const uint8_t*)&packet, (uint16_t)(sizeof(CommPacket) - sizeof(uint16_t)));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 222,
          "context": "if (UART_Send((const uint8_t*)&packet, (uint16_t)sizeof(CommPacket))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 231,
          "context": "bool Communication_SendTelemetry(const TelemetryData* telemetry) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 232,
          "context": "if (telemetry == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 235,
          "context": "return Communication_Send(PACKET_TYPE_TELEMETRY, telemetry, sizeof(TelemetryData));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 238,
          "context": "bool Communication_SendStatus(uint8_t status) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 239,
          "context": "return Communication_Send(PACKET_TYPE_STATUS, &status, sizeof(status));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 242,
          "context": "bool Communication_SendError(uint8_t errorCode, const char* message) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 244,
          "context": "uint8_t code;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 249,
          "context": "if (message != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 250,
          "context": "strncpy(errorData.message, message, sizeof(errorData.message) - 1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 251,
          "context": "errorData.message[sizeof(errorData.message) - 1] = '\\0';"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 256,
          "context": "return Communication_Send(PACKET_TYPE_ERROR, &errorData,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 260,
          "context": "void Communication_HandleCommand(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 261,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 266,
          "context": "switch (cmd) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 296,
          "context": "Communication_SendError(0x01, \"Unknown command\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 301,
          "context": "void Communication_HandleConfig(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 302,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_CONFIG) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 310,
          "context": "bool Communication_IsConnected(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 314,
          "context": "uint32_t Communication_GetLastPacketTime(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 315,
          "context": "return commState.lastPacketTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 318,
          "context": "void Communication_SetBaudRate(uint32_t baudRate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 319,
          "context": "if (baudRate != commState.baudRate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 321,
          "context": "if (commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 322,
          "context": "UART_Init(baudRate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 327,
          "context": "void Communication_SetTelemetryRate(uint16_t rateHz) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 331,
          "context": "uint32_t Communication_GetPacketsSent(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 335,
          "context": "uint32_t Communication_GetPacketsReceived(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 336,
          "context": "return commState.packetsReceived;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 339,
          "context": "uint32_t Communication_GetErrorCount(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 344,
          "context": "__attribute__((weak)) void SysTick_Handler(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 346,
          "context": "commState.currentTime++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 349,
          "context": "if (commState.currentTime - commState.lastPacketTime > COMM_TIMEOUT_MS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 354,
          "context": "static void SysTick_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 370,
          "context": "static uint32_t GetCurrentTime(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 371,
          "context": "return commState.currentTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 374,
          "context": "static void UpdateConnectionStatus(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 375,
          "context": "uint32_t currentTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 378,
          "context": "if (currentTime - commState.lastPacketTime > COMM_TIMEOUT_MS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 379,
          "context": "if (commState.connected) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 382,
          "context": "Communication_SendError(0x03, \"Connection lost\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 385,
          "context": "if (!commState.connected) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 388,
          "context": "Communication_SendStatus(0x01); // 0x01 - связь восстановлена"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 394,
          "context": "static uint16_t CalculateChecksum(const uint8_t* data, uint16_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 395,
          "context": "uint16_t checksum = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 396,
          "context": "for(uint16_t i = 0; i < length; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 397,
          "context": "checksum += data[i];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 402,
          "context": "static bool ValidatePacket(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 403,
          "context": "if (packet == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 408,
          "context": "if (packet->length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 413,
          "context": "uint16_t calculatedChecksum = CalculateChecksum("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 414,
          "context": "(uint8_t*)packet,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 415,
          "context": "sizeof(CommPacket) - sizeof(packet->checksum)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 421,
          "context": "static void ProcessReceivedPacket(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 422,
          "context": "switch (packet->type) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 425,
          "context": "Communication_Send(PACKET_TYPE_HEARTBEAT, NULL, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 429,
          "context": "Communication_HandleCommand(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 433,
          "context": "Communication_HandleConfig(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 441,
          "context": "Communication_SendError(0x02, \"Unknown packet type\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 447,
          "context": "void Communication_SendData(uint8_t* data, uint16_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 451,
          "context": "void Communication_Receive(uint8_t* buffer, uint16_t* length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 452,
          "context": "if(length) *length = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 3,
          "context": "#include <string.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 4,
          "context": "#include <stdio.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 5,
          "context": "#include <math.h>  // Добавлена библиотека для NAN"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 6,
          "context": "#include \"../include/diagnostics.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 7,
          "context": "#include \"../include/communication.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 8,
          "context": "#include \"D:/keil/pack/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 9,
          "context": "#include <stddef.h>  // для NULL"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 11,
          "context": "#ifndef NAN"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 12,
          "context": "#define NAN (0.0f/0.0f)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 13,
          "context": "#endif"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 16,
          "context": "#define SYSCTL_BASE            0x400FE000  // Базовый адрес системного контроллера"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 17,
          "context": "#define SYSCTL_RCGCWD_R        (*((volatile uint32_t *)(SYSCTL_BASE + 0x600)))  // Регистр тактирования Watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 18,
          "context": "#define SYSCTL_PRWD_R          (*((volatile uint32_t *)(SYSCTL_BASE + 0xA00)))  // Регистр готовности Watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 21,
          "context": "#define NVIC_BASE              0xE000E000  // Базовый адрес контроллера прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 22,
          "context": "#define NVIC_PRIO_R(n)         (*((volatile uint32_t *)(NVIC_BASE + 0x400 + ((n) * 4))))  // Регистры приоритета прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 25,
          "context": "#define NVIC_ST_CTRL_R          (*((volatile uint32_t *)0xE000E010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 26,
          "context": "#define NVIC_ST_RELOAD_R        (*((volatile uint32_t *)0xE000E014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 27,
          "context": "#define NVIC_ST_CURRENT_R       (*((volatile uint32_t *)0xE000E018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 30,
          "context": "#ifndef ADC0_SSMUX1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 31,
          "context": "#define ADC0_SSMUX1_R          (*((volatile uint32_t *)0x40038044))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 32,
          "context": "#endif"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 33,
          "context": "#ifndef ADC0_SSCTL1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 34,
          "context": "#define ADC0_SSCTL1_R          (*((volatile uint32_t *)0x40038048))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 35,
          "context": "#endif"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 38,
          "context": "#define ADC1_BASE            0x40039000  // Базовый адрес ADC1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 39,
          "context": "#define ADC1_SSMUX1_R       (*((volatile uint32_t *)(ADC1_BASE + 0x40)))  // Мультиплексор выборки SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 40,
          "context": "#define ADC1_SSCTL1_R       (*((volatile uint32_t *)(ADC1_BASE + 0x44)))  // Управление и статус SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 41,
          "context": "#define ADC1_SSFIFO1_R      (*((volatile uint32_t *)(ADC1_BASE + 0x48)))  // FIFO данных SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 42,
          "context": "#define ADC1_ISC_R          (*((volatile uint32_t *)(ADC1_BASE + 0x50)))  // Регистр очистки прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 45,
          "context": "#define ADC0_ACTSS_R           (*((volatile uint32_t *)0x40038000))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 46,
          "context": "#define ADC0_EMUX_R            (*((volatile uint32_t *)0x40038014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 47,
          "context": "#define ADC0_SSMUX3_R          (*((volatile uint32_t *)0x400380A0))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 48,
          "context": "#define ADC0_SSCTL3_R          (*((volatile uint32_t *)0x400380A4))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 49,
          "context": "#define ADC0_PSSI_R            (*((volatile uint32_t *)0x40038028))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 50,
          "context": "#define ADC0_RIS_R             (*((volatile uint32_t *)0x40038004))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 51,
          "context": "#define ADC0_ISC_R             (*((volatile uint32_t *)0x4003800C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 52,
          "context": "#define ADC0_SSFIFO3_R         (*((volatile uint32_t *)0x400380A8))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 53,
          "context": "#define ADC0_PC_R              (*((volatile uint32_t *)0x40038FC4))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 56,
          "context": "#define ADC_PSSI_SS1        0x00000002  // SS1 Initiate"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 57,
          "context": "#define ADC_ACTSS_ASEN1     0x00000002  // SS1 Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 58,
          "context": "#define ADC_EMUX_EM1_M      0x000000F0  // SS1 Trigger Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 61,
          "context": "#define ADC_AIN0   0   // Канал АЦП для температур микроконтроллера"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 62,
          "context": "#define ADC_AIN1   1   // Базовый канал для температур моторов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 63,
          "context": "#define ADC_AIN4   4   // Канал АЦП для температур батареи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 64,
          "context": "#define ADC_AIN5   5   // Канал АЦП для температур платы"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 65,
          "context": "#define ADC_AIN6   6   // Канал АЦП для температур окружающей среды"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 67,
          "context": "#define ADC_ISC_IN1 0x02  // Флаг прерывания для канала 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 71,
          "context": "static struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 72,
          "context": "bool initialized;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 74,
          "context": "uint32_t errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 75,
          "context": "uint32_t startTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 76,
          "context": "uint32_t watchdogTimeout;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 78,
          "context": "uint32_t logCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 81,
          "context": "uint32_t perfStartTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 82,
          "context": "uint32_t perfMaxTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 83,
          "context": "uint32_t perfMinTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 84,
          "context": "uint32_t perfTotalTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 85,
          "context": "uint32_t perfCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 89,
          "context": "} diagState = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 93,
          "context": "#define DEBUG_BUFFER_SIZE 128"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 94,
          "context": "static char debugBuffer[DEBUG_BUFFER_SIZE];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 97,
          "context": "static volatile uint32_t systemMillis = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 100,
          "context": "void SysTick_Init(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 101,
          "context": "void InitPowerADC(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 102,
          "context": "void InitTempADC(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 103,
          "context": "void SendDebugMessage(const char* format, ...);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 104,
          "context": "const char* GetLogLevelString(LogLevel level);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 105,
          "context": "const char* GetEventString(DiagnosticEvent event);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 106,
          "context": "void SavePeripheralState(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 107,
          "context": "void RestorePeripheralState(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 108,
          "context": "void ConfigureWakeupSources(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 109,
          "context": "void ConfigurePowerMode(PowerMode mode);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 110,
          "context": "TestStatus TestPowerSystem(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 111,
          "context": "bool TestSupplyVoltages(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 112,
          "context": "TestStatus TestSensors(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 113,
          "context": "TestStatus TestMotors(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 114,
          "context": "TestStatus TestCommunication(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 115,
          "context": "TestStatus TestSafetySystems(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 118,
          "context": "void SysTick_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 136,
          "context": "static uint32_t GetCurrentTime(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 137,
          "context": "return systemMillis;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 141,
          "context": "static void DelayMs(uint32_t ms) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 142,
          "context": "uint32_t start = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 143,
          "context": "while ((GetCurrentTime() - start) < ms) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 149,
          "context": "bool Diagnostics_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 150,
          "context": "if (diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 154,
          "context": "memset(&diagState, 0, sizeof(diagState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 157,
          "context": "SysTick_Init();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 158,
          "context": "InitPowerADC();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 159,
          "context": "InitTempADC();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 162,
          "context": "diagState.systemState = SYSTEM_STATE_OK;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 163,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 164,
          "context": "diagState.startTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 165,
          "context": "diagState.logCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 166,
          "context": "diagState.watchdogTimeout = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 169,
          "context": "memset(&diagState.powerState, 0, sizeof(PowerState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 170,
          "context": "memset(&diagState.thermalState, 0, sizeof(ThermalState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 173,
          "context": "diagState.perfStartTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 174,
          "context": "diagState.perfMaxTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 175,
          "context": "diagState.perfMinTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 176,
          "context": "diagState.perfTotalTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 177,
          "context": "diagState.perfCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 180,
          "context": "diagState.lowPowerMode = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 181,
          "context": "diagState.debugEnabled = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 182,
          "context": "diagState.watchdogEnabled = false;  // Инициализируем флаг watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 184,
          "context": "diagState.initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 187,
          "context": "if (NVIC_APINT_R & 0x10000) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 188,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_WATCHDOG_RESET, \"System reset by watchdog\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 191,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START, \"Diagnostics initialized\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 196,
          "context": "void Diagnostics_UpdatePowerState(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 197,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 205,
          "context": "while(!(ADC0_RIS_R & ADC_RIS_INR3)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 208,
          "context": "uint32_t result = ADC0_SSFIFO3_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 217,
          "context": "diagState.powerState.batteryVoltage = voltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 220,
          "context": "if (voltage >= 12.6f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 221,
          "context": "diagState.powerState.batteryLevel = 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 222,
          "context": "} else if (voltage <= 9.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 223,
          "context": "diagState.powerState.batteryLevel = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 225,
          "context": "diagState.powerState.batteryLevel = (uint8_t)((voltage - 9.0f) * 27.78f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 229,
          "context": "if (voltage <= 9.5f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 230,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_BATTERY_CRITICAL, \"Battery critically low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 231,
          "context": "} else if (voltage <= 10.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 232,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_BATTERY_LOW, \"Battery low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 237,
          "context": "* @brief Получает текущее состояние питания системы"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 239,
          "context": "* @details Функция копирует текущее состояние питания в переданную структуру."
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 246,
          "context": "* @warning Входной указатель не должен быть NULL"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 251,
          "context": "void Diagnostics_GetPowerState(PowerState* state) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 253,
          "context": "if (state == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 255,
          "context": "Diagnostics_Log(LOG_CRITICAL, DIAG_EVENT_SYSTEM_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 256,
          "context": "\"Attempt to get power state with NULL pointer\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 262,
          "context": "state->batteryVoltage = diagState.powerState.batteryVoltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 263,
          "context": "state->batteryLevel = diagState.powerState.batteryLevel;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 264,
          "context": "state->batteryTemp = diagState.powerState.batteryTemp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 265,
          "context": "state->batteryCurrent = diagState.powerState.batteryCurrent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 266,
          "context": "state->isCharging = diagState.powerState.isCharging;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 267,
          "context": "state->isLowBattery = diagState.powerState.isLowBattery;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 268,
          "context": "state->isCriticalBattery = diagState.powerState.isCriticalBattery;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 269,
          "context": "state->uptime = diagState.powerState.uptime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 272,
          "context": "if (state->batteryLevel < 20.0f) {  // Порог низкого заряда 20%"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 273,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_BATTERY_LOW,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 274,
          "context": "\"Battery level is critically low\", (uint32_t)state->batteryLevel);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 278,
          "context": "float Diagnostics_GetBatteryVoltage(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 279,
          "context": "return diagState.powerState.batteryVoltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 282,
          "context": "uint8_t Diagnostics_GetBatteryLevel(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 283,
          "context": "return diagState.powerState.batteryLevel;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 287,
          "context": "void InitPowerADC(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 293,
          "context": "while(!(SYSCTL_PRGPIO_R & SYSCTL_PRGPIO_R4)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 294,
          "context": "while(!(SYSCTL_PRADC_R & SYSCTL_PRADC_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 322,
          "context": "void ADC0SS1_Handler(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 324,
          "context": "uint32_t voltage_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 325,
          "context": "uint32_t current_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 326,
          "context": "uint32_t temp_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 334,
          "context": "diagState.powerState.batteryVoltage = voltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 335,
          "context": "diagState.powerState.batteryCurrent = current;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 336,
          "context": "diagState.powerState.batteryTemp = temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 341,
          "context": "diagState.powerState.batteryLevel = (battery_level > 100.0f) ? 100.0f :"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 345,
          "context": "diagState.powerState.uptime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 348,
          "context": "if (voltage <= BATTERY_CRITICAL_VOLTAGE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 349,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_LOW_BATTERY,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 350,
          "context": "\"Critical battery voltage\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 352,
          "context": "else if (voltage <= BATTERY_LOW_VOLTAGE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 353,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_LOW_BATTERY,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 354,
          "context": "\"Low battery voltage\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 357,
          "context": "if (temp >= BATTERY_MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 358,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 359,
          "context": "\"Critical battery temperature\", (uint32_t)(temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 367,
          "context": "void InitTempADC(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 373,
          "context": "while(!(SYSCTL_PRGPIO_R & (SYSCTL_PRGPIO_R3 | SYSCTL_PRGPIO_R4))) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 374,
          "context": "while(!(SYSCTL_PRADC_R & SYSCTL_PRADC_R1)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 415,
          "context": "void ADC1SS0_Handler(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 417,
          "context": "uint32_t mcu_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 418,
          "context": "uint32_t motors_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 419,
          "context": "uint32_t board_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 420,
          "context": "uint32_t ambient_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 430,
          "context": "float ambient_temp = ((ambient_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 433,
          "context": "diagState.thermalState.mcuTemp = mcu_temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 434,
          "context": "diagState.thermalState.motorTemps[0] = motors_temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 435,
          "context": "diagState.thermalState.boardTemp = board_temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 436,
          "context": "diagState.thermalState.ambientTemp = ambient_temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 439,
          "context": "if (mcu_temp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 440,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 441,
          "context": "\"Critical MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 443,
          "context": "else if (mcu_temp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 444,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 445,
          "context": "\"High MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 448,
          "context": "if (motors_temp >= TEMP_MOTORS_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 449,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 450,
          "context": "\"Critical motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 452,
          "context": "else if (motors_temp >= TEMP_MOTORS_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 453,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 454,
          "context": "\"High motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 457,
          "context": "if (board_temp >= TEMP_BOARD_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 458,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 459,
          "context": "\"Critical board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 461,
          "context": "else if (board_temp >= TEMP_BOARD_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 462,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 463,
          "context": "\"High board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 470,
          "context": "void Diagnostics_UpdateThermalState(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 472,
          "context": "diagState.thermalState.isCritical = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 473,
          "context": "diagState.thermalState.isWarning = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 476,
          "context": "if (diagState.thermalState.mcuTemp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 477,
          "context": "diagState.thermalState.isCritical = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 478,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 479,
          "context": "\"MCU temperature critical\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 480,
          "context": "(uint32_t)(diagState.thermalState.mcuTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 481,
          "context": "} else if (diagState.thermalState.mcuTemp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 482,
          "context": "diagState.thermalState.isWarning = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 483,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 484,
          "context": "\"MCU temperature warning\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 485,
          "context": "(uint32_t)(diagState.thermalState.mcuTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 489,
          "context": "for (int i = 0; i < 4; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 490,
          "context": "if (diagState.thermalState.motorTemps[i] >= TEMP_MOTORS_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 491,
          "context": "diagState.thermalState.isCritical = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 492,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 493,
          "context": "\"Motor temperature critical\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 494,
          "context": "(uint32_t)(diagState.thermalState.motorTemps[i] * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 495,
          "context": "} else if (diagState.thermalState.motorTemps[i] >= TEMP_MOTORS_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 496,
          "context": "diagState.thermalState.isWarning = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 497,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 498,
          "context": "\"Motor temperature warning\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 499,
          "context": "(uint32_t)(diagState.thermalState.motorTemps[i] * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 504,
          "context": "if (diagState.thermalState.boardTemp >= TEMP_BOARD_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 505,
          "context": "diagState.thermalState.isCritical = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 506,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 507,
          "context": "\"Board temperature critical\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 508,
          "context": "(uint32_t)(diagState.thermalState.boardTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 509,
          "context": "} else if (diagState.thermalState.boardTemp >= TEMP_BOARD_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 510,
          "context": "diagState.thermalState.isWarning = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 511,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 512,
          "context": "\"Board temperature warning\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 513,
          "context": "(uint32_t)(diagState.thermalState.boardTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 517,
          "context": "void UpdateMotorTemperatures(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 519,
          "context": "for (int i = 0; i < 4; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 520,
          "context": "float temp = GetMotorTemperature(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 521,
          "context": "if (!isnan(temp)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 522,
          "context": "diagState.thermalState.motorTemps[i] = temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 527,
          "context": "void Diagnostics_GetThermalState(ThermalState* state) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 528,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 529,
          "context": "*state = diagState.thermalState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 533,
          "context": "void Diagnostics_Log(LogLevel level, DiagnosticEvent event, const char* message, uint32_t data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 534,
          "context": "if (!diagState.initialized || diagState.logCount >= DIAG_MAX_LOG_ENTRIES) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 538,
          "context": "LogEntry* entry = &diagState.logBuffer[diagState.logCount++];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 539,
          "context": "entry->timestamp = diagState.startTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 544,
          "context": "if (level >= LOG_ERROR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 545,
          "context": "diagState.errorCount++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 548,
          "context": "if (level == LOG_FATAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 549,
          "context": "diagState.systemState = SYSTEM_STATE_CRITICAL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 551,
          "context": "diagState.systemState = SYSTEM_STATE_ERROR;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 556,
          "context": "void Diagnostics_ClearLog(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 557,
          "context": "diagState.logCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 558,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 559,
          "context": "diagState.systemState = SYSTEM_STATE_OK;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 562,
          "context": "uint32_t Diagnostics_GetLogCount(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 563,
          "context": "return diagState.logCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 566,
          "context": "bool Diagnostics_GetLogEntry(uint32_t index, LogEntry* entry) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 567,
          "context": "if (!entry || index >= diagState.logCount) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 571,
          "context": "*entry = diagState.logBuffer[index];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 575,
          "context": "bool Diagnostics_IsOverheated(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 576,
          "context": "return (diagState.thermalState.mcuTemp >= TEMP_MCU_WARNING ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 577,
          "context": "diagState.thermalState.motorTemps[0] >= TEMP_MOTORS_WARNING ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 578,
          "context": "diagState.thermalState.boardTemp >= TEMP_BOARD_WARNING);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 582,
          "context": "void SendDebugMessage(const char* format, ...) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 583,
          "context": "if (!diagState.debugEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 587,
          "context": "va_list args;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 591,
          "context": "vsnprintf(debugBuffer, DEBUG_BUFFER_SIZE, format, args);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 595,
          "context": "size_t len = strlen(debugBuffer);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 596,
          "context": "if (len < DEBUG_BUFFER_SIZE - 2) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 603,
          "context": "Communication_SendData((uint8_t*)debugBuffer, strlen(debugBuffer));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 607,
          "context": "const char* GetLogLevelString(LogLevel level) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 608,
          "context": "switch (level) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 620,
          "context": "const char* GetEventString(DiagnosticEvent event) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 621,
          "context": "switch (event) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 644,
          "context": "SystemState Diagnostics_GetSystemState(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 645,
          "context": "return diagState.systemState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 648,
          "context": "uint32_t Diagnostics_GetErrorCount(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 649,
          "context": "return diagState.errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 652,
          "context": "void Diagnostics_ResetErrorCount(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 653,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 654,
          "context": "if (diagState.systemState == SYSTEM_STATE_ERROR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 655,
          "context": "diagState.systemState = SYSTEM_STATE_OK;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 660,
          "context": "void Diagnostics_InitWatchdog(uint32_t timeout_ms) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 665,
          "context": "while(!(SYSCTL_PRWD_R & SYSCTL_PRWD_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 675,
          "context": "uint32_t reload_value = timeout_ms * 1000; // преобразуем мс в тики"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 691,
          "context": "diagState.watchdogEnabled = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 692,
          "context": "diagState.watchdogTimeout = timeout_ms;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 697,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 698,
          "context": "\"Watchdog initialized\", timeout_ms);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 702,
          "context": "void WDT0_Handler(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 706,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_WATCHDOG_RESET, \"Watchdog reset occurred\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 709,
          "context": "void Diagnostics_FeedWatchdog(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 710,
          "context": "if (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 716,
          "context": "bool Diagnostics_IsWatchdogReset(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 723,
          "context": "static PowerMode currentPowerMode = POWER_MODE_NORMAL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 726,
          "context": "static uint32_t savedPeripheralState = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 729,
          "context": "void ConfigurePowerMode(PowerMode mode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 730,
          "context": "switch (mode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 757,
          "context": "void SavePeripheralState(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 759,
          "context": "savedPeripheralState = SYSCTL_RCGC2_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 763,
          "context": "void RestorePeripheralState(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 765,
          "context": "SYSCTL_RCGC2_R = savedPeripheralState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 768,
          "context": "volatile uint32_t delay = SYSCTL_RCGC2_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 772,
          "context": "void ConfigureWakeupSources(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 787,
          "context": "void Diagnostics_EnterLowPowerMode(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 788,
          "context": "if (!diagState.lowPowerMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 789,
          "context": "diagState.lowPowerMode = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 792,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_STOP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 793,
          "context": "\"Entering low power mode\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 796,
          "context": "SavePeripheralState();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 799,
          "context": "ConfigureWakeupSources();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 802,
          "context": "ConfigurePowerMode(POWER_MODE_SLEEP);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 806,
          "context": "void Diagnostics_ExitLowPowerMode(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 807,
          "context": "if (diagState.lowPowerMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 809,
          "context": "RestorePeripheralState();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 812,
          "context": "ConfigurePowerMode(POWER_MODE_NORMAL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 815,
          "context": "diagState.lowPowerMode = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 818,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 819,
          "context": "\"Exiting low power mode\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 824,
          "context": "void Diagnostics_StartPerformanceCounter(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 825,
          "context": "diagState.perfStartTime = diagState.startTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 828,
          "context": "uint32_t Diagnostics_StopPerformanceCounter(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 829,
          "context": "uint32_t elapsed = diagState.startTime - diagState.perfStartTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 831,
          "context": "if (diagState.perfCount == 0 || elapsed > diagState.perfMaxTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 832,
          "context": "diagState.perfMaxTime = elapsed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 834,
          "context": "if (diagState.perfCount == 0 || elapsed < diagState.perfMinTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 835,
          "context": "diagState.perfMinTime = elapsed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 838,
          "context": "diagState.perfTotalTime += elapsed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 839,
          "context": "diagState.perfCount++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 844,
          "context": "void Diagnostics_ResetPerformanceStats(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 845,
          "context": "diagState.perfMaxTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 846,
          "context": "diagState.perfMinTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 847,
          "context": "diagState.perfTotalTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 848,
          "context": "diagState.perfCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 852,
          "context": "void Diagnostics_EnableDebugOutput(bool enable) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 853,
          "context": "if (diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 854,
          "context": "diagState.debugEnabled = enable;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 858,
          "context": "void Diagnostics_PrintSystemStatus(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 859,
          "context": "if (!diagState.debugEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 865,
          "context": "SendDebugMessage(\"Uptime: %lu ms\", diagState.powerState.uptime);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 867,
          "context": "diagState.systemState == SYSTEM_STATE_OK ? \"OK\" :"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 868,
          "context": "diagState.systemState == SYSTEM_STATE_WARNING ? \"WARNING\" :"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 869,
          "context": "diagState.systemState == SYSTEM_STATE_ERROR ? \"ERROR\" : \"CRITICAL\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 870,
          "context": "SendDebugMessage(\"Error Count: %lu\", diagState.errorCount);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 875,
          "context": "diagState.powerState.batteryVoltage,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 876,
          "context": "diagState.powerState.batteryLevel);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 877,
          "context": "SendDebugMessage(\"Current: %.2fA\", diagState.powerState.batteryCurrent);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 878,
          "context": "SendDebugMessage(\"Battery Temp: %.1f°C\", diagState.powerState.batteryTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 879,
          "context": "SendDebugMessage(\"Charging: %s\", diagState.powerState.isCharging ? \"Yes\" : \"No\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 883,
          "context": "SendDebugMessage(\"MCU Temp: %.1f°C\", diagState.thermalState.mcuTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 884,
          "context": "SendDebugMessage(\"Board Temp: %.1f°C\", diagState.thermalState.boardTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 886,
          "context": "diagState.thermalState.motorTemps[0],"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 887,
          "context": "diagState.thermalState.motorTemps[1],"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 888,
          "context": "diagState.thermalState.motorTemps[2],"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 889,
          "context": "diagState.thermalState.motorTemps[3]);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 890,
          "context": "SendDebugMessage(\"Ambient Temp: %.1f°C\", diagState.thermalState.ambientTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 894,
          "context": "SendDebugMessage(\"Max Time: %lu ms\", diagState.perfMaxTime);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 895,
          "context": "if (diagState.perfCount > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 896,
          "context": "SendDebugMessage(\"Avg Time: %.2f ms\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 897,
          "context": "(float)diagState.perfTotalTime / diagState.perfCount);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 899,
          "context": "SendDebugMessage(\"Total Samples: %lu\", diagState.perfCount);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 903,
          "context": "SendDebugMessage(\"Log Entries: %lu/%d\", diagState.logCount, DIAG_MAX_LOG_ENTRIES);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 905,
          "context": "if (diagState.logCount > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 907,
          "context": "Diagnostics_GetLastLogEntry(&lastEntry);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 909,
          "context": "GetLogLevelString(lastEntry.level),"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 916,
          "context": "void Diagnostics_RunSelfTest(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 918,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START, \"Running self-test\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 924,
          "context": "static SelfTestResult selfTestResult;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 927,
          "context": "#define POWER_ERR_VOLTAGE_LOW    0x0001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 928,
          "context": "#define POWER_ERR_VOLTAGE_HIGH   0x0002"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 929,
          "context": "#define POWER_ERR_CURRENT_HIGH   0x0003"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 930,
          "context": "#define POWER_ERR_TEMP_HIGH      0x0004"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 931,
          "context": "#define POWER_ERR_SUPPLY_FAIL    0x0005"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 934,
          "context": "#define POWER_TEST_VOLTAGE_MIN   10.5f   // В"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 935,
          "context": "#define POWER_TEST_VOLTAGE_MAX   12.6f   // В"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 936,
          "context": "#define POWER_TEST_CURRENT_MAX   15.0f   // А"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 937,
          "context": "#define POWER_TEST_TEMP_MAX      45.0f   // °C"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 938,
          "context": "#define POWER_TEST_SUPPLY_MIN    3.2f    // В (для 3.3В цепей)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 939,
          "context": "#define POWER_TEST_SUPPLY_MAX    3.4f    // В"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 942,
          "context": "TestStatus TestPowerSystem(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 950,
          "context": "float batteryVoltage = diagState.powerState.batteryVoltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 951,
          "context": "if (batteryVoltage < POWER_TEST_VOLTAGE_MIN) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 955,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 956,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 960,
          "context": "else if (batteryVoltage > POWER_TEST_VOLTAGE_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 963,
          "context": "status.message = \"Battery voltage too high\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 964,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 965,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 971,
          "context": "float batteryCurrent = diagState.powerState.batteryCurrent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 972,
          "context": "if (batteryCurrent > POWER_TEST_CURRENT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 975,
          "context": "status.message = \"Current too high\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 976,
          "context": "status.data = (uint32_t)(batteryCurrent * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 977,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 983,
          "context": "float batteryTemp = diagState.powerState.batteryTemp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 984,
          "context": "if (batteryTemp > POWER_TEST_TEMP_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 987,
          "context": "status.message = \"Battery temp high\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 988,
          "context": "status.data = (uint32_t)(batteryTemp * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 989,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 994,
          "context": "if (!TestSupplyVoltages()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 997,
          "context": "status.message = \"Supply voltage fail\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 999,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1008,
          "context": "bool TestSupplyVoltages(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1011,
          "context": "if (sensorSupply < POWER_TEST_SUPPLY_MIN || sensorSupply > POWER_TEST_SUPPLY_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1021,
          "context": "#define SENSOR_ERR_IMU_FAIL      0x0101"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1022,
          "context": "#define SENSOR_ERR_IMU_SELFTEST  0x0102"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1023,
          "context": "#define SENSOR_ERR_IMU_RANGE     0x0103"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1024,
          "context": "#define SENSOR_ERR_BARO_FAIL     0x0104"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1025,
          "context": "#define SENSOR_ERR_BARO_RANGE    0x0105"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1026,
          "context": "#define SENSOR_ERR_MAG_FAIL      0x0106"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1027,
          "context": "#define SENSOR_ERR_MAG_RANGE     0x0107"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1028,
          "context": "#define SENSOR_ERR_GPS_FAIL      0x0108"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1029,
          "context": "#define SENSOR_ERR_ADC_FAIL      0x0109"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1032,
          "context": "#define IMU_TEST_ACCEL_MAX      4.0f    // g"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1033,
          "context": "#define IMU_TEST_GYRO_MAX       50.0f   // deg/s"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1034,
          "context": "#define BARO_TEST_ALT_MIN       -100.0f // м"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1035,
          "context": "#define BARO_TEST_ALT_MAX       5000.0f // м"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1036,
          "context": "#define MAG_TEST_FIELD_MIN      0.2f    // Гаусс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1037,
          "context": "#define MAG_TEST_FIELD_MAX      0.8f    // Гаусс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1040,
          "context": "TestStatus TestSensors(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1046,
          "context": "IMUData imuData = {0};  // Добавляем объявление переменной"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1049,
          "context": "float accel_magnitude = sqrtf(powf(imuData.accelX, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1050,
          "context": "powf(imuData.accelY, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1051,
          "context": "powf(imuData.accelZ, 2));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1053,
          "context": "float gyro_magnitude = sqrtf(powf(imuData.gyroX, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1054,
          "context": "powf(imuData.gyroY, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1055,
          "context": "powf(imuData.gyroZ, 2));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1058,
          "context": "if (accel_magnitude > IMU_TEST_ACCEL_MAX || gyro_magnitude > IMU_TEST_GYRO_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1062,
          "context": "status.data = (uint32_t)(accel_magnitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1063,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1069,
          "context": "if (!TestBarometer()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1072,
          "context": "status.message = \"Barometer failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1074,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1079,
          "context": "float altitude = GetBaroAltitude();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1080,
          "context": "if (altitude < BARO_TEST_ALT_MIN || altitude > BARO_TEST_ALT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1084,
          "context": "status.data = (uint32_t)(altitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1085,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1091,
          "context": "if (!TestMagnetometer()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1094,
          "context": "status.message = \"Magnetometer failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1096,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1101,
          "context": "static IMUData magData = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1107,
          "context": "float mag_magnitude = sqrtf(powf(magData.magX, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1111,
          "context": "if (mag_magnitude < MAG_TEST_FIELD_MIN || mag_magnitude > MAG_TEST_FIELD_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1114,
          "context": "status.message = \"Mag field abnormal\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1115,
          "context": "status.data = (uint32_t)(mag_magnitude * 1000);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1116,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1121,
          "context": "if (HasGPS()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1122,
          "context": "if (!TestGPS()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1127,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1136,
          "context": "#define MOTOR_ERR_NOT_RESPONDING 0x0201"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1137,
          "context": "#define MOTOR_ERR_HIGH_CURRENT   0x0202"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1138,
          "context": "#define MOTOR_ERR_NO_ROTATION    0x0203"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1139,
          "context": "#define MOTOR_ERR_VIBRATION      0x0204"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1140,
          "context": "#define MOTOR_ERR_TEMP_HIGH      0x0205"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1141,
          "context": "#define MOTOR_ERR_ESC_FAIL       0x0206"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1144,
          "context": "#define MOTOR_TEST_SPEED         10.0f   // % от максимальной скорости"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1145,
          "context": "#define MOTOR_TEST_CURRENT_MAX   2.0f    // А на мотор"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1146,
          "context": "#define MOTOR_TEST_TEMP_MAX      60.0f   // °C"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1147,
          "context": "#define MOTOR_TEST_VIB_MAX       2.0f    // g"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1148,
          "context": "#define MOTOR_TEST_TIMEOUT       1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1152,
          "context": "bool responding;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1156,
          "context": "float vibration;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1160,
          "context": "TestStatus TestMotors(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1169,
          "context": "if (!TestESC()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1172,
          "context": "status.message = \"ESC initialization failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1174,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1180,
          "context": "for (int i = 0; i < 4; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1182,
          "context": "memset(&motorData[i], 0, sizeof(MotorTestData));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1185,
          "context": "if (!TestMotorResponse(i)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1188,
          "context": "status.message = \"Motor not responding\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1189,
          "context": "status.data = i;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1190,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1196,
          "context": "SetMotorSpeed(i, MOTOR_TEST_SPEED);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1202,
          "context": "motorData[i].current = GetMotorCurrent(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1203,
          "context": "motorData[i].rpm = GetMotorRPM(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1204,
          "context": "motorData[i].temperature = GetMotorTemperature(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1205,
          "context": "motorData[i].vibration = GetMotorVibration(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1208,
          "context": "if (motorData[i].current > MOTOR_TEST_CURRENT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1211,
          "context": "status.message = \"Motor high current\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1212,
          "context": "status.data = i;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1213,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1215,
          "context": "SetMotorSpeed(i, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1220,
          "context": "if (motorData[i].rpm < 100.0f) {  // Минимальные обороты для теста"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1223,
          "context": "status.message = \"Motor not rotating\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1224,
          "context": "status.data = i;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1225,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1227,
          "context": "SetMotorSpeed(i, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1232,
          "context": "if (motorData[i].temperature > MOTOR_TEST_TEMP_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1235,
          "context": "status.message = \"Motor temperature high\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1236,
          "context": "status.data = i;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1237,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1242,
          "context": "if (motorData[i].vibration > MOTOR_TEST_VIB_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1245,
          "context": "status.message = \"Motor high vibration\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1246,
          "context": "status.data = i;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1247,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1252,
          "context": "SetMotorSpeed(i, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1266,
          "context": "SelfTestResult Diagnostics_GetTestResult(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1273,
          "context": "#define COMM_ERR_RC_FAIL        0x0301"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1274,
          "context": "#define COMM_ERR_RC_QUALITY     0x0302"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1275,
          "context": "#define COMM_ERR_TELEMETRY_FAIL 0x0303"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1276,
          "context": "#define COMM_ERR_BACKUP_FAIL    0x0304"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1279,
          "context": "#define SAFETY_ERR_WATCHDOG     0x0401"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1280,
          "context": "#define SAFETY_ERR_EEPROM       0x0402"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1281,
          "context": "#define SAFETY_ERR_FLASH        0x0403"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1282,
          "context": "#define SAFETY_ERR_PARACHUTE    0x0404"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1283,
          "context": "#define SAFETY_ERR_KILLSWITCH   0x0405"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1286,
          "context": "#define RC_TEST_TIMEOUT         1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1287,
          "context": "#define RC_TEST_MIN_QUALITY     75      // %"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1288,
          "context": "#define TELEMETRY_TEST_TIMEOUT  1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1291,
          "context": "TestStatus TestCommunication(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1297,
          "context": "uint32_t startTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1300,
          "context": "startTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1305,
          "context": "while (GetCurrentTime() - startTime < RC_TEST_TIMEOUT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1306,
          "context": "if (IsRCTestResponseReceived()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1313,
          "context": "if (!rcResponded) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1316,
          "context": "status.message = \"RC not responding\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1318,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1323,
          "context": "uint8_t rcQuality = GetRCLinkQuality();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1324,
          "context": "if (rcQuality < RC_TEST_MIN_QUALITY) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1327,
          "context": "status.message = \"RC signal weak\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1328,
          "context": "status.data = rcQuality;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1329,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1334,
          "context": "startTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1339,
          "context": "while (GetCurrentTime() - startTime < TELEMETRY_TEST_TIMEOUT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1340,
          "context": "if (IsTelemetryAckReceived()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1347,
          "context": "if (!telemetryResponded) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1350,
          "context": "status.message = \"Telemetry failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1352,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1357,
          "context": "if (HasBackupComm() && !TestBackupComm()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1360,
          "context": "status.message = \"Backup comm failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1362,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1370,
          "context": "TestStatus TestSafetySystems(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1378,
          "context": "if (!TestWatchdogReset()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1381,
          "context": "status.message = \"Watchdog failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1383,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1389,
          "context": "if (!TestEEPROM()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1392,
          "context": "status.message = \"EEPROM failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1394,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1400,
          "context": "if (!TestFlashMemory()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1403,
          "context": "status.message = \"Flash failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1405,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1411,
          "context": "if (HasParachute()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1412,
          "context": "if (!TestParachuteSystem()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1415,
          "context": "status.message = \"Parachute failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1417,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1424,
          "context": "if (!TestKillSwitch()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1427,
          "context": "status.message = \"Kill switch failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1429,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1440,
          "context": "ADCResult Diagnostics_GetADCValue(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1444,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1453,
          "context": "uint32_t timeout = 10000;  // Примерно 10000 циклов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1454,
          "context": "while((ADC0_RIS_R & 0x08) == 0 && timeout > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1455,
          "context": "timeout--;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1459,
          "context": "if (timeout == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1475,
          "context": "float Diagnostics_ConvertADCToTemp(ADCResult adcResult) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1477,
          "context": "if (adcResult.error != ADC_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1478,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1479,
          "context": "\"ADC conversion error before temperature conversion\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1485,
          "context": "if (adcResult.value == 0 || adcResult.value >= ADC_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1486,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1498,
          "context": "switch (TEMP_SENSOR_TYPE_LINEAR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1506,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1508,
          "context": "(uint32_t)TEMP_SENSOR_TYPE_LINEAR);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1513,
          "context": "if (isnan(temperature)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1514,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1515,
          "context": "\"Invalid cold junction temperature\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1516,
          "context": "(uint32_t)temperature);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1524,
          "context": "ADCError Diagnostics_StartADCConversion(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1525,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1536,
          "context": "ADCConversionStatus Diagnostics_IsADCConversionComplete(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1537,
          "context": "ADCConversionStatus status = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1542,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1550,
          "context": "static uint32_t conversionAttempts = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1551,
          "context": "const uint32_t MAX_CONVERSION_ATTEMPTS = 1000;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1553,
          "context": "if (!status.complete) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1554,
          "context": "conversionAttempts++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1555,
          "context": "if (conversionAttempts >= MAX_CONVERSION_ATTEMPTS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1557,
          "context": "conversionAttempts = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1560,
          "context": "conversionAttempts = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1569,
          "context": "SystemTickResult Diagnostics_GetSystemTicks(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1570,
          "context": "SystemTickResult result = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1571,
          "context": ".ticks = NVIC_ST_CURRENT_R,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1576,
          "context": "if (result.ticks == 0 || result.ticks > NVIC_ST_RELOAD_R) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1578,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SYSTEM_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1579,
          "context": "\"Invalid system tick value\", result.ticks);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1586,
          "context": "SystemTickError Diagnostics_DelayTicks(uint32_t ticks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1587,
          "context": "SystemTickResult startTicks = Diagnostics_GetSystemTicks();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1589,
          "context": "if (startTicks.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1593,
          "context": "uint32_t startValue = startTicks.ticks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1594,
          "context": "uint32_t elapsedTicks = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1596,
          "context": "while (elapsedTicks < ticks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1597,
          "context": "SystemTickResult currentTicks = Diagnostics_GetSystemTicks();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1599,
          "context": "if (currentTicks.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1604,
          "context": "if (currentTicks.ticks <= startValue) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1605,
          "context": "elapsedTicks = startValue - currentTicks.ticks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1607,
          "context": "elapsedTicks = (NVIC_ST_RELOAD_R - currentTicks.ticks) + startValue;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1617,
          "context": "ElapsedTicksResult Diagnostics_GetElapsedTicks(uint32_t startTicks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1618,
          "context": "ElapsedTicksResult result = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1619,
          "context": ".elapsedTicks = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1623,
          "context": "SystemTickResult currentTicksResult = Diagnostics_GetSystemTicks();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1625,
          "context": "if (currentTicksResult.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1630,
          "context": "uint32_t currentTicks = currentTicksResult.ticks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1632,
          "context": "if (currentTicks <= startTicks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1633,
          "context": "result.elapsedTicks = startTicks - currentTicks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1636,
          "context": "result.elapsedTicks = (NVIC_ST_RELOAD_R - currentTicks) + startTicks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1643,
          "context": "static IMUData magData = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1649,
          "context": "void Diagnostics_InitSelfTest(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1651,
          "context": "memset(&selfTestResult, 0, sizeof(SelfTestResult));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1653,
          "context": "selfTestResult.totalWarnings = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1654,
          "context": "selfTestResult.isTestComplete = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1655,
          "context": "strncpy(selfTestResult.message, \"Test not started\", sizeof(selfTestResult.message) - 1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1658,
          "context": "selfTestResult.systemStatus.powerSystemOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1659,
          "context": "selfTestResult.systemStatus.sensorsOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1660,
          "context": "selfTestResult.systemStatus.motorsOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1661,
          "context": "selfTestResult.systemStatus.communicationOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1662,
          "context": "selfTestResult.systemStatus.safetySystemOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1673,
          "context": "bool Diagnostics_PerformQuickTest(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1674,
          "context": "Diagnostics_InitSelfTest();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1678,
          "context": "if (selfTestResult.powerTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1680,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1683,
          "context": "else if (selfTestResult.powerTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1684,
          "context": "selfTestResult.totalWarnings++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1686,
          "context": "selfTestResult.systemStatus.powerSystemOperational = (selfTestResult.powerTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1690,
          "context": "if (selfTestResult.sensorTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1692,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1695,
          "context": "else if (selfTestResult.sensorTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1696,
          "context": "selfTestResult.totalWarnings++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1698,
          "context": "selfTestResult.systemStatus.sensorsOperational = (selfTestResult.sensorTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1702,
          "context": "if (selfTestResult.motorTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1704,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1707,
          "context": "else if (selfTestResult.motorTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1708,
          "context": "selfTestResult.totalWarnings++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1710,
          "context": "selfTestResult.systemStatus.motorsOperational = (selfTestResult.motorTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1713,
          "context": "selfTestResult.commTest = TestCommunication();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1714,
          "context": "if (selfTestResult.commTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1716,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1719,
          "context": "else if (selfTestResult.commTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1720,
          "context": "selfTestResult.totalWarnings++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1722,
          "context": "selfTestResult.systemStatus.communicationOperational = (selfTestResult.commTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1726,
          "context": "if (selfTestResult.safetyTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1728,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1731,
          "context": "else if (selfTestResult.safetyTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1732,
          "context": "selfTestResult.totalWarnings++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1734,
          "context": "selfTestResult.systemStatus.safetySystemOperational = (selfTestResult.safetyTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1737,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1738,
          "context": "if (selfTestResult.totalErrors > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1739,
          "context": "strncpy(selfTestResult.message, \"Self-test failed\", sizeof(selfTestResult.message) - 1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1740,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SYSTEM_ERROR, selfTestResult.message, selfTestResult.totalErrors);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1744,
          "context": "strncpy(selfTestResult.message, \"Self-test passed\", sizeof(selfTestResult.message) - 1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1745,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SELF_TEST, selfTestResult.message, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1750,
          "context": "#define ADC_CHANNEL_MCU_TEMP         ADC_AIN0   // Канал АЦП для температур"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1751,
          "context": "#define ADC_CHANNEL_MOTOR_TEMP_BASE  ADC_AIN1   // Базовый канал для температур моторов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1752,
          "context": "#define ADC_CHANNEL_BATTERY_TEMP     ADC_AIN4   // Канал АЦП для температур батареи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1753,
          "context": "#define ADC_CHANNEL_BOARD_TEMP       ADC_AIN5   // Канал АЦП для температур платы"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1754,
          "context": "#define ADC_CHANNEL_ENV_TEMP         ADC_AIN6   // Канал АЦП для температур окружающей среды"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1757,
          "context": "uint32_t GetMCUTemperature(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1766,
          "context": "float GetMotorTemperature(int motorIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1767,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1772,
          "context": "uint32_t channel = ADC_CHANNEL_MOTOR_TEMP_BASE + motorIndex;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1775,
          "context": "ADCResult result = Diagnostics_GetADCValue();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1776,
          "context": "return Diagnostics_ConvertADCToTemp(result);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1779,
          "context": "uint32_t GetBatteryTemperature(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1788,
          "context": "uint32_t GetBoardTemperature(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1797,
          "context": "uint32_t GetEnvironmentTemperature(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1807,
          "context": "static const struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1809,
          "context": "} ThermocoupleCoefficients[THERMOCOUPLE_TYPE_COUNT] = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1821,
          "context": "float GetColdJunctionTemperature(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1822,
          "context": "ADCResult adcResult = Diagnostics_GetADCValue();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1824,
          "context": "if (adcResult.error != ADC_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1825,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1826,
          "context": "\"ADC conversion error before cold junction temperature\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1837,
          "context": "switch (TEMP_SENSOR_TYPE_LINEAR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1845,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1847,
          "context": "(uint32_t)TEMP_SENSOR_TYPE_LINEAR);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1852,
          "context": "if (isnan(temperature)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1853,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1854,
          "context": "\"Invalid cold junction temperature\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1855,
          "context": "(uint32_t)temperature);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1863,
          "context": "float ConvertThermocoupleVoltageToTemp(float thermocoupleVoltage, ThermocoupleType type, float coldJunctionTemp) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1865,
          "context": "if (type < 0 || type >= THERMOCOUPLE_TYPE_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1866,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1867,
          "context": "\"Invalid thermocouple type\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1868,
          "context": "(uint32_t)type);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1875,
          "context": "} *coeffs = &ThermocoupleCoefficients[type];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1885,
          "context": "temperature += coldJunctionTemp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1891,
          "context": "if (temperature < MIN_TEMP || temperature > MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1892,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1894,
          "context": "(uint32_t)(temperature * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1902,
          "context": "float GetMotorCurrent(int motorIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1904,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1909,
          "context": "uint32_t adcChannel = ADC_CHANNEL_MOTOR_CURRENT_BASE + motorIndex;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1915,
          "context": "while(!(ADC1_RIS_R & (1 << adcChannel))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1920,
          "context": "uint32_t result = ADC1_SSFIFO0_R & 0xFFF;  // 12-bit ADC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1934,
          "context": "static bool backupCommAvailable = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1935,
          "context": "static uint32_t lastBackupCommTest = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1938,
          "context": "bool HasBackupComm(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1939,
          "context": "return backupCommAvailable;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1943,
          "context": "bool TestBackupComm(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1944,
          "context": "uint32_t currentTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1947,
          "context": "if (currentTime - lastBackupCommTest < 1000) {  // Тестируем не чаще раза в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1951,
          "context": "lastBackupCommTest = currentTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1954,
          "context": "uint8_t testPacket[] = {0xAA, 0x55, 0x00, 0xFF};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1955,
          "context": "bool success = SendBackupCommPacket(testPacket, sizeof(testPacket));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1956,
          "context": "if (!success) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1961,
          "context": "uint32_t startTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1962,
          "context": "uint8_t response[4];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1964,
          "context": "while (GetCurrentTime() - startTime < 100) {  // Таймаут 100 мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1965,
          "context": "if (ReceiveBackupCommPacket(response, sizeof(response))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1967,
          "context": "if (response[0] == 0x55 && response[1] == 0xAA &&"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1978,
          "context": "bool SendBackupCommPacket(const uint8_t* data, uint8_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1983,
          "context": "bool ReceiveBackupCommPacket(uint8_t* buffer, uint8_t maxLength) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1989,
          "context": "bool TestWatchdogReset(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1991,
          "context": "if (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1996,
          "context": "uint32_t originalLoad = WATCHDOG0_LOAD_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1997,
          "context": "uint32_t originalCtl = WATCHDOG0_CTL_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2000,
          "context": "uint32_t testTimeout = SystemCoreClock / 10;  // 100мс при текущей частоте"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2009,
          "context": "WATCHDOG0_LOAD_R = testTimeout;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2022,
          "context": "diagState.watchdogEnabled = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2023,
          "context": "diagState.watchdogTimeout = 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2028,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2029,
          "context": "\"Watchdog initialized\", 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2032,
          "context": "while (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2037,
          "context": "WATCHDOG0_LOAD_R = originalLoad;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2038,
          "context": "WATCHDOG0_CTL_R = originalCtl;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2044,
          "context": "bool TestBarometer(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2045,
          "context": "bool TestESC(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2046,
          "context": "bool TestGPS(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2047,
          "context": "bool TestEEPROM(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2048,
          "context": "bool TestFlashMemory(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2049,
          "context": "bool TestKillSwitch(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2050,
          "context": "bool TestMagnetometer(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2051,
          "context": "bool TestMotorResponse(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2052,
          "context": "bool TestParachuteSystem(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2053,
          "context": "bool HasGPS(void) { return false; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2054,
          "context": "bool HasParachute(void) { return false; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2055,
          "context": "float GetBaroAltitude(void) { return 0.0f; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2056,
          "context": "uint16_t GetMotorRPM(void) { return 0; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2057,
          "context": "float GetMotorVibration(void) { return 0.0f; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2058,
          "context": "uint8_t GetRCLinkQuality(void) { return 100; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2059,
          "context": "float GetSensorSupplyVoltage(void) { return 3.3f; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2060,
          "context": "bool IsRCTestResponseReceived(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2061,
          "context": "bool IsTelemetryAckReceived(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2062,
          "context": "void SendRCTestPacket(void) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2063,
          "context": "void SendTelemetryTestPacket(void) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2064,
          "context": "void SetMotorSpeed(uint8_t motor, uint16_t speed) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2065,
          "context": "const char* Diagnostics_GetLastLogEntry(void) { return \"No log\"; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2067,
          "context": "uint16_t GetMotorRPM(int motorIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2071,
          "context": "float GetMotorVibration(int motorIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2076,
          "context": "static const struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2078,
          "context": "} ThermocoupleCoefficients[THERMOCOUPLE_TYPE_COUNT] = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 1,
          "context": "#include \"../include/gpio.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 3,
          "context": "void GPIOPinTypeGPIOOutput(uint32_t port, uint8_t pins) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 5,
          "context": "*((volatile uint32_t *)(port + 0x400)) = pins;  // GPIO_O_DIR"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 7,
          "context": "*((volatile uint32_t *)(port + 0x51C)) = pins;  // GPIO_O_DEN"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 10,
          "context": "void SysCtlPeripheralEnable(uint32_t peripheral) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 12,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 15,
          "context": "bool SysCtlPeripheralReady(uint32_t peripheral) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 17,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 20,
          "context": "void SysCtlClockSet(uint32_t config) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 1,
          "context": "#include <math.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 2,
          "context": "#include <string.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 3,
          "context": "#include \"../include/navigation.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 6,
          "context": "#define DEG_TO_RAD(x) ((x) * 0.017453292519943295)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 7,
          "context": "#define RAD_TO_DEG(x) ((x) * 57.295779513082323)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 10,
          "context": "#define EARTH_RADIUS 6371000.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 13,
          "context": "static NavigationState nav_state = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 14,
          "context": "static Waypoint waypoints[MAX_WAYPOINTS];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 15,
          "context": "static uint8_t waypoint_count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 16,
          "context": "static uint8_t current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 17,
          "context": "static GPSPosition home_position = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 18,
          "context": "static bool home_position_set = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 21,
          "context": "static void UpdateNavigationState(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 22,
          "context": "static float ClampHeading(float heading);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 24,
          "context": "void Navigation_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 25,
          "context": "memset(&nav_state, 0, sizeof(NavigationState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 26,
          "context": "memset(waypoints, 0, sizeof(waypoints));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 27,
          "context": "waypoint_count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 28,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 29,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 32,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 33,
          "context": "nav_state.heading = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 35,
          "context": "nav_state.vertical_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 38,
          "context": "void Navigation_Reset(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 39,
          "context": "Navigation_Stop();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 40,
          "context": "Navigation_ClearWaypoints();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 41,
          "context": "Navigation_Init();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 44,
          "context": "bool Navigation_AddWaypoint(const Waypoint* waypoint) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 45,
          "context": "if (waypoint == NULL || waypoint_count >= MAX_WAYPOINTS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 49,
          "context": "if (!Navigation_IsValidPosition(&waypoint->position)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 53,
          "context": "waypoints[waypoint_count] = *waypoint;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 54,
          "context": "waypoints[waypoint_count].reached = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 55,
          "context": "waypoint_count++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 60,
          "context": "bool Navigation_RemoveWaypoint(uint8_t index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 61,
          "context": "if (index >= waypoint_count) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 66,
          "context": "for (uint8_t i = index; i < waypoint_count - 1; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 67,
          "context": "waypoints[i] = waypoints[i + 1];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 70,
          "context": "waypoint_count--;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 73,
          "context": "if (current_waypoint_index > index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 74,
          "context": "current_waypoint_index--;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 80,
          "context": "void Navigation_ClearWaypoints(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 81,
          "context": "memset(waypoints, 0, sizeof(waypoints));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 82,
          "context": "waypoint_count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 83,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 86,
          "context": "uint8_t Navigation_GetWaypointCount(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 87,
          "context": "return waypoint_count;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 90,
          "context": "bool Navigation_GetWaypoint(uint8_t index, Waypoint* waypoint) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 91,
          "context": "if (index >= waypoint_count || waypoint == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 95,
          "context": "*waypoint = waypoints[index];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 99,
          "context": "void Navigation_Start(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 100,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 101,
          "context": "nav_state.navigation_active = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 102,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 106,
          "context": "void Navigation_Pause(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 107,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 110,
          "context": "void Navigation_Resume(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 111,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 112,
          "context": "nav_state.navigation_active = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 116,
          "context": "void Navigation_Stop(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 117,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 118,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 121,
          "context": "bool Navigation_IsActive(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 122,
          "context": "return nav_state.navigation_active;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 125,
          "context": "void Navigation_GetCurrentState(NavigationState* state) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 126,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 131,
          "context": "void Navigation_GetCurrentPosition(GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 132,
          "context": "if (position != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 133,
          "context": "*position = nav_state.current_position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 137,
          "context": "float Navigation_GetCurrentAltitude(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 138,
          "context": "return nav_state.current_position.altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 141,
          "context": "float Navigation_GetCurrentHeading(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 142,
          "context": "return nav_state.heading;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 145,
          "context": "float Navigation_GetDistanceToTarget(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 146,
          "context": "return nav_state.distance_to_target;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 149,
          "context": "float Navigation_GetBearingToTarget(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 150,
          "context": "return nav_state.bearing_to_target;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 154,
          "context": "void Navigation_EmulateGPSPosition(float latitude, float longitude, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 155,
          "context": "nav_state.current_position.latitude = latitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 156,
          "context": "nav_state.current_position.longitude = longitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 157,
          "context": "nav_state.current_position.altitude = altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 158,
          "context": "nav_state.current_position.valid = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 160,
          "context": "UpdateNavigationState();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 163,
          "context": "void Navigation_EmulateMovement(float speed, float heading) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 168,
          "context": "float heading_rad = DEG_TO_RAD(heading);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 169,
          "context": "nav_state.current_position.latitude += speed_deg * cosf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 170,
          "context": "nav_state.current_position.longitude += speed_deg * sinf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 173,
          "context": "nav_state.heading = heading;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 175,
          "context": "UpdateNavigationState();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 178,
          "context": "void Navigation_EmulateAltitudeChange(float vertical_speed) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 179,
          "context": "nav_state.current_position.altitude += vertical_speed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 182,
          "context": "if (nav_state.current_position.altitude < NAV_MIN_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 183,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 184,
          "context": "vertical_speed = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 185,
          "context": "} else if (nav_state.current_position.altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 186,
          "context": "nav_state.current_position.altitude = NAV_MAX_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 187,
          "context": "vertical_speed = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 190,
          "context": "nav_state.vertical_speed = vertical_speed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 193,
          "context": "float Navigation_CalculateDistance(const GPSPosition* pos1, const GPSPosition* pos2) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 194,
          "context": "if (!pos1->valid || !pos2->valid) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 199,
          "context": "float lat1 = DEG_TO_RAD(pos1->latitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 200,
          "context": "float lat2 = DEG_TO_RAD(pos2->latitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 201,
          "context": "float dlon = DEG_TO_RAD(pos2->longitude - pos1->longitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 204,
          "context": "float a = sinf(dlat/2) * sinf(dlat/2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 205,
          "context": "cosf(lat1) * cosf(lat2) * sinf(dlon/2) * sinf(dlon/2);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 211,
          "context": "float Navigation_CalculateBearing(const GPSPosition* pos1, const GPSPosition* pos2) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 212,
          "context": "if (!pos1->valid || !pos2->valid) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 216,
          "context": "float lat1 = DEG_TO_RAD(pos1->latitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 217,
          "context": "float lat2 = DEG_TO_RAD(pos2->latitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 218,
          "context": "float dlon = DEG_TO_RAD(pos2->longitude - pos1->longitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 220,
          "context": "float y = sinf(dlon) * cosf(lat2);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 221,
          "context": "float x = cosf(lat1) * sinf(lat2) - sinf(lat1) * cosf(lat2) * cosf(dlon);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 222,
          "context": "float bearing = RAD_TO_DEG(atan2f(y, x));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 224,
          "context": "return ClampHeading(bearing);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 227,
          "context": "bool Navigation_IsValidPosition(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 228,
          "context": "if (position == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 233,
          "context": "if (position->latitude < -90.0f || position->latitude > 90.0f ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 234,
          "context": "position->longitude < -180.0f || position->longitude > 180.0f ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 235,
          "context": "position->altitude < NAV_MIN_ALTITUDE || position->altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 242,
          "context": "bool Navigation_IsInSafeZone(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 243,
          "context": "if (!position->valid || !home_position_set) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 248,
          "context": "float distance = Navigation_CalculateDistance(&home_position, position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 249,
          "context": "return distance <= 1000.0f; // Безопасная зона - 1 км от дома"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 252,
          "context": "void Navigation_UpdateHomePosition(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 253,
          "context": "if (position != NULL && Navigation_IsValidPosition(position)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 254,
          "context": "home_position = *position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 255,
          "context": "home_position_set = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 259,
          "context": "float Navigation_GetDistanceToHome(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 260,
          "context": "if (!home_position_set) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 263,
          "context": "return Navigation_CalculateDistance(&nav_state.current_position, &home_position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 267,
          "context": "void Navigation_Update(void) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 270,
          "context": "static void UpdateNavigationState(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 271,
          "context": "if (!nav_state.navigation_active || waypoint_count == 0 ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 272,
          "context": "current_waypoint_index >= waypoint_count) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 277,
          "context": "const Waypoint* target = &waypoints[current_waypoint_index];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 278,
          "context": "nav_state.distance_to_target = Navigation_CalculateDistance("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 279,
          "context": "&nav_state.current_position, &target->position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 280,
          "context": "nav_state.bearing_to_target = Navigation_CalculateBearing("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 281,
          "context": "&nav_state.current_position, &target->position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 284,
          "context": "if (nav_state.distance_to_target <= NAV_WAYPOINT_RADIUS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 285,
          "context": "waypoints[current_waypoint_index].reached = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 286,
          "context": "if (current_waypoint_index < waypoint_count - 1) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 287,
          "context": "current_waypoint_index++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 289,
          "context": "nav_state.navigation_active = false; // Достигли последней точки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 294,
          "context": "static float ClampHeading(float heading) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 295,
          "context": "while (heading < 0.0f) heading += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 296,
          "context": "while (heading >= 360.0f) heading -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 297,
          "context": "return heading;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 1,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 2,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 3,
          "context": "#include <stdlib.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 4,
          "context": "#include <math.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 5,
          "context": "#include \"TM4C123GH6PM.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 6,
          "context": "#include \"../include/sensors.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 7,
          "context": "#include \"../include/diagnostics.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 10,
          "context": "static struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 11,
          "context": "bool mpu6050_initialized;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 12,
          "context": "bool bmp280_initialized;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 13,
          "context": "float current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 14,
          "context": "float rotation_angle;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 16,
          "context": ".mpu6050_initialized = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 17,
          "context": ".bmp280_initialized = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 18,
          "context": ".current_altitude = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 19,
          "context": ".rotation_angle = 0.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 23,
          "context": "static MPU6050_Data mpu6050_data = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 24,
          "context": "static BMP280_Data bmp280_data = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 27,
          "context": "static float vertical_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 29,
          "context": "void MPU6050_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 39,
          "context": "sensor_state.mpu6050_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 42,
          "context": "void BMP280_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 45,
          "context": "bmp280_data.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 48,
          "context": "sensor_state.bmp280_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 51,
          "context": "void MPU6050_Read(MPU6050_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 52,
          "context": "if (!sensor_state.mpu6050_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 60,
          "context": "void BMP280_Read(BMP280_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 61,
          "context": "if (!sensor_state.bmp280_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 69,
          "context": "void MPU6050_Calibrate(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 79,
          "context": "void BMP280_Calibrate(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 82,
          "context": "bmp280_data.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 86,
          "context": "void Sensors_EmulateStableHover(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 96,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 97,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 98,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f); // Примерное изменение давления с высотой"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 101,
          "context": "void Sensors_EmulateAscent(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 103,
          "context": "vertical_speed = 2.0f; // м/с"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 104,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f; // Предполагаем вызов каждые 100мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 107,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 108,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 111,
          "context": "void Sensors_EmulateDescent(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 113,
          "context": "vertical_speed = -1.5f; // м/с"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 114,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 115,
          "context": "if (sensor_state.current_altitude < 0.0f) sensor_state.current_altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 118,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 119,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 122,
          "context": "void Sensors_EmulateRotation(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 124,
          "context": "sensor_state.rotation_angle += 45.0f * 0.1f; // 45 градусов в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 125,
          "context": "if (sensor_state.rotation_angle >= 360.0f) sensor_state.rotation_angle -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 128,
          "context": "mpu6050_data.accel_x = (float)sin(sensor_state.rotation_angle * 3.14159f / 180.0f) * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 129,
          "context": "mpu6050_data.accel_y = (float)cos(sensor_state.rotation_angle * 3.14159f / 180.0f) * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 132,
          "context": "void Sensors_EmulateForwardMovement(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 138,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 139,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 140,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 143,
          "context": "void Sensors_GetIMUData(MPU6050_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 144,
          "context": "if (data == NULL) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 149,
          "context": "void Sensors_GetOrientation(Orientation* orientation) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 150,
          "context": "if (orientation == NULL) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 152,
          "context": "MPU6050_Data imu;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 153,
          "context": "Sensors_GetIMUData(&imu);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 157,
          "context": "static float filteredRoll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 158,
          "context": "static float filteredPitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 159,
          "context": "static float filteredYaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 162,
          "context": "float accelRoll = atan2f(imu.accel_y, imu.accel_z) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 163,
          "context": "float accelPitch = atan2f(-imu.accel_x, sqrtf(imu.accel_y * imu.accel_y + imu.accel_z * imu.accel_z)) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 167,
          "context": "filteredRoll = 0.96f * (filteredRoll + imu.gyro_x * dt) + 0.04f * accelRoll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 168,
          "context": "filteredPitch = 0.96f * (filteredPitch + imu.gyro_y * dt) + 0.04f * accelPitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 169,
          "context": "filteredYaw += imu.gyro_z * dt;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 172,
          "context": "while (filteredYaw >= 360.0f) filteredYaw -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 173,
          "context": "while (filteredYaw < 0.0f) filteredYaw += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 175,
          "context": "orientation->roll = filteredRoll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 176,
          "context": "orientation->pitch = filteredPitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 177,
          "context": "orientation->yaw = filteredYaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 181,
          "context": "void Sensors_GetAllData(SensorData* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 182,
          "context": "if(data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 183,
          "context": "data->imu.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 184,
          "context": "data->imu.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 185,
          "context": "data->imu.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 186,
          "context": "data->imu.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 187,
          "context": "data->imu.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 188,
          "context": "data->imu.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 190,
          "context": "data->baro.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 191,
          "context": "data->isCalibrated = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 195,
          "context": "void Sensors_GetBaroData(BMP280_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 196,
          "context": "if(data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 198,
          "context": "data->altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 203,
          "context": "void Sensors_Update(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 1,
          "context": "#include <math.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 2,
          "context": "#include <stddef.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 3,
          "context": "#include \"../include/sensors.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 4,
          "context": "#include \"../include/stabilization.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 5,
          "context": "#include \"../include/actuators.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 8,
          "context": "static float UpdatePID(PIDController* pid, float error);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 9,
          "context": "static float ClampValue(float value, float min, float max);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 10,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 13,
          "context": "#define DEG_TO_RAD(x) ((x) * 0.017453292519943295)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 14,
          "context": "#define RAD_TO_DEG(x) ((x) * 57.295779513082323)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 17,
          "context": "#define UPDATE_FREQUENCY 100"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 18,
          "context": "#define DT (1.0f / UPDATE_FREQUENCY)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 21,
          "context": "#define MAX_ROLL_ANGLE  45.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 22,
          "context": "#define MAX_PITCH_ANGLE 45.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 23,
          "context": "#define MAX_YAW_RATE    180.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 26,
          "context": "static struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 28,
          "context": "SetPoint targetSetPoint;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 29,
          "context": "Orientation currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 31,
          "context": "PIDController pitchPID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 33,
          "context": "PIDController altitudePID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 37,
          "context": "void Stabilization_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 42,
          "context": "stabState.targetSetPoint.roll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 43,
          "context": "stabState.targetSetPoint.pitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 44,
          "context": "stabState.targetSetPoint.yaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 45,
          "context": "stabState.targetSetPoint.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 48,
          "context": "stabState.currentOrientation.roll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 49,
          "context": "stabState.currentOrientation.pitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 50,
          "context": "stabState.currentOrientation.yaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 53,
          "context": "Stabilization_ConfigurePID("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 61,
          "context": "void Stabilization_ConfigurePID(float rollKp, float rollKi, float rollKd,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 62,
          "context": "float pitchKp, float pitchKi, float pitchKd,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 63,
          "context": "float yawKp, float yawKi, float yawKd,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 64,
          "context": "float altKp, float altKi, float altKd) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 67,
          "context": "stabState.rollPID.kI = rollKi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 69,
          "context": "stabState.rollPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 73,
          "context": "stabState.pitchPID.kP = pitchKp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 74,
          "context": "stabState.pitchPID.kI = pitchKi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 75,
          "context": "stabState.pitchPID.kD = pitchKd;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 76,
          "context": "stabState.pitchPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 77,
          "context": "stabState.pitchPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 81,
          "context": "stabState.yawPID.kI = yawKi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 83,
          "context": "stabState.yawPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 87,
          "context": "stabState.altitudePID.kP = altKp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 88,
          "context": "stabState.altitudePID.kI = altKi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 89,
          "context": "stabState.altitudePID.kD = altKd;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 90,
          "context": "stabState.altitudePID.outputMin = 0.0f;  // Минимальная тяга"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 91,
          "context": "stabState.altitudePID.outputMax = 1.0f;  // Максимальная тяга"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 94,
          "context": "Stabilization_ResetPID();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 97,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 99,
          "context": "stabState.targetSetPoint.roll = ClampValue(roll, -MAX_ROLL_ANGLE, MAX_ROLL_ANGLE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 100,
          "context": "stabState.targetSetPoint.pitch = ClampValue(pitch, -MAX_PITCH_ANGLE, MAX_PITCH_ANGLE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 101,
          "context": "stabState.targetSetPoint.yaw = yaw;  // Рыскание может быть любым (0-360)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 102,
          "context": "stabState.targetSetPoint.altitude = fmaxf(altitude, 0.0f);  // Высота не может быть отрицательной"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 105,
          "context": "void Stabilization_Update(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 106,
          "context": "if (!stabState.enabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 111,
          "context": "MPU6050_Data imuData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 113,
          "context": "Orientation currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 115,
          "context": "Sensors_GetIMUData(&imuData);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 117,
          "context": "Sensors_GetOrientation(&currentOrientation);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 120,
          "context": "stabState.currentOrientation.roll = currentOrientation.roll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 121,
          "context": "stabState.currentOrientation.pitch = currentOrientation.pitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 122,
          "context": "stabState.currentOrientation.yaw = currentOrientation.yaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 125,
          "context": "float rollError = stabState.targetSetPoint.roll - stabState.currentOrientation.roll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 126,
          "context": "float pitchError = stabState.targetSetPoint.pitch - stabState.currentOrientation.pitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 127,
          "context": "float yawError = stabState.targetSetPoint.yaw - stabState.currentOrientation.yaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 128,
          "context": "float altitudeError = stabState.targetSetPoint.altitude - altData.altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 131,
          "context": "while (yawError > 180.0f) yawError -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 132,
          "context": "while (yawError < -180.0f) yawError += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 136,
          "context": "float pitchOutput = UpdatePID(&stabState.pitchPID, pitchError);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 138,
          "context": "float altitudeOutput = UpdatePID(&stabState.altitudePID, altitudeError);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 141,
          "context": "UpdateMotorOutputs(rollOutput, pitchOutput, yawOutput, altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 144,
          "context": "void Stabilization_GetCurrentOrientation(Orientation* orientation) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 145,
          "context": "if (orientation != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 146,
          "context": "*orientation = stabState.currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 150,
          "context": "void Stabilization_GetSetPoint(SetPoint* setPoint) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 151,
          "context": "if (setPoint != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 152,
          "context": "*setPoint = stabState.targetSetPoint;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 156,
          "context": "void Stabilization_Enable(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 158,
          "context": "Stabilization_ResetPID();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 161,
          "context": "void Stabilization_Disable(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 163,
          "context": "Stabilization_ResetPID();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 169,
          "context": "bool Stabilization_IsEnabled(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 173,
          "context": "void Stabilization_ResetPID(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 175,
          "context": "stabState.rollPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 178,
          "context": "stabState.pitchPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 179,
          "context": "stabState.pitchPID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 181,
          "context": "stabState.yawPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 184,
          "context": "stabState.altitudePID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 185,
          "context": "stabState.altitudePID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 189,
          "context": "static float UpdatePID(PIDController* pid, float error) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 190,
          "context": "if (pid == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 195,
          "context": "float pTerm = pid->kP * error;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 198,
          "context": "pid->integral += error * DT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 199,
          "context": "float iTerm = pid->kI * pid->integral;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 202,
          "context": "float dTerm = pid->kD * (error - pid->prevError) / DT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 203,
          "context": "pid->prevError = error;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 206,
          "context": "float output = pTerm + iTerm + dTerm;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 209,
          "context": "return ClampValue(output, pid->outputMin, pid->outputMax);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 212,
          "context": "static float ClampValue(float value, float min, float max) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 213,
          "context": "if (value < min) return min;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 214,
          "context": "if (value > max) return max;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 218,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 220,
          "context": "float baseThrust = altitudeOutput;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 229,
          "context": "float m1 = baseThrust - rollOutput - pitchOutput + yawOutput;  // Передний левый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 230,
          "context": "float m2 = baseThrust + rollOutput - pitchOutput - yawOutput;  // Передний правый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 231,
          "context": "float m3 = baseThrust + rollOutput + pitchOutput + yawOutput;  // Задний правый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 232,
          "context": "float m4 = baseThrust - rollOutput + pitchOutput - yawOutput;  // Задний левый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 1,
          "context": "#ifndef ACTUATORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 2,
          "context": "#define ACTUATORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 4,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 5,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 8,
          "context": "#define MOTOR_COUNT 4"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 11,
          "context": "#define MOTOR_FRONT_LEFT  0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 12,
          "context": "#define MOTOR_FRONT_RIGHT 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 13,
          "context": "#define MOTOR_BACK_LEFT   2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 14,
          "context": "#define MOTOR_BACK_RIGHT  3"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 17,
          "context": "#define PWM_MIN_VALUE     0    // Минимальное значение PWM (мотор выключен)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 18,
          "context": "#define PWM_MAX_VALUE     1000 // Максимальное значение PWM (полная мощность)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 19,
          "context": "#define PWM_IDLE_VALUE    100  // Значение PWM на холостом ходу"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 23,
          "context": "uint16_t pwm_value;     // Текущее значение PWM (0-1000)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 24,
          "context": "bool is_running;        // Флаг работы мотора"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 26,
          "context": "uint32_t runtime;       // Время работы мотора в миллисекундах"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 33,
          "context": "uint16_t global_throttle;  // Общий уровень газа (0-1000)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 37,
          "context": "void Actuators_Init(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 38,
          "context": "void Actuators_DeInit(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 41,
          "context": "void Actuators_SetMotorPWM(uint8_t motor_index, uint16_t pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 42,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 43,
          "context": "void Actuators_SetAllMotors(float power_level);  // Устанавливает одинаковую мощность для всех моторов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 44,
          "context": "uint16_t Actuators_GetMotorPWM(uint8_t motor_index);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 47,
          "context": "void Actuators_EnableMotor(uint8_t motor_index);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 48,
          "context": "void Actuators_DisableMotor(uint8_t motor_index);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 49,
          "context": "void Actuators_EnableAllMotors(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 50,
          "context": "void Actuators_DisableAllMotors(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 51,
          "context": "bool Actuators_IsMotorEnabled(uint8_t motor_index);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 54,
          "context": "void Actuators_SetThrottle(uint16_t throttle);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 55,
          "context": "void Actuators_SetYaw(int16_t yaw);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 56,
          "context": "void Actuators_SetPitch(int16_t pitch);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 57,
          "context": "void Actuators_SetRoll(int16_t roll);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 60,
          "context": "void Actuators_GetState(ActuatorsState* state);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 61,
          "context": "float Actuators_GetMotorTemperature(uint8_t motor_index);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 62,
          "context": "uint32_t Actuators_GetMotorRuntime(uint8_t motor_index);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 65,
          "context": "void Actuators_EmulateHover(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 66,
          "context": "void Actuators_EmulateAscent(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 67,
          "context": "void Actuators_EmulateDescent(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 68,
          "context": "void Actuators_EmulateRotation(int16_t yaw_rate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 69,
          "context": "void Actuators_EmulateForwardFlight(uint16_t speed);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 72,
          "context": "void Actuators_EmergencyStop(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 73,
          "context": "bool Actuators_IsEmergencyStopActive(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 74,
          "context": "void Actuators_ResetEmergencyStop(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 76,
          "context": "#endif // ACTUATORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 1,
          "context": "#ifndef COMMUNICATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 2,
          "context": "#define COMMUNICATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 4,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 5,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 6,
          "context": "#include \"sensors.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 7,
          "context": "#include \"navigation.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 8,
          "context": "#include \"stabilization.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 11,
          "context": "#define GPIO_PORTA_AFSEL_R    (*((volatile uint32_t *)0x40004420))  // Port A Alternate Function Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 12,
          "context": "#define GPIO_PORTA_DEN_R      (*((volatile uint32_t *)0x4000451C))  // Port A Digital Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 13,
          "context": "#define GPIO_PORTA_AMSEL_R    (*((volatile uint32_t *)0x40004528))  // Port A Analog Mode Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 14,
          "context": "#define GPIO_PORTA_PCTL_R     (*((volatile uint32_t *)0x4000452C))  // Port A Port Control"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 17,
          "context": "#define COMM_BUFFER_SIZE     256"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 18,
          "context": "#define COMM_BAUDRATE       115200"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 19,
          "context": "#define COMM_MAX_PACKET_SIZE 64"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 46,
          "context": "uint8_t type;          // Тип пакета"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 47,
          "context": "uint8_t length;        // Длина данных"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 48,
          "context": "uint8_t data[COMM_MAX_PACKET_SIZE];  // Данные"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 49,
          "context": "uint16_t checksum;     // Контрольная сумма"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 59,
          "context": "GPSPosition position;      // Текущая GPS позиция"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 60,
          "context": "Orientation orientation;   // Текущая ориентация"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 63,
          "context": "float altitude;           // Текущая высота (м)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 65,
          "context": "float verticalSpeed;      // Вертикальная скорость (м/с)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 68,
          "context": "uint8_t flightMode;       // Режим полета"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 69,
          "context": "uint8_t gpsStatus;        // Статус GPS"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 70,
          "context": "uint8_t batteryStatus;    // Уровень заряда батареи (%)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 71,
          "context": "uint8_t errorFlags;       // Флаги ошибок"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 76,
          "context": "bool UART_Init(uint32_t baudRate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 77,
          "context": "uint16_t UART_Receive(uint8_t* buffer, uint16_t maxLength);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 78,
          "context": "bool UART_Send(const uint8_t* data, uint16_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 81,
          "context": "void Communication_Init(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 82,
          "context": "void Communication_SendData(uint8_t* data, uint16_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 83,
          "context": "uint16_t Communication_Receive(uint8_t* buffer, uint16_t maxLength);  // Изменили возвращаемый тип и имя параметра"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 84,
          "context": "bool Communication_IsConnected(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 85,
          "context": "void Communication_Process(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 88,
          "context": "bool Communication_Send(PacketType type, const void* data, uint8_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 89,
          "context": "uint16_t Communication_Receive(uint8_t* buffer, uint16_t maxLength);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 92,
          "context": "bool Communication_SendTelemetry(const TelemetryData* telemetry);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 93,
          "context": "bool Communication_SendStatus(uint8_t status);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 94,
          "context": "bool Communication_SendError(uint8_t errorCode, const char* message);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 97,
          "context": "void Communication_HandleCommand(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 98,
          "context": "void Communication_HandleConfig(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 101,
          "context": "uint32_t Communication_GetLastPacketTime(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 104,
          "context": "void Communication_SetBaudRate(uint32_t baudRate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 105,
          "context": "void Communication_SetTelemetryRate(uint16_t rateHz);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 108,
          "context": "uint32_t Communication_GetPacketsSent(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 109,
          "context": "uint32_t Communication_GetPacketsReceived(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 110,
          "context": "uint32_t Communication_GetErrorCount(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 112,
          "context": "#endif // COMMUNICATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 1,
          "context": "#ifndef DIAGNOSTICS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 2,
          "context": "#define DIAGNOSTICS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 4,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 5,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 6,
          "context": "#include <stdarg.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 7,
          "context": "#include <math.h>  // Для isnan() и математических функций"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 38,
          "context": "} DiagnosticEvent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 64,
          "context": "} SystemTickError;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 95,
          "context": "#define TEMP_SENSOR_TYPE_LINEAR    0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 96,
          "context": "#define TEMP_SENSOR_TYPE_NTC       1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 97,
          "context": "#define TEMP_SENSOR_TYPE_PTC       2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 98,
          "context": "#define TEMP_SENSOR_TYPE_THERMO    3"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 101,
          "context": "#define TEMP_MCU_WARNING      85.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 102,
          "context": "#define TEMP_MCU_CRITICAL     95.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 103,
          "context": "#define TEMP_MOTORS_WARNING   70.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 104,
          "context": "#define TEMP_MOTORS_CRITICAL  80.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 105,
          "context": "#define TEMP_BOARD_WARNING    60.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 106,
          "context": "#define TEMP_BOARD_CRITICAL   70.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 107,
          "context": "#define MAX_SAFE_TEMPERATURE   125.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 110,
          "context": "#define TEST_PASS    0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 111,
          "context": "#define TEST_WARNING 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 112,
          "context": "#define TEST_FAIL    2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 113,
          "context": "#define TEST_NOT_RUN 3"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 117,
          "context": "uint8_t status;     // TEST_PASS, TEST_WARNING, TEST_FAIL, or TEST_NOT_RUN"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 118,
          "context": "uint32_t code;      // Error or status code"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 120,
          "context": "uint32_t data;      // Additional data"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 137,
          "context": "uint32_t timestamp;      // Время события"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 139,
          "context": "DiagnosticEvent event;   // Тип события"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 141,
          "context": "uint32_t code;          // Код события/ошибки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 142,
          "context": "uint32_t data;          // Дополнительные данные"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 147,
          "context": "float ambientTemp;       // Ambient temperature"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 150,
          "context": "bool isCritical;         // True if any temperature is critical"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 151,
          "context": "bool isWarning;          // True if any temperature is in warning range"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 159,
          "context": "uint32_t uptime;         // Время работы системы"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 160,
          "context": "bool isCharging;         // Флаг зарядки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 161,
          "context": "bool isLowBattery;       // Флаг низкого заряда"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 162,
          "context": "bool isCriticalBattery;  // Флаг критически низкого заряда"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 166,
          "context": "bool powerSystemOperational;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 167,
          "context": "bool sensorsOperational;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 168,
          "context": "bool motorsOperational;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 169,
          "context": "bool communicationOperational;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 170,
          "context": "bool safetySystemOperational;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 178,
          "context": "uint32_t errorCode;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 181,
          "context": "uint32_t totalErrors;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 182,
          "context": "uint32_t totalWarnings;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 183,
          "context": "bool isTestComplete;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 198,
          "context": "uint32_t value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 203,
          "context": "uint32_t ticks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 204,
          "context": "SystemTickError error;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 205,
          "context": "} SystemTickResult;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 208,
          "context": "uint32_t elapsedTicks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 209,
          "context": "SystemTickError error;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 210,
          "context": "} ElapsedTicksResult;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 215,
          "context": "} ADCConversionStatus;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 229,
          "context": "} TemperatureSensorConfig;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 232,
          "context": "#define SYSCTL_RCGCGPIO_R    (*((volatile uint32_t *)0x400FE608))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 233,
          "context": "#define SYSCTL_RCGCADC_R     (*((volatile uint32_t *)0x400FE638))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 234,
          "context": "#define SYSCTL_PRGPIO_R      (*((volatile uint32_t *)0x400FEA08))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 235,
          "context": "#define SYSCTL_PRADC_R       (*((volatile uint32_t *)0x400FEA38))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 236,
          "context": "#define SYSCTL_RCGC2_R       (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 238,
          "context": "#define GPIO_PORTD_DEN_R     (*((volatile uint32_t *)0x4005751C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 239,
          "context": "#define GPIO_PORTD_AMSEL_R   (*((volatile uint32_t *)0x40057528))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 241,
          "context": "#define ADC1_ACTSS_R         (*((volatile uint32_t *)0x40039000))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 242,
          "context": "#define ADC1_EMUX_R          (*((volatile uint32_t *)0x40039014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 243,
          "context": "#define ADC1_SSMUX0_R        (*((volatile uint32_t *)0x40039040))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 244,
          "context": "#define ADC1_SSCTL0_R        (*((volatile uint32_t *)0x40039044))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 245,
          "context": "#define ADC1_TSSEL_R         (*((volatile uint32_t *)0x4003901C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 246,
          "context": "#define ADC1_SAC_R           (*((volatile uint32_t *)0x40039030))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 247,
          "context": "#define ADC1_IM_R            (*((volatile uint32_t *)0x40039008))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 248,
          "context": "#define ADC1_SSFIF00_R       (*((volatile uint32_t *)0x40039048))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 250,
          "context": "#define ADC0_SAC_R           (*((volatile uint32_t *)0x40038030))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 251,
          "context": "#define ADC0_IM_R            (*((volatile uint32_t *)0x40038008))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 252,
          "context": "#define ADC0_SSFIFO1_R       (*((volatile uint32_t *)0x40038048))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 255,
          "context": "#define ADC_ACTSS_ASEN0      0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 256,
          "context": "#define ADC_EMUX_EM0_M       0x0000000F"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 257,
          "context": "#define ADC_SSCTL0_IE3       0x00000800"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 258,
          "context": "#define ADC_SSCTL0_END3      0x00000400"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 259,
          "context": "#define ADC_IM_MASK0         0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 260,
          "context": "#define INT_ADC1SS0          51"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 263,
          "context": "#define ADC_PSSI_SS3          0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 264,
          "context": "#define ADC_RIS_INR3          0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 265,
          "context": "#define ADC_SSCTL0_IE2        0x00000400"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 266,
          "context": "#define ADC_SSCTL0_END2       0x00000800"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 267,
          "context": "#define ADC_SAC_AVG_64X       0x00000006"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 268,
          "context": "#define ADC_ACTSS_ASEN1       0x00000002  // SS1 Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 269,
          "context": "#define ADC_EMUX_EM1_M        0x000000F0  // SS1 Trigger Select mask"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 270,
          "context": "#define ADC_IM_MASK1          0x00000002  // SS1 Interrupt Mask"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 271,
          "context": "#define ADC_RIS_INR1          0x00000002  // SS1 Interrupt Status"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 272,
          "context": "#define ADC_PSSI_SS1          0x00000002  // SS1 Initiate"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 273,
          "context": "#define ADC_SSCTL1_IE2        0x00000400  // Sample 2 Interrupt Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 274,
          "context": "#define ADC_SSCTL1_END2       0x00000800  // Sample 2 is End of Sequence"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 277,
          "context": "#define INT_ADC0SS1          15  // ADC0 Sequencer 1 interrupt"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 280,
          "context": "#define WATCHDOG0_LOAD_R     (*((volatile uint32_t *)0x40000000))  // Регистр загрузки WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 281,
          "context": "#define WATCHDOG0_CTL_R      (*((volatile uint32_t *)0x40000008))  // Регистр управления WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 282,
          "context": "#define WATCHDOG0_ICR_R      (*((volatile uint32_t *)0x4000000C))  // Регистр очистки прерываний WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 283,
          "context": "#define WATCHDOG0_LOCK_R     (*((volatile uint32_t *)0x40000C00))  // Регистр блокировки WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 284,
          "context": "#define WATCHDOG0_ICR_M      (*((volatile uint32_t *)0x40000010))  // Регистр очистки прерываний WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 287,
          "context": "#define WDT_CTL_INTEN        0x00000001  // Разрешение прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 288,
          "context": "#define WDT_CTL_RESEN        0x00000002  // Разрешение сброса системы"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 291,
          "context": "#define NVIC_SYS_CTRL_R      (*((volatile uint32_t *)0xE000ED10))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 292,
          "context": "#define NVIC_SYS_CTRL_SLEEPDEEP 0x00000004"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 295,
          "context": "typedef uint32_t ErrorCode;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 298,
          "context": "#define NVIC_EN0_R            (*((volatile uint32_t *)0xE000E100))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 299,
          "context": "#define NVIC_PRI0_R          (*((volatile uint32_t *)0xE000E400))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 300,
          "context": "#define NVIC_APINT_R         (*((volatile uint32_t *)0xE000ED0C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 301,
          "context": "#define NVIC_APINT_VECTKEY   0x05FA0000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 302,
          "context": "#define NVIC_APINT_SYSRESETREQ 0x00000004"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 305,
          "context": "#define SYSCTL_RCGCWD_R      (*((volatile uint32_t *)0x400FE600))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 306,
          "context": "#define SYSCTL_PRWD_R        (*((volatile uint32_t *)0x400FEA00))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 309,
          "context": "#define SYSCTL_RCGCWD_R0     0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 310,
          "context": "#define SYSCTL_PRWD_R0       0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 313,
          "context": "#define MCU_TEMP_SLOPE       1.0f    // Slope for MCU temperature conversion"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 314,
          "context": "#define MCU_TEMP_OFFSET      0.0f    // Offset for MCU temperature conversion"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 315,
          "context": "#define TEMP_SENSOR_SLOPE    10.0f   // mV/°C for external temperature sensors"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 318,
          "context": "#define TEMP_MCU_CHANNEL     0       // Internal temperature sensor channel"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 321,
          "context": "#define NVIC_EN1_R           (*((volatile uint32_t *)0xE000E104))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 324,
          "context": "#define ADC1_SSFIFO0_R       (*((volatile uint32_t *)0x40039044))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 327,
          "context": "#define NVIC_ST_CTRL_R       (*((volatile uint32_t *)0xE000E010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 328,
          "context": "#define NVIC_ST_RELOAD_R     (*((volatile uint32_t *)0xE000E014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 329,
          "context": "#define NVIC_ST_CURRENT_R    (*((volatile uint32_t *)0xE000E018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 332,
          "context": "#define NVIC_ST_CTRL_ENABLE  0x00000001  // Включение таймера"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 333,
          "context": "#define NVIC_ST_CTRL_INTEN   0x00000002  // Включение прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 334,
          "context": "#define NVIC_ST_CTRL_CLKSRC  0x00000004  // Выбор источника тактирования (системная частота)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 337,
          "context": "extern uint32_t SystemCoreClock;  // Глобальная переменная тактовой частоты микроконтроллера"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 340,
          "context": "bool Diagnostics_Init(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 341,
          "context": "bool Diagnostics_PerformSelfTest(SelfTestResult* result);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 342,
          "context": "void Diagnostics_InitSelfTest(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 343,
          "context": "bool Diagnostics_PerformQuickTest(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 344,
          "context": "void UpdateMotorTemperatures(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 345,
          "context": "const char* Diagnostics_GetEventString(DiagnosticEvent event);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 346,
          "context": "void Diagnostics_Log(uint8_t level, DiagnosticEvent event, const char* message, uint32_t data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 349,
          "context": "float GetColdJunctionTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 350,
          "context": "float ConvertThermocoupleVoltageToTemp(float thermocoupleVoltage, ThermocoupleType type, float coldJunctionTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 353,
          "context": "void Diagnostics_Log(LogLevel level, DiagnosticEvent event, const char* message, uint32_t data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 354,
          "context": "void Diagnostics_ClearLog(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 355,
          "context": "uint32_t Diagnostics_GetLogCount(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 356,
          "context": "bool Diagnostics_GetLogEntry(uint32_t index, LogEntry* entry);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 359,
          "context": "bool Diagnostics_GetIMUData(IMUData* data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 360,
          "context": "bool Diagnostics_CalibrateIMU(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 361,
          "context": "bool Diagnostics_IsIMUCalibrated(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 364,
          "context": "void Diagnostics_UpdatePowerState(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 365,
          "context": "void Diagnostics_GetPowerState(PowerState* state); // Обновленный прототип функции"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 366,
          "context": "float Diagnostics_GetBatteryVoltage(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 367,
          "context": "uint8_t Diagnostics_GetBatteryLevel(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 370,
          "context": "void Diagnostics_UpdateThermalState(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 371,
          "context": "void Diagnostics_GetThermalState(ThermalState* state);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 372,
          "context": "bool Diagnostics_IsOverheated(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 375,
          "context": "void Diagnostics_InitWatchdog(uint32_t timeout_ms);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 376,
          "context": "void Diagnostics_FeedWatchdog(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 377,
          "context": "bool Diagnostics_IsWatchdogReset(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 380,
          "context": "void Diagnostics_StartPerformanceCounter(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 381,
          "context": "uint32_t Diagnostics_StopPerformanceCounter(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 382,
          "context": "void Diagnostics_ResetPerformanceStats(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 385,
          "context": "uint32_t Diagnostics_GetErrorCount(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 386,
          "context": "uint32_t Diagnostics_GetUptimeMs(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 389,
          "context": "void Diagnostics_PrintSystemStatus(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 392,
          "context": "ADCResult Diagnostics_GetADCValue(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 393,
          "context": "float Diagnostics_ConvertADCToTemp(ADCResult adcResult); // Обновленный прототип функции преобразования температур"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 394,
          "context": "ADCError Diagnostics_StartADCConversion(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 395,
          "context": "ADCConversionStatus Diagnostics_IsADCConversionComplete(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 397,
          "context": "SystemTickResult Diagnostics_GetSystemTicks(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 398,
          "context": "SystemTickError Diagnostics_DelayTicks(uint32_t ticks);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 399,
          "context": "ElapsedTicksResult Diagnostics_GetElapsedTicks(uint32_t startTicks);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 402,
          "context": "uint32_t GetMCUTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 403,
          "context": "uint32_t GetBatteryTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 404,
          "context": "uint32_t GetBoardTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 405,
          "context": "uint32_t GetEnvironmentTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 408,
          "context": "float GetColdJunctionTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 409,
          "context": "float ConvertThermocoupleVoltageToTemp(float thermocoupleVoltage, ThermocoupleType type, float coldJunctionTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 412,
          "context": "float GetMotorCurrent(int motorIndex);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 413,
          "context": "uint16_t GetMotorRPM(void);        // Убрали параметр"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 414,
          "context": "float GetMotorTemperature(int motorIndex);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 415,
          "context": "float GetMotorVibration(void);     // Убрали параметр"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 418,
          "context": "#define ADC_CHANNEL_MOTOR_CURRENT_BASE  ADC_AIN5   // Базовый канал для измерения тока моторов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 421,
          "context": "bool HasBackupComm(void);      // Проверяет наличие резервного канала связи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 422,
          "context": "bool TestBackupComm(void);     // Тестирует работоспособность резервного канала"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 425,
          "context": "#define BACKUP_COMM_ERR_NOT_RESPONDING  0x0401"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 426,
          "context": "#define BACKUP_COMM_ERR_CRC            0x0402"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 427,
          "context": "#define BACKUP_COMM_ERR_TIMEOUT        0x0403"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 430,
          "context": "bool TestWatchdogReset(void);  // Тестирует срабатывание watchdog reset"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 433,
          "context": "#define WATCHDOG_ERR_NO_RESET     0x0501  // Watchdog не вызвал сброс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 434,
          "context": "#define WATCHDOG_ERR_EARLY_RESET  0x0502  // Сброс произошел раньше времени"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 435,
          "context": "#define WATCHDOG_ERR_LATE_RESET   0x0503  // Сброс произошел позже времени"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 438,
          "context": "#define MAX_MOTORS 4"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 441,
          "context": "#define DIAG_MAX_LOG_ENTRIES 100"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 444,
          "context": "#define SYSCTL_RCGCGPIO_R3    0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 445,
          "context": "#define SYSCTL_RCGCGPIO_R4    0x00000010"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 446,
          "context": "#define SYSCTL_RCGCADC_R0     0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 447,
          "context": "#define SYSCTL_RCGCADC_R1     0x00000002"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 448,
          "context": "#define SYSCTL_PRGPIO_R3      0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 449,
          "context": "#define SYSCTL_PRGPIO_R4      0x00000010"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 450,
          "context": "#define SYSCTL_PRADC_R0       0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 451,
          "context": "#define SYSCTL_PRADC_R1       0x00000002"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 454,
          "context": "#define ADC1_PSSI_R           (*((volatile uint32_t *)0x40039028))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 455,
          "context": "#define ADC1_RIS_R            (*((volatile uint32_t *)0x40039004))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 456,
          "context": "#define ADC_ISC_IN0           0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 459,
          "context": "#define GPIO_PORTA_IM_R       (*((volatile uint32_t *)0x40004010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 460,
          "context": "#define GPIO_PORTA_IEV_R      (*((volatile uint32_t *)0x4000440C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 461,
          "context": "#define GPIO_PORTA_AFSEL_R    (*((volatile uint32_t *)0x40004420))  // Port A Alternate Function Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 462,
          "context": "#define GPIO_PORTE_AFSEL_R    (*((volatile uint32_t *)0x40024420))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 463,
          "context": "#define GPIO_PORTE_DEN_R      (*((volatile uint32_t *)0x4002451C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 464,
          "context": "#define GPIO_PORTE_AMSEL_R    (*((volatile uint32_t *)0x40024528))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 465,
          "context": "#define GPIO_PORTD_AFSEL_R    (*((volatile uint32_t *)0x40007420))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 468,
          "context": "#define WATCHDOG0_RIS_R       (*((volatile uint32_t *)0x40000004))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 469,
          "context": "#define WATCHDOG0_ICR_R       (*((volatile uint32_t *)0x40000008))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 470,
          "context": "#define WATCHDOG0_ICR_M       (*((volatile uint32_t *)0x40000010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 471,
          "context": "#define WDT_RIS_WDTRIS        0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 472,
          "context": "#define WDT_ICR_M             0xFFFFFFFF  // Watchdog Timer Interrupt Clear Mask"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 475,
          "context": "#define INT_UART0             21"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 476,
          "context": "#define INT_WTIMER0A          94"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 477,
          "context": "#define INT_WATCHDOG          18"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 480,
          "context": "float GetMotorTemperature(int motorIndex);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 481,
          "context": "uint32_t GetBatteryTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 482,
          "context": "uint32_t GetBoardTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 483,
          "context": "uint32_t GetEnvironmentTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 486,
          "context": "bool SendBackupCommPacket(const uint8_t* data, uint8_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 487,
          "context": "bool ReceiveBackupCommPacket(uint8_t* buffer, uint8_t maxLength);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 490,
          "context": "void WDT0_Handler(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 493,
          "context": "uint32_t GetMCUTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 494,
          "context": "uint32_t GetBatteryTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 495,
          "context": "uint32_t GetBoardTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 496,
          "context": "uint32_t GetEnvironmentTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 499,
          "context": "float GetColdJunctionTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 500,
          "context": "float ConvertThermocoupleVoltageToTemp(float thermocoupleVoltage, ThermocoupleType type, float coldJunctionTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 503,
          "context": "#define VREF                    3.3f    // Опорное напряжение (В)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 504,
          "context": "#define ADC_MAX_VALUE          4095     // Максимальное значение АЦП (12 бит)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 505,
          "context": "#define VOLTAGE_DIVIDER        0.5f     // Коэффициент делителя напряжения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 506,
          "context": "#define CURRENT_SENSE_MV_A     100.0f   // мВ/А для датчика тока"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 507,
          "context": "#define TEMP_SENSOR_MV_C       10.0f    // мВ/°C для температурного датчика"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 510,
          "context": "#define BATTERY_MAX_VOLTAGE    12.6f    // Максимальное напряжение батареи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 511,
          "context": "#define BATTERY_MIN_VOLTAGE    9.0f     // Минимальное напряжение батареи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 512,
          "context": "#define BATTERY_LOW_VOLTAGE    10.0f    // Напряжение для предупреждения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 513,
          "context": "#define BATTERY_CRITICAL_VOLTAGE 9.5f   // Критическое напряжение"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 514,
          "context": "#define BATTERY_MAX_TEMP       60.0f    // Максимальная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 517,
          "context": "const char* GetLogLevelString(LogLevel level);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 518,
          "context": "const char* GetEventString(DiagnosticEvent event);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 519,
          "context": "void Diagnostics_GetPowerState(PowerState* state);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 522,
          "context": "TestStatus TestPowerSystem(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 523,
          "context": "TestStatus TestSensors(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 524,
          "context": "TestStatus TestMotors(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 525,
          "context": "TestStatus TestCommunication(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 526,
          "context": "TestStatus TestSafetySystems(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 529,
          "context": "bool Diagnostics_PerformQuickTest(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 532,
          "context": "float GetMotorCurrent(int motorIndex);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 533,
          "context": "uint16_t GetMotorRPM(void);        // Убрали параметр"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 534,
          "context": "float GetMotorTemperature(int motorIndex);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 535,
          "context": "float GetMotorVibration(void);     // Убрали параметр"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 538,
          "context": "bool TestBarometer(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 539,
          "context": "bool TestESC(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 540,
          "context": "bool TestGPS(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 541,
          "context": "bool TestEEPROM(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 542,
          "context": "bool TestFlashMemory(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 543,
          "context": "bool TestKillSwitch(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 544,
          "context": "bool TestMagnetometer(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 545,
          "context": "bool TestMotorResponse(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 546,
          "context": "bool TestParachuteSystem(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 549,
          "context": "bool HasGPS(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 550,
          "context": "bool HasParachute(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 553,
          "context": "float GetBaroAltitude(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 554,
          "context": "uint16_t GetMotorRPM(void);        // Убрали параметр"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 555,
          "context": "float GetMotorVibration(void);     // Убрали параметр"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 556,
          "context": "uint8_t GetRCLinkQuality(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 557,
          "context": "float GetSensorSupplyVoltage(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 560,
          "context": "bool IsRCTestResponseReceived(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 561,
          "context": "bool IsTelemetryAckReceived(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 562,
          "context": "void SendRCTestPacket(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 563,
          "context": "void SendTelemetryTestPacket(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 564,
          "context": "void SetMotorSpeed(uint8_t motor, uint16_t speed);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 565,
          "context": "const char* Diagnostics_GetLastLogEntry(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 567,
          "context": "#endif // DIAGNOSTICS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 1,
          "context": "#ifndef GPIO_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 2,
          "context": "#define GPIO_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 4,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 5,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 8,
          "context": "#define GPIO_PIN_0              0x00000001  // GPIO pin 0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 9,
          "context": "#define GPIO_PIN_1              0x00000002  // GPIO pin 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 10,
          "context": "#define GPIO_PIN_2              0x00000004  // GPIO pin 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 11,
          "context": "#define GPIO_PIN_3              0x00000008  // GPIO pin 3"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 12,
          "context": "#define GPIO_PIN_4              0x00000010  // GPIO pin 4"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 13,
          "context": "#define GPIO_PIN_5              0x00000020  // GPIO pin 5"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 14,
          "context": "#define GPIO_PIN_6              0x00000040  // GPIO pin 6"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 15,
          "context": "#define GPIO_PIN_7              0x00000080  // GPIO pin 7"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 18,
          "context": "#define GPIO_PORTA_BASE        0x40004000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 19,
          "context": "#define GPIO_PORTB_BASE        0x40005000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 20,
          "context": "#define GPIO_PORTC_BASE        0x40006000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 21,
          "context": "#define GPIO_PORTD_BASE        0x40007000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 22,
          "context": "#define GPIO_PORTE_BASE        0x40024000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 23,
          "context": "#define GPIO_PORTF_BASE        0x40025000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 26,
          "context": "#define SYSCTL_RCGC2_R         (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 27,
          "context": "#define SYSCTL_RCGC2_GPIOF     0x00000020  // Port F Clock Gating Control"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 30,
          "context": "#define SYSCTL_SYSDIV_2_5      0x04000000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 31,
          "context": "#define SYSCTL_USE_PLL         0x00000000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 32,
          "context": "#define SYSCTL_OSC_MAIN        0x00000000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 33,
          "context": "#define SYSCTL_XTAL_16MHZ      0x00000540"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 36,
          "context": "#define SYSCTL_PERIPH_GPIOF    0xf0000805  // GPIO F peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 37,
          "context": "#define SYSCTL_PERIPH_GPIOE    0xf0000804  // GPIO E peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 38,
          "context": "#define SYSCTL_PERIPH_GPIOD    0xf0000803  // GPIO D peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 39,
          "context": "#define SYSCTL_PERIPH_GPIOC    0xf0000802  // GPIO C peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 40,
          "context": "#define SYSCTL_PERIPH_GPIOB    0xf0000801  // GPIO B peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 41,
          "context": "#define SYSCTL_PERIPH_GPIOA    0xf0000800  // GPIO A peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 44,
          "context": "void GPIOPinTypeGPIOOutput(uint32_t port, uint8_t pins);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 45,
          "context": "void SysCtlPeripheralEnable(uint32_t peripheral);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 46,
          "context": "bool SysCtlPeripheralReady(uint32_t peripheral);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 47,
          "context": "void SysCtlClockSet(uint32_t config);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 49,
          "context": "#endif // GPIO_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 1,
          "context": "#ifndef MAIN_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 2,
          "context": "#define MAIN_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 4,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 5,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 6,
          "context": "#include \"diagnostics.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 7,
          "context": "#include \"communication.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 8,
          "context": "#include \"sensors.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 9,
          "context": "#include \"navigation.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 10,
          "context": "#include \"stabilization.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 11,
          "context": "#include \"actuators.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 12,
          "context": "#include \"gpio.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 15,
          "context": "bool IsPeripheralReady(uint32_t peripheral);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 16,
          "context": "void EnablePeripheral(uint32_t peripheral);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 31,
          "context": "#define MAIN_LOOP_FREQ_HZ      200     // Частота основного цикла (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 32,
          "context": "#define TELEMETRY_FREQ_HZ      10      // Частота отправки телеметрии (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 33,
          "context": "#define DIAGNOSTIC_FREQ_HZ      1       // Частота диагностики (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 34,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 37,
          "context": "#define MAX_ALTITUDE           100.0f   // Максимальная высота (м)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 38,
          "context": "#define MIN_BATTERY_VOLTAGE    10.5f    // Минимальное напряжение батареи (В)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 39,
          "context": "#define MAX_ANGLE              45.0f    // Максимальный угол наклона (градусы)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 40,
          "context": "#define MAX_YAW_RATE          90.0f    // Максимальная скорость рыскания (градусы/с)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 60,
          "context": "union {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 63,
          "context": "} position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 65,
          "context": "float roll, pitch, yaw; // Целевые углы (градусы)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 66,
          "context": "} attitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 70,
          "context": "} config;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 77,
          "context": "NavigationData navData;        // Навигационные данные"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 78,
          "context": "StabilizationData stabData;    // Данные стабилизации"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 80,
          "context": "uint32_t errors;              // Флаги ошибок"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 84,
          "context": "void SystemInit(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 85,
          "context": "void ProcessCommands(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 86,
          "context": "void CheckSafety(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 87,
          "context": "void EnterEmergencyMode(const char* reason);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 88,
          "context": "void ExitEmergencyMode(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 89,
          "context": "void UpdatePIDParameters(SystemParameter param, float value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 91,
          "context": "#endif // MAIN_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 1,
          "context": "#ifndef NAVIGATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 2,
          "context": "#define NAVIGATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 4,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 5,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 9,
          "context": "float latitude;   // Широта в градусах"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 10,
          "context": "float longitude;  // Долгота в градусах"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 11,
          "context": "float altitude;   // Высота в метрах"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 12,
          "context": "bool valid;       // Флаг валидности данных GPS"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 13,
          "context": "} GPSPosition;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 17,
          "context": "GPSPosition position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 19,
          "context": "float hover_time;      // Время зависания в секундах"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 21,
          "context": "} Waypoint;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 25,
          "context": "GPSPosition current_position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 26,
          "context": "float heading;              // Текущий курс в градусах (0-360)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 28,
          "context": "float vertical_speed;       // Вертикальная скорость в м/с"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 29,
          "context": "float distance_to_target;   // Расстояние до целевой точки в метрах"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 30,
          "context": "float bearing_to_target;    // Направление на целевую точку в градусах"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 31,
          "context": "bool navigation_active;     // Флаг активности навигации"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 32,
          "context": "} NavigationState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 36,
          "context": "NavigationState state;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 37,
          "context": "GPSPosition homePosition;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 38,
          "context": "Waypoint currentWaypoint;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 39,
          "context": "uint8_t waypointCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 40,
          "context": "bool returnToHomeActive;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 41,
          "context": "} NavigationData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 44,
          "context": "#define MAX_WAYPOINTS 20"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 45,
          "context": "#define NAV_WAYPOINT_RADIUS    3.0f   // Радиус достижения точки (метры)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 46,
          "context": "#define NAV_MIN_ALTITUDE       5.0f    // Минимальная безопасная высота"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 47,
          "context": "#define NAV_MAX_ALTITUDE       120.0f  // Максимальная разрешенная высота"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 48,
          "context": "#define NAV_DEFAULT_SPEED      5.0f    // Скорость по умолчанию (м/с)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 51,
          "context": "void Navigation_Init(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 52,
          "context": "void Navigation_Update(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 53,
          "context": "void Navigation_SetHomePosition(GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 54,
          "context": "void Navigation_Start(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 55,
          "context": "void Navigation_Stop(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 56,
          "context": "void Navigation_Pause(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 57,
          "context": "void Navigation_Resume(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 58,
          "context": "bool Navigation_IsActive(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 61,
          "context": "bool Navigation_AddWaypoint(const Waypoint* waypoint);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 62,
          "context": "bool Navigation_RemoveWaypoint(uint8_t index);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 63,
          "context": "bool Navigation_GetWaypoint(uint8_t index, Waypoint* waypoint);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 64,
          "context": "void Navigation_ClearWaypoints(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 67,
          "context": "void Navigation_GetCurrentPosition(GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 68,
          "context": "float Navigation_GetCurrentAltitude(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 69,
          "context": "float Navigation_GetCurrentHeading(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 70,
          "context": "float Navigation_GetDistanceToTarget(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 71,
          "context": "float Navigation_GetBearingToTarget(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 72,
          "context": "bool Navigation_IsValidPosition(const GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 73,
          "context": "bool Navigation_IsInSafeZone(const GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 76,
          "context": "void Navigation_UpdateHomePosition(const GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 79,
          "context": "void Navigation_EmulateGPSPosition(float latitude, float longitude, float altitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 80,
          "context": "void Navigation_EmulateMovement(float speed, float heading);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 81,
          "context": "void Navigation_EmulateAltitudeChange(float vertical_speed);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 83,
          "context": "#endif // NAVIGATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 1,
          "context": "#ifndef SENSORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 2,
          "context": "#define SENSORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 4,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 5,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 28,
          "context": "float altitude;    // Высота в метрах"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 35,
          "context": "float pitch;     // Тангаж (в градусах)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 37,
          "context": "} Orientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 41,
          "context": "MPU6050_Data imu;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 43,
          "context": "bool isCalibrated;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 49,
          "context": "void Sensors_Init(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 50,
          "context": "bool Sensors_Update(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 51,
          "context": "bool Sensors_IsCalibrated(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 52,
          "context": "void Sensors_GetAllData(SensorData* data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 53,
          "context": "void Sensors_GetBaroData(BMP280_Data* data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 55,
          "context": "#endif // SENSORS_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 1,
          "context": "#ifndef STABILIZATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 2,
          "context": "#define STABILIZATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 4,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 5,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 6,
          "context": "#include \"sensors.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 13,
          "context": "float integral;    // Накопленная интегральная составляющая"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 15,
          "context": "float outputMin;   // Минимальное значение выхода"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 22,
          "context": "float pitch;    // Желаемый тангаж"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 24,
          "context": "float altitude; // Желаемая высота"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 25,
          "context": "} SetPoint;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 29,
          "context": "Orientation currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 30,
          "context": "SetPoint targetSetPoint;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 32,
          "context": "bool isStable;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 33,
          "context": "} StabilizationData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 36,
          "context": "void Stabilization_Init(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 37,
          "context": "void Stabilization_Update(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 38,
          "context": "void Stabilization_ResetPID(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 41,
          "context": "void Stabilization_ConfigurePID(float rollKp, float rollKi, float rollKd,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 42,
          "context": "float pitchKp, float pitchKi, float pitchKd,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 43,
          "context": "float yawKp, float yawKi, float yawKd,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 44,
          "context": "float altKp, float altKi, float altKd);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 47,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 48,
          "context": "void Stabilization_GetCurrentOrientation(Orientation* orientation);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 49,
          "context": "void Stabilization_GetCurrentSetPoint(SetPoint* setPoint);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 52,
          "context": "void Stabilization_Enable(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 53,
          "context": "void Stabilization_Disable(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 54,
          "context": "bool Stabilization_IsEnabled(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 56,
          "context": "#endif // STABILIZATION_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 1,
          "context": "#ifndef TELEMETRY_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 2,
          "context": "#define TELEMETRY_H"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 4,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 5,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 6,
          "context": "#include \"navigation.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 7,
          "context": "#include \"communication.h\"  // Для структуры TelemetryData"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 10,
          "context": "void Telemetry_Init(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 11,
          "context": "void Telemetry_Update(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 12,
          "context": "void Telemetry_Send(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 14,
          "context": "#endif // TELEMETRY_H"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint16_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_035",
      "name": "false",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 73,
          "context": "static bool isEmergencyMode = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 131,
          "context": "if (Stabilization_IsEnabled() == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 139,
          "context": "if (actState.all_motors_enabled == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 251,
          "context": ".reached = false"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 408,
          "context": "isEmergencyMode = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 6,
          "context": "static bool emergency_stop_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 23,
          "context": "emergency_stop_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 65,
          "context": "actuators_state.motors[motor_index].is_running = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 83,
          "context": "actuators_state.all_motors_enabled = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 88,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 218,
          "context": "emergency_stop_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 120,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 146,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 206,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 228,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 233,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 350,
          "context": "commState.connected = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 380,
          "context": "commState.connected = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 404,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 409,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 180,
          "context": "diagState.lowPowerMode = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 181,
          "context": "diagState.debugEnabled = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 182,
          "context": "diagState.watchdogEnabled = false;  // Инициализируем флаг watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 472,
          "context": "diagState.thermalState.isCritical = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 473,
          "context": "diagState.thermalState.isWarning = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 568,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 815,
          "context": "diagState.lowPowerMode = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1012,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1301,
          "context": "bool rcResponded = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1335,
          "context": "bool telemetryResponded = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1538,
          "context": ".complete = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1654,
          "context": "selfTestResult.isTestComplete = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1658,
          "context": "selfTestResult.systemStatus.powerSystemOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1659,
          "context": "selfTestResult.systemStatus.sensorsOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1660,
          "context": "selfTestResult.systemStatus.motorsOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1661,
          "context": "selfTestResult.systemStatus.communicationOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1662,
          "context": "selfTestResult.systemStatus.safetySystemOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1681,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1693,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1705,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1717,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1729,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1741,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1934,
          "context": "static bool backupCommAvailable = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1957,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1974,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1985,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1992,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2053,
          "context": "bool HasGPS(void) { return false; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2054,
          "context": "bool HasParachute(void) { return false; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 18,
          "context": "static bool home_position_set = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 29,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 46,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 50,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 54,
          "context": "waypoints[waypoint_count].reached = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 62,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 92,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 107,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 117,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 229,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 236,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 244,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 289,
          "context": "nav_state.navigation_active = false; // Достигли последней точки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 16,
          "context": ".mpu6050_initialized = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 17,
          "context": ".bmp280_initialized = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 39,
          "context": "stabState.enabled = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 162,
          "context": "stabState.enabled = false;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_041",
      "name": "packet",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 41,
          "context": "uint32_t packetsSent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 42,
          "context": "uint32_t packetsReceived;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 55,
          "context": "static bool ValidatePacket(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 56,
          "context": "static void ProcessReceivedPacket(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 170,
          "context": "CommPacket* packet = (CommPacket*)(commState.rxBuffer + processedIndex);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 173,
          "context": "uint16_t packetSize = sizeof(CommPacket) - COMM_MAX_PACKET_SIZE + packet->length;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 174,
          "context": "if (processedIndex + packetSize > commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 179,
          "context": "if (ValidatePacket(packet)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 180,
          "context": "ProcessReceivedPacket(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 181,
          "context": "commState.packetsReceived++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 187,
          "context": "processedIndex += packetSize;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 210,
          "context": "CommPacket packet;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 211,
          "context": "packet.type = type;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 212,
          "context": "packet.length = length;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 215,
          "context": "memcpy(packet.data, data, (size_t)length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 219,
          "context": "packet.checksum = CalculateChecksum((const uint8_t*)&packet, (uint16_t)(sizeof(CommPacket) - sizeof(uint16_t)));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 222,
          "context": "if (UART_Send((const uint8_t*)&packet, (uint16_t)sizeof(CommPacket))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 223,
          "context": "commState.packetsSent++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 260,
          "context": "void Communication_HandleCommand(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 261,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 265,
          "context": "CommandType cmd = packet->data[0];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 301,
          "context": "void Communication_HandleConfig(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 302,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_CONFIG) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 332,
          "context": "return commState.packetsSent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 336,
          "context": "return commState.packetsReceived;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 402,
          "context": "static bool ValidatePacket(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 403,
          "context": "if (packet == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 408,
          "context": "if (packet->length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 414,
          "context": "(uint8_t*)packet,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 415,
          "context": "sizeof(CommPacket) - sizeof(packet->checksum)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 418,
          "context": "return calculatedChecksum == packet->checksum;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 421,
          "context": "static void ProcessReceivedPacket(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 422,
          "context": "switch (packet->type) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 429,
          "context": "Communication_HandleCommand(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 433,
          "context": "Communication_HandleConfig(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 441,
          "context": "Communication_SendError(0x02, \"Unknown packet type\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 97,
          "context": "void Communication_HandleCommand(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 98,
          "context": "void Communication_HandleConfig(const CommPacket* packet);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "CommPacket",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_045",
      "name": "code",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 244,
          "context": "uint8_t code;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 248,
          "context": "errorData.code = errorCode;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 541,
          "context": "entry->code = (ErrorCode)event;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 944,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 953,
          "context": "status.code = POWER_ERR_VOLTAGE_LOW;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 962,
          "context": "status.code = POWER_ERR_VOLTAGE_HIGH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 974,
          "context": "status.code = POWER_ERR_CURRENT_HIGH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 986,
          "context": "status.code = POWER_ERR_TEMP_HIGH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 996,
          "context": "status.code = POWER_ERR_SUPPLY_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1042,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1060,
          "context": "status.code = SENSOR_ERR_IMU_RANGE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1071,
          "context": "status.code = SENSOR_ERR_BARO_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1082,
          "context": "status.code = SENSOR_ERR_BARO_RANGE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1093,
          "context": "status.code = SENSOR_ERR_MAG_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1113,
          "context": "status.code = SENSOR_ERR_MAG_RANGE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1124,
          "context": "status.code = SENSOR_ERR_GPS_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1162,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1171,
          "context": "status.code = MOTOR_ERR_ESC_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1187,
          "context": "status.code = MOTOR_ERR_NOT_RESPONDING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1210,
          "context": "status.code = MOTOR_ERR_HIGH_CURRENT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1222,
          "context": "status.code = MOTOR_ERR_NO_ROTATION;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1234,
          "context": "status.code = MOTOR_ERR_TEMP_HIGH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1244,
          "context": "status.code = MOTOR_ERR_VIBRATION;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1293,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1315,
          "context": "status.code = COMM_ERR_RC_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1326,
          "context": "status.code = COMM_ERR_RC_QUALITY;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1349,
          "context": "status.code = COMM_ERR_TELEMETRY_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1359,
          "context": "status.code = COMM_ERR_BACKUP_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1372,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1380,
          "context": "status.code = SAFETY_ERR_WATCHDOG;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1391,
          "context": "status.code = SAFETY_ERR_EEPROM;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1402,
          "context": "status.code = SAFETY_ERR_FLASH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1414,
          "context": "status.code = SAFETY_ERR_PARACHUTE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1426,
          "context": "status.code = SAFETY_ERR_KILLSWITCH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 118,
          "context": "uint32_t code;      // Error or status code"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 141,
          "context": "uint32_t code;          // Код события/ошибки"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint8_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_046",
      "name": "break",
      "description": "Включение моторов",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 193,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 197,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 201,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 205,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 211,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 218,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 258,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 269,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 273,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 292,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 295,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 298,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 301,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 107,
          "context": "break;  // Буфер приема пуст"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 175,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 269,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 273,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 277,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 281,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 285,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 289,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 293,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 297,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 426,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 430,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 434,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 438,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 442,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 737,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 746,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 752,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1308,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1342,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1502,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1841,
          "context": "break;"
        }
      ],
      "comments": "Включение моторов",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "моторов",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_053",
      "name": "checksum",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 219,
          "context": "packet.checksum = CalculateChecksum((const uint8_t*)&packet, (uint16_t)(sizeof(CommPacket) - sizeof(uint16_t)));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 395,
          "context": "uint16_t checksum = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 397,
          "context": "checksum += data[i];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 399,
          "context": "return checksum;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 415,
          "context": "sizeof(CommPacket) - sizeof(packet->checksum)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 418,
          "context": "return calculatedChecksum == packet->checksum;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 49,
          "context": "uint16_t checksum;     // Контрольная сумма"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_057",
      "name": "initialized",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 37,
          "context": "bool initialized;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 132,
          "context": "if (commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 149,
          "context": "commState.initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 154,
          "context": "if (!commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 205,
          "context": "if (!commState.initialized || length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 321,
          "context": "if (commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 72,
          "context": "bool initialized;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 150,
          "context": "if (diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 184,
          "context": "diagState.initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 191,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START, \"Diagnostics initialized\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 197,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 534,
          "context": "if (!diagState.initialized || diagState.logCount >= DIAG_MAX_LOG_ENTRIES) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 698,
          "context": "\"Watchdog initialized\", timeout_ms);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 853,
          "context": "if (diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1444,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1525,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1542,
          "context": "if (!diagState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2029,
          "context": "\"Watchdog initialized\", 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 11,
          "context": "bool mpu6050_initialized;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 12,
          "context": "bool bmp280_initialized;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 16,
          "context": ".mpu6050_initialized = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 17,
          "context": ".bmp280_initialized = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 39,
          "context": "sensor_state.mpu6050_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 48,
          "context": "sensor_state.bmp280_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 52,
          "context": "if (!sensor_state.mpu6050_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 61,
          "context": "if (!sensor_state.bmp280_initialized || data == NULL) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_058",
      "name": "systemState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 73,
          "context": "SystemState systemState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 162,
          "context": "diagState.systemState = SYSTEM_STATE_OK;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 549,
          "context": "diagState.systemState = SYSTEM_STATE_CRITICAL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 551,
          "context": "diagState.systemState = SYSTEM_STATE_ERROR;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 559,
          "context": "diagState.systemState = SYSTEM_STATE_OK;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 645,
          "context": "return diagState.systemState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 654,
          "context": "if (diagState.systemState == SYSTEM_STATE_ERROR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 655,
          "context": "diagState.systemState = SYSTEM_STATE_OK;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 867,
          "context": "diagState.systemState == SYSTEM_STATE_OK ? \"OK\" :"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 868,
          "context": "diagState.systemState == SYSTEM_STATE_WARNING ? \"WARNING\" :"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 869,
          "context": "diagState.systemState == SYSTEM_STATE_ERROR ? \"ERROR\" : \"CRITICAL\");"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "SystemState",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_059",
      "name": "errorCount",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 43,
          "context": "uint32_t errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 184,
          "context": "commState.errorCount++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 227,
          "context": "commState.errorCount++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 340,
          "context": "return commState.errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 74,
          "context": "uint32_t errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 163,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 545,
          "context": "diagState.errorCount++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 558,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 649,
          "context": "return diagState.errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 653,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 870,
          "context": "SendDebugMessage(\"Error Count: %lu\", diagState.errorCount);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_060",
      "name": "startTime",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 75,
          "context": "uint32_t startTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 164,
          "context": "diagState.startTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 539,
          "context": "entry->timestamp = diagState.startTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 825,
          "context": "diagState.perfStartTime = diagState.startTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 829,
          "context": "uint32_t elapsed = diagState.startTime - diagState.perfStartTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1297,
          "context": "uint32_t startTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1300,
          "context": "startTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1305,
          "context": "while (GetCurrentTime() - startTime < RC_TEST_TIMEOUT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1334,
          "context": "startTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1339,
          "context": "while (GetCurrentTime() - startTime < TELEMETRY_TEST_TIMEOUT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1961,
          "context": "uint32_t startTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1964,
          "context": "while (GetCurrentTime() - startTime < 100) {  // Таймаут 100 мс"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_061",
      "name": "watchdogTimeout",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 76,
          "context": "uint32_t watchdogTimeout;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 166,
          "context": "diagState.watchdogTimeout = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 692,
          "context": "diagState.watchdogTimeout = timeout_ms;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2023,
          "context": "diagState.watchdogTimeout = 100;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_062",
      "name": "logCount",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 78,
          "context": "uint32_t logCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 165,
          "context": "diagState.logCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 534,
          "context": "if (!diagState.initialized || diagState.logCount >= DIAG_MAX_LOG_ENTRIES) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 538,
          "context": "LogEntry* entry = &diagState.logBuffer[diagState.logCount++];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 557,
          "context": "diagState.logCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 563,
          "context": "return diagState.logCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 567,
          "context": "if (!entry || index >= diagState.logCount) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 903,
          "context": "SendDebugMessage(\"Log Entries: %lu/%d\", diagState.logCount, DIAG_MAX_LOG_ENTRIES);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 905,
          "context": "if (diagState.logCount > 0) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_063",
      "name": "powerState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 327,
          "context": "PowerState powerState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 329,
          "context": "Diagnostics_GetPowerState(&powerState);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 333,
          "context": "telemetry.batteryVoltage = powerState.batteryVoltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 347,
          "context": "telemetry.batteryStatus = powerState.batteryLevel;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 79,
          "context": "PowerState powerState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 169,
          "context": "memset(&diagState.powerState, 0, sizeof(PowerState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 217,
          "context": "diagState.powerState.batteryVoltage = voltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 221,
          "context": "diagState.powerState.batteryLevel = 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 223,
          "context": "diagState.powerState.batteryLevel = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 225,
          "context": "diagState.powerState.batteryLevel = (uint8_t)((voltage - 9.0f) * 27.78f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 262,
          "context": "state->batteryVoltage = diagState.powerState.batteryVoltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 263,
          "context": "state->batteryLevel = diagState.powerState.batteryLevel;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 264,
          "context": "state->batteryTemp = diagState.powerState.batteryTemp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 265,
          "context": "state->batteryCurrent = diagState.powerState.batteryCurrent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 266,
          "context": "state->isCharging = diagState.powerState.isCharging;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 267,
          "context": "state->isLowBattery = diagState.powerState.isLowBattery;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 268,
          "context": "state->isCriticalBattery = diagState.powerState.isCriticalBattery;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 269,
          "context": "state->uptime = diagState.powerState.uptime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 279,
          "context": "return diagState.powerState.batteryVoltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 283,
          "context": "return diagState.powerState.batteryLevel;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 334,
          "context": "diagState.powerState.batteryVoltage = voltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 335,
          "context": "diagState.powerState.batteryCurrent = current;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 336,
          "context": "diagState.powerState.batteryTemp = temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 341,
          "context": "diagState.powerState.batteryLevel = (battery_level > 100.0f) ? 100.0f :"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 345,
          "context": "diagState.powerState.uptime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 865,
          "context": "SendDebugMessage(\"Uptime: %lu ms\", diagState.powerState.uptime);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 875,
          "context": "diagState.powerState.batteryVoltage,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 876,
          "context": "diagState.powerState.batteryLevel);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 877,
          "context": "SendDebugMessage(\"Current: %.2fA\", diagState.powerState.batteryCurrent);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 878,
          "context": "SendDebugMessage(\"Battery Temp: %.1f°C\", diagState.powerState.batteryTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 879,
          "context": "SendDebugMessage(\"Charging: %s\", diagState.powerState.isCharging ? \"Yes\" : \"No\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 950,
          "context": "float batteryVoltage = diagState.powerState.batteryVoltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 971,
          "context": "float batteryCurrent = diagState.powerState.batteryCurrent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 983,
          "context": "float batteryTemp = diagState.powerState.batteryTemp;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "PowerState",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_064",
      "name": "thermalState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 328,
          "context": "ThermalState thermalState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 330,
          "context": "Diagnostics_GetThermalState(&thermalState);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 334,
          "context": "telemetry.temperature = thermalState.mcuTemp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 80,
          "context": "ThermalState thermalState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 170,
          "context": "memset(&diagState.thermalState, 0, sizeof(ThermalState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 433,
          "context": "diagState.thermalState.mcuTemp = mcu_temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 434,
          "context": "diagState.thermalState.motorTemps[0] = motors_temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 435,
          "context": "diagState.thermalState.boardTemp = board_temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 436,
          "context": "diagState.thermalState.ambientTemp = ambient_temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 472,
          "context": "diagState.thermalState.isCritical = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 473,
          "context": "diagState.thermalState.isWarning = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 476,
          "context": "if (diagState.thermalState.mcuTemp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 477,
          "context": "diagState.thermalState.isCritical = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 480,
          "context": "(uint32_t)(diagState.thermalState.mcuTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 481,
          "context": "} else if (diagState.thermalState.mcuTemp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 482,
          "context": "diagState.thermalState.isWarning = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 485,
          "context": "(uint32_t)(diagState.thermalState.mcuTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 490,
          "context": "if (diagState.thermalState.motorTemps[i] >= TEMP_MOTORS_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 491,
          "context": "diagState.thermalState.isCritical = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 494,
          "context": "(uint32_t)(diagState.thermalState.motorTemps[i] * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 495,
          "context": "} else if (diagState.thermalState.motorTemps[i] >= TEMP_MOTORS_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 496,
          "context": "diagState.thermalState.isWarning = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 499,
          "context": "(uint32_t)(diagState.thermalState.motorTemps[i] * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 504,
          "context": "if (diagState.thermalState.boardTemp >= TEMP_BOARD_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 505,
          "context": "diagState.thermalState.isCritical = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 508,
          "context": "(uint32_t)(diagState.thermalState.boardTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 509,
          "context": "} else if (diagState.thermalState.boardTemp >= TEMP_BOARD_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 510,
          "context": "diagState.thermalState.isWarning = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 513,
          "context": "(uint32_t)(diagState.thermalState.boardTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 522,
          "context": "diagState.thermalState.motorTemps[i] = temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 529,
          "context": "*state = diagState.thermalState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 576,
          "context": "return (diagState.thermalState.mcuTemp >= TEMP_MCU_WARNING ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 577,
          "context": "diagState.thermalState.motorTemps[0] >= TEMP_MOTORS_WARNING ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 578,
          "context": "diagState.thermalState.boardTemp >= TEMP_BOARD_WARNING);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 883,
          "context": "SendDebugMessage(\"MCU Temp: %.1f°C\", diagState.thermalState.mcuTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 884,
          "context": "SendDebugMessage(\"Board Temp: %.1f°C\", diagState.thermalState.boardTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 886,
          "context": "diagState.thermalState.motorTemps[0],"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 887,
          "context": "diagState.thermalState.motorTemps[1],"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 888,
          "context": "diagState.thermalState.motorTemps[2],"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 889,
          "context": "diagState.thermalState.motorTemps[3]);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 890,
          "context": "SendDebugMessage(\"Ambient Temp: %.1f°C\", diagState.thermalState.ambientTemp);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "ThermalState",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_065",
      "name": "perfStartTime",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 81,
          "context": "uint32_t perfStartTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 173,
          "context": "diagState.perfStartTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 825,
          "context": "diagState.perfStartTime = diagState.startTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 829,
          "context": "uint32_t elapsed = diagState.startTime - diagState.perfStartTime;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_066",
      "name": "perfMaxTime",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 82,
          "context": "uint32_t perfMaxTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 174,
          "context": "diagState.perfMaxTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 831,
          "context": "if (diagState.perfCount == 0 || elapsed > diagState.perfMaxTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 832,
          "context": "diagState.perfMaxTime = elapsed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 845,
          "context": "diagState.perfMaxTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 894,
          "context": "SendDebugMessage(\"Max Time: %lu ms\", diagState.perfMaxTime);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_067",
      "name": "perfMinTime",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 83,
          "context": "uint32_t perfMinTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 175,
          "context": "diagState.perfMinTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 834,
          "context": "if (diagState.perfCount == 0 || elapsed < diagState.perfMinTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 835,
          "context": "diagState.perfMinTime = elapsed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 846,
          "context": "diagState.perfMinTime = 0;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_068",
      "name": "perfTotalTime",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 84,
          "context": "uint32_t perfTotalTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 176,
          "context": "diagState.perfTotalTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 838,
          "context": "diagState.perfTotalTime += elapsed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 847,
          "context": "diagState.perfTotalTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 897,
          "context": "(float)diagState.perfTotalTime / diagState.perfCount);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_069",
      "name": "perfCount",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 85,
          "context": "uint32_t perfCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 177,
          "context": "diagState.perfCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 831,
          "context": "if (diagState.perfCount == 0 || elapsed > diagState.perfMaxTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 834,
          "context": "if (diagState.perfCount == 0 || elapsed < diagState.perfMinTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 839,
          "context": "diagState.perfCount++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 848,
          "context": "diagState.perfCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 895,
          "context": "if (diagState.perfCount > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 897,
          "context": "(float)diagState.perfTotalTime / diagState.perfCount);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 899,
          "context": "SendDebugMessage(\"Total Samples: %lu\", diagState.perfCount);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_070",
      "name": "lowPowerMode",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 86,
          "context": "bool lowPowerMode;      // Добавлено: флаг низкого энергопотребления"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 180,
          "context": "diagState.lowPowerMode = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 788,
          "context": "if (!diagState.lowPowerMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 789,
          "context": "diagState.lowPowerMode = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 807,
          "context": "if (diagState.lowPowerMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 815,
          "context": "diagState.lowPowerMode = false;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_071",
      "name": "debugEnabled",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 87,
          "context": "bool debugEnabled;      // Добавлено: флаг отладочного вывода"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 181,
          "context": "diagState.debugEnabled = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 583,
          "context": "if (!diagState.debugEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 854,
          "context": "diagState.debugEnabled = enable;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 859,
          "context": "if (!diagState.debugEnabled) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_072",
      "name": "watchdogEnabled",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 88,
          "context": "bool watchdogEnabled;   // Добавлено: флаг watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 182,
          "context": "diagState.watchdogEnabled = false;  // Инициализируем флаг watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 691,
          "context": "diagState.watchdogEnabled = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 710,
          "context": "if (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1991,
          "context": "if (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2022,
          "context": "diagState.watchdogEnabled = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2032,
          "context": "while (diagState.watchdogEnabled) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_073",
      "name": "systemMillis",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 97,
          "context": "static volatile uint32_t systemMillis = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 137,
          "context": "return systemMillis;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_074",
      "name": "true",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 247,
          "context": ".valid = true"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 385,
          "context": "isEmergencyMode = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 58,
          "context": "actuators_state.motors[motor_index].is_running = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 76,
          "context": "actuators_state.all_motors_enabled = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 209,
          "context": "emergency_stop_active = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 95,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 128,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 133,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 149,
          "context": "commState.initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 150,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 224,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 386,
          "context": "commState.connected = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 151,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 184,
          "context": "diagState.initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 192,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 477,
          "context": "diagState.thermalState.isCritical = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 482,
          "context": "diagState.thermalState.isWarning = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 491,
          "context": "diagState.thermalState.isCritical = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 496,
          "context": "diagState.thermalState.isWarning = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 505,
          "context": "diagState.thermalState.isCritical = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 510,
          "context": "diagState.thermalState.isWarning = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 572,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 691,
          "context": "diagState.watchdogEnabled = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 789,
          "context": "diagState.lowPowerMode = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1017,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1307,
          "context": "rcResponded = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1341,
          "context": "telemetryResponded = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1680,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1692,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1704,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1716,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1728,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1737,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1746,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1948,
          "context": "return true;  // Возвращаем последний результат"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1969,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1980,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2022,
          "context": "diagState.watchdogEnabled = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2040,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2044,
          "context": "bool TestBarometer(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2045,
          "context": "bool TestESC(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2046,
          "context": "bool TestGPS(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2047,
          "context": "bool TestEEPROM(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2048,
          "context": "bool TestFlashMemory(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2049,
          "context": "bool TestKillSwitch(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2050,
          "context": "bool TestMagnetometer(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2051,
          "context": "bool TestMotorResponse(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2052,
          "context": "bool TestParachuteSystem(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2060,
          "context": "bool IsRCTestResponseReceived(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2061,
          "context": "bool IsTelemetryAckReceived(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 57,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 77,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 96,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 101,
          "context": "nav_state.navigation_active = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 112,
          "context": "nav_state.navigation_active = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 158,
          "context": "nav_state.current_position.valid = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 239,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 255,
          "context": "home_position_set = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 285,
          "context": "waypoints[current_waypoint_index].reached = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 39,
          "context": "sensor_state.mpu6050_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 48,
          "context": "sensor_state.bmp280_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 191,
          "context": "data->isCalibrated = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 157,
          "context": "stabState.enabled = true;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_076",
      "name": "false",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 73,
          "context": "static bool isEmergencyMode = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 131,
          "context": "if (Stabilization_IsEnabled() == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 139,
          "context": "if (actState.all_motors_enabled == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 251,
          "context": ".reached = false"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 408,
          "context": "isEmergencyMode = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 6,
          "context": "static bool emergency_stop_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 23,
          "context": "emergency_stop_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 65,
          "context": "actuators_state.motors[motor_index].is_running = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 83,
          "context": "actuators_state.all_motors_enabled = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 88,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 218,
          "context": "emergency_stop_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 120,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 146,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 206,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 228,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 233,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 350,
          "context": "commState.connected = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 380,
          "context": "commState.connected = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 404,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 409,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 180,
          "context": "diagState.lowPowerMode = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 181,
          "context": "diagState.debugEnabled = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 182,
          "context": "diagState.watchdogEnabled = false;  // Инициализируем флаг watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 472,
          "context": "diagState.thermalState.isCritical = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 473,
          "context": "diagState.thermalState.isWarning = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 568,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 815,
          "context": "diagState.lowPowerMode = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1012,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1301,
          "context": "bool rcResponded = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1335,
          "context": "bool telemetryResponded = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1538,
          "context": ".complete = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1654,
          "context": "selfTestResult.isTestComplete = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1658,
          "context": "selfTestResult.systemStatus.powerSystemOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1659,
          "context": "selfTestResult.systemStatus.sensorsOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1660,
          "context": "selfTestResult.systemStatus.motorsOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1661,
          "context": "selfTestResult.systemStatus.communicationOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1662,
          "context": "selfTestResult.systemStatus.safetySystemOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1681,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1693,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1705,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1717,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1729,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1741,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1934,
          "context": "static bool backupCommAvailable = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1957,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1974,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1985,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1992,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2053,
          "context": "bool HasGPS(void) { return false; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2054,
          "context": "bool HasParachute(void) { return false; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 18,
          "context": "static bool home_position_set = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 29,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 46,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 50,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 54,
          "context": "waypoints[waypoint_count].reached = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 62,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 92,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 107,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 117,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 229,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 236,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 244,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 289,
          "context": "nav_state.navigation_active = false; // Достигли последней точки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 16,
          "context": ".mpu6050_initialized = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 17,
          "context": ".bmp280_initialized = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 39,
          "context": "stabState.enabled = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 162,
          "context": "stabState.enabled = false;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_078",
      "name": "args",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 587,
          "context": "va_list args;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 588,
          "context": "va_start(args, format);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 591,
          "context": "vsnprintf(debugBuffer, DEBUG_BUFFER_SIZE, format, args);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 592,
          "context": "va_end(args);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "va_list",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_079",
      "name": "1000",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 69,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 18,
          "context": "#define COMM_TIMEOUT_MS     1000    // Таймаут соединения (1 секунда)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 19,
          "context": "#define SYSTICK_FREQ_HZ    1000    // Частота системного таймера (1 кГц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 359,
          "context": "NVIC_ST_RELOAD_R = SystemCoreClock / 1000 - 1;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 187,
          "context": "if (NVIC_APINT_R & 0x10000) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 330,
          "context": "float current = ((current_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / CURRENT_SENSE_MV_A;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 331,
          "context": "float temp = ((temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_MV_C;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 425,
          "context": "float mcu_temp = ((mcu_voltage * 1000.0f) / MCU_TEMP_SLOPE) + MCU_TEMP_OFFSET;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 428,
          "context": "float motors_temp = ((motors_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 429,
          "context": "float board_temp = ((board_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 430,
          "context": "float ambient_temp = ((ambient_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 675,
          "context": "uint32_t reload_value = timeout_ms * 1000; // преобразуем мс в тики"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1115,
          "context": "status.data = (uint32_t)(mag_magnitude * 1000);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1148,
          "context": "#define MOTOR_TEST_TIMEOUT       1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1286,
          "context": "#define RC_TEST_TIMEOUT         1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1288,
          "context": "#define TELEMETRY_TEST_TIMEOUT  1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1453,
          "context": "uint32_t timeout = 10000;  // Примерно 10000 циклов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1551,
          "context": "const uint32_t MAX_CONVERSION_ATTEMPTS = 1000;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1947,
          "context": "if (currentTime - lastBackupCommTest < 1000) {  // Тестируем не чаще раза в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 10,
          "context": "#define EARTH_RADIUS 6371000.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 249,
          "context": "return distance <= 1000.0f; // Безопасная зона - 1 км от дома"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 18,
          "context": "#define PWM_MAX_VALUE     1000 // Максимальное значение PWM (полная мощность)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 34,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "timeout_ms *",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_080",
      "name": "break",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 193,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 197,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 201,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 205,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 211,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 218,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 258,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 269,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 273,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 292,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 295,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 298,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 301,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 107,
          "context": "break;  // Буфер приема пуст"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 175,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 269,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 273,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 277,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 281,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 285,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 289,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 293,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 297,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 426,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 430,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 434,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 438,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 442,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 737,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 746,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 752,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1308,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1342,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1502,
          "context": "break;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1841,
          "context": "break;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "сна",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_083",
      "name": "elapsed",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 829,
          "context": "uint32_t elapsed = diagState.startTime - diagState.perfStartTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 831,
          "context": "if (diagState.perfCount == 0 || elapsed > diagState.perfMaxTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 832,
          "context": "diagState.perfMaxTime = elapsed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 834,
          "context": "if (diagState.perfCount == 0 || elapsed < diagState.perfMinTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 835,
          "context": "diagState.perfMinTime = elapsed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 838,
          "context": "diagState.perfTotalTime += elapsed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 841,
          "context": "return elapsed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1594,
          "context": "uint32_t elapsedTicks = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1596,
          "context": "while (elapsedTicks < ticks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1605,
          "context": "elapsedTicks = startValue - currentTicks.ticks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1607,
          "context": "elapsedTicks = (NVIC_ST_RELOAD_R - currentTicks.ticks) + startValue;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1619,
          "context": ".elapsedTicks = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1633,
          "context": "result.elapsedTicks = startTicks - currentTicks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1636,
          "context": "result.elapsedTicks = (NVIC_ST_RELOAD_R - currentTicks) + startTicks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 208,
          "context": "uint32_t elapsedTicks;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_084",
      "name": "lastEntry",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 906,
          "context": "LogEntry lastEntry;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 907,
          "context": "Diagnostics_GetLastLogEntry(&lastEntry);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 909,
          "context": "GetLogLevelString(lastEntry.level),"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 910,
          "context": "lastEntry.message);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "LogEntry",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_085",
      "name": "selfTestResult",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 924,
          "context": "static SelfTestResult selfTestResult;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1269,
          "context": "return selfTestResult;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1651,
          "context": "memset(&selfTestResult, 0, sizeof(SelfTestResult));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1652,
          "context": "selfTestResult.totalErrors = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1653,
          "context": "selfTestResult.totalWarnings = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1654,
          "context": "selfTestResult.isTestComplete = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1655,
          "context": "strncpy(selfTestResult.message, \"Test not started\", sizeof(selfTestResult.message) - 1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1658,
          "context": "selfTestResult.systemStatus.powerSystemOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1659,
          "context": "selfTestResult.systemStatus.sensorsOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1660,
          "context": "selfTestResult.systemStatus.motorsOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1661,
          "context": "selfTestResult.systemStatus.communicationOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1662,
          "context": "selfTestResult.systemStatus.safetySystemOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1665,
          "context": "selfTestResult.powerTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1666,
          "context": "selfTestResult.sensorTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1667,
          "context": "selfTestResult.motorTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1668,
          "context": "selfTestResult.batteryTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1669,
          "context": "selfTestResult.commTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1670,
          "context": "selfTestResult.safetyTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1677,
          "context": "selfTestResult.powerTest = TestPowerSystem();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1678,
          "context": "if (selfTestResult.powerTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1679,
          "context": "selfTestResult.totalErrors++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1680,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1683,
          "context": "else if (selfTestResult.powerTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1684,
          "context": "selfTestResult.totalWarnings++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1686,
          "context": "selfTestResult.systemStatus.powerSystemOperational = (selfTestResult.powerTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1689,
          "context": "selfTestResult.sensorTest = TestSensors();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1690,
          "context": "if (selfTestResult.sensorTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1691,
          "context": "selfTestResult.totalErrors++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1692,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1695,
          "context": "else if (selfTestResult.sensorTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1696,
          "context": "selfTestResult.totalWarnings++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1698,
          "context": "selfTestResult.systemStatus.sensorsOperational = (selfTestResult.sensorTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1701,
          "context": "selfTestResult.motorTest = TestMotors();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1702,
          "context": "if (selfTestResult.motorTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1703,
          "context": "selfTestResult.totalErrors++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1704,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1707,
          "context": "else if (selfTestResult.motorTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1708,
          "context": "selfTestResult.totalWarnings++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1710,
          "context": "selfTestResult.systemStatus.motorsOperational = (selfTestResult.motorTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1713,
          "context": "selfTestResult.commTest = TestCommunication();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1714,
          "context": "if (selfTestResult.commTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1715,
          "context": "selfTestResult.totalErrors++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1716,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1719,
          "context": "else if (selfTestResult.commTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1720,
          "context": "selfTestResult.totalWarnings++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1722,
          "context": "selfTestResult.systemStatus.communicationOperational = (selfTestResult.commTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1725,
          "context": "selfTestResult.safetyTest = TestSafetySystems();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1726,
          "context": "if (selfTestResult.safetyTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1727,
          "context": "selfTestResult.totalErrors++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1728,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1731,
          "context": "else if (selfTestResult.safetyTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1732,
          "context": "selfTestResult.totalWarnings++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1734,
          "context": "selfTestResult.systemStatus.safetySystemOperational = (selfTestResult.safetyTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1737,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1738,
          "context": "if (selfTestResult.totalErrors > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1739,
          "context": "strncpy(selfTestResult.message, \"Self-test failed\", sizeof(selfTestResult.message) - 1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1740,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SYSTEM_ERROR, selfTestResult.message, selfTestResult.totalErrors);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1744,
          "context": "strncpy(selfTestResult.message, \"Self-test passed\", sizeof(selfTestResult.message) - 1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1745,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SELF_TEST, selfTestResult.message, 0);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "SelfTestResult",
      "scope": "static",
      "is_static": true,
      "valid_range": {}
    },
    {
      "id": "var_086",
      "name": "status",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 238,
          "context": "bool Communication_SendStatus(uint8_t status) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 239,
          "context": "return Communication_Send(PACKET_TYPE_STATUS, &status, sizeof(status));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 943,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 944,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 945,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 946,
          "context": "status.message = \"\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 947,
          "context": "status.status = TEST_PASS;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 952,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 953,
          "context": "status.code = POWER_ERR_VOLTAGE_LOW;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 954,
          "context": "status.message = \"Battery voltage too low\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 955,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 957,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 958,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 961,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 962,
          "context": "status.code = POWER_ERR_VOLTAGE_HIGH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 963,
          "context": "status.message = \"Battery voltage too high\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 964,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 966,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 967,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 973,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 974,
          "context": "status.code = POWER_ERR_CURRENT_HIGH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 975,
          "context": "status.message = \"Current too high\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 976,
          "context": "status.data = (uint32_t)(batteryCurrent * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 978,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 979,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 985,
          "context": "status.status = TEST_WARNING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 986,
          "context": "status.code = POWER_ERR_TEMP_HIGH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 987,
          "context": "status.message = \"Battery temp high\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 988,
          "context": "status.data = (uint32_t)(batteryTemp * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 990,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 995,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 996,
          "context": "status.code = POWER_ERR_SUPPLY_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 997,
          "context": "status.message = \"Supply voltage fail\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 998,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1000,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1001,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1004,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1041,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1042,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1043,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1044,
          "context": "status.message = \"\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1045,
          "context": "status.status = TEST_PASS;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1059,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1060,
          "context": "status.code = SENSOR_ERR_IMU_RANGE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1061,
          "context": "status.message = \"IMU values out of range\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1062,
          "context": "status.data = (uint32_t)(accel_magnitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1064,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1065,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1070,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1071,
          "context": "status.code = SENSOR_ERR_BARO_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1072,
          "context": "status.message = \"Barometer failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1073,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1075,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1076,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1081,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1082,
          "context": "status.code = SENSOR_ERR_BARO_RANGE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1083,
          "context": "status.message = \"Baro out of range\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1084,
          "context": "status.data = (uint32_t)(altitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1086,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1087,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1092,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1093,
          "context": "status.code = SENSOR_ERR_MAG_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1094,
          "context": "status.message = \"Magnetometer failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1095,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1097,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1098,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1112,
          "context": "status.status = TEST_WARNING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1113,
          "context": "status.code = SENSOR_ERR_MAG_RANGE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1114,
          "context": "status.message = \"Mag field abnormal\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1115,
          "context": "status.data = (uint32_t)(mag_magnitude * 1000);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1117,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1123,
          "context": "status.status = TEST_WARNING;  // GPS не критичен, поэтому WARNING"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1124,
          "context": "status.code = SENSOR_ERR_GPS_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1125,
          "context": "status.message = \"GPS not ready\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1126,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1128,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1132,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1161,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1162,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1163,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1164,
          "context": "status.message = \"\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1165,
          "context": "status.status = TEST_PASS;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1170,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1171,
          "context": "status.code = MOTOR_ERR_ESC_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1172,
          "context": "status.message = \"ESC initialization failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1173,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1175,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1176,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1186,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1187,
          "context": "status.code = MOTOR_ERR_NOT_RESPONDING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1188,
          "context": "status.message = \"Motor not responding\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1189,
          "context": "status.data = i;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1191,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1192,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1209,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1210,
          "context": "status.code = MOTOR_ERR_HIGH_CURRENT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1211,
          "context": "status.message = \"Motor high current\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1212,
          "context": "status.data = i;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1214,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1216,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1221,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1222,
          "context": "status.code = MOTOR_ERR_NO_ROTATION;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1223,
          "context": "status.message = \"Motor not rotating\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1224,
          "context": "status.data = i;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1226,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1228,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1233,
          "context": "status.status = TEST_WARNING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1234,
          "context": "status.code = MOTOR_ERR_TEMP_HIGH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1235,
          "context": "status.message = \"Motor temperature high\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1236,
          "context": "status.data = i;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1238,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1243,
          "context": "status.status = TEST_WARNING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1244,
          "context": "status.code = MOTOR_ERR_VIBRATION;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1245,
          "context": "status.message = \"Motor high vibration\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1246,
          "context": "status.data = i;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1248,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1258,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1292,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1293,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1294,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1295,
          "context": "status.message = \"\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1296,
          "context": "status.status = TEST_PASS;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1314,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1315,
          "context": "status.code = COMM_ERR_RC_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1316,
          "context": "status.message = \"RC not responding\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1317,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1319,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1320,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1325,
          "context": "status.status = TEST_WARNING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1326,
          "context": "status.code = COMM_ERR_RC_QUALITY;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1327,
          "context": "status.message = \"RC signal weak\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1328,
          "context": "status.data = rcQuality;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1330,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1348,
          "context": "status.status = TEST_WARNING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1349,
          "context": "status.code = COMM_ERR_TELEMETRY_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1350,
          "context": "status.message = \"Telemetry failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1351,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1353,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1358,
          "context": "status.status = TEST_WARNING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1359,
          "context": "status.code = COMM_ERR_BACKUP_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1360,
          "context": "status.message = \"Backup comm failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1361,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1363,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1366,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1371,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1372,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1373,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1374,
          "context": "status.message = \"\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1375,
          "context": "status.status = TEST_PASS;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1379,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1380,
          "context": "status.code = SAFETY_ERR_WATCHDOG;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1381,
          "context": "status.message = \"Watchdog failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1382,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1384,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1385,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1390,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1391,
          "context": "status.code = SAFETY_ERR_EEPROM;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1392,
          "context": "status.message = \"EEPROM failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1393,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1395,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1396,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1401,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1402,
          "context": "status.code = SAFETY_ERR_FLASH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1403,
          "context": "status.message = \"Flash failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1404,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1406,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1407,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1413,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1414,
          "context": "status.code = SAFETY_ERR_PARACHUTE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1415,
          "context": "status.message = \"Parachute failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1416,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1418,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1419,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1425,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1426,
          "context": "status.code = SAFETY_ERR_KILLSWITCH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1427,
          "context": "status.message = \"Kill switch failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1428,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1430,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1431,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1434,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1537,
          "context": "ADCConversionStatus status = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1543,
          "context": "status.error = ADC_ERROR_NOT_INITIALIZED;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1544,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1547,
          "context": "status.complete = (ADC0_RIS_R & 0x08) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1553,
          "context": "if (!status.complete) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1556,
          "context": "status.error = ADC_ERROR_TIMEOUT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1563,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1678,
          "context": "if (selfTestResult.powerTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1683,
          "context": "else if (selfTestResult.powerTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1686,
          "context": "selfTestResult.systemStatus.powerSystemOperational = (selfTestResult.powerTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1690,
          "context": "if (selfTestResult.sensorTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1695,
          "context": "else if (selfTestResult.sensorTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1698,
          "context": "selfTestResult.systemStatus.sensorsOperational = (selfTestResult.sensorTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1702,
          "context": "if (selfTestResult.motorTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1707,
          "context": "else if (selfTestResult.motorTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1710,
          "context": "selfTestResult.systemStatus.motorsOperational = (selfTestResult.motorTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1714,
          "context": "if (selfTestResult.commTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1719,
          "context": "else if (selfTestResult.commTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1722,
          "context": "selfTestResult.systemStatus.communicationOperational = (selfTestResult.commTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1726,
          "context": "if (selfTestResult.safetyTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1731,
          "context": "else if (selfTestResult.safetyTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1734,
          "context": "selfTestResult.systemStatus.safetySystemOperational = (selfTestResult.safetyTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 93,
          "context": "bool Communication_SendStatus(uint8_t status);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 117,
          "context": "uint8_t status;     // TEST_PASS, TEST_WARNING, TEST_FAIL, or TEST_NOT_RUN"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_098",
      "name": "responding",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1152,
          "context": "bool responding;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1188,
          "context": "status.message = \"Motor not responding\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1316,
          "context": "status.message = \"RC not responding\";"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_099",
      "name": "current",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 18,
          "context": "static DroneState currentState = DRONE_STATE_INIT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 119,
          "context": "if (currentState >= DRONE_STATE_ARMED) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 190,
          "context": "switch (currentState) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 240,
          "context": "if (currentState == DRONE_STATE_FLYING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 261,
          "context": "if (currentState >= DRONE_STATE_ARMED) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 321,
          "context": "GPSPosition currentPos;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 322,
          "context": "Navigation_GetCurrentPosition(&currentPos);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 335,
          "context": "telemetry.position = currentPos;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 338,
          "context": "Orientation currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 339,
          "context": "Sensors_GetOrientation(&currentOrientation);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 340,
          "context": "telemetry.orientation = currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 345,
          "context": "telemetry.flightMode = (uint8_t)currentState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 386,
          "context": "currentState = DRONE_STATE_EMERGENCY;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 409,
          "context": "currentState = DRONE_STATE_IDLE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 40,
          "context": "uint32_t currentTime;       // Текущее время в миллисекундах"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 346,
          "context": "commState.currentTime++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 349,
          "context": "if (commState.currentTime - commState.lastPacketTime > COMM_TIMEOUT_MS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 371,
          "context": "return commState.currentTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 375,
          "context": "uint32_t currentTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 378,
          "context": "if (currentTime - commState.lastPacketTime > COMM_TIMEOUT_MS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 325,
          "context": "uint32_t current_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 330,
          "context": "float current = ((current_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / CURRENT_SENSE_MV_A;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 335,
          "context": "diagState.powerState.batteryCurrent = current;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 723,
          "context": "static PowerMode currentPowerMode = POWER_MODE_NORMAL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1153,
          "context": "float current;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1202,
          "context": "motorData[i].current = GetMotorCurrent(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1208,
          "context": "if (motorData[i].current > MOTOR_TEST_CURRENT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1211,
          "context": "status.message = \"Motor high current\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1597,
          "context": "SystemTickResult currentTicks = Diagnostics_GetSystemTicks();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1599,
          "context": "if (currentTicks.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1604,
          "context": "if (currentTicks.ticks <= startValue) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1605,
          "context": "elapsedTicks = startValue - currentTicks.ticks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1607,
          "context": "elapsedTicks = (NVIC_ST_RELOAD_R - currentTicks.ticks) + startValue;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1623,
          "context": "SystemTickResult currentTicksResult = Diagnostics_GetSystemTicks();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1625,
          "context": "if (currentTicksResult.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1630,
          "context": "uint32_t currentTicks = currentTicksResult.ticks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1632,
          "context": "if (currentTicks <= startTicks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1633,
          "context": "result.elapsedTicks = startTicks - currentTicks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1636,
          "context": "result.elapsedTicks = (NVIC_ST_RELOAD_R - currentTicks) + startTicks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1928,
          "context": "float current = (voltage * 20.0f) / 3.3f;   // Преобразование в амперы"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1930,
          "context": "return current;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1944,
          "context": "uint32_t currentTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1947,
          "context": "if (currentTime - lastBackupCommTest < 1000) {  // Тестируем не чаще раза в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1951,
          "context": "lastBackupCommTest = currentTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 16,
          "context": "static uint8_t current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 28,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 32,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 73,
          "context": "if (current_waypoint_index > index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 74,
          "context": "current_waypoint_index--;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 83,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 102,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 118,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 133,
          "context": "*position = nav_state.current_position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 138,
          "context": "return nav_state.current_position.altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 155,
          "context": "nav_state.current_position.latitude = latitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 156,
          "context": "nav_state.current_position.longitude = longitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 157,
          "context": "nav_state.current_position.altitude = altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 158,
          "context": "nav_state.current_position.valid = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 169,
          "context": "nav_state.current_position.latitude += speed_deg * cosf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 170,
          "context": "nav_state.current_position.longitude += speed_deg * sinf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 179,
          "context": "nav_state.current_position.altitude += vertical_speed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 182,
          "context": "if (nav_state.current_position.altitude < NAV_MIN_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 183,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 185,
          "context": "} else if (nav_state.current_position.altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 186,
          "context": "nav_state.current_position.altitude = NAV_MAX_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 263,
          "context": "return Navigation_CalculateDistance(&nav_state.current_position, &home_position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 272,
          "context": "current_waypoint_index >= waypoint_count) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 277,
          "context": "const Waypoint* target = &waypoints[current_waypoint_index];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 279,
          "context": "&nav_state.current_position, &target->position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 281,
          "context": "&nav_state.current_position, &target->position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 285,
          "context": "waypoints[current_waypoint_index].reached = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 286,
          "context": "if (current_waypoint_index < waypoint_count - 1) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 287,
          "context": "current_waypoint_index++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 13,
          "context": "float current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 18,
          "context": ".current_altitude = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 96,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 97,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 98,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f); // Примерное изменение давления с высотой"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 104,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f; // Предполагаем вызов каждые 100мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 107,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 108,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 114,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 115,
          "context": "if (sensor_state.current_altitude < 0.0f) sensor_state.current_altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 118,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 119,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 138,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 139,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 140,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 29,
          "context": "Orientation currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 48,
          "context": "stabState.currentOrientation.roll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 49,
          "context": "stabState.currentOrientation.pitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 50,
          "context": "stabState.currentOrientation.yaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 113,
          "context": "Orientation currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 117,
          "context": "Sensors_GetOrientation(&currentOrientation);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 120,
          "context": "stabState.currentOrientation.roll = currentOrientation.roll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 121,
          "context": "stabState.currentOrientation.pitch = currentOrientation.pitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 122,
          "context": "stabState.currentOrientation.yaw = currentOrientation.yaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 125,
          "context": "float rollError = stabState.targetSetPoint.roll - stabState.currentOrientation.roll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 126,
          "context": "float pitchError = stabState.targetSetPoint.pitch - stabState.currentOrientation.pitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 127,
          "context": "float yawError = stabState.targetSetPoint.yaw - stabState.currentOrientation.yaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 146,
          "context": "*orientation = stabState.currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 25,
          "context": "GPSPosition current_position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 38,
          "context": "Waypoint currentWaypoint;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 29,
          "context": "Orientation currentOrientation;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_100",
      "name": "rpm",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1154,
          "context": "float rpm;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1203,
          "context": "motorData[i].rpm = GetMotorRPM(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1220,
          "context": "if (motorData[i].rpm < 100.0f) {  // Минимальные обороты для теста"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_101",
      "name": "temperature",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 334,
          "context": "telemetry.temperature = thermalState.mcuTemp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 357,
          "context": "if (sensorData.imu.temperature < MIN_BATTERY_VOLTAGE) { // Временно используем temperature как voltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 20,
          "context": "actuators_state.motors[i].temperature = 25.0f; // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 155,
          "context": "return actuators_state.motors[motor_index].temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 231,
          "context": "actuators_state.motors[i].temperature += pwm_factor * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 234,
          "context": "if (actuators_state.motors[i].temperature > 25.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 235,
          "context": "actuators_state.motors[i].temperature -= 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 359,
          "context": "\"Critical battery temperature\", (uint32_t)(temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 441,
          "context": "\"Critical MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 445,
          "context": "\"High MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 450,
          "context": "\"Critical motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 454,
          "context": "\"High motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 459,
          "context": "\"Critical board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 463,
          "context": "\"High board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 479,
          "context": "\"MCU temperature critical\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 484,
          "context": "\"MCU temperature warning\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 493,
          "context": "\"Motor temperature critical\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 498,
          "context": "\"Motor temperature warning\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 507,
          "context": "\"Board temperature critical\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 512,
          "context": "\"Board temperature warning\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1155,
          "context": "float temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1204,
          "context": "motorData[i].temperature = GetMotorTemperature(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1232,
          "context": "if (motorData[i].temperature > MOTOR_TEST_TEMP_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1235,
          "context": "status.message = \"Motor temperature high\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1479,
          "context": "\"ADC conversion error before temperature conversion\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1495,
          "context": "float temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1501,
          "context": "temperature = (voltage * 100.0f);  // Пример преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1507,
          "context": "\"Unknown temperature sensor type\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1513,
          "context": "if (isnan(temperature)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1515,
          "context": "\"Invalid cold junction temperature\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1516,
          "context": "(uint32_t)temperature);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1520,
          "context": "return temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1826,
          "context": "\"ADC conversion error before cold junction temperature\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1834,
          "context": "float temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1840,
          "context": "temperature = (voltage * 100.0f);  // Пример преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1846,
          "context": "\"Unknown temperature sensor type\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1852,
          "context": "if (isnan(temperature)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1854,
          "context": "\"Invalid cold junction temperature\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1855,
          "context": "(uint32_t)temperature);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1859,
          "context": "return temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1879,
          "context": "float temperature = coeffs->a * thermocoupleVoltage * thermocoupleVoltage * thermocoupleVoltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1885,
          "context": "temperature += coldJunctionTemp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1891,
          "context": "if (temperature < MIN_TEMP || temperature > MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1893,
          "context": "\"Thermocouple temperature out of range\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1894,
          "context": "(uint32_t)(temperature * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1898,
          "context": "return temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 37,
          "context": "mpu6050_data.temperature = 25.0f;  // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 46,
          "context": "bmp280_data.temperature = 25.0f;  // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 199,
          "context": "data->temperature = 25.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 25,
          "context": "float temperature;      // Эмуляция температуры мотора"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 56,
          "context": "float temperature;         // Температура MCU (°C)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 22,
          "context": "float temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 29,
          "context": "float temperature; // Температура в градусах Цельсия"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_102",
      "name": "vibration",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1156,
          "context": "float vibration;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1205,
          "context": "motorData[i].vibration = GetMotorVibration(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1242,
          "context": "if (motorData[i].vibration > MOTOR_TEST_VIB_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1245,
          "context": "status.message = \"Motor high vibration\";"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_118",
      "name": "result",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 208,
          "context": "uint32_t result = ADC0_SSFIFO3_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 214,
          "context": "float voltage = (result * 3.3f) / 4096.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1441,
          "context": "ADCResult result = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1445,
          "context": "result.error = ADC_ERROR_NOT_INITIALIZED;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1446,
          "context": "return result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1460,
          "context": "result.error = ADC_ERROR_TIMEOUT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1461,
          "context": "return result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1465,
          "context": "result.value = ADC0_SSFIFO3_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1466,
          "context": "result.error = ADC_ERROR_NONE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1471,
          "context": "return result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1570,
          "context": "SystemTickResult result = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1576,
          "context": "if (result.ticks == 0 || result.ticks > NVIC_ST_RELOAD_R) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1577,
          "context": "result.error = SYSTICK_ERROR_INVALID_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1579,
          "context": "\"Invalid system tick value\", result.ticks);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1582,
          "context": "return result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1618,
          "context": "ElapsedTicksResult result = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1626,
          "context": "result.error = SYSTICK_ERROR_INVALID_CURRENT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1627,
          "context": "return result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1633,
          "context": "result.elapsedTicks = startTicks - currentTicks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1636,
          "context": "result.elapsedTicks = (NVIC_ST_RELOAD_R - currentTicks) + startTicks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1639,
          "context": "return result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1775,
          "context": "ADCResult result = Diagnostics_GetADCValue();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1776,
          "context": "return Diagnostics_ConvertADCToTemp(result);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1920,
          "context": "uint32_t result = ADC1_SSFIFO0_R & 0xFFF;  // 12-bit ADC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1927,
          "context": "float voltage = (result * 3.3f) / 4096.0f;  // Преобразование в вольты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 177,
          "context": "TestResult result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 341,
          "context": "bool Diagnostics_PerformSelfTest(SelfTestResult* result);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_121",
      "name": "NAN",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 11,
          "context": "#ifndef NAN"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 12,
          "context": "#define NAN (0.0f/0.0f)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1481,
          "context": "return NAN;  // Возвращаем NaN при ошибке"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1489,
          "context": "return NAN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1509,
          "context": "return NAN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1768,
          "context": "return NAN;  // Возвращаем NaN для некорректного индекса"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1848,
          "context": "return NAN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1869,
          "context": "return NAN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1895,
          "context": "return NAN;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_127",
      "name": "ADC_ERROR_NOT_INITIALIZED",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1445,
          "context": "result.error = ADC_ERROR_NOT_INITIALIZED;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1526,
          "context": "return ADC_ERROR_NOT_INITIALIZED;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1543,
          "context": "status.error = ADC_ERROR_NOT_INITIALIZED;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 51,
          "context": "ADC_ERROR_NOT_INITIALIZED,"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_128",
      "name": "ADC_ERROR_NONE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1466,
          "context": "result.error = ADC_ERROR_NONE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1477,
          "context": "if (adcResult.error != ADC_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1530,
          "context": "return ADC_ERROR_NONE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1539,
          "context": ".error = ADC_ERROR_NONE"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1824,
          "context": "if (adcResult.error != ADC_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 50,
          "context": "ADC_ERROR_NONE = 0,"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_132",
      "name": "SYSTICK_ERROR_INVALID_START",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1590,
          "context": "return SYSTICK_ERROR_INVALID_START;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 61,
          "context": "SYSTICK_ERROR_INVALID_START,"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_133",
      "name": "SYSTICK_ERROR_DURING_DELAY",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1600,
          "context": "return SYSTICK_ERROR_DURING_DELAY;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 62,
          "context": "SYSTICK_ERROR_DURING_DELAY,"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_134",
      "name": "SYSTICK_ERROR_NONE",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1572,
          "context": ".error = SYSTICK_ERROR_NONE"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1589,
          "context": "if (startTicks.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1599,
          "context": "if (currentTicks.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1611,
          "context": "return SYSTICK_ERROR_NONE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1620,
          "context": ".error = SYSTICK_ERROR_NONE"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1625,
          "context": "if (currentTicksResult.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 59,
          "context": "SYSTICK_ERROR_NONE = 0,"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_144",
      "name": "ADC1_SSFIFO1_R",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 41,
          "context": "#define ADC1_SSFIFO1_R      (*((volatile uint32_t *)(ADC1_BASE + 0x48)))  // FIFO данных SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1761,
          "context": "ADC1_SSFIFO1_R;            // Очистка FIFO"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1763,
          "context": "return ADC1_SSFIFO1_R;     // Возвращаем значение АЦП"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1783,
          "context": "ADC1_SSFIFO1_R;            // Очистка FIFO"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1785,
          "context": "return ADC1_SSFIFO1_R;     // Возвращаем значение АЦП"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1792,
          "context": "ADC1_SSFIFO1_R;            // Очистка FIFO"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1794,
          "context": "return ADC1_SSFIFO1_R;     // Возвращаем значение АЦП"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1801,
          "context": "ADC1_SSFIFO1_R;            // Очистка FIFO"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1803,
          "context": "return ADC1_SSFIFO1_R;     // Возвращаем значение АЦП"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "сравнения",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_161",
      "name": "backupCommAvailable",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1934,
          "context": "static bool backupCommAvailable = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1939,
          "context": "return backupCommAvailable;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_181",
      "name": "0",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 21,
          "context": "#define GPIO_PORTA_BASE        0x40004000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 22,
          "context": "#define GPIO_PORTB_BASE        0x40005000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 23,
          "context": "#define GPIO_PORTC_BASE        0x40006000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 24,
          "context": "#define GPIO_PORTD_BASE        0x40007000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 25,
          "context": "#define GPIO_PORTE_BASE        0x40024000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 26,
          "context": "#define GPIO_PORTF_BASE        0x40025000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 29,
          "context": "#define SYSCTL_RCC2_R            (*((volatile uint32_t *)0x400FE070))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 30,
          "context": "#define SYSCTL_RIS_R             (*((volatile uint32_t *)0x400FE050))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 31,
          "context": "#define SYSCTL_RCGC2_R          (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 34,
          "context": "#define SYSCTL_RCC2_USERCC2     0x80000000  // Use RCC2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 35,
          "context": "#define SYSCTL_RCC2_BYPASS2     0x00000800  // PLL Bypass 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 36,
          "context": "#define SYSCTL_RCC2_PWRDN2      0x00002000  // Power-Down PLL 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 37,
          "context": "#define SYSCTL_RCC2_SYSDIV2_MASK 0x1F800000  // System Clock Divisor 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 38,
          "context": "#define SYSCTL_RCC2_SYSDIV2LSB   0x00400000  // System Clock Divisor 2 LSB"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 41,
          "context": "#define SYSCTL_RCC2_OSCSRC2_MASK_INV 0xFFFFFF8F  // Инвертированная маска для OSCSRC2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 42,
          "context": "#define SYSCTL_RCC2_PWRDN2_MASK_INV  0xFFFFDFFF  // Инвертированная маска для PWRDN2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 43,
          "context": "#define SYSCTL_RCC2_SYSDIV_MASK_INV  0xE07FFFFF  // Инвертированная маска для SYSDIV2 и LSB"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 46,
          "context": "#define SYSCTL_RCC2_OSCSRC2_MASK 0x00000070  // Oscillator Source 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 47,
          "context": "#define SYSCTL_RCC2_OSCSRC2_MO   0x00000000  // Main Oscillator"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 50,
          "context": "#define SYSCTL_RIS_PLLLRIS      0x00000040  // PLL Lock Raw Interrupt Status"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 53,
          "context": "#define SYSCTL_PERIPH_GPIOF    0xf0000805  // GPIO F peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 54,
          "context": "#define SYSCTL_PERIPH_GPIOE    0xf0000804  // GPIO E peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 55,
          "context": "#define SYSCTL_PERIPH_GPIOD    0xf0000803  // GPIO D peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 56,
          "context": "#define SYSCTL_PERIPH_GPIOC    0xf0000802  // GPIO C peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 57,
          "context": "#define SYSCTL_PERIPH_GPIOB    0xf0000801  // GPIO B peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 58,
          "context": "#define SYSCTL_PERIPH_GPIOA    0xf0000800  // GPIO A peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 61,
          "context": "#define GPIO_PORTF_DIR_R       (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x400)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 62,
          "context": "#define GPIO_PORTF_DEN_R       (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x51C)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 63,
          "context": "#define GPIO_PORTF_DATA_R      (*((volatile uint32_t *)(GPIO_PORTF_BASE + 0x3FC)))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 66,
          "context": "#define MAIN_LOOP_FREQ_HZ      200     // Частота основного цикла (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 67,
          "context": "#define TELEMETRY_FREQ_HZ      10      // Частота отправки телеметрии (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 69,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 72,
          "context": "static uint32_t mainLoopCounter = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 80,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 85,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 146,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / TELEMETRY_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 151,
          "context": "if (mainLoopCounter % (MAIN_LOOP_FREQ_HZ / DIAGNOSTIC_FREQ_HZ) == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 182,
          "context": "#define LED_MASK_CLEAR     0xFFFFFFF9  // 1111 1111 1111 1111 1111 1111 1111 1001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 183,
          "context": "#define LED_RED            0x00000002  // Красный LED (PIN_1)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 184,
          "context": "#define LED_BLUE           0x00000004  // Синий LED (PIN_2)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 185,
          "context": "#define LED_GREEN          0x00000008  // Зеленый LED (PIN_3)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 215,
          "context": "if ((mainLoopCounter % 10) < 5) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 250,
          "context": ".hover_time = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 266,
          "context": "0.0f  // Сохраняем текущую высоту"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 283,
          "context": "static float roll_kp = 1.0f, roll_ki = 0.1f, roll_kd = 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 284,
          "context": "static float pitch_kp = 1.0f, pitch_ki = 0.1f, pitch_kd = 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 285,
          "context": "static float yaw_kp = 2.0f, yaw_ki = 0.15f, yaw_kd = 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 286,
          "context": "static float alt_kp = 1.5f, alt_ki = 0.2f, alt_kd = 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 344,
          "context": "telemetry.verticalSpeed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 346,
          "context": "telemetry.gpsStatus = (sensorData.isCalibrated ? 1 : 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 389,
          "context": "Diagnostics_Log(LOG_CRITICAL, DIAG_EVENT_SYSTEM_START, reason, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 392,
          "context": "Communication_SendError(0x01, reason);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 420,
          "context": "Communication_SendStatus(0x00);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 5,
          "context": "static ActuatorsState actuators_state = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 7,
          "context": "static uint32_t system_time_ms = 0; // Эмуляция системного времени"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 16,
          "context": "memset(&actuators_state, 0, sizeof(ActuatorsState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 19,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 20,
          "context": "actuators_state.motors[i].temperature = 25.0f; // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 42,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 49,
          "context": "return 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 73,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 80,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 97,
          "context": "uint16_t pwm_value = (uint16_t)((throttle * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100U + PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 108,
          "context": "int32_t pwm_delta = ((int32_t)yaw * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 153,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 160,
          "context": "return 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 179,
          "context": "uint16_t ascent_pwm = (uint16_t)(PWM_MAX_VALUE * 0.7f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 188,
          "context": "uint16_t descent_pwm = (uint16_t)(PWM_MAX_VALUE * 0.3f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 227,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 231,
          "context": "actuators_state.motors[i].temperature += pwm_factor * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 234,
          "context": "if (actuators_state.motors[i].temperature > 25.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 235,
          "context": "actuators_state.motors[i].temperature -= 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 242,
          "context": "for(int i = 0; i < MOTOR_COUNT; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 244,
          "context": "actuators_state.motors[i].runtime += 10; // Предполагаем вызов каждые 10 мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 9,
          "context": "#define UART_FR_RXFE    0x10    // Флаг пустого буфера приема"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 10,
          "context": "#define UART_FR_TXFF    0x20    // Флаг заполненного буфера передачи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 11,
          "context": "#define UART_FR_BUSY    0x08    // Флаг занятости UART"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 14,
          "context": "#define GPIO_PA0_U0RX   0x01    // UART0 RX на PA0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 15,
          "context": "#define GPIO_PA1_U0TX   0x02    // UART0 TX на PA1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 18,
          "context": "#define COMM_TIMEOUT_MS     1000    // Таймаут соединения (1 секунда)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 19,
          "context": "#define SYSTICK_FREQ_HZ    1000    // Частота системного таймера (1 кГц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 22,
          "context": "#define UART0_DR_R              (*((volatile uint32_t *)0x4000C000))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 23,
          "context": "#define UART0_FR_R              (*((volatile uint32_t *)0x4000C018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 24,
          "context": "#define UART0_IBRD_R           (*((volatile uint32_t *)0x4000C024))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 25,
          "context": "#define UART0_FBRD_R           (*((volatile uint32_t *)0x4000C028))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 26,
          "context": "#define UART0_LCRH_R           (*((volatile uint32_t *)0x4000C02C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 27,
          "context": "#define UART0_CTL_R            (*((volatile uint32_t *)0x4000C030))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 30,
          "context": "#define SYSCTL_RCGCUART_R     (*((volatile uint32_t *)0x400FE104))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 32,
          "context": "#define SYSCTL_PRGPIO_R       (*((volatile uint32_t *)0x400FEA08))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 50,
          "context": "} commState = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 66,
          "context": "SYSCTL_RCGCUART_R |= (1U << 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 67,
          "context": "SYSCTL_RCGCGPIO_R |= (1U << 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 70,
          "context": "while((SYSCTL_PRGPIO_R & (1U << 0)) == 0) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 73,
          "context": "GPIO_PORTA_AFSEL_R |= (GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 74,
          "context": "GPIO_PORTA_DEN_R |= (GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 75,
          "context": "GPIO_PORTA_AMSEL_R &= ~(GPIO_PA0_U0RX | GPIO_PA1_U0TX);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 76,
          "context": "GPIO_PORTA_PCTL_R = (GPIO_PORTA_PCTL_R & 0xFFFFFF00) | 0x00000011;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 79,
          "context": "UART0_CTL_R &= ~0x01;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 82,
          "context": "uint32_t systemClock = 16000000; // 16 MHz"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 84,
          "context": "uint32_t brdf = (uint32_t)(((float)systemClock / (16.0f * (float)baudRate) - brdi) * 64.0f + 0.5f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 86,
          "context": "UART0_IBRD_R = brdi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 87,
          "context": "UART0_FBRD_R = brdf;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 90,
          "context": "UART0_LCRH_R = 0x60;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 93,
          "context": "UART0_CTL_R |= 0x01;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 99,
          "context": "uint16_t count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 101,
          "context": "if (buffer == NULL || maxLength == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 102,
          "context": "return 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 106,
          "context": "if (UART0_FR_R & UART_FR_RXFE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 109,
          "context": "buffer[count] = (uint8_t)(UART0_DR_R & 0xFF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 119,
          "context": "if (data == NULL || length == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 123,
          "context": "for (i = 0; i < length; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 124,
          "context": "while (UART0_FR_R & UART_FR_TXFF) {}  // Ждем освобождения буфера передачи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 125,
          "context": "UART0_DR_R = (uint32_t)data[i];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 137,
          "context": "memset(&commState, 0, sizeof(commState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 139,
          "context": "commState.telemetryRateHz = 10; // По умолчанию 10 Гц"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 164,
          "context": "if (bytesReceived > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 168,
          "context": "uint16_t processedIndex = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 191,
          "context": "if (processedIndex > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 214,
          "context": "if (data != NULL && length > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 251,
          "context": "errorData.message[sizeof(errorData.message) - 1] = '\\0';"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 253,
          "context": "errorData.message[0] = '\\0';"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 265,
          "context": "CommandType cmd = packet->data[0];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 296,
          "context": "Communication_SendError(0x01, \"Unknown command\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 356,
          "context": "NVIC_ST_CTRL_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 359,
          "context": "NVIC_ST_RELOAD_R = SystemCoreClock / 1000 - 1;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 362,
          "context": "NVIC_ST_CURRENT_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 382,
          "context": "Communication_SendError(0x03, \"Connection lost\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 388,
          "context": "Communication_SendStatus(0x01); // 0x01 - связь восстановлена"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 395,
          "context": "uint16_t checksum = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 396,
          "context": "for(uint16_t i = 0; i < length; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 425,
          "context": "Communication_Send(PACKET_TYPE_HEARTBEAT, NULL, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 441,
          "context": "Communication_SendError(0x02, \"Unknown packet type\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 452,
          "context": "if(length) *length = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 8,
          "context": "#include \"D:/keil/pack/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 12,
          "context": "#define NAN (0.0f/0.0f)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 16,
          "context": "#define SYSCTL_BASE            0x400FE000  // Базовый адрес системного контроллера"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 17,
          "context": "#define SYSCTL_RCGCWD_R        (*((volatile uint32_t *)(SYSCTL_BASE + 0x600)))  // Регистр тактирования Watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 18,
          "context": "#define SYSCTL_PRWD_R          (*((volatile uint32_t *)(SYSCTL_BASE + 0xA00)))  // Регистр готовности Watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 21,
          "context": "#define NVIC_BASE              0xE000E000  // Базовый адрес контроллера прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 22,
          "context": "#define NVIC_PRIO_R(n)         (*((volatile uint32_t *)(NVIC_BASE + 0x400 + ((n) * 4))))  // Регистры приоритета прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 25,
          "context": "#define NVIC_ST_CTRL_R          (*((volatile uint32_t *)0xE000E010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 26,
          "context": "#define NVIC_ST_RELOAD_R        (*((volatile uint32_t *)0xE000E014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 27,
          "context": "#define NVIC_ST_CURRENT_R       (*((volatile uint32_t *)0xE000E018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 30,
          "context": "#ifndef ADC0_SSMUX1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 31,
          "context": "#define ADC0_SSMUX1_R          (*((volatile uint32_t *)0x40038044))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 33,
          "context": "#ifndef ADC0_SSCTL1_R"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 34,
          "context": "#define ADC0_SSCTL1_R          (*((volatile uint32_t *)0x40038048))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 38,
          "context": "#define ADC1_BASE            0x40039000  // Базовый адрес ADC1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 39,
          "context": "#define ADC1_SSMUX1_R       (*((volatile uint32_t *)(ADC1_BASE + 0x40)))  // Мультиплексор выборки SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 40,
          "context": "#define ADC1_SSCTL1_R       (*((volatile uint32_t *)(ADC1_BASE + 0x44)))  // Управление и статус SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 41,
          "context": "#define ADC1_SSFIFO1_R      (*((volatile uint32_t *)(ADC1_BASE + 0x48)))  // FIFO данных SS1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 42,
          "context": "#define ADC1_ISC_R          (*((volatile uint32_t *)(ADC1_BASE + 0x50)))  // Регистр очистки прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 45,
          "context": "#define ADC0_ACTSS_R           (*((volatile uint32_t *)0x40038000))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 46,
          "context": "#define ADC0_EMUX_R            (*((volatile uint32_t *)0x40038014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 47,
          "context": "#define ADC0_SSMUX3_R          (*((volatile uint32_t *)0x400380A0))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 48,
          "context": "#define ADC0_SSCTL3_R          (*((volatile uint32_t *)0x400380A4))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 49,
          "context": "#define ADC0_PSSI_R            (*((volatile uint32_t *)0x40038028))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 50,
          "context": "#define ADC0_RIS_R             (*((volatile uint32_t *)0x40038004))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 51,
          "context": "#define ADC0_ISC_R             (*((volatile uint32_t *)0x4003800C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 52,
          "context": "#define ADC0_SSFIFO3_R         (*((volatile uint32_t *)0x400380A8))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 53,
          "context": "#define ADC0_PC_R              (*((volatile uint32_t *)0x40038FC4))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 56,
          "context": "#define ADC_PSSI_SS1        0x00000002  // SS1 Initiate"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 57,
          "context": "#define ADC_ACTSS_ASEN1     0x00000002  // SS1 Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 58,
          "context": "#define ADC_EMUX_EM1_M      0x000000F0  // SS1 Trigger Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 61,
          "context": "#define ADC_AIN0   0   // Канал АЦП для температур микроконтроллера"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 67,
          "context": "#define ADC_ISC_IN1 0x02  // Флаг прерывания для канала 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 89,
          "context": "} diagState = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 97,
          "context": "static volatile uint32_t systemMillis = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 120,
          "context": "NVIC_ST_CTRL_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 123,
          "context": "NVIC_ST_RELOAD_R = 16000 - 1;  // (16MHz / 1000Hz) - 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 126,
          "context": "NVIC_ST_CURRENT_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 132,
          "context": "NVIC_ST_CTRL_R = 0x07;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 154,
          "context": "memset(&diagState, 0, sizeof(diagState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 163,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 164,
          "context": "diagState.startTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 165,
          "context": "diagState.logCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 166,
          "context": "diagState.watchdogTimeout = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 169,
          "context": "memset(&diagState.powerState, 0, sizeof(PowerState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 170,
          "context": "memset(&diagState.thermalState, 0, sizeof(ThermalState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 173,
          "context": "diagState.perfStartTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 174,
          "context": "diagState.perfMaxTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 175,
          "context": "diagState.perfMinTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 176,
          "context": "diagState.perfTotalTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 177,
          "context": "diagState.perfCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 187,
          "context": "if (NVIC_APINT_R & 0x10000) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 188,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_WATCHDOG_RESET, \"System reset by watchdog\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 191,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START, \"Diagnostics initialized\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 202,
          "context": "ADC0_PSSI_R = ADC_PSSI_SS3;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 205,
          "context": "while(!(ADC0_RIS_R & ADC_RIS_INR3)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 208,
          "context": "uint32_t result = ADC0_SSFIFO3_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 211,
          "context": "ADC0_ISC_R = ADC_RIS_INR3;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 214,
          "context": "float voltage = (result * 3.3f) / 4096.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 221,
          "context": "diagState.powerState.batteryLevel = 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 222,
          "context": "} else if (voltage <= 9.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 223,
          "context": "diagState.powerState.batteryLevel = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 225,
          "context": "diagState.powerState.batteryLevel = (uint8_t)((voltage - 9.0f) * 27.78f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 230,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_BATTERY_CRITICAL, \"Battery critically low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 231,
          "context": "} else if (voltage <= 10.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 232,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_BATTERY_LOW, \"Battery low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 256,
          "context": "\"Attempt to get power state with NULL pointer\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 272,
          "context": "if (state->batteryLevel < 20.0f) {  // Порог низкого заряда 20%"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 290,
          "context": "SYSCTL_RCGCADC_R |= SYSCTL_RCGCADC_R0;    // ADC0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 294,
          "context": "while(!(SYSCTL_PRADC_R & SYSCTL_PRADC_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 302,
          "context": "ADC0_ACTSS_R &= ~ADC_ACTSS_ASEN1;          // Отключаем секвенсор для настройки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 303,
          "context": "ADC0_EMUX_R &= ~ADC_EMUX_EM1_M;            // Программный запуск"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 304,
          "context": "ADC0_SSMUX1_R = (0 << 0) |                 // Канал 0 (напряжение)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 307,
          "context": "ADC0_SSCTL1_R = (0 << 0) |                // Первый канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 308,
          "context": "(0 << 4) |                // Второй канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 309,
          "context": "(ADC_SSCTL0_IE2 |         // Прерывание после последнего"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 310,
          "context": "ADC_SSCTL0_END2);        // Последний канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 311,
          "context": "ADC0_ACTSS_R |= ADC_ACTSS_ASEN1;          // Включаем секвенсор"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 314,
          "context": "ADC0_SAC_R = ADC_SAC_AVG_64X;             // 64x усреднение"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 317,
          "context": "ADC0_IM_R |= ADC_IM_MASK1;                // Маска прерывания секвенсора 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 318,
          "context": "NVIC_EN0_R |= (1 << (INT_ADC0SS1 - 16));  // Включаем прерывание в NVIC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 322,
          "context": "void ADC0SS1_Handler(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 324,
          "context": "uint32_t voltage_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 325,
          "context": "uint32_t current_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 326,
          "context": "uint32_t temp_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 330,
          "context": "float current = ((current_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / CURRENT_SENSE_MV_A;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 331,
          "context": "float temp = ((temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_MV_C;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 340,
          "context": "(BATTERY_MAX_VOLTAGE - BATTERY_MIN_VOLTAGE) * 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 341,
          "context": "diagState.powerState.batteryLevel = (battery_level > 100.0f) ? 100.0f :"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 342,
          "context": "(battery_level < 0.0f) ? 0.0f : battery_level;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 350,
          "context": "\"Critical battery voltage\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 354,
          "context": "\"Low battery voltage\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 359,
          "context": "\"Critical battery temperature\", (uint32_t)(temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 363,
          "context": "ADC0_ISC_R = ADC_ISC_IN1;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 385,
          "context": "ADC1_ACTSS_R &= ~ADC_ACTSS_ASEN0;          // Отключаем секвенсор для настройки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 386,
          "context": "ADC1_EMUX_R &= ~ADC_EMUX_EM0_M;            // Программный запуск"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 389,
          "context": "ADC1_SSMUX0_R = (TEMP_MCU_CHANNEL << 0)   | // Встроенный сенсор MCU"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 395,
          "context": "ADC1_SSCTL0_R = (0 << 0)                   | // Первый канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 396,
          "context": "(0 << 4)                   | // Второй канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 397,
          "context": "(0 << 8)                   | // Третий канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 398,
          "context": "(ADC_SSCTL0_IE3 |           // Прерывание после последнего"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 399,
          "context": "ADC_SSCTL0_END3);          // Последний канал"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 404,
          "context": "ADC1_ACTSS_R |= ADC_ACTSS_ASEN0;           // Включаем секвенсор"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 410,
          "context": "ADC1_IM_R |= ADC_IM_MASK0;                 // Маска прерывания секвенсора 0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 411,
          "context": "NVIC_EN1_R |= (1 << (INT_ADC1SS0 - 48));   // Включаем прерывание в NVIC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 415,
          "context": "void ADC1SS0_Handler(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 417,
          "context": "uint32_t mcu_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 418,
          "context": "uint32_t motors_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 419,
          "context": "uint32_t board_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 420,
          "context": "uint32_t ambient_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 425,
          "context": "float mcu_temp = ((mcu_voltage * 1000.0f) / MCU_TEMP_SLOPE) + MCU_TEMP_OFFSET;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 428,
          "context": "float motors_temp = ((motors_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 429,
          "context": "float board_temp = ((board_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 430,
          "context": "float ambient_temp = ((ambient_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 434,
          "context": "diagState.thermalState.motorTemps[0] = motors_temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 441,
          "context": "\"Critical MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 445,
          "context": "\"High MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 450,
          "context": "\"Critical motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 454,
          "context": "\"High motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 459,
          "context": "\"Critical board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 463,
          "context": "\"High board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 467,
          "context": "ADC1_ISC_R = ADC_ISC_IN0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 480,
          "context": "(uint32_t)(diagState.thermalState.mcuTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 485,
          "context": "(uint32_t)(diagState.thermalState.mcuTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 489,
          "context": "for (int i = 0; i < 4; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 494,
          "context": "(uint32_t)(diagState.thermalState.motorTemps[i] * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 499,
          "context": "(uint32_t)(diagState.thermalState.motorTemps[i] * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 508,
          "context": "(uint32_t)(diagState.thermalState.boardTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 513,
          "context": "(uint32_t)(diagState.thermalState.boardTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 519,
          "context": "for (int i = 0; i < 4; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 557,
          "context": "diagState.logCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 558,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 577,
          "context": "diagState.thermalState.motorTemps[0] >= TEMP_MOTORS_WARNING ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 599,
          "context": "debugBuffer[len + 2] = '\\0';"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 653,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 662,
          "context": "SYSCTL_RCGCWD_R |= SYSCTL_RCGCWD_R0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 665,
          "context": "while(!(SYSCTL_PRWD_R & SYSCTL_PRWD_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 668,
          "context": "WATCHDOG0_LOCK_R = 0x1ACCE551;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 671,
          "context": "WATCHDOG0_CTL_R &= ~WDT_CTL_INTEN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 675,
          "context": "uint32_t reload_value = timeout_ms * 1000; // преобразуем мс в тики"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 678,
          "context": "WATCHDOG0_LOAD_R = reload_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 683,
          "context": "WATCHDOG0_CTL_R |= (WDT_CTL_RESEN | WDT_CTL_INTEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 686,
          "context": "NVIC_EN0_R |= (1 << INT_WATCHDOG);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 689,
          "context": "NVIC_PRI0_R = (NVIC_PRI0_R & 0xFFFFFFF0) | 0x0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 695,
          "context": "WATCHDOG0_ICR_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 702,
          "context": "void WDT0_Handler(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 704,
          "context": "WATCHDOG0_ICR_R = WDT_ICR_M;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 706,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_WATCHDOG_RESET, \"Watchdog reset occurred\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 712,
          "context": "WATCHDOG0_ICR_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 718,
          "context": "return (WATCHDOG0_RIS_R & WDT_RIS_WDTRIS) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 726,
          "context": "static uint32_t savedPeripheralState = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 779,
          "context": "NVIC_EN0_R |= (1 << INT_UART0);       // UART0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 780,
          "context": "NVIC_EN0_R |= (1 << INT_WTIMER0A);    // WatchDog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 783,
          "context": "GPIO_PORTA_IM_R |= 0x03;              // Разрешаем прерывания на PA0-PA1 (UART)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 784,
          "context": "GPIO_PORTA_IEV_R &= ~0x03;            // Прерывание по спаду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 793,
          "context": "\"Entering low power mode\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 819,
          "context": "\"Exiting low power mode\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 831,
          "context": "if (diagState.perfCount == 0 || elapsed > diagState.perfMaxTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 834,
          "context": "if (diagState.perfCount == 0 || elapsed < diagState.perfMinTime) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 845,
          "context": "diagState.perfMaxTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 846,
          "context": "diagState.perfMinTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 847,
          "context": "diagState.perfTotalTime = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 848,
          "context": "diagState.perfCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 874,
          "context": "SendDebugMessage(\"Battery: %.2fV (%.0f%%)\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 886,
          "context": "diagState.thermalState.motorTemps[0],"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 895,
          "context": "if (diagState.perfCount > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 905,
          "context": "if (diagState.logCount > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 918,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START, \"Running self-test\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 927,
          "context": "#define POWER_ERR_VOLTAGE_LOW    0x0001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 928,
          "context": "#define POWER_ERR_VOLTAGE_HIGH   0x0002"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 929,
          "context": "#define POWER_ERR_CURRENT_HIGH   0x0003"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 930,
          "context": "#define POWER_ERR_TEMP_HIGH      0x0004"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 931,
          "context": "#define POWER_ERR_SUPPLY_FAIL    0x0005"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 934,
          "context": "#define POWER_TEST_VOLTAGE_MIN   10.5f   // В"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 936,
          "context": "#define POWER_TEST_CURRENT_MAX   15.0f   // А"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 937,
          "context": "#define POWER_TEST_TEMP_MAX      45.0f   // °C"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 943,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 944,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 945,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 955,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 964,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 976,
          "context": "status.data = (uint32_t)(batteryCurrent * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 988,
          "context": "status.data = (uint32_t)(batteryTemp * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 998,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1021,
          "context": "#define SENSOR_ERR_IMU_FAIL      0x0101"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1022,
          "context": "#define SENSOR_ERR_IMU_SELFTEST  0x0102"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1023,
          "context": "#define SENSOR_ERR_IMU_RANGE     0x0103"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1024,
          "context": "#define SENSOR_ERR_BARO_FAIL     0x0104"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1025,
          "context": "#define SENSOR_ERR_BARO_RANGE    0x0105"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1026,
          "context": "#define SENSOR_ERR_MAG_FAIL      0x0106"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1027,
          "context": "#define SENSOR_ERR_MAG_RANGE     0x0107"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1028,
          "context": "#define SENSOR_ERR_GPS_FAIL      0x0108"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1029,
          "context": "#define SENSOR_ERR_ADC_FAIL      0x0109"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1032,
          "context": "#define IMU_TEST_ACCEL_MAX      4.0f    // g"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1033,
          "context": "#define IMU_TEST_GYRO_MAX       50.0f   // deg/s"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1034,
          "context": "#define BARO_TEST_ALT_MIN       -100.0f // м"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1035,
          "context": "#define BARO_TEST_ALT_MAX       5000.0f // м"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1036,
          "context": "#define MAG_TEST_FIELD_MIN      0.2f    // Гаусс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1037,
          "context": "#define MAG_TEST_FIELD_MAX      0.8f    // Гаусс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1041,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1042,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1043,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1046,
          "context": "IMUData imuData = {0};  // Добавляем объявление переменной"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1062,
          "context": "status.data = (uint32_t)(accel_magnitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1073,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1084,
          "context": "status.data = (uint32_t)(altitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1095,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1102,
          "context": ".magX = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1103,
          "context": ".magY = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1104,
          "context": ".magZ = 0.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1115,
          "context": "status.data = (uint32_t)(mag_magnitude * 1000);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1126,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1136,
          "context": "#define MOTOR_ERR_NOT_RESPONDING 0x0201"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1137,
          "context": "#define MOTOR_ERR_HIGH_CURRENT   0x0202"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1138,
          "context": "#define MOTOR_ERR_NO_ROTATION    0x0203"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1139,
          "context": "#define MOTOR_ERR_VIBRATION      0x0204"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1140,
          "context": "#define MOTOR_ERR_TEMP_HIGH      0x0205"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1141,
          "context": "#define MOTOR_ERR_ESC_FAIL       0x0206"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1144,
          "context": "#define MOTOR_TEST_SPEED         10.0f   // % от максимальной скорости"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1145,
          "context": "#define MOTOR_TEST_CURRENT_MAX   2.0f    // А на мотор"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1146,
          "context": "#define MOTOR_TEST_TEMP_MAX      60.0f   // °C"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1147,
          "context": "#define MOTOR_TEST_VIB_MAX       2.0f    // g"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1148,
          "context": "#define MOTOR_TEST_TIMEOUT       1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1161,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1162,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1163,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1173,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1180,
          "context": "for (int i = 0; i < 4; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1182,
          "context": "memset(&motorData[i], 0, sizeof(MotorTestData));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1199,
          "context": "DelayMs(500);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1215,
          "context": "SetMotorSpeed(i, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1220,
          "context": "if (motorData[i].rpm < 100.0f) {  // Минимальные обороты для теста"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1227,
          "context": "SetMotorSpeed(i, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1252,
          "context": "SetMotorSpeed(i, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1255,
          "context": "DelayMs(500);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1273,
          "context": "#define COMM_ERR_RC_FAIL        0x0301"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1274,
          "context": "#define COMM_ERR_RC_QUALITY     0x0302"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1275,
          "context": "#define COMM_ERR_TELEMETRY_FAIL 0x0303"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1276,
          "context": "#define COMM_ERR_BACKUP_FAIL    0x0304"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1279,
          "context": "#define SAFETY_ERR_WATCHDOG     0x0401"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1280,
          "context": "#define SAFETY_ERR_EEPROM       0x0402"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1281,
          "context": "#define SAFETY_ERR_FLASH        0x0403"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1282,
          "context": "#define SAFETY_ERR_PARACHUTE    0x0404"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1283,
          "context": "#define SAFETY_ERR_KILLSWITCH   0x0405"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1286,
          "context": "#define RC_TEST_TIMEOUT         1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1288,
          "context": "#define TELEMETRY_TEST_TIMEOUT  1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1292,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1293,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1294,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1317,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1351,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1361,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1371,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1372,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1373,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1382,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1393,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1404,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1416,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1428,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1441,
          "context": "ADCResult result = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1450,
          "context": "ADC0_PSSI_R = 0x0008;  // Запуск SS3"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1453,
          "context": "uint32_t timeout = 10000;  // Примерно 10000 циклов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1454,
          "context": "while((ADC0_RIS_R & 0x08) == 0 && timeout > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1459,
          "context": "if (timeout == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1465,
          "context": "result.value = ADC0_SSFIFO3_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1469,
          "context": "ADC0_ISC_R = 0x0008;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1485,
          "context": "if (adcResult.value == 0 || adcResult.value >= ADC_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1493,
          "context": "float voltage = (adcResult.value * 3.3f) / 4096.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1501,
          "context": "temperature = (voltage * 100.0f);  // Пример преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1517,
          "context": "return 25.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1529,
          "context": "ADC0_PSSI_R = 0x0008;  // Запуск SS3"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1547,
          "context": "status.complete = (ADC0_RIS_R & 0x08) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1550,
          "context": "static uint32_t conversionAttempts = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1551,
          "context": "const uint32_t MAX_CONVERSION_ATTEMPTS = 1000;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1557,
          "context": "conversionAttempts = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1560,
          "context": "conversionAttempts = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1576,
          "context": "if (result.ticks == 0 || result.ticks > NVIC_ST_RELOAD_R) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1594,
          "context": "uint32_t elapsedTicks = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1619,
          "context": ".elapsedTicks = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1644,
          "context": ".magX = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1645,
          "context": ".magY = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1646,
          "context": ".magZ = 0.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1651,
          "context": "memset(&selfTestResult, 0, sizeof(SelfTestResult));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1652,
          "context": "selfTestResult.totalErrors = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1653,
          "context": "selfTestResult.totalWarnings = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1665,
          "context": "selfTestResult.powerTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1666,
          "context": "selfTestResult.sensorTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1667,
          "context": "selfTestResult.motorTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1668,
          "context": "selfTestResult.batteryTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1669,
          "context": "selfTestResult.commTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1670,
          "context": "selfTestResult.safetyTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1738,
          "context": "if (selfTestResult.totalErrors > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1745,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SELF_TEST, selfTestResult.message, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1750,
          "context": "#define ADC_CHANNEL_MCU_TEMP         ADC_AIN0   // Канал АЦП для температур"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1759,
          "context": "ADC1_SSMUX1_R = ADC_AIN0;  // Выбираем канал AIN0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1760,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1767,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1782,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1791,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1800,
          "context": "ADC1_SSCTL1_R = 0x06;      // Установка флагов завершения и сравнения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1810,
          "context": "[THERMOCOUPLE_TYPE_K] = {0.0, 39.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1811,
          "context": "[THERMOCOUPLE_TYPE_J] = {0.0, 35.0, -0.00015, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1812,
          "context": "[THERMOCOUPLE_TYPE_T] = {0.0, 40.0, -0.0002, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1813,
          "context": "[THERMOCOUPLE_TYPE_E] = {0.0, 38.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1814,
          "context": "[THERMOCOUPLE_TYPE_N] = {0.0, 37.0, -0.00012, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1815,
          "context": "[THERMOCOUPLE_TYPE_R] = {0.0, 36.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1816,
          "context": "[THERMOCOUPLE_TYPE_S] = {0.0, 35.0, -0.00015, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1817,
          "context": "[THERMOCOUPLE_TYPE_B] = {0.0, 34.0, -0.0002, 0.0}      // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1828,
          "context": "return 25.0f;  // Возвращаем стандартную температур окружающей среды"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1832,
          "context": "float voltage = (adcResult.value * 3.3f) / 4096.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1840,
          "context": "temperature = (voltage * 100.0f);  // Пример преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1856,
          "context": "return 25.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1865,
          "context": "if (type < 0 || type >= THERMOCOUPLE_TYPE_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1888,
          "context": "const float MIN_TEMP = -200.0f;  // Минимальная температур для термопар"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1889,
          "context": "const float MAX_TEMP = 1800.0f;  // Максимальная температур для термопар"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1894,
          "context": "(uint32_t)(temperature * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1904,
          "context": "if (motorIndex < 0 || motorIndex >= MAX_MOTORS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1905,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1920,
          "context": "uint32_t result = ADC1_SSFIFO0_R & 0xFFF;  // 12-bit ADC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1927,
          "context": "float voltage = (result * 3.3f) / 4096.0f;  // Преобразование в вольты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1928,
          "context": "float current = (voltage * 20.0f) / 3.3f;   // Преобразование в амперы"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1935,
          "context": "static uint32_t lastBackupCommTest = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1947,
          "context": "if (currentTime - lastBackupCommTest < 1000) {  // Тестируем не чаще раза в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1954,
          "context": "uint8_t testPacket[] = {0xAA, 0x55, 0x00, 0xFF};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1964,
          "context": "while (GetCurrentTime() - startTime < 100) {  // Таймаут 100 мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1967,
          "context": "if (response[0] == 0x55 && response[1] == 0xAA &&"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1968,
          "context": "response[2] == 0xFF && response[3] == 0x00) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1996,
          "context": "uint32_t originalLoad = WATCHDOG0_LOAD_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1997,
          "context": "uint32_t originalCtl = WATCHDOG0_CTL_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2000,
          "context": "uint32_t testTimeout = SystemCoreClock / 10;  // 100мс при текущей частоте"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2003,
          "context": "WATCHDOG0_LOCK_R = 0x1ACCE551;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2006,
          "context": "WATCHDOG0_CTL_R &= ~(WDT_CTL_INTEN | WDT_CTL_RESEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2009,
          "context": "WATCHDOG0_LOAD_R = testTimeout;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2014,
          "context": "WATCHDOG0_CTL_R |= (WDT_CTL_RESEN | WDT_CTL_INTEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2017,
          "context": "NVIC_EN0_R |= (1 << INT_WATCHDOG);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2020,
          "context": "NVIC_PRI0_R = (NVIC_PRI0_R & 0xFFFFFFF0) | 0x0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2023,
          "context": "diagState.watchdogTimeout = 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2026,
          "context": "WATCHDOG0_ICR_R = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2029,
          "context": "\"Watchdog initialized\", 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2037,
          "context": "WATCHDOG0_LOAD_R = originalLoad;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2038,
          "context": "WATCHDOG0_CTL_R = originalCtl;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2055,
          "context": "float GetBaroAltitude(void) { return 0.0f; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2056,
          "context": "uint16_t GetMotorRPM(void) { return 0; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2057,
          "context": "float GetMotorVibration(void) { return 0.0f; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2058,
          "context": "uint8_t GetRCLinkQuality(void) { return 100; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2068,
          "context": "return 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2072,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2079,
          "context": "[THERMOCOUPLE_TYPE_K] = {0.0, 39.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2080,
          "context": "[THERMOCOUPLE_TYPE_J] = {0.0, 35.0, -0.00015, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2081,
          "context": "[THERMOCOUPLE_TYPE_T] = {0.0, 40.0, -0.0002, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2082,
          "context": "[THERMOCOUPLE_TYPE_E] = {0.0, 38.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2083,
          "context": "[THERMOCOUPLE_TYPE_N] = {0.0, 37.0, -0.00012, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2084,
          "context": "[THERMOCOUPLE_TYPE_R] = {0.0, 36.0, -0.0001, 0.0},     // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2085,
          "context": "[THERMOCOUPLE_TYPE_S] = {0.0, 35.0, -0.00015, 0.0},    // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2086,
          "context": "[THERMOCOUPLE_TYPE_B] = {0.0, 34.0, -0.0002, 0.0}      // Приблизительные коэффициенты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 5,
          "context": "*((volatile uint32_t *)(port + 0x400)) = pins;  // GPIO_O_DIR"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 7,
          "context": "*((volatile uint32_t *)(port + 0x51C)) = pins;  // GPIO_O_DEN"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 12,
          "context": "SYSCTL_RCGC2_R |= (peripheral & 0x000000FF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 17,
          "context": "return (SYSCTL_RCGC2_R & (peripheral & 0x000000FF)) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 6,
          "context": "#define DEG_TO_RAD(x) ((x) * 0.017453292519943295)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 7,
          "context": "#define RAD_TO_DEG(x) ((x) * 57.295779513082323)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 10,
          "context": "#define EARTH_RADIUS 6371000.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 13,
          "context": "static NavigationState nav_state = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 15,
          "context": "static uint8_t waypoint_count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 16,
          "context": "static uint8_t current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 17,
          "context": "static GPSPosition home_position = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 25,
          "context": "memset(&nav_state, 0, sizeof(NavigationState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 26,
          "context": "memset(waypoints, 0, sizeof(waypoints));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 27,
          "context": "waypoint_count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 28,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 33,
          "context": "nav_state.heading = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 34,
          "context": "nav_state.ground_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 35,
          "context": "nav_state.vertical_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 81,
          "context": "memset(waypoints, 0, sizeof(waypoints));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 82,
          "context": "waypoint_count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 83,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 100,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 102,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 111,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 118,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 165,
          "context": "float speed_deg = speed / (EARTH_RADIUS * DEG_TO_RAD(1.0f));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 184,
          "context": "vertical_speed = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 187,
          "context": "vertical_speed = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 195,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 213,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 233,
          "context": "if (position->latitude < -90.0f || position->latitude > 90.0f ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 234,
          "context": "position->longitude < -180.0f || position->longitude > 180.0f ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 249,
          "context": "return distance <= 1000.0f; // Безопасная зона - 1 км от дома"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 261,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 271,
          "context": "if (!nav_state.navigation_active || waypoint_count == 0 ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 295,
          "context": "while (heading < 0.0f) heading += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 296,
          "context": "while (heading >= 360.0f) heading -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 11,
          "context": "bool mpu6050_initialized;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 12,
          "context": "bool bmp280_initialized;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 16,
          "context": ".mpu6050_initialized = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 17,
          "context": ".bmp280_initialized = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 18,
          "context": ".current_altitude = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 19,
          "context": ".rotation_angle = 0.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 23,
          "context": "static MPU6050_Data mpu6050_data = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 24,
          "context": "static BMP280_Data bmp280_data = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 27,
          "context": "static float vertical_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 29,
          "context": "void MPU6050_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 31,
          "context": "mpu6050_data.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 32,
          "context": "mpu6050_data.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 33,
          "context": "mpu6050_data.accel_z = 1.0f;  // 1g в состоянии покоя"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 34,
          "context": "mpu6050_data.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 35,
          "context": "mpu6050_data.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 36,
          "context": "mpu6050_data.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 37,
          "context": "mpu6050_data.temperature = 25.0f;  // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 39,
          "context": "sensor_state.mpu6050_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 42,
          "context": "void BMP280_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 44,
          "context": "bmp280_data.pressure = 1013.25f;  // Стандартное атмосферное давление (гПа)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 45,
          "context": "bmp280_data.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 46,
          "context": "bmp280_data.temperature = 25.0f;  // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 48,
          "context": "sensor_state.bmp280_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 51,
          "context": "void MPU6050_Read(MPU6050_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 52,
          "context": "if (!sensor_state.mpu6050_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 57,
          "context": "*data = mpu6050_data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 60,
          "context": "void BMP280_Read(BMP280_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 61,
          "context": "if (!sensor_state.bmp280_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 66,
          "context": "*data = bmp280_data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 69,
          "context": "void MPU6050_Calibrate(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 71,
          "context": "mpu6050_data.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 72,
          "context": "mpu6050_data.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 73,
          "context": "mpu6050_data.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 74,
          "context": "mpu6050_data.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 75,
          "context": "mpu6050_data.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 76,
          "context": "mpu6050_data.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 79,
          "context": "void BMP280_Calibrate(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 81,
          "context": "bmp280_data.pressure = 1013.25f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 82,
          "context": "bmp280_data.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 88,
          "context": "mpu6050_data.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 89,
          "context": "mpu6050_data.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 90,
          "context": "mpu6050_data.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 91,
          "context": "mpu6050_data.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 92,
          "context": "mpu6050_data.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 93,
          "context": "mpu6050_data.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 96,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 97,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 98,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f); // Примерное изменение давления с высотой"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 103,
          "context": "vertical_speed = 2.0f; // м/с"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 104,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f; // Предполагаем вызов каждые 100мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 106,
          "context": "mpu6050_data.accel_z = 1.2f; // Повышенная нагрузка при наборе высоты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 107,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 108,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 114,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 115,
          "context": "if (sensor_state.current_altitude < 0.0f) sensor_state.current_altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 117,
          "context": "mpu6050_data.accel_z = 0.8f; // Пониженная нагрузка при снижении"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 118,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 119,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 124,
          "context": "sensor_state.rotation_angle += 45.0f * 0.1f; // 45 градусов в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 125,
          "context": "if (sensor_state.rotation_angle >= 360.0f) sensor_state.rotation_angle -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 127,
          "context": "mpu6050_data.gyro_z = 45.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 128,
          "context": "mpu6050_data.accel_x = (float)sin(sensor_state.rotation_angle * 3.14159f / 180.0f) * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 129,
          "context": "mpu6050_data.accel_y = (float)cos(sensor_state.rotation_angle * 3.14159f / 180.0f) * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 134,
          "context": "mpu6050_data.accel_x = 0.2f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 135,
          "context": "mpu6050_data.gyro_y = -5.0f; // Небольшой наклон вперед"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 138,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 139,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 140,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 143,
          "context": "void Sensors_GetIMUData(MPU6050_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 146,
          "context": "*data = mpu6050_data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 152,
          "context": "MPU6050_Data imu;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 157,
          "context": "static float filteredRoll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 158,
          "context": "static float filteredPitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 159,
          "context": "static float filteredYaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 162,
          "context": "float accelRoll = atan2f(imu.accel_y, imu.accel_z) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 163,
          "context": "float accelPitch = atan2f(-imu.accel_x, sqrtf(imu.accel_y * imu.accel_y + imu.accel_z * imu.accel_z)) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 166,
          "context": "float dt = 0.01f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 167,
          "context": "filteredRoll = 0.96f * (filteredRoll + imu.gyro_x * dt) + 0.04f * accelRoll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 168,
          "context": "filteredPitch = 0.96f * (filteredPitch + imu.gyro_y * dt) + 0.04f * accelPitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 172,
          "context": "while (filteredYaw >= 360.0f) filteredYaw -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 173,
          "context": "while (filteredYaw < 0.0f) filteredYaw += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 183,
          "context": "data->imu.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 184,
          "context": "data->imu.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 185,
          "context": "data->imu.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 186,
          "context": "data->imu.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 187,
          "context": "data->imu.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 188,
          "context": "data->imu.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 189,
          "context": "data->baro.pressure = 1013.25f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 190,
          "context": "data->baro.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 195,
          "context": "void Sensors_GetBaroData(BMP280_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 197,
          "context": "data->pressure = 1013.25f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 198,
          "context": "data->altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 199,
          "context": "data->temperature = 25.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 13,
          "context": "#define DEG_TO_RAD(x) ((x) * 0.017453292519943295)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 14,
          "context": "#define RAD_TO_DEG(x) ((x) * 57.295779513082323)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 17,
          "context": "#define UPDATE_FREQUENCY 100"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 18,
          "context": "#define DT (1.0f / UPDATE_FREQUENCY)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 21,
          "context": "#define MAX_ROLL_ANGLE  45.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 22,
          "context": "#define MAX_PITCH_ANGLE 45.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 23,
          "context": "#define MAX_YAW_RATE    180.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 42,
          "context": "stabState.targetSetPoint.roll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 43,
          "context": "stabState.targetSetPoint.pitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 44,
          "context": "stabState.targetSetPoint.yaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 45,
          "context": "stabState.targetSetPoint.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 48,
          "context": "stabState.currentOrientation.roll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 49,
          "context": "stabState.currentOrientation.pitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 50,
          "context": "stabState.currentOrientation.yaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 54,
          "context": "1.0f, 0.1f, 0.05f,  // Roll"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 55,
          "context": "1.0f, 0.1f, 0.05f,  // Pitch"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 56,
          "context": "2.0f, 0.15f, 0.1f,  // Yaw"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 57,
          "context": "1.5f, 0.2f, 0.1f    // Altitude"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 69,
          "context": "stabState.rollPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 70,
          "context": "stabState.rollPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 76,
          "context": "stabState.pitchPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 77,
          "context": "stabState.pitchPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 83,
          "context": "stabState.yawPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 84,
          "context": "stabState.yawPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 90,
          "context": "stabState.altitudePID.outputMin = 0.0f;  // Минимальная тяга"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 91,
          "context": "stabState.altitudePID.outputMax = 1.0f;  // Максимальная тяга"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 102,
          "context": "stabState.targetSetPoint.altitude = fmaxf(altitude, 0.0f);  // Высота не может быть отрицательной"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 111,
          "context": "MPU6050_Data imuData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 112,
          "context": "BMP280_Data altData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 131,
          "context": "while (yawError > 180.0f) yawError -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 132,
          "context": "while (yawError < -180.0f) yawError += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 166,
          "context": "Actuators_SetAllMotors(0.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 175,
          "context": "stabState.rollPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 176,
          "context": "stabState.rollPID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 178,
          "context": "stabState.pitchPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 179,
          "context": "stabState.pitchPID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 181,
          "context": "stabState.yawPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 182,
          "context": "stabState.yawPID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 184,
          "context": "stabState.altitudePID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 185,
          "context": "stabState.altitudePID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 191,
          "context": "return 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 235,
          "context": "m1 = ClampValue(m1, 0.0f, 1.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 236,
          "context": "m2 = ClampValue(m2, 0.0f, 1.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 237,
          "context": "m3 = ClampValue(m3, 0.0f, 1.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 238,
          "context": "m4 = ClampValue(m4, 0.0f, 1.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 241,
          "context": "Actuators_SetMotor(0, m1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 11,
          "context": "#define MOTOR_FRONT_LEFT  0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 17,
          "context": "#define PWM_MIN_VALUE     0    // Минимальное значение PWM (мотор выключен)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 18,
          "context": "#define PWM_MAX_VALUE     1000 // Максимальное значение PWM (полная мощность)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 19,
          "context": "#define PWM_IDLE_VALUE    100  // Значение PWM на холостом ходу"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 11,
          "context": "#define GPIO_PORTA_AFSEL_R    (*((volatile uint32_t *)0x40004420))  // Port A Alternate Function Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 12,
          "context": "#define GPIO_PORTA_DEN_R      (*((volatile uint32_t *)0x4000451C))  // Port A Digital Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 13,
          "context": "#define GPIO_PORTA_AMSEL_R    (*((volatile uint32_t *)0x40004528))  // Port A Analog Mode Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 14,
          "context": "#define GPIO_PORTA_PCTL_R     (*((volatile uint32_t *)0x4000452C))  // Port A Port Control"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 18,
          "context": "#define COMM_BAUDRATE       115200"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 23,
          "context": "PACKET_TYPE_HEARTBEAT    = 0x00,  // Проверка соединения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 24,
          "context": "PACKET_TYPE_TELEMETRY    = 0x01,  // Телеметрия (сенсоры, положение, статус)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 25,
          "context": "PACKET_TYPE_COMMAND      = 0x02,  // Команды управления"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 26,
          "context": "PACKET_TYPE_CONFIG       = 0x03,  // Настройка параметров"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 27,
          "context": "PACKET_TYPE_WAYPOINT     = 0x04,  // Данные маршрутных точек"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 28,
          "context": "PACKET_TYPE_STATUS       = 0x05,  // Статус дрона"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 29,
          "context": "PACKET_TYPE_ERROR        = 0xFF   // Сообщения об ошибках"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 34,
          "context": "CMD_ARM           = 0x01,  // Активация моторов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 35,
          "context": "CMD_DISARM        = 0x02,  // Деактивация моторов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 36,
          "context": "CMD_TAKEOFF       = 0x03,  // Взлет"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 37,
          "context": "CMD_LAND          = 0x04,  // Посадка"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 38,
          "context": "CMD_RTH           = 0x05,  // Возврат домой"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 39,
          "context": "CMD_HOLD          = 0x06,  // Удержание позиции"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 40,
          "context": "CMD_EMERGENCY_STOP = 0x07  // Аварийная остановка"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 11,
          "context": "LOG_DEBUG = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 21,
          "context": "DIAG_EVENT_SYSTEM_START = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 42,
          "context": "TEST_RESULT_PASS = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 50,
          "context": "ADC_ERROR_NONE = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 59,
          "context": "SYSTICK_ERROR_NONE = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 68,
          "context": "POWER_MODE_NORMAL = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 75,
          "context": "SYSTEM_STATE_OK = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 83,
          "context": "THERMOCOUPLE_TYPE_K = 0,    // Type K thermocouple"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 95,
          "context": "#define TEMP_SENSOR_TYPE_LINEAR    0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 101,
          "context": "#define TEMP_MCU_WARNING      85.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 102,
          "context": "#define TEMP_MCU_CRITICAL     95.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 103,
          "context": "#define TEMP_MOTORS_WARNING   70.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 104,
          "context": "#define TEMP_MOTORS_CRITICAL  80.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 105,
          "context": "#define TEMP_BOARD_WARNING    60.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 106,
          "context": "#define TEMP_BOARD_CRITICAL   70.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 107,
          "context": "#define MAX_SAFE_TEMPERATURE   125.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 110,
          "context": "#define TEST_PASS    0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 226,
          "context": "float R0;             // Сопротивление при 0°C"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 228,
          "context": "} pt100Params;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 232,
          "context": "#define SYSCTL_RCGCGPIO_R    (*((volatile uint32_t *)0x400FE608))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 233,
          "context": "#define SYSCTL_RCGCADC_R     (*((volatile uint32_t *)0x400FE638))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 234,
          "context": "#define SYSCTL_PRGPIO_R      (*((volatile uint32_t *)0x400FEA08))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 235,
          "context": "#define SYSCTL_PRADC_R       (*((volatile uint32_t *)0x400FEA38))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 236,
          "context": "#define SYSCTL_RCGC2_R       (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 238,
          "context": "#define GPIO_PORTD_DEN_R     (*((volatile uint32_t *)0x4005751C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 239,
          "context": "#define GPIO_PORTD_AMSEL_R   (*((volatile uint32_t *)0x40057528))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 241,
          "context": "#define ADC1_ACTSS_R         (*((volatile uint32_t *)0x40039000))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 242,
          "context": "#define ADC1_EMUX_R          (*((volatile uint32_t *)0x40039014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 243,
          "context": "#define ADC1_SSMUX0_R        (*((volatile uint32_t *)0x40039040))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 244,
          "context": "#define ADC1_SSCTL0_R        (*((volatile uint32_t *)0x40039044))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 245,
          "context": "#define ADC1_TSSEL_R         (*((volatile uint32_t *)0x4003901C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 246,
          "context": "#define ADC1_SAC_R           (*((volatile uint32_t *)0x40039030))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 247,
          "context": "#define ADC1_IM_R            (*((volatile uint32_t *)0x40039008))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 248,
          "context": "#define ADC1_SSFIF00_R       (*((volatile uint32_t *)0x40039048))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 250,
          "context": "#define ADC0_SAC_R           (*((volatile uint32_t *)0x40038030))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 251,
          "context": "#define ADC0_IM_R            (*((volatile uint32_t *)0x40038008))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 252,
          "context": "#define ADC0_SSFIFO1_R       (*((volatile uint32_t *)0x40038048))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 255,
          "context": "#define ADC_ACTSS_ASEN0      0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 256,
          "context": "#define ADC_EMUX_EM0_M       0x0000000F"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 257,
          "context": "#define ADC_SSCTL0_IE3       0x00000800"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 258,
          "context": "#define ADC_SSCTL0_END3      0x00000400"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 259,
          "context": "#define ADC_IM_MASK0         0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 260,
          "context": "#define INT_ADC1SS0          51"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 263,
          "context": "#define ADC_PSSI_SS3          0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 264,
          "context": "#define ADC_RIS_INR3          0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 265,
          "context": "#define ADC_SSCTL0_IE2        0x00000400"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 266,
          "context": "#define ADC_SSCTL0_END2       0x00000800"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 267,
          "context": "#define ADC_SAC_AVG_64X       0x00000006"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 268,
          "context": "#define ADC_ACTSS_ASEN1       0x00000002  // SS1 Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 269,
          "context": "#define ADC_EMUX_EM1_M        0x000000F0  // SS1 Trigger Select mask"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 270,
          "context": "#define ADC_IM_MASK1          0x00000002  // SS1 Interrupt Mask"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 271,
          "context": "#define ADC_RIS_INR1          0x00000002  // SS1 Interrupt Status"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 272,
          "context": "#define ADC_PSSI_SS1          0x00000002  // SS1 Initiate"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 273,
          "context": "#define ADC_SSCTL1_IE2        0x00000400  // Sample 2 Interrupt Enable"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 274,
          "context": "#define ADC_SSCTL1_END2       0x00000800  // Sample 2 is End of Sequence"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 277,
          "context": "#define INT_ADC0SS1          15  // ADC0 Sequencer 1 interrupt"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 280,
          "context": "#define WATCHDOG0_LOAD_R     (*((volatile uint32_t *)0x40000000))  // Регистр загрузки WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 281,
          "context": "#define WATCHDOG0_CTL_R      (*((volatile uint32_t *)0x40000008))  // Регистр управления WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 282,
          "context": "#define WATCHDOG0_ICR_R      (*((volatile uint32_t *)0x4000000C))  // Регистр очистки прерываний WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 283,
          "context": "#define WATCHDOG0_LOCK_R     (*((volatile uint32_t *)0x40000C00))  // Регистр блокировки WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 284,
          "context": "#define WATCHDOG0_ICR_M      (*((volatile uint32_t *)0x40000010))  // Регистр очистки прерываний WDT"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 287,
          "context": "#define WDT_CTL_INTEN        0x00000001  // Разрешение прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 288,
          "context": "#define WDT_CTL_RESEN        0x00000002  // Разрешение сброса системы"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 291,
          "context": "#define NVIC_SYS_CTRL_R      (*((volatile uint32_t *)0xE000ED10))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 292,
          "context": "#define NVIC_SYS_CTRL_SLEEPDEEP 0x00000004"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 298,
          "context": "#define NVIC_EN0_R            (*((volatile uint32_t *)0xE000E100))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 299,
          "context": "#define NVIC_PRI0_R          (*((volatile uint32_t *)0xE000E400))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 300,
          "context": "#define NVIC_APINT_R         (*((volatile uint32_t *)0xE000ED0C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 301,
          "context": "#define NVIC_APINT_VECTKEY   0x05FA0000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 302,
          "context": "#define NVIC_APINT_SYSRESETREQ 0x00000004"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 305,
          "context": "#define SYSCTL_RCGCWD_R      (*((volatile uint32_t *)0x400FE600))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 306,
          "context": "#define SYSCTL_PRWD_R        (*((volatile uint32_t *)0x400FEA00))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 309,
          "context": "#define SYSCTL_RCGCWD_R0     0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 310,
          "context": "#define SYSCTL_PRWD_R0       0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 313,
          "context": "#define MCU_TEMP_SLOPE       1.0f    // Slope for MCU temperature conversion"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 314,
          "context": "#define MCU_TEMP_OFFSET      0.0f    // Offset for MCU temperature conversion"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 315,
          "context": "#define TEMP_SENSOR_SLOPE    10.0f   // mV/°C for external temperature sensors"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 318,
          "context": "#define TEMP_MCU_CHANNEL     0       // Internal temperature sensor channel"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 321,
          "context": "#define NVIC_EN1_R           (*((volatile uint32_t *)0xE000E104))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 324,
          "context": "#define ADC1_SSFIFO0_R       (*((volatile uint32_t *)0x40039044))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 327,
          "context": "#define NVIC_ST_CTRL_R       (*((volatile uint32_t *)0xE000E010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 328,
          "context": "#define NVIC_ST_RELOAD_R     (*((volatile uint32_t *)0xE000E014))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 329,
          "context": "#define NVIC_ST_CURRENT_R    (*((volatile uint32_t *)0xE000E018))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 332,
          "context": "#define NVIC_ST_CTRL_ENABLE  0x00000001  // Включение таймера"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 333,
          "context": "#define NVIC_ST_CTRL_INTEN   0x00000002  // Включение прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 334,
          "context": "#define NVIC_ST_CTRL_CLKSRC  0x00000004  // Выбор источника тактирования (системная частота)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 425,
          "context": "#define BACKUP_COMM_ERR_NOT_RESPONDING  0x0401"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 426,
          "context": "#define BACKUP_COMM_ERR_CRC            0x0402"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 427,
          "context": "#define BACKUP_COMM_ERR_TIMEOUT        0x0403"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 433,
          "context": "#define WATCHDOG_ERR_NO_RESET     0x0501  // Watchdog не вызвал сброс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 434,
          "context": "#define WATCHDOG_ERR_EARLY_RESET  0x0502  // Сброс произошел раньше времени"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 435,
          "context": "#define WATCHDOG_ERR_LATE_RESET   0x0503  // Сброс произошел позже времени"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 441,
          "context": "#define DIAG_MAX_LOG_ENTRIES 100"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 444,
          "context": "#define SYSCTL_RCGCGPIO_R3    0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 445,
          "context": "#define SYSCTL_RCGCGPIO_R4    0x00000010"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 446,
          "context": "#define SYSCTL_RCGCADC_R0     0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 447,
          "context": "#define SYSCTL_RCGCADC_R1     0x00000002"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 448,
          "context": "#define SYSCTL_PRGPIO_R3      0x00000008"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 449,
          "context": "#define SYSCTL_PRGPIO_R4      0x00000010"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 450,
          "context": "#define SYSCTL_PRADC_R0       0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 451,
          "context": "#define SYSCTL_PRADC_R1       0x00000002"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 454,
          "context": "#define ADC1_PSSI_R           (*((volatile uint32_t *)0x40039028))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 455,
          "context": "#define ADC1_RIS_R            (*((volatile uint32_t *)0x40039004))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 456,
          "context": "#define ADC_ISC_IN0           0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 459,
          "context": "#define GPIO_PORTA_IM_R       (*((volatile uint32_t *)0x40004010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 460,
          "context": "#define GPIO_PORTA_IEV_R      (*((volatile uint32_t *)0x4000440C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 461,
          "context": "#define GPIO_PORTA_AFSEL_R    (*((volatile uint32_t *)0x40004420))  // Port A Alternate Function Select"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 462,
          "context": "#define GPIO_PORTE_AFSEL_R    (*((volatile uint32_t *)0x40024420))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 463,
          "context": "#define GPIO_PORTE_DEN_R      (*((volatile uint32_t *)0x4002451C))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 464,
          "context": "#define GPIO_PORTE_AMSEL_R    (*((volatile uint32_t *)0x40024528))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 465,
          "context": "#define GPIO_PORTD_AFSEL_R    (*((volatile uint32_t *)0x40007420))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 468,
          "context": "#define WATCHDOG0_RIS_R       (*((volatile uint32_t *)0x40000004))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 469,
          "context": "#define WATCHDOG0_ICR_R       (*((volatile uint32_t *)0x40000008))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 470,
          "context": "#define WATCHDOG0_ICR_M       (*((volatile uint32_t *)0x40000010))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 471,
          "context": "#define WDT_RIS_WDTRIS        0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 472,
          "context": "#define WDT_ICR_M             0xFFFFFFFF  // Watchdog Timer Interrupt Clear Mask"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 475,
          "context": "#define INT_UART0             21"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 476,
          "context": "#define INT_WTIMER0A          94"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 490,
          "context": "void WDT0_Handler(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 504,
          "context": "#define ADC_MAX_VALUE          4095     // Максимальное значение АЦП (12 бит)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 505,
          "context": "#define VOLTAGE_DIVIDER        0.5f     // Коэффициент делителя напряжения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 506,
          "context": "#define CURRENT_SENSE_MV_A     100.0f   // мВ/А для датчика тока"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 507,
          "context": "#define TEMP_SENSOR_MV_C       10.0f    // мВ/°C для температурного датчика"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 511,
          "context": "#define BATTERY_MIN_VOLTAGE    9.0f     // Минимальное напряжение батареи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 512,
          "context": "#define BATTERY_LOW_VOLTAGE    10.0f    // Напряжение для предупреждения"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 514,
          "context": "#define BATTERY_MAX_TEMP       60.0f    // Максимальная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 8,
          "context": "#define GPIO_PIN_0              0x00000001  // GPIO pin 0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 9,
          "context": "#define GPIO_PIN_1              0x00000002  // GPIO pin 1"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 10,
          "context": "#define GPIO_PIN_2              0x00000004  // GPIO pin 2"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 11,
          "context": "#define GPIO_PIN_3              0x00000008  // GPIO pin 3"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 12,
          "context": "#define GPIO_PIN_4              0x00000010  // GPIO pin 4"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 13,
          "context": "#define GPIO_PIN_5              0x00000020  // GPIO pin 5"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 14,
          "context": "#define GPIO_PIN_6              0x00000040  // GPIO pin 6"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 15,
          "context": "#define GPIO_PIN_7              0x00000080  // GPIO pin 7"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 18,
          "context": "#define GPIO_PORTA_BASE        0x40004000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 19,
          "context": "#define GPIO_PORTB_BASE        0x40005000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 20,
          "context": "#define GPIO_PORTC_BASE        0x40006000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 21,
          "context": "#define GPIO_PORTD_BASE        0x40007000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 22,
          "context": "#define GPIO_PORTE_BASE        0x40024000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 23,
          "context": "#define GPIO_PORTF_BASE        0x40025000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 26,
          "context": "#define SYSCTL_RCGC2_R         (*((volatile uint32_t *)0x400FE108))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 27,
          "context": "#define SYSCTL_RCGC2_GPIOF     0x00000020  // Port F Clock Gating Control"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 30,
          "context": "#define SYSCTL_SYSDIV_2_5      0x04000000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 31,
          "context": "#define SYSCTL_USE_PLL         0x00000000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 32,
          "context": "#define SYSCTL_OSC_MAIN        0x00000000"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 33,
          "context": "#define SYSCTL_XTAL_16MHZ      0x00000540"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 36,
          "context": "#define SYSCTL_PERIPH_GPIOF    0xf0000805  // GPIO F peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 37,
          "context": "#define SYSCTL_PERIPH_GPIOE    0xf0000804  // GPIO E peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 38,
          "context": "#define SYSCTL_PERIPH_GPIOD    0xf0000803  // GPIO D peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 39,
          "context": "#define SYSCTL_PERIPH_GPIOC    0xf0000802  // GPIO C peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 40,
          "context": "#define SYSCTL_PERIPH_GPIOB    0xf0000801  // GPIO B peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 41,
          "context": "#define SYSCTL_PERIPH_GPIOA    0xf0000800  // GPIO A peripheral"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 31,
          "context": "#define MAIN_LOOP_FREQ_HZ      200     // Частота основного цикла (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 32,
          "context": "#define TELEMETRY_FREQ_HZ      10      // Частота отправки телеметрии (Гц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 34,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 37,
          "context": "#define MAX_ALTITUDE           100.0f   // Максимальная высота (м)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 38,
          "context": "#define MIN_BATTERY_VOLTAGE    10.5f    // Минимальное напряжение батареи (В)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 39,
          "context": "#define MAX_ANGLE              45.0f    // Максимальный угол наклона (градусы)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 40,
          "context": "#define MAX_YAW_RATE          90.0f    // Максимальная скорость рыскания (градусы/с)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 44,
          "context": "PARAM_PID_ROLL = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 52,
          "context": "CMD_TYPE_POSITION = 0,     // Команда позиционирования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 44,
          "context": "#define MAX_WAYPOINTS 20"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 45,
          "context": "#define NAV_WAYPOINT_RADIUS    3.0f   // Радиус достижения точки (метры)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 46,
          "context": "#define NAV_MIN_ALTITUDE       5.0f    // Минимальная безопасная высота"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 47,
          "context": "#define NAV_MAX_ALTITUDE       120.0f  // Максимальная разрешенная высота"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 48,
          "context": "#define NAV_DEFAULT_SPEED      5.0f    // Скорость по умолчанию (м/с)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 23,
          "context": "} MPU6050_Data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 30,
          "context": "} BMP280_Data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 41,
          "context": "MPU6050_Data imu;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 42,
          "context": "BMP280_Data baro;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 53,
          "context": "void Sensors_GetBaroData(BMP280_Data* data);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_182",
      "name": "100",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 69,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 97,
          "context": "uint16_t pwm_value = (uint16_t)((throttle * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100U + PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 108,
          "context": "int32_t pwm_delta = ((int32_t)yaw * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 18,
          "context": "#define COMM_TIMEOUT_MS     1000    // Таймаут соединения (1 секунда)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 19,
          "context": "#define SYSTICK_FREQ_HZ    1000    // Частота системного таймера (1 кГц)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 359,
          "context": "NVIC_ST_RELOAD_R = SystemCoreClock / 1000 - 1;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 187,
          "context": "if (NVIC_APINT_R & 0x10000) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 221,
          "context": "diagState.powerState.batteryLevel = 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 230,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_BATTERY_CRITICAL, \"Battery critically low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 232,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_BATTERY_LOW, \"Battery low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 330,
          "context": "float current = ((current_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / CURRENT_SENSE_MV_A;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 331,
          "context": "float temp = ((temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_MV_C;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 340,
          "context": "(BATTERY_MAX_VOLTAGE - BATTERY_MIN_VOLTAGE) * 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 341,
          "context": "diagState.powerState.batteryLevel = (battery_level > 100.0f) ? 100.0f :"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 350,
          "context": "\"Critical battery voltage\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 354,
          "context": "\"Low battery voltage\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 359,
          "context": "\"Critical battery temperature\", (uint32_t)(temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 425,
          "context": "float mcu_temp = ((mcu_voltage * 1000.0f) / MCU_TEMP_SLOPE) + MCU_TEMP_OFFSET;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 428,
          "context": "float motors_temp = ((motors_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 429,
          "context": "float board_temp = ((board_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 430,
          "context": "float ambient_temp = ((ambient_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 441,
          "context": "\"Critical MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 445,
          "context": "\"High MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 450,
          "context": "\"Critical motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 454,
          "context": "\"High motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 459,
          "context": "\"Critical board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 463,
          "context": "\"High board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 480,
          "context": "(uint32_t)(diagState.thermalState.mcuTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 485,
          "context": "(uint32_t)(diagState.thermalState.mcuTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 494,
          "context": "(uint32_t)(diagState.thermalState.motorTemps[i] * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 499,
          "context": "(uint32_t)(diagState.thermalState.motorTemps[i] * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 508,
          "context": "(uint32_t)(diagState.thermalState.boardTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 513,
          "context": "(uint32_t)(diagState.thermalState.boardTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 675,
          "context": "uint32_t reload_value = timeout_ms * 1000; // преобразуем мс в тики"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 955,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 964,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 976,
          "context": "status.data = (uint32_t)(batteryCurrent * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 988,
          "context": "status.data = (uint32_t)(batteryTemp * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1034,
          "context": "#define BARO_TEST_ALT_MIN       -100.0f // м"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1062,
          "context": "status.data = (uint32_t)(accel_magnitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1084,
          "context": "status.data = (uint32_t)(altitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1115,
          "context": "status.data = (uint32_t)(mag_magnitude * 1000);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1148,
          "context": "#define MOTOR_TEST_TIMEOUT       1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1220,
          "context": "if (motorData[i].rpm < 100.0f) {  // Минимальные обороты для теста"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1286,
          "context": "#define RC_TEST_TIMEOUT         1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1288,
          "context": "#define TELEMETRY_TEST_TIMEOUT  1000    // мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1453,
          "context": "uint32_t timeout = 10000;  // Примерно 10000 циклов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1501,
          "context": "temperature = (voltage * 100.0f);  // Пример преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1551,
          "context": "const uint32_t MAX_CONVERSION_ATTEMPTS = 1000;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1840,
          "context": "temperature = (voltage * 100.0f);  // Пример преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1894,
          "context": "(uint32_t)(temperature * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1947,
          "context": "if (currentTime - lastBackupCommTest < 1000) {  // Тестируем не чаще раза в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1964,
          "context": "while (GetCurrentTime() - startTime < 100) {  // Таймаут 100 мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2023,
          "context": "diagState.watchdogTimeout = 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2029,
          "context": "\"Watchdog initialized\", 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2058,
          "context": "uint8_t GetRCLinkQuality(void) { return 100; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 10,
          "context": "#define EARTH_RADIUS 6371000.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 249,
          "context": "return distance <= 1000.0f; // Безопасная зона - 1 км от дома"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 96,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 138,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 17,
          "context": "#define UPDATE_FREQUENCY 100"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 18,
          "context": "#define PWM_MAX_VALUE     1000 // Максимальное значение PWM (полная мощность)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 19,
          "context": "#define PWM_IDLE_VALUE    100  // Значение PWM на холостом ходу"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 228,
          "context": "} pt100Params;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 298,
          "context": "#define NVIC_EN0_R            (*((volatile uint32_t *)0xE000E100))"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 441,
          "context": "#define DIAG_MAX_LOG_ENTRIES 100"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 506,
          "context": "#define CURRENT_SENSE_MV_A     100.0f   // мВ/А для датчика тока"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 34,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 37,
          "context": "#define MAX_ALTITUDE           100.0f   // Максимальная высота (м)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_186",
      "name": "false",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 73,
          "context": "static bool isEmergencyMode = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 131,
          "context": "if (Stabilization_IsEnabled() == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 139,
          "context": "if (actState.all_motors_enabled == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 251,
          "context": ".reached = false"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 408,
          "context": "isEmergencyMode = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 6,
          "context": "static bool emergency_stop_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 23,
          "context": "emergency_stop_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 65,
          "context": "actuators_state.motors[motor_index].is_running = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 83,
          "context": "actuators_state.all_motors_enabled = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 88,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 218,
          "context": "emergency_stop_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 120,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 146,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 206,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 228,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 233,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 350,
          "context": "commState.connected = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 380,
          "context": "commState.connected = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 404,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 409,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 180,
          "context": "diagState.lowPowerMode = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 181,
          "context": "diagState.debugEnabled = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 182,
          "context": "diagState.watchdogEnabled = false;  // Инициализируем флаг watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 472,
          "context": "diagState.thermalState.isCritical = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 473,
          "context": "diagState.thermalState.isWarning = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 568,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 815,
          "context": "diagState.lowPowerMode = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1012,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1301,
          "context": "bool rcResponded = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1335,
          "context": "bool telemetryResponded = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1538,
          "context": ".complete = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1654,
          "context": "selfTestResult.isTestComplete = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1658,
          "context": "selfTestResult.systemStatus.powerSystemOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1659,
          "context": "selfTestResult.systemStatus.sensorsOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1660,
          "context": "selfTestResult.systemStatus.motorsOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1661,
          "context": "selfTestResult.systemStatus.communicationOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1662,
          "context": "selfTestResult.systemStatus.safetySystemOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1681,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1693,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1705,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1717,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1729,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1741,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1934,
          "context": "static bool backupCommAvailable = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1957,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1974,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1985,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1992,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2053,
          "context": "bool HasGPS(void) { return false; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2054,
          "context": "bool HasParachute(void) { return false; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 18,
          "context": "static bool home_position_set = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 29,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 46,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 50,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 54,
          "context": "waypoints[waypoint_count].reached = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 62,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 92,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 107,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 117,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 229,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 236,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 244,
          "context": "return false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 289,
          "context": "nav_state.navigation_active = false; // Достигли последней точки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 16,
          "context": ".mpu6050_initialized = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 17,
          "context": ".bmp280_initialized = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 39,
          "context": "stabState.enabled = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 162,
          "context": "stabState.enabled = false;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_188",
      "name": "true",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 247,
          "context": ".valid = true"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 385,
          "context": "isEmergencyMode = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 58,
          "context": "actuators_state.motors[motor_index].is_running = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 76,
          "context": "actuators_state.all_motors_enabled = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 209,
          "context": "emergency_stop_active = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 95,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 128,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 133,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 149,
          "context": "commState.initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 150,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 224,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 386,
          "context": "commState.connected = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 151,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 184,
          "context": "diagState.initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 192,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 477,
          "context": "diagState.thermalState.isCritical = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 482,
          "context": "diagState.thermalState.isWarning = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 491,
          "context": "diagState.thermalState.isCritical = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 496,
          "context": "diagState.thermalState.isWarning = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 505,
          "context": "diagState.thermalState.isCritical = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 510,
          "context": "diagState.thermalState.isWarning = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 572,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 691,
          "context": "diagState.watchdogEnabled = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 789,
          "context": "diagState.lowPowerMode = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1017,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1307,
          "context": "rcResponded = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1341,
          "context": "telemetryResponded = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1680,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1692,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1704,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1716,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1728,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1737,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1746,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1948,
          "context": "return true;  // Возвращаем последний результат"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1969,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1980,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2022,
          "context": "diagState.watchdogEnabled = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2040,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2044,
          "context": "bool TestBarometer(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2045,
          "context": "bool TestESC(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2046,
          "context": "bool TestGPS(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2047,
          "context": "bool TestEEPROM(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2048,
          "context": "bool TestFlashMemory(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2049,
          "context": "bool TestKillSwitch(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2050,
          "context": "bool TestMagnetometer(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2051,
          "context": "bool TestMotorResponse(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2052,
          "context": "bool TestParachuteSystem(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2060,
          "context": "bool IsRCTestResponseReceived(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2061,
          "context": "bool IsTelemetryAckReceived(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 57,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 77,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 96,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 101,
          "context": "nav_state.navigation_active = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 112,
          "context": "nav_state.navigation_active = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 158,
          "context": "nav_state.current_position.valid = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 239,
          "context": "return true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 255,
          "context": "home_position_set = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 285,
          "context": "waypoints[current_waypoint_index].reached = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 39,
          "context": "sensor_state.mpu6050_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 48,
          "context": "sensor_state.bmp280_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 191,
          "context": "data->isCalibrated = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 157,
          "context": "stabState.enabled = true;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_191",
      "name": "waypoint_count",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 15,
          "context": "static uint8_t waypoint_count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 27,
          "context": "waypoint_count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 45,
          "context": "if (waypoint == NULL || waypoint_count >= MAX_WAYPOINTS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 53,
          "context": "waypoints[waypoint_count] = *waypoint;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 54,
          "context": "waypoints[waypoint_count].reached = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 55,
          "context": "waypoint_count++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 61,
          "context": "if (index >= waypoint_count) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 66,
          "context": "for (uint8_t i = index; i < waypoint_count - 1; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 70,
          "context": "waypoint_count--;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 82,
          "context": "waypoint_count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 87,
          "context": "return waypoint_count;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 91,
          "context": "if (index >= waypoint_count || waypoint == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 100,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 111,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 271,
          "context": "if (!nav_state.navigation_active || waypoint_count == 0 ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 272,
          "context": "current_waypoint_index >= waypoint_count) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 286,
          "context": "if (current_waypoint_index < waypoint_count - 1) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_194",
      "name": "c",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 1,
          "context": "#include \"include/main.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 2,
          "context": "#include <stddef.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 3,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 4,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 5,
          "context": "#include <string.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 6,
          "context": "#include <math.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 7,
          "context": "#include \"include/sensors.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 8,
          "context": "#include \"include/navigation.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 9,
          "context": "#include \"include/stabilization.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 10,
          "context": "#include \"include/communication.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 11,
          "context": "#include \"include/telemetry.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 14,
          "context": "extern uint32_t SystemCoreClock;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 18,
          "context": "static DroneState currentState = DRONE_STATE_INIT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 72,
          "context": "static uint32_t mainLoopCounter = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 73,
          "context": "static bool isEmergencyMode = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 76,
          "context": "static SensorData sensorData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 91,
          "context": "static void InitializeGPIO(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 92,
          "context": "static void UpdateWatchdog(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 93,
          "context": "static void HandleLEDs(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 94,
          "context": "static void UpdateTelemetry(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 104,
          "context": "UpdateWatchdog();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 108,
          "context": "EnterEmergencyMode(\"Sensor update failed\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 109,
          "context": "continue;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 116,
          "context": "ProcessCommands();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 119,
          "context": "if (currentState >= DRONE_STATE_ARMED) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 124,
          "context": "if (!Navigation_IsActive()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 125,
          "context": "EnterEmergencyMode(\"Navigation update failed\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 126,
          "context": "continue;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 132,
          "context": "EnterEmergencyMode(\"Stabilization update failed\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 133,
          "context": "continue;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 137,
          "context": "ActuatorsState actState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 138,
          "context": "Actuators_GetState(&actState);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 139,
          "context": "if (actState.all_motors_enabled == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 140,
          "context": "EnterEmergencyMode(\"Motors not ready\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 141,
          "context": "continue;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 152,
          "context": "CheckSafety();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 160,
          "context": "static void InitializeGPIO(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 175,
          "context": "static void UpdateWatchdog(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 176,
          "context": "Diagnostics_FeedWatchdog();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 180,
          "context": "static void HandleLEDs(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 190,
          "context": "switch (currentState) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 191,
          "context": "case DRONE_STATE_INIT:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 195,
          "context": "case DRONE_STATE_IDLE:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 199,
          "context": "case DRONE_STATE_CALIBRATING:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 203,
          "context": "case DRONE_STATE_ARMED:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 207,
          "context": "case DRONE_STATE_TAKEOFF:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 208,
          "context": "case DRONE_STATE_FLYING:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 209,
          "context": "case DRONE_STATE_LANDING:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 213,
          "context": "case DRONE_STATE_EMERGENCY:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 225,
          "context": "void ProcessCommands(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 226,
          "context": "CommPacket rxPacket;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 227,
          "context": "CommandPacket cmdData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 230,
          "context": "if (Communication_Receive(&rxPacket)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 232,
          "context": "if (rxPacket.type == PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 234,
          "context": "if (rxPacket.length == sizeof(CommandPacket)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 235,
          "context": "memcpy(&cmdData, rxPacket.data, sizeof(CommandPacket));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 238,
          "context": "switch (cmdData.type) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 239,
          "context": "case CMD_TYPE_POSITION:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 240,
          "context": "if (currentState == DRONE_STATE_FLYING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 244,
          "context": ".latitude = cmdData.data.position.x,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 245,
          "context": ".longitude = cmdData.data.position.y,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 246,
          "context": ".altitude = cmdData.data.position.z,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 251,
          "context": ".reached = false"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 260,
          "context": "case CMD_TYPE_ATTITUDE:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 261,
          "context": "if (currentState >= DRONE_STATE_ARMED) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 263,
          "context": "cmdData.data.attitude.roll,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 264,
          "context": "cmdData.data.attitude.pitch,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 265,
          "context": "cmdData.data.attitude.yaw,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 271,
          "context": "case CMD_TYPE_CONFIG:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 272,
          "context": "UpdatePIDParameters(cmdData.data.config.param, cmdData.data.config.value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 283,
          "context": "static float roll_kp = 1.0f, roll_ki = 0.1f, roll_kd = 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 284,
          "context": "static float pitch_kp = 1.0f, pitch_ki = 0.1f, pitch_kd = 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 285,
          "context": "static float yaw_kp = 2.0f, yaw_ki = 0.15f, yaw_kd = 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 286,
          "context": "static float alt_kp = 1.5f, alt_ki = 0.2f, alt_kd = 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 289,
          "context": "switch (param) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 290,
          "context": "case PARAM_PID_ROLL:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 293,
          "context": "case PARAM_PID_PITCH:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 294,
          "context": "pitch_kp = value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 296,
          "context": "case PARAM_PID_YAW:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 299,
          "context": "case PARAM_PID_ALT:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 307,
          "context": "pitch_kp, pitch_ki, pitch_kd,  // Pitch PID"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 314,
          "context": "static void UpdateTelemetry(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 321,
          "context": "GPSPosition currentPos;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 322,
          "context": "Navigation_GetCurrentPosition(&currentPos);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 324,
          "context": "float distanceToTarget = Navigation_GetDistanceToTarget();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 329,
          "context": "Diagnostics_GetPowerState(&powerState);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 330,
          "context": "Diagnostics_GetThermalState(&thermalState);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 334,
          "context": "telemetry.temperature = thermalState.mcuTemp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 335,
          "context": "telemetry.position = currentPos;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 338,
          "context": "Orientation currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 339,
          "context": "Sensors_GetOrientation(&currentOrientation);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 340,
          "context": "telemetry.orientation = currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 343,
          "context": "telemetry.groundSpeed = distanceToTarget;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 344,
          "context": "telemetry.verticalSpeed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 345,
          "context": "telemetry.flightMode = (uint8_t)currentState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 348,
          "context": "telemetry.errorFlags = (uint8_t)Diagnostics_GetErrorCount();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 351,
          "context": "Communication_SendTelemetry(&telemetry);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 355,
          "context": "void CheckSafety(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 358,
          "context": "EnterEmergencyMode(\"Low battery\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 364,
          "context": "EnterEmergencyMode(\"Maximum altitude exceeded\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 369,
          "context": "if (fabsf(sensorData.imu.accel_x) > MAX_ANGLE ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 370,
          "context": "fabsf(sensorData.imu.accel_y) > MAX_ANGLE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 371,
          "context": "EnterEmergencyMode(\"Maximum angle exceeded\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 376,
          "context": "if (!Communication_IsConnected()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 377,
          "context": "EnterEmergencyMode(\"Communication lost\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 383,
          "context": "void EnterEmergencyMode(const char* reason) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 384,
          "context": "if (!isEmergencyMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 385,
          "context": "isEmergencyMode = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 386,
          "context": "currentState = DRONE_STATE_EMERGENCY;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 389,
          "context": "Diagnostics_Log(LOG_CRITICAL, DIAG_EVENT_SYSTEM_START, reason, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 392,
          "context": "Communication_SendError(0x01, reason);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 395,
          "context": "Actuators_EmergencyStop();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 406,
          "context": "void ExitEmergencyMode(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 407,
          "context": "if (isEmergencyMode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 408,
          "context": "isEmergencyMode = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 409,
          "context": "currentState = DRONE_STATE_IDLE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 412,
          "context": "Diagnostics_ClearLog();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 417,
          "context": "Actuators_ResetEmergencyStop();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 420,
          "context": "Communication_SendStatus(0x00);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 1,
          "context": "#include <string.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 2,
          "context": "#include \"../include/actuators.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 5,
          "context": "static ActuatorsState actuators_state = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 6,
          "context": "static bool emergency_stop_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 7,
          "context": "static uint32_t system_time_ms = 0; // Эмуляция системного времени"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 10,
          "context": "static void UpdateMotorTemperatures(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 11,
          "context": "static void UpdateMotorRuntimes(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 12,
          "context": "static void ClampPWMValue(uint16_t* pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 14,
          "context": "void Actuators_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 16,
          "context": "memset(&actuators_state, 0, sizeof(ActuatorsState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 20,
          "context": "actuators_state.motors[i].temperature = 25.0f; // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 23,
          "context": "emergency_stop_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 26,
          "context": "void Actuators_DeInit(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 28,
          "context": "Actuators_DisableAllMotors();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 31,
          "context": "void Actuators_SetMotorPWM(uint8_t motor_index, uint16_t pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 32,
          "context": "if (motor_index >= MOTOR_COUNT || emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 37,
          "context": "actuators_state.motors[motor_index].pwm_value = pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 38,
          "context": "actuators_state.motors[motor_index].is_running = (pwm_value > (uint16_t)PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 41,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 43,
          "context": "Actuators_SetMotorPWM(i, pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 47,
          "context": "uint16_t Actuators_GetMotorPWM(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 51,
          "context": "return actuators_state.motors[motor_index].pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 54,
          "context": "void Actuators_EnableMotor(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 55,
          "context": "if (motor_index >= MOTOR_COUNT || emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 58,
          "context": "actuators_state.motors[motor_index].is_running = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 61,
          "context": "void Actuators_DisableMotor(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 65,
          "context": "actuators_state.motors[motor_index].is_running = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 66,
          "context": "actuators_state.motors[motor_index].pwm_value = PWM_MIN_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 69,
          "context": "void Actuators_EnableAllMotors(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 70,
          "context": "if (emergency_stop_active) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 74,
          "context": "Actuators_EnableMotor(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 76,
          "context": "actuators_state.all_motors_enabled = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 79,
          "context": "void Actuators_DisableAllMotors(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 81,
          "context": "Actuators_DisableMotor(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 83,
          "context": "actuators_state.all_motors_enabled = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 86,
          "context": "bool Actuators_IsMotorEnabled(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 90,
          "context": "return actuators_state.motors[motor_index].is_running;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 94,
          "context": "void Actuators_SetThrottle(uint16_t throttle) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 95,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 98,
          "context": "Actuators_SetAllMotorsPWM(pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 99,
          "context": "actuators_state.global_throttle = pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 102,
          "context": "void Actuators_SetYaw(int16_t yaw) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 103,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 107,
          "context": "uint16_t base_pwm = actuators_state.global_throttle;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 110,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm + pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 111,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm + pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 112,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 113,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm - pwm_delta));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 116,
          "context": "void Actuators_SetPitch(int16_t pitch) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 117,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 121,
          "context": "uint16_t base_pwm = actuators_state.global_throttle;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 122,
          "context": "int16_t pitch_pwm = pitch / 2;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 124,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm - pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 125,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 126,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm + pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 127,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm + pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 130,
          "context": "void Actuators_SetRoll(int16_t roll) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 131,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 135,
          "context": "uint16_t base_pwm = actuators_state.global_throttle;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 138,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm + roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 139,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm + roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 140,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 141,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm - roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 145,
          "context": "void Actuators_GetState(ActuatorsState* state) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 147,
          "context": "*state = actuators_state;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 151,
          "context": "float Actuators_GetMotorTemperature(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 155,
          "context": "return actuators_state.motors[motor_index].temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 158,
          "context": "uint32_t Actuators_GetMotorRuntime(uint8_t motor_index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 162,
          "context": "return actuators_state.motors[motor_index].runtime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 166,
          "context": "void Actuators_EmulateHover(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 167,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 171,
          "context": "Actuators_SetAllMotorsPWM(hover_pwm);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 172,
          "context": "actuators_state.global_throttle = hover_pwm;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 175,
          "context": "void Actuators_EmulateAscent(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 176,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 179,
          "context": "uint16_t ascent_pwm = (uint16_t)(PWM_MAX_VALUE * 0.7f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 180,
          "context": "Actuators_SetAllMotorsPWM(ascent_pwm);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 181,
          "context": "actuators_state.global_throttle = ascent_pwm;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 184,
          "context": "void Actuators_EmulateDescent(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 185,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 188,
          "context": "uint16_t descent_pwm = (uint16_t)(PWM_MAX_VALUE * 0.3f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 189,
          "context": "Actuators_SetAllMotorsPWM(descent_pwm);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 190,
          "context": "actuators_state.global_throttle = descent_pwm;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 193,
          "context": "void Actuators_EmulateRotation(int16_t yaw_rate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 194,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 197,
          "context": "Actuators_SetYaw(yaw_rate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 200,
          "context": "void Actuators_EmulateForwardFlight(uint16_t speed) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 201,
          "context": "if (emergency_stop_active) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 204,
          "context": "Actuators_SetPitch(-speed); // Отрицательный питч для движения вперед"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 208,
          "context": "void Actuators_EmergencyStop(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 209,
          "context": "emergency_stop_active = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 210,
          "context": "Actuators_DisableAllMotors();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 213,
          "context": "bool Actuators_IsEmergencyStopActive(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 214,
          "context": "return emergency_stop_active;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 217,
          "context": "void Actuators_ResetEmergencyStop(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 218,
          "context": "emergency_stop_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 222,
          "context": "void Actuators_SetAllMotors(float power) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 223,
          "context": "void Actuators_SetMotor(uint8_t index, float power) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 226,
          "context": "static void UpdateMotorTemperatures(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 228,
          "context": "if (actuators_state.motors[i].is_running) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 230,
          "context": "float pwm_factor = (float)actuators_state.motors[i].pwm_value / PWM_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 231,
          "context": "actuators_state.motors[i].temperature += pwm_factor * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 234,
          "context": "if (actuators_state.motors[i].temperature > 25.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 235,
          "context": "actuators_state.motors[i].temperature -= 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 241,
          "context": "static void UpdateMotorRuntimes(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 243,
          "context": "if (actuators_state.motors[i].is_running) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 244,
          "context": "actuators_state.motors[i].runtime += 10; // Предполагаем вызов каждые 10 мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 249,
          "context": "static void ClampPWMValue(uint16_t* pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 1,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 2,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 3,
          "context": "#include <string.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 4,
          "context": "#include <TM4C123GH6PM.h>  // Используем системный путь"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 5,
          "context": "#include \"../include/communication.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 6,
          "context": "#include \"../include/diagnostics.h\"  // Добавляем для использования общих определений регистров"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 34,
          "context": "#pragma pack(push, 4)  // Выравнивание по 4 байта для оптимизации"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 36,
          "context": "static struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 38,
          "context": "bool connected;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 39,
          "context": "uint32_t lastPacketTime;    // Время последнего принятого пакета"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 40,
          "context": "uint32_t currentTime;       // Текущее время в миллисекундах"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 41,
          "context": "uint32_t packetsSent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 42,
          "context": "uint32_t packetsReceived;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 50,
          "context": "} commState = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 51,
          "context": "#pragma pack(pop)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 54,
          "context": "static uint16_t CalculateChecksum(const uint8_t* data, uint16_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 55,
          "context": "static bool ValidatePacket(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 56,
          "context": "static void ProcessReceivedPacket(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 57,
          "context": "static void UpdateConnectionStatus(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 60,
          "context": "static void SysTick_Init(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 61,
          "context": "static uint32_t GetCurrentTime(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 82,
          "context": "uint32_t systemClock = 16000000; // 16 MHz"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 83,
          "context": "uint32_t brdi = systemClock / (16 * baudRate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 84,
          "context": "uint32_t brdf = (uint32_t)(((float)systemClock / (16.0f * (float)baudRate) - brdi) * 64.0f + 0.5f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 98,
          "context": "uint16_t UART_Receive(uint8_t* buffer, uint16_t maxLength) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 99,
          "context": "uint16_t count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 105,
          "context": "while (count < maxLength) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 109,
          "context": "buffer[count] = (uint8_t)(UART0_DR_R & 0xFF);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 110,
          "context": "count++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 113,
          "context": "return count;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 116,
          "context": "bool UART_Send(const uint8_t* data, uint16_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 131,
          "context": "bool Communication_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 132,
          "context": "if (commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 137,
          "context": "memset(&commState, 0, sizeof(commState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 138,
          "context": "commState.baudRate = COMM_BAUDRATE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 139,
          "context": "commState.telemetryRateHz = 10; // По умолчанию 10 Гц"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 142,
          "context": "SysTick_Init();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 145,
          "context": "if (!UART_Init(commState.baudRate)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 149,
          "context": "commState.initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 153,
          "context": "void Communication_Process(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 154,
          "context": "if (!commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 159,
          "context": "uint16_t bytesReceived = UART_Receive("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 160,
          "context": "&commState.rxBuffer[commState.rxIndex],"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 161,
          "context": "(uint16_t)(COMM_BUFFER_SIZE - commState.rxIndex)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 164,
          "context": "if (bytesReceived > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 165,
          "context": "commState.rxIndex = (uint16_t)(commState.rxIndex + bytesReceived);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 168,
          "context": "uint16_t processedIndex = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 169,
          "context": "while (processedIndex + sizeof(CommPacket) <= commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 170,
          "context": "CommPacket* packet = (CommPacket*)(commState.rxBuffer + processedIndex);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 173,
          "context": "uint16_t packetSize = sizeof(CommPacket) - COMM_MAX_PACKET_SIZE + packet->length;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 174,
          "context": "if (processedIndex + packetSize > commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 179,
          "context": "if (ValidatePacket(packet)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 180,
          "context": "ProcessReceivedPacket(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 181,
          "context": "commState.packetsReceived++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 182,
          "context": "commState.lastPacketTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 184,
          "context": "commState.errorCount++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 187,
          "context": "processedIndex += packetSize;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 191,
          "context": "if (processedIndex > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 192,
          "context": "if (processedIndex < commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 193,
          "context": "memmove(commState.rxBuffer,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 194,
          "context": "commState.rxBuffer + processedIndex,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 195,
          "context": "commState.rxIndex - processedIndex);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 197,
          "context": "commState.rxIndex -= processedIndex;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 201,
          "context": "UpdateConnectionStatus();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 204,
          "context": "bool Communication_Send(PacketType type, const void* data, uint8_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 205,
          "context": "if (!commState.initialized || length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 210,
          "context": "CommPacket packet;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 211,
          "context": "packet.type = type;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 212,
          "context": "packet.length = length;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 215,
          "context": "memcpy(packet.data, data, (size_t)length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 219,
          "context": "packet.checksum = CalculateChecksum((const uint8_t*)&packet, (uint16_t)(sizeof(CommPacket) - sizeof(uint16_t)));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 222,
          "context": "if (UART_Send((const uint8_t*)&packet, (uint16_t)sizeof(CommPacket))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 223,
          "context": "commState.packetsSent++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 227,
          "context": "commState.errorCount++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 231,
          "context": "bool Communication_SendTelemetry(const TelemetryData* telemetry) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 235,
          "context": "return Communication_Send(PACKET_TYPE_TELEMETRY, telemetry, sizeof(TelemetryData));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 238,
          "context": "bool Communication_SendStatus(uint8_t status) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 239,
          "context": "return Communication_Send(PACKET_TYPE_STATUS, &status, sizeof(status));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 242,
          "context": "bool Communication_SendError(uint8_t errorCode, const char* message) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 243,
          "context": "struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 244,
          "context": "uint8_t code;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 245,
          "context": "char message[COMM_MAX_PACKET_SIZE - 1];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 248,
          "context": "errorData.code = errorCode;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 250,
          "context": "strncpy(errorData.message, message, sizeof(errorData.message) - 1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 256,
          "context": "return Communication_Send(PACKET_TYPE_ERROR, &errorData,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 260,
          "context": "void Communication_HandleCommand(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 261,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 265,
          "context": "CommandType cmd = packet->data[0];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 266,
          "context": "switch (cmd) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 267,
          "context": "case CMD_ARM:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 271,
          "context": "case CMD_DISARM:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 275,
          "context": "case CMD_TAKEOFF:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 279,
          "context": "case CMD_LAND:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 283,
          "context": "case CMD_RTH:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 287,
          "context": "case CMD_HOLD:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 291,
          "context": "case CMD_EMERGENCY_STOP:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 296,
          "context": "Communication_SendError(0x01, \"Unknown command\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 301,
          "context": "void Communication_HandleConfig(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 302,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_CONFIG) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 310,
          "context": "bool Communication_IsConnected(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 311,
          "context": "return commState.connected;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 314,
          "context": "uint32_t Communication_GetLastPacketTime(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 315,
          "context": "return commState.lastPacketTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 318,
          "context": "void Communication_SetBaudRate(uint32_t baudRate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 319,
          "context": "if (baudRate != commState.baudRate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 320,
          "context": "commState.baudRate = baudRate;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 321,
          "context": "if (commState.initialized) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 327,
          "context": "void Communication_SetTelemetryRate(uint16_t rateHz) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 328,
          "context": "commState.telemetryRateHz = rateHz;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 331,
          "context": "uint32_t Communication_GetPacketsSent(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 332,
          "context": "return commState.packetsSent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 335,
          "context": "uint32_t Communication_GetPacketsReceived(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 336,
          "context": "return commState.packetsReceived;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 339,
          "context": "uint32_t Communication_GetErrorCount(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 340,
          "context": "return commState.errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 344,
          "context": "__attribute__((weak)) void SysTick_Handler(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 346,
          "context": "commState.currentTime++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 349,
          "context": "if (commState.currentTime - commState.lastPacketTime > COMM_TIMEOUT_MS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 350,
          "context": "commState.connected = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 354,
          "context": "static void SysTick_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 359,
          "context": "NVIC_ST_RELOAD_R = SystemCoreClock / 1000 - 1;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 370,
          "context": "static uint32_t GetCurrentTime(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 371,
          "context": "return commState.currentTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 374,
          "context": "static void UpdateConnectionStatus(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 375,
          "context": "uint32_t currentTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 378,
          "context": "if (currentTime - commState.lastPacketTime > COMM_TIMEOUT_MS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 379,
          "context": "if (commState.connected) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 380,
          "context": "commState.connected = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 382,
          "context": "Communication_SendError(0x03, \"Connection lost\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 385,
          "context": "if (!commState.connected) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 386,
          "context": "commState.connected = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 388,
          "context": "Communication_SendStatus(0x01); // 0x01 - связь восстановлена"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 394,
          "context": "static uint16_t CalculateChecksum(const uint8_t* data, uint16_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 395,
          "context": "uint16_t checksum = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 397,
          "context": "checksum += data[i];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 399,
          "context": "return checksum;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 402,
          "context": "static bool ValidatePacket(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 403,
          "context": "if (packet == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 408,
          "context": "if (packet->length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 413,
          "context": "uint16_t calculatedChecksum = CalculateChecksum("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 414,
          "context": "(uint8_t*)packet,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 415,
          "context": "sizeof(CommPacket) - sizeof(packet->checksum)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 418,
          "context": "return calculatedChecksum == packet->checksum;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 421,
          "context": "static void ProcessReceivedPacket(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 422,
          "context": "switch (packet->type) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 423,
          "context": "case PACKET_TYPE_HEARTBEAT:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 425,
          "context": "Communication_Send(PACKET_TYPE_HEARTBEAT, NULL, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 428,
          "context": "case PACKET_TYPE_COMMAND:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 429,
          "context": "Communication_HandleCommand(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 432,
          "context": "case PACKET_TYPE_CONFIG:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 433,
          "context": "Communication_HandleConfig(packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 436,
          "context": "case PACKET_TYPE_WAYPOINT:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 441,
          "context": "Communication_SendError(0x02, \"Unknown packet type\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 447,
          "context": "void Communication_SendData(uint8_t* data, uint16_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 451,
          "context": "void Communication_Receive(uint8_t* buffer, uint16_t* length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 3,
          "context": "#include <string.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 4,
          "context": "#include <stdio.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 5,
          "context": "#include <math.h>  // Добавлена библиотека для NAN"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 6,
          "context": "#include \"../include/diagnostics.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 7,
          "context": "#include \"../include/communication.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 8,
          "context": "#include \"D:/keil/pack/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 9,
          "context": "#include <stddef.h>  // для NULL"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 70,
          "context": "#pragma pack(push, 4)  // Выравнивание по 4 байта"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 71,
          "context": "static struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 76,
          "context": "uint32_t watchdogTimeout;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 88,
          "context": "bool watchdogEnabled;   // Добавлено: флаг watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 90,
          "context": "#pragma pack(pop)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 94,
          "context": "static char debugBuffer[DEBUG_BUFFER_SIZE];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 97,
          "context": "static volatile uint32_t systemMillis = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 100,
          "context": "void SysTick_Init(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 103,
          "context": "void SendDebugMessage(const char* format, ...);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 104,
          "context": "const char* GetLogLevelString(LogLevel level);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 105,
          "context": "const char* GetEventString(DiagnosticEvent event);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 108,
          "context": "void ConfigureWakeupSources(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 114,
          "context": "TestStatus TestCommunication(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 118,
          "context": "void SysTick_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 136,
          "context": "static uint32_t GetCurrentTime(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 141,
          "context": "static void DelayMs(uint32_t ms) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 149,
          "context": "bool Diagnostics_Init(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 157,
          "context": "SysTick_Init();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 166,
          "context": "diagState.watchdogTimeout = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 182,
          "context": "diagState.watchdogEnabled = false;  // Инициализируем флаг watchdog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 188,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_WATCHDOG_RESET, \"System reset by watchdog\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 191,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START, \"Diagnostics initialized\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 196,
          "context": "void Diagnostics_UpdatePowerState(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 230,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_BATTERY_CRITICAL, \"Battery critically low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 232,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_BATTERY_LOW, \"Battery low\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 251,
          "context": "void Diagnostics_GetPowerState(PowerState* state) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 255,
          "context": "Diagnostics_Log(LOG_CRITICAL, DIAG_EVENT_SYSTEM_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 268,
          "context": "state->isCriticalBattery = diagState.powerState.isCriticalBattery;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 273,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_BATTERY_LOW,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 274,
          "context": "\"Battery level is critically low\", (uint32_t)state->batteryLevel);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 278,
          "context": "float Diagnostics_GetBatteryVoltage(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 282,
          "context": "uint8_t Diagnostics_GetBatteryLevel(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 325,
          "context": "uint32_t current_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 330,
          "context": "float current = ((current_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / CURRENT_SENSE_MV_A;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 335,
          "context": "diagState.powerState.batteryCurrent = current;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 349,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_LOW_BATTERY,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 350,
          "context": "\"Critical battery voltage\", (uint32_t)(voltage * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 353,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_LOW_BATTERY,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 358,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 359,
          "context": "\"Critical battery temperature\", (uint32_t)(temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 417,
          "context": "uint32_t mcu_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 424,
          "context": "float mcu_voltage = (mcu_temp_raw * VREF) / ADC_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 425,
          "context": "float mcu_temp = ((mcu_voltage * 1000.0f) / MCU_TEMP_SLOPE) + MCU_TEMP_OFFSET;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 433,
          "context": "diagState.thermalState.mcuTemp = mcu_temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 439,
          "context": "if (mcu_temp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 440,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 441,
          "context": "\"Critical MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 443,
          "context": "else if (mcu_temp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 444,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 445,
          "context": "\"High MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 449,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 450,
          "context": "\"Critical motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 453,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 458,
          "context": "Diagnostics_Log(LOG_FATAL, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 459,
          "context": "\"Critical board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 462,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 470,
          "context": "void Diagnostics_UpdateThermalState(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 472,
          "context": "diagState.thermalState.isCritical = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 476,
          "context": "if (diagState.thermalState.mcuTemp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 477,
          "context": "diagState.thermalState.isCritical = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 478,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 479,
          "context": "\"MCU temperature critical\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 480,
          "context": "(uint32_t)(diagState.thermalState.mcuTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 481,
          "context": "} else if (diagState.thermalState.mcuTemp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 483,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 485,
          "context": "(uint32_t)(diagState.thermalState.mcuTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 491,
          "context": "diagState.thermalState.isCritical = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 492,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 493,
          "context": "\"Motor temperature critical\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 497,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 505,
          "context": "diagState.thermalState.isCritical = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 506,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 507,
          "context": "\"Board temperature critical\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 511,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_HIGH_TEMP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 527,
          "context": "void Diagnostics_GetThermalState(ThermalState* state) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 533,
          "context": "void Diagnostics_Log(LogLevel level, DiagnosticEvent event, const char* message, uint32_t data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 541,
          "context": "entry->code = (ErrorCode)event;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 556,
          "context": "void Diagnostics_ClearLog(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 562,
          "context": "uint32_t Diagnostics_GetLogCount(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 566,
          "context": "bool Diagnostics_GetLogEntry(uint32_t index, LogEntry* entry) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 575,
          "context": "bool Diagnostics_IsOverheated(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 576,
          "context": "return (diagState.thermalState.mcuTemp >= TEMP_MCU_WARNING ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 582,
          "context": "void SendDebugMessage(const char* format, ...) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 603,
          "context": "Communication_SendData((uint8_t*)debugBuffer, strlen(debugBuffer));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 607,
          "context": "const char* GetLogLevelString(LogLevel level) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 608,
          "context": "switch (level) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 609,
          "context": "case LOG_DEBUG:    return \"DEBUG\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 610,
          "context": "case LOG_INFO:     return \"INFO\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 611,
          "context": "case LOG_WARNING:  return \"WARNING\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 612,
          "context": "case LOG_ERROR:    return \"ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 613,
          "context": "case LOG_CRITICAL: return \"CRITICAL\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 614,
          "context": "case LOG_FATAL:    return \"FATAL\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 620,
          "context": "const char* GetEventString(DiagnosticEvent event) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 621,
          "context": "switch (event) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 622,
          "context": "case DIAG_EVENT_SYSTEM_START:     return \"SYSTEM_START\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 623,
          "context": "case DIAG_EVENT_SYSTEM_STOP:      return \"SYSTEM_STOP\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 624,
          "context": "case DIAG_EVENT_HIGH_TEMP:        return \"HIGH_TEMP\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 625,
          "context": "case DIAG_EVENT_LOW_BATTERY:      return \"LOW_BATTERY\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 626,
          "context": "case DIAG_EVENT_BATTERY_CRITICAL: return \"BATTERY_CRITICAL\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 627,
          "context": "case DIAG_EVENT_BATTERY_LOW:      return \"BATTERY_LOW\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 628,
          "context": "case DIAG_EVENT_NAV_ERROR:        return \"NAV_ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 629,
          "context": "case DIAG_EVENT_SENSOR_ERROR:     return \"SENSOR_ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 630,
          "context": "case DIAG_EVENT_MOTOR_ERROR:      return \"MOTOR_ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 631,
          "context": "case DIAG_EVENT_COMM_ERROR:       return \"COMM_ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 632,
          "context": "case DIAG_EVENT_STABILIZATION_ERROR: return \"STABILIZATION_ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 633,
          "context": "case DIAG_EVENT_WATCHDOG_RESET:   return \"WATCHDOG_RESET\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 634,
          "context": "case DIAG_EVENT_SELF_TEST:        return \"SELF_TEST\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 635,
          "context": "case DIAG_EVENT_SYSTEM_ERROR:     return \"SYSTEM_ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 636,
          "context": "case DIAG_EVENT_CALIBRATION:      return \"CALIBRATION\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 637,
          "context": "case DIAG_EVENT_ERROR:            return \"ERROR\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 638,
          "context": "case DIAG_EVENT_WARNING:          return \"WARNING\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 644,
          "context": "SystemState Diagnostics_GetSystemState(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 648,
          "context": "uint32_t Diagnostics_GetErrorCount(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 652,
          "context": "void Diagnostics_ResetErrorCount(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 660,
          "context": "void Diagnostics_InitWatchdog(uint32_t timeout_ms) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 691,
          "context": "diagState.watchdogEnabled = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 692,
          "context": "diagState.watchdogTimeout = timeout_ms;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 697,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 698,
          "context": "\"Watchdog initialized\", timeout_ms);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 706,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_WATCHDOG_RESET, \"Watchdog reset occurred\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 709,
          "context": "void Diagnostics_FeedWatchdog(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 710,
          "context": "if (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 716,
          "context": "bool Diagnostics_IsWatchdogReset(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 723,
          "context": "static PowerMode currentPowerMode = POWER_MODE_NORMAL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 726,
          "context": "static uint32_t savedPeripheralState = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 730,
          "context": "switch (mode) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 731,
          "context": "case POWER_MODE_SLEEP:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 739,
          "context": "case POWER_MODE_DEEP_SLEEP:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 748,
          "context": "case POWER_MODE_NORMAL:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 772,
          "context": "void ConfigureWakeupSources(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 787,
          "context": "void Diagnostics_EnterLowPowerMode(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 792,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_STOP,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 799,
          "context": "ConfigureWakeupSources();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 806,
          "context": "void Diagnostics_ExitLowPowerMode(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 818,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 824,
          "context": "void Diagnostics_StartPerformanceCounter(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 828,
          "context": "uint32_t Diagnostics_StopPerformanceCounter(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 844,
          "context": "void Diagnostics_ResetPerformanceStats(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 852,
          "context": "void Diagnostics_EnableDebugOutput(bool enable) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 858,
          "context": "void Diagnostics_PrintSystemStatus(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 883,
          "context": "SendDebugMessage(\"MCU Temp: %.1f°C\", diagState.thermalState.mcuTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 893,
          "context": "SendDebugMessage(\"\\n=== Performance Stats ===\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 907,
          "context": "Diagnostics_GetLastLogEntry(&lastEntry);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 916,
          "context": "void Diagnostics_RunSelfTest(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 918,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START, \"Running self-test\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 924,
          "context": "static SelfTestResult selfTestResult;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 944,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 953,
          "context": "status.code = POWER_ERR_VOLTAGE_LOW;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 956,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 962,
          "context": "status.code = POWER_ERR_VOLTAGE_HIGH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 965,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 974,
          "context": "status.code = POWER_ERR_CURRENT_HIGH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 977,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 986,
          "context": "status.code = POWER_ERR_TEMP_HIGH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 989,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 996,
          "context": "status.code = POWER_ERR_SUPPLY_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 999,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1042,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1049,
          "context": "float accel_magnitude = sqrtf(powf(imuData.accelX, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1050,
          "context": "powf(imuData.accelY, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1051,
          "context": "powf(imuData.accelZ, 2));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1058,
          "context": "if (accel_magnitude > IMU_TEST_ACCEL_MAX || gyro_magnitude > IMU_TEST_GYRO_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1060,
          "context": "status.code = SENSOR_ERR_IMU_RANGE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1062,
          "context": "status.data = (uint32_t)(accel_magnitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1063,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1071,
          "context": "status.code = SENSOR_ERR_BARO_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1074,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1082,
          "context": "status.code = SENSOR_ERR_BARO_RANGE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1085,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1093,
          "context": "status.code = SENSOR_ERR_MAG_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1096,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1101,
          "context": "static IMUData magData = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1113,
          "context": "status.code = SENSOR_ERR_MAG_RANGE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1116,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1124,
          "context": "status.code = SENSOR_ERR_GPS_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1127,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1151,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1153,
          "context": "float current;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1162,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1171,
          "context": "status.code = MOTOR_ERR_ESC_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1174,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1187,
          "context": "status.code = MOTOR_ERR_NOT_RESPONDING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1190,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1202,
          "context": "motorData[i].current = GetMotorCurrent(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1208,
          "context": "if (motorData[i].current > MOTOR_TEST_CURRENT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1210,
          "context": "status.code = MOTOR_ERR_HIGH_CURRENT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1211,
          "context": "status.message = \"Motor high current\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1213,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1222,
          "context": "status.code = MOTOR_ERR_NO_ROTATION;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1225,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1234,
          "context": "status.code = MOTOR_ERR_TEMP_HIGH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1237,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1244,
          "context": "status.code = MOTOR_ERR_VIBRATION;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1247,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1266,
          "context": "SelfTestResult Diagnostics_GetTestResult(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1291,
          "context": "TestStatus TestCommunication(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1293,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1301,
          "context": "bool rcResponded = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1303,
          "context": "SendRCTestPacket();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1306,
          "context": "if (IsRCTestResponseReceived()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1307,
          "context": "rcResponded = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1313,
          "context": "if (!rcResponded) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1315,
          "context": "status.code = COMM_ERR_RC_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1318,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1323,
          "context": "uint8_t rcQuality = GetRCLinkQuality();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1324,
          "context": "if (rcQuality < RC_TEST_MIN_QUALITY) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1326,
          "context": "status.code = COMM_ERR_RC_QUALITY;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1328,
          "context": "status.data = rcQuality;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1329,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1337,
          "context": "SendTelemetryTestPacket();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1340,
          "context": "if (IsTelemetryAckReceived()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1349,
          "context": "status.code = COMM_ERR_TELEMETRY_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1352,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1357,
          "context": "if (HasBackupComm() && !TestBackupComm()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1359,
          "context": "status.code = COMM_ERR_BACKUP_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1360,
          "context": "status.message = \"Backup comm failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1362,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1372,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1378,
          "context": "if (!TestWatchdogReset()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1380,
          "context": "status.code = SAFETY_ERR_WATCHDOG;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1381,
          "context": "status.message = \"Watchdog failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1383,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1391,
          "context": "status.code = SAFETY_ERR_EEPROM;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1394,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1402,
          "context": "status.code = SAFETY_ERR_FLASH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1405,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1411,
          "context": "if (HasParachute()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1412,
          "context": "if (!TestParachuteSystem()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1414,
          "context": "status.code = SAFETY_ERR_PARACHUTE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1415,
          "context": "status.message = \"Parachute failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1417,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1424,
          "context": "if (!TestKillSwitch()) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1426,
          "context": "status.code = SAFETY_ERR_KILLSWITCH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1427,
          "context": "status.message = \"Kill switch failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1429,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SELF_TEST,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1440,
          "context": "ADCResult Diagnostics_GetADCValue(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1475,
          "context": "float Diagnostics_ConvertADCToTemp(ADCResult adcResult) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1477,
          "context": "if (adcResult.error != ADC_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1478,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1479,
          "context": "\"ADC conversion error before temperature conversion\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1480,
          "context": "adcResult.error);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1485,
          "context": "if (adcResult.value == 0 || adcResult.value >= ADC_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1486,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1488,
          "context": "adcResult.value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1493,
          "context": "float voltage = (adcResult.value * 3.3f) / 4096.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1498,
          "context": "switch (TEMP_SENSOR_TYPE_LINEAR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1499,
          "context": "case TEMP_SENSOR_TYPE_LINEAR:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1506,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1514,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1515,
          "context": "\"Invalid cold junction temperature\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1524,
          "context": "ADCError Diagnostics_StartADCConversion(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1536,
          "context": "ADCConversionStatus Diagnostics_IsADCConversionComplete(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1538,
          "context": ".complete = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1547,
          "context": "status.complete = (ADC0_RIS_R & 0x08) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1550,
          "context": "static uint32_t conversionAttempts = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1551,
          "context": "const uint32_t MAX_CONVERSION_ATTEMPTS = 1000;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1553,
          "context": "if (!status.complete) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1554,
          "context": "conversionAttempts++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1555,
          "context": "if (conversionAttempts >= MAX_CONVERSION_ATTEMPTS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1557,
          "context": "conversionAttempts = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1560,
          "context": "conversionAttempts = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1569,
          "context": "SystemTickResult Diagnostics_GetSystemTicks(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1570,
          "context": "SystemTickResult result = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1571,
          "context": ".ticks = NVIC_ST_CURRENT_R,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1576,
          "context": "if (result.ticks == 0 || result.ticks > NVIC_ST_RELOAD_R) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1578,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SYSTEM_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1579,
          "context": "\"Invalid system tick value\", result.ticks);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1586,
          "context": "SystemTickError Diagnostics_DelayTicks(uint32_t ticks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1587,
          "context": "SystemTickResult startTicks = Diagnostics_GetSystemTicks();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1589,
          "context": "if (startTicks.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1593,
          "context": "uint32_t startValue = startTicks.ticks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1594,
          "context": "uint32_t elapsedTicks = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1596,
          "context": "while (elapsedTicks < ticks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1597,
          "context": "SystemTickResult currentTicks = Diagnostics_GetSystemTicks();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1599,
          "context": "if (currentTicks.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1604,
          "context": "if (currentTicks.ticks <= startValue) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1605,
          "context": "elapsedTicks = startValue - currentTicks.ticks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1607,
          "context": "elapsedTicks = (NVIC_ST_RELOAD_R - currentTicks.ticks) + startValue;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1617,
          "context": "ElapsedTicksResult Diagnostics_GetElapsedTicks(uint32_t startTicks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1618,
          "context": "ElapsedTicksResult result = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1619,
          "context": ".elapsedTicks = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1623,
          "context": "SystemTickResult currentTicksResult = Diagnostics_GetSystemTicks();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1625,
          "context": "if (currentTicksResult.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1630,
          "context": "uint32_t currentTicks = currentTicksResult.ticks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1632,
          "context": "if (currentTicks <= startTicks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1633,
          "context": "result.elapsedTicks = startTicks - currentTicks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1636,
          "context": "result.elapsedTicks = (NVIC_ST_RELOAD_R - currentTicks) + startTicks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1643,
          "context": "static IMUData magData = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1649,
          "context": "void Diagnostics_InitSelfTest(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1655,
          "context": "strncpy(selfTestResult.message, \"Test not started\", sizeof(selfTestResult.message) - 1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1661,
          "context": "selfTestResult.systemStatus.communicationOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1669,
          "context": "selfTestResult.commTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1673,
          "context": "bool Diagnostics_PerformQuickTest(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1674,
          "context": "Diagnostics_InitSelfTest();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1713,
          "context": "selfTestResult.commTest = TestCommunication();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1714,
          "context": "if (selfTestResult.commTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1719,
          "context": "else if (selfTestResult.commTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1722,
          "context": "selfTestResult.systemStatus.communicationOperational = (selfTestResult.commTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1739,
          "context": "strncpy(selfTestResult.message, \"Self-test failed\", sizeof(selfTestResult.message) - 1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1740,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SYSTEM_ERROR, selfTestResult.message, selfTestResult.totalErrors);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1744,
          "context": "strncpy(selfTestResult.message, \"Self-test passed\", sizeof(selfTestResult.message) - 1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1745,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SELF_TEST, selfTestResult.message, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1772,
          "context": "uint32_t channel = ADC_CHANNEL_MOTOR_TEMP_BASE + motorIndex;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1775,
          "context": "ADCResult result = Diagnostics_GetADCValue();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1776,
          "context": "return Diagnostics_ConvertADCToTemp(result);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1807,
          "context": "static const struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1808,
          "context": "float a, b, c, d;  // Коэффициенты для полиномиальной аппроксимации"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1809,
          "context": "} ThermocoupleCoefficients[THERMOCOUPLE_TYPE_COUNT] = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1821,
          "context": "float GetColdJunctionTemperature(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1822,
          "context": "ADCResult adcResult = Diagnostics_GetADCValue();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1824,
          "context": "if (adcResult.error != ADC_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1825,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1826,
          "context": "\"ADC conversion error before cold junction temperature\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1827,
          "context": "adcResult.error);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1832,
          "context": "float voltage = (adcResult.value * 3.3f) / 4096.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1837,
          "context": "switch (TEMP_SENSOR_TYPE_LINEAR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1838,
          "context": "case TEMP_SENSOR_TYPE_LINEAR:"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1845,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1853,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1854,
          "context": "\"Invalid cold junction temperature\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1863,
          "context": "float ConvertThermocoupleVoltageToTemp(float thermocoupleVoltage, ThermocoupleType type, float coldJunctionTemp) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1866,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1867,
          "context": "\"Invalid thermocouple type\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1873,
          "context": "const struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1874,
          "context": "float a, b, c, d;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1875,
          "context": "} *coeffs = &ThermocoupleCoefficients[type];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1879,
          "context": "float temperature = coeffs->a * thermocoupleVoltage * thermocoupleVoltage * thermocoupleVoltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1880,
          "context": "+ coeffs->b * thermocoupleVoltage * thermocoupleVoltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1881,
          "context": "+ coeffs->c * thermocoupleVoltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1882,
          "context": "+ coeffs->d;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1885,
          "context": "temperature += coldJunctionTemp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1888,
          "context": "const float MIN_TEMP = -200.0f;  // Минимальная температур для термопар"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1889,
          "context": "const float MAX_TEMP = 1800.0f;  // Максимальная температур для термопар"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1892,
          "context": "Diagnostics_Log(LOG_WARNING, DIAG_EVENT_SENSOR_ERROR,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1893,
          "context": "\"Thermocouple temperature out of range\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1909,
          "context": "uint32_t adcChannel = ADC_CHANNEL_MOTOR_CURRENT_BASE + motorIndex;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1912,
          "context": "ADC1_PSSI_R |= (1 << adcChannel);  // Запуск преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1915,
          "context": "while(!(ADC1_RIS_R & (1 << adcChannel))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1923,
          "context": "ADC1_ISC_R = (1 << adcChannel);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1928,
          "context": "float current = (voltage * 20.0f) / 3.3f;   // Преобразование в амперы"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1930,
          "context": "return current;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1934,
          "context": "static bool backupCommAvailable = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1935,
          "context": "static uint32_t lastBackupCommTest = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1938,
          "context": "bool HasBackupComm(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1939,
          "context": "return backupCommAvailable;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1943,
          "context": "bool TestBackupComm(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1944,
          "context": "uint32_t currentTime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1947,
          "context": "if (currentTime - lastBackupCommTest < 1000) {  // Тестируем не чаще раза в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1951,
          "context": "lastBackupCommTest = currentTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1954,
          "context": "uint8_t testPacket[] = {0xAA, 0x55, 0x00, 0xFF};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1955,
          "context": "bool success = SendBackupCommPacket(testPacket, sizeof(testPacket));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1956,
          "context": "if (!success) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1965,
          "context": "if (ReceiveBackupCommPacket(response, sizeof(response))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1978,
          "context": "bool SendBackupCommPacket(const uint8_t* data, uint8_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1983,
          "context": "bool ReceiveBackupCommPacket(uint8_t* buffer, uint8_t maxLength) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1989,
          "context": "bool TestWatchdogReset(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1991,
          "context": "if (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2000,
          "context": "uint32_t testTimeout = SystemCoreClock / 10;  // 100мс при текущей частоте"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2022,
          "context": "diagState.watchdogEnabled = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2023,
          "context": "diagState.watchdogTimeout = 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2028,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SYSTEM_START,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2029,
          "context": "\"Watchdog initialized\", 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2032,
          "context": "while (diagState.watchdogEnabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2049,
          "context": "bool TestKillSwitch(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2052,
          "context": "bool TestParachuteSystem(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2054,
          "context": "bool HasParachute(void) { return false; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2060,
          "context": "bool IsRCTestResponseReceived(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2061,
          "context": "bool IsTelemetryAckReceived(void) { return true; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2062,
          "context": "void SendRCTestPacket(void) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2063,
          "context": "void SendTelemetryTestPacket(void) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2065,
          "context": "const char* Diagnostics_GetLastLogEntry(void) { return \"No log\"; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2076,
          "context": "static const struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2077,
          "context": "float a, b, c, d;  // Коэффициенты для полиномиальной аппроксимации"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2078,
          "context": "} ThermocoupleCoefficients[THERMOCOUPLE_TYPE_COUNT] = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 1,
          "context": "#include \"../include/gpio.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\gpio.c",
          "line_number": 20,
          "context": "void SysCtlClockSet(uint32_t config) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 1,
          "context": "#include <math.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 2,
          "context": "#include <string.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 3,
          "context": "#include \"../include/navigation.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 13,
          "context": "static NavigationState nav_state = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 14,
          "context": "static Waypoint waypoints[MAX_WAYPOINTS];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 15,
          "context": "static uint8_t waypoint_count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 16,
          "context": "static uint8_t current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 17,
          "context": "static GPSPosition home_position = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 18,
          "context": "static bool home_position_set = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 21,
          "context": "static void UpdateNavigationState(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 22,
          "context": "static float ClampHeading(float heading);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 27,
          "context": "waypoint_count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 28,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 29,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 32,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 35,
          "context": "nav_state.vertical_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 44,
          "context": "bool Navigation_AddWaypoint(const Waypoint* waypoint) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 45,
          "context": "if (waypoint == NULL || waypoint_count >= MAX_WAYPOINTS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 53,
          "context": "waypoints[waypoint_count] = *waypoint;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 54,
          "context": "waypoints[waypoint_count].reached = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 55,
          "context": "waypoint_count++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 61,
          "context": "if (index >= waypoint_count) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 66,
          "context": "for (uint8_t i = index; i < waypoint_count - 1; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 70,
          "context": "waypoint_count--;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 73,
          "context": "if (current_waypoint_index > index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 74,
          "context": "current_waypoint_index--;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 82,
          "context": "waypoint_count = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 83,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 87,
          "context": "return waypoint_count;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 91,
          "context": "if (index >= waypoint_count || waypoint == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 100,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 101,
          "context": "nav_state.navigation_active = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 102,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 107,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 111,
          "context": "if (waypoint_count > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 112,
          "context": "nav_state.navigation_active = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 117,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 118,
          "context": "current_waypoint_index = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 121,
          "context": "bool Navigation_IsActive(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 122,
          "context": "return nav_state.navigation_active;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 133,
          "context": "*position = nav_state.current_position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 138,
          "context": "return nav_state.current_position.altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 145,
          "context": "float Navigation_GetDistanceToTarget(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 146,
          "context": "return nav_state.distance_to_target;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 155,
          "context": "nav_state.current_position.latitude = latitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 156,
          "context": "nav_state.current_position.longitude = longitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 157,
          "context": "nav_state.current_position.altitude = altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 158,
          "context": "nav_state.current_position.valid = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 169,
          "context": "nav_state.current_position.latitude += speed_deg * cosf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 170,
          "context": "nav_state.current_position.longitude += speed_deg * sinf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 178,
          "context": "void Navigation_EmulateAltitudeChange(float vertical_speed) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 179,
          "context": "nav_state.current_position.altitude += vertical_speed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 182,
          "context": "if (nav_state.current_position.altitude < NAV_MIN_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 183,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 184,
          "context": "vertical_speed = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 185,
          "context": "} else if (nav_state.current_position.altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 186,
          "context": "nav_state.current_position.altitude = NAV_MAX_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 187,
          "context": "vertical_speed = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 190,
          "context": "nav_state.vertical_speed = vertical_speed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 193,
          "context": "float Navigation_CalculateDistance(const GPSPosition* pos1, const GPSPosition* pos2) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 205,
          "context": "cosf(lat1) * cosf(lat2) * sinf(dlon/2) * sinf(dlon/2);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 206,
          "context": "float c = 2 * atan2f(sqrtf(a), sqrtf(1-a));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 208,
          "context": "return EARTH_RADIUS * c;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 211,
          "context": "float Navigation_CalculateBearing(const GPSPosition* pos1, const GPSPosition* pos2) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 220,
          "context": "float y = sinf(dlon) * cosf(lat2);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 221,
          "context": "float x = cosf(lat1) * sinf(lat2) - sinf(lat1) * cosf(lat2) * cosf(dlon);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 227,
          "context": "bool Navigation_IsValidPosition(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 242,
          "context": "bool Navigation_IsInSafeZone(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 248,
          "context": "float distance = Navigation_CalculateDistance(&home_position, position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 249,
          "context": "return distance <= 1000.0f; // Безопасная зона - 1 км от дома"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 252,
          "context": "void Navigation_UpdateHomePosition(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 259,
          "context": "float Navigation_GetDistanceToHome(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 263,
          "context": "return Navigation_CalculateDistance(&nav_state.current_position, &home_position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 270,
          "context": "static void UpdateNavigationState(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 271,
          "context": "if (!nav_state.navigation_active || waypoint_count == 0 ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 272,
          "context": "current_waypoint_index >= waypoint_count) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 277,
          "context": "const Waypoint* target = &waypoints[current_waypoint_index];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 278,
          "context": "nav_state.distance_to_target = Navigation_CalculateDistance("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 279,
          "context": "&nav_state.current_position, &target->position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 280,
          "context": "nav_state.bearing_to_target = Navigation_CalculateBearing("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 281,
          "context": "&nav_state.current_position, &target->position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 284,
          "context": "if (nav_state.distance_to_target <= NAV_WAYPOINT_RADIUS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 285,
          "context": "waypoints[current_waypoint_index].reached = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 286,
          "context": "if (current_waypoint_index < waypoint_count - 1) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 287,
          "context": "current_waypoint_index++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 289,
          "context": "nav_state.navigation_active = false; // Достигли последней точки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 294,
          "context": "static float ClampHeading(float heading) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 1,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 2,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 3,
          "context": "#include <stdlib.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 4,
          "context": "#include <math.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 5,
          "context": "#include \"TM4C123GH6PM.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 6,
          "context": "#include \"../include/sensors.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 7,
          "context": "#include \"../include/diagnostics.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 10,
          "context": "static struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 13,
          "context": "float current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 18,
          "context": ".current_altitude = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 23,
          "context": "static MPU6050_Data mpu6050_data = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 24,
          "context": "static BMP280_Data bmp280_data = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 27,
          "context": "static float vertical_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 31,
          "context": "mpu6050_data.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 32,
          "context": "mpu6050_data.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 33,
          "context": "mpu6050_data.accel_z = 1.0f;  // 1g в состоянии покоя"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 71,
          "context": "mpu6050_data.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 72,
          "context": "mpu6050_data.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 73,
          "context": "mpu6050_data.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 88,
          "context": "mpu6050_data.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 89,
          "context": "mpu6050_data.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 90,
          "context": "mpu6050_data.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 96,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 97,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 98,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f); // Примерное изменение давления с высотой"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 101,
          "context": "void Sensors_EmulateAscent(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 103,
          "context": "vertical_speed = 2.0f; // м/с"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 104,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f; // Предполагаем вызов каждые 100мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 106,
          "context": "mpu6050_data.accel_z = 1.2f; // Повышенная нагрузка при наборе высоты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 107,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 108,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 111,
          "context": "void Sensors_EmulateDescent(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 113,
          "context": "vertical_speed = -1.5f; // м/с"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 114,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 115,
          "context": "if (sensor_state.current_altitude < 0.0f) sensor_state.current_altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 117,
          "context": "mpu6050_data.accel_z = 0.8f; // Пониженная нагрузка при снижении"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 118,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 119,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 128,
          "context": "mpu6050_data.accel_x = (float)sin(sensor_state.rotation_angle * 3.14159f / 180.0f) * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 129,
          "context": "mpu6050_data.accel_y = (float)cos(sensor_state.rotation_angle * 3.14159f / 180.0f) * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 134,
          "context": "mpu6050_data.accel_x = 0.2f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 138,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 139,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 140,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 157,
          "context": "static float filteredRoll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 158,
          "context": "static float filteredPitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 159,
          "context": "static float filteredYaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 162,
          "context": "float accelRoll = atan2f(imu.accel_y, imu.accel_z) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 163,
          "context": "float accelPitch = atan2f(-imu.accel_x, sqrtf(imu.accel_y * imu.accel_y + imu.accel_z * imu.accel_z)) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 167,
          "context": "filteredRoll = 0.96f * (filteredRoll + imu.gyro_x * dt) + 0.04f * accelRoll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 168,
          "context": "filteredPitch = 0.96f * (filteredPitch + imu.gyro_y * dt) + 0.04f * accelPitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 176,
          "context": "orientation->pitch = filteredPitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 183,
          "context": "data->imu.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 184,
          "context": "data->imu.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 185,
          "context": "data->imu.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 1,
          "context": "#include <math.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 2,
          "context": "#include <stddef.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 3,
          "context": "#include \"../include/sensors.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 4,
          "context": "#include \"../include/stabilization.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 5,
          "context": "#include \"../include/actuators.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 8,
          "context": "static float UpdatePID(PIDController* pid, float error);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 9,
          "context": "static float ClampValue(float value, float min, float max);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 10,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 26,
          "context": "static struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 29,
          "context": "Orientation currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 31,
          "context": "PIDController pitchPID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 43,
          "context": "stabState.targetSetPoint.pitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 48,
          "context": "stabState.currentOrientation.roll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 49,
          "context": "stabState.currentOrientation.pitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 50,
          "context": "stabState.currentOrientation.yaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 62,
          "context": "float pitchKp, float pitchKi, float pitchKd,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 73,
          "context": "stabState.pitchPID.kP = pitchKp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 74,
          "context": "stabState.pitchPID.kI = pitchKi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 75,
          "context": "stabState.pitchPID.kD = pitchKd;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 76,
          "context": "stabState.pitchPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 77,
          "context": "stabState.pitchPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 97,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 100,
          "context": "stabState.targetSetPoint.pitch = ClampValue(pitch, -MAX_PITCH_ANGLE, MAX_PITCH_ANGLE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 113,
          "context": "Orientation currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 117,
          "context": "Sensors_GetOrientation(&currentOrientation);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 120,
          "context": "stabState.currentOrientation.roll = currentOrientation.roll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 121,
          "context": "stabState.currentOrientation.pitch = currentOrientation.pitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 122,
          "context": "stabState.currentOrientation.yaw = currentOrientation.yaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 125,
          "context": "float rollError = stabState.targetSetPoint.roll - stabState.currentOrientation.roll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 126,
          "context": "float pitchError = stabState.targetSetPoint.pitch - stabState.currentOrientation.pitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 127,
          "context": "float yawError = stabState.targetSetPoint.yaw - stabState.currentOrientation.yaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 136,
          "context": "float pitchOutput = UpdatePID(&stabState.pitchPID, pitchError);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 141,
          "context": "UpdateMotorOutputs(rollOutput, pitchOutput, yawOutput, altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 146,
          "context": "*orientation = stabState.currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 166,
          "context": "Actuators_SetAllMotors(0.0f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 178,
          "context": "stabState.pitchPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 179,
          "context": "stabState.pitchPID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 189,
          "context": "static float UpdatePID(PIDController* pid, float error) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 212,
          "context": "static float ClampValue(float value, float min, float max) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 218,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 229,
          "context": "float m1 = baseThrust - rollOutput - pitchOutput + yawOutput;  // Передний левый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 230,
          "context": "float m2 = baseThrust + rollOutput - pitchOutput - yawOutput;  // Передний правый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 231,
          "context": "float m3 = baseThrust + rollOutput + pitchOutput + yawOutput;  // Задний правый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 232,
          "context": "float m4 = baseThrust - rollOutput + pitchOutput - yawOutput;  // Задний левый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 241,
          "context": "Actuators_SetMotor(0, m1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 242,
          "context": "Actuators_SetMotor(1, m2);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 243,
          "context": "Actuators_SetMotor(2, m3);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 244,
          "context": "Actuators_SetMotor(3, m4);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 4,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 5,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 22,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 30,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 34,
          "context": "} ActuatorsState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 37,
          "context": "void Actuators_Init(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 38,
          "context": "void Actuators_DeInit(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 41,
          "context": "void Actuators_SetMotorPWM(uint8_t motor_index, uint16_t pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 42,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 43,
          "context": "void Actuators_SetAllMotors(float power_level);  // Устанавливает одинаковую мощность для всех моторов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 44,
          "context": "uint16_t Actuators_GetMotorPWM(uint8_t motor_index);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 47,
          "context": "void Actuators_EnableMotor(uint8_t motor_index);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 48,
          "context": "void Actuators_DisableMotor(uint8_t motor_index);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 49,
          "context": "void Actuators_EnableAllMotors(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 50,
          "context": "void Actuators_DisableAllMotors(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 51,
          "context": "bool Actuators_IsMotorEnabled(uint8_t motor_index);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 54,
          "context": "void Actuators_SetThrottle(uint16_t throttle);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 55,
          "context": "void Actuators_SetYaw(int16_t yaw);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 56,
          "context": "void Actuators_SetPitch(int16_t pitch);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 57,
          "context": "void Actuators_SetRoll(int16_t roll);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 60,
          "context": "void Actuators_GetState(ActuatorsState* state);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 61,
          "context": "float Actuators_GetMotorTemperature(uint8_t motor_index);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 62,
          "context": "uint32_t Actuators_GetMotorRuntime(uint8_t motor_index);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 65,
          "context": "void Actuators_EmulateHover(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 66,
          "context": "void Actuators_EmulateAscent(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 67,
          "context": "void Actuators_EmulateDescent(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 68,
          "context": "void Actuators_EmulateRotation(int16_t yaw_rate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 69,
          "context": "void Actuators_EmulateForwardFlight(uint16_t speed);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 72,
          "context": "void Actuators_EmergencyStop(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 73,
          "context": "bool Actuators_IsEmergencyStopActive(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 74,
          "context": "void Actuators_ResetEmergencyStop(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 4,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 5,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 6,
          "context": "#include \"sensors.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 7,
          "context": "#include \"navigation.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 8,
          "context": "#include \"stabilization.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 30,
          "context": "} PacketType;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 43,
          "context": "#pragma pack(push, 2)  // Выравнивание по 2 байта для оптимизации размера пакетов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 45,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 49,
          "context": "uint16_t checksum;     // Контрольная сумма"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 50,
          "context": "} CommPacket;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 53,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 65,
          "context": "float verticalSpeed;      // Вертикальная скорость (м/с)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 73,
          "context": "#pragma pack(pop)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 77,
          "context": "uint16_t UART_Receive(uint8_t* buffer, uint16_t maxLength);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 78,
          "context": "bool UART_Send(const uint8_t* data, uint16_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 81,
          "context": "void Communication_Init(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 82,
          "context": "void Communication_SendData(uint8_t* data, uint16_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 83,
          "context": "uint16_t Communication_Receive(uint8_t* buffer, uint16_t maxLength);  // Изменили возвращаемый тип и имя параметра"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 84,
          "context": "bool Communication_IsConnected(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 85,
          "context": "void Communication_Process(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 88,
          "context": "bool Communication_Send(PacketType type, const void* data, uint8_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 89,
          "context": "uint16_t Communication_Receive(uint8_t* buffer, uint16_t maxLength);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 92,
          "context": "bool Communication_SendTelemetry(const TelemetryData* telemetry);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 93,
          "context": "bool Communication_SendStatus(uint8_t status);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 94,
          "context": "bool Communication_SendError(uint8_t errorCode, const char* message);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 97,
          "context": "void Communication_HandleCommand(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 98,
          "context": "void Communication_HandleConfig(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 101,
          "context": "uint32_t Communication_GetLastPacketTime(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 104,
          "context": "void Communication_SetBaudRate(uint32_t baudRate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 105,
          "context": "void Communication_SetTelemetryRate(uint16_t rateHz);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 108,
          "context": "uint32_t Communication_GetPacketsSent(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 109,
          "context": "uint32_t Communication_GetPacketsReceived(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 110,
          "context": "uint32_t Communication_GetErrorCount(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 4,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 5,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 6,
          "context": "#include <stdarg.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 7,
          "context": "#include <math.h>  // Для isnan() и математических функций"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 38,
          "context": "} DiagnosticEvent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 64,
          "context": "} SystemTickError;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 92,
          "context": "} ThermocoupleType;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 116,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 118,
          "context": "uint32_t code;      // Error or status code"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 119,
          "context": "const char* message;// Status message"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 123,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 124,
          "context": "float accelX;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 125,
          "context": "float accelY;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 126,
          "context": "float accelZ;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 136,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 139,
          "context": "DiagnosticEvent event;   // Тип события"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 140,
          "context": "char message[128];       // Текстовое сообщение"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 141,
          "context": "uint32_t code;          // Код события/ошибки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 145,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 146,
          "context": "float mcuTemp;           // Temperature of the MCU"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 150,
          "context": "bool isCritical;         // True if any temperature is critical"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 154,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 162,
          "context": "bool isCriticalBattery;  // Флаг критически низкого заряда"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 165,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 169,
          "context": "bool communicationOperational;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 174,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 176,
          "context": "char message[64];        // Общее сообщение о результате"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 190,
          "context": "TestStatus commTest;     // Тест коммуникации"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 197,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 202,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 203,
          "context": "uint32_t ticks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 204,
          "context": "SystemTickError error;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 205,
          "context": "} SystemTickResult;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 207,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 208,
          "context": "uint32_t elapsedTicks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 209,
          "context": "SystemTickError error;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 210,
          "context": "} ElapsedTicksResult;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 212,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 213,
          "context": "bool complete;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 217,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 219,
          "context": "struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 220,
          "context": "ThermocoupleType thermocopleType;  // Тип термопары"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 221,
          "context": "float referenceVoltage;            // Опорное напряжение"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 222,
          "context": "} thermocoupleParams;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 225,
          "context": "struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 337,
          "context": "extern uint32_t SystemCoreClock;  // Глобальная переменная тактовой частоты микроконтроллера"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 340,
          "context": "bool Diagnostics_Init(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 341,
          "context": "bool Diagnostics_PerformSelfTest(SelfTestResult* result);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 342,
          "context": "void Diagnostics_InitSelfTest(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 343,
          "context": "bool Diagnostics_PerformQuickTest(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 345,
          "context": "const char* Diagnostics_GetEventString(DiagnosticEvent event);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 346,
          "context": "void Diagnostics_Log(uint8_t level, DiagnosticEvent event, const char* message, uint32_t data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 349,
          "context": "float GetColdJunctionTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 350,
          "context": "float ConvertThermocoupleVoltageToTemp(float thermocoupleVoltage, ThermocoupleType type, float coldJunctionTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 353,
          "context": "void Diagnostics_Log(LogLevel level, DiagnosticEvent event, const char* message, uint32_t data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 354,
          "context": "void Diagnostics_ClearLog(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 355,
          "context": "uint32_t Diagnostics_GetLogCount(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 356,
          "context": "bool Diagnostics_GetLogEntry(uint32_t index, LogEntry* entry);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 359,
          "context": "bool Diagnostics_GetIMUData(IMUData* data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 360,
          "context": "bool Diagnostics_CalibrateIMU(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 361,
          "context": "bool Diagnostics_IsIMUCalibrated(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 364,
          "context": "void Diagnostics_UpdatePowerState(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 365,
          "context": "void Diagnostics_GetPowerState(PowerState* state); // Обновленный прототип функции"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 366,
          "context": "float Diagnostics_GetBatteryVoltage(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 367,
          "context": "uint8_t Diagnostics_GetBatteryLevel(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 370,
          "context": "void Diagnostics_UpdateThermalState(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 371,
          "context": "void Diagnostics_GetThermalState(ThermalState* state);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 372,
          "context": "bool Diagnostics_IsOverheated(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 375,
          "context": "void Diagnostics_InitWatchdog(uint32_t timeout_ms);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 376,
          "context": "void Diagnostics_FeedWatchdog(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 377,
          "context": "bool Diagnostics_IsWatchdogReset(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 380,
          "context": "void Diagnostics_StartPerformanceCounter(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 381,
          "context": "uint32_t Diagnostics_StopPerformanceCounter(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 382,
          "context": "void Diagnostics_ResetPerformanceStats(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 385,
          "context": "uint32_t Diagnostics_GetErrorCount(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 386,
          "context": "uint32_t Diagnostics_GetUptimeMs(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 389,
          "context": "void Diagnostics_PrintSystemStatus(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 392,
          "context": "ADCResult Diagnostics_GetADCValue(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 393,
          "context": "float Diagnostics_ConvertADCToTemp(ADCResult adcResult); // Обновленный прототип функции преобразования температур"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 394,
          "context": "ADCError Diagnostics_StartADCConversion(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 395,
          "context": "ADCConversionStatus Diagnostics_IsADCConversionComplete(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 397,
          "context": "SystemTickResult Diagnostics_GetSystemTicks(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 398,
          "context": "SystemTickError Diagnostics_DelayTicks(uint32_t ticks);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 399,
          "context": "ElapsedTicksResult Diagnostics_GetElapsedTicks(uint32_t startTicks);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 408,
          "context": "float GetColdJunctionTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 409,
          "context": "float ConvertThermocoupleVoltageToTemp(float thermocoupleVoltage, ThermocoupleType type, float coldJunctionTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 421,
          "context": "bool HasBackupComm(void);      // Проверяет наличие резервного канала связи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 422,
          "context": "bool TestBackupComm(void);     // Тестирует работоспособность резервного канала"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 430,
          "context": "bool TestWatchdogReset(void);  // Тестирует срабатывание watchdog reset"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 486,
          "context": "bool SendBackupCommPacket(const uint8_t* data, uint8_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 487,
          "context": "bool ReceiveBackupCommPacket(uint8_t* buffer, uint8_t maxLength);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 499,
          "context": "float GetColdJunctionTemperature(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 500,
          "context": "float ConvertThermocoupleVoltageToTemp(float thermocoupleVoltage, ThermocoupleType type, float coldJunctionTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 517,
          "context": "const char* GetLogLevelString(LogLevel level);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 518,
          "context": "const char* GetEventString(DiagnosticEvent event);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 519,
          "context": "void Diagnostics_GetPowerState(PowerState* state);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 525,
          "context": "TestStatus TestCommunication(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 529,
          "context": "bool Diagnostics_PerformQuickTest(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 543,
          "context": "bool TestKillSwitch(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 546,
          "context": "bool TestParachuteSystem(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 550,
          "context": "bool HasParachute(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 560,
          "context": "bool IsRCTestResponseReceived(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 561,
          "context": "bool IsTelemetryAckReceived(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 562,
          "context": "void SendRCTestPacket(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 563,
          "context": "void SendTelemetryTestPacket(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 565,
          "context": "const char* Diagnostics_GetLastLogEntry(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 4,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 5,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\gpio.h",
          "line_number": 47,
          "context": "void SysCtlClockSet(uint32_t config);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 4,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 5,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 6,
          "context": "#include \"diagnostics.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 7,
          "context": "#include \"communication.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 8,
          "context": "#include \"sensors.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 9,
          "context": "#include \"navigation.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 10,
          "context": "#include \"stabilization.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 11,
          "context": "#include \"actuators.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 12,
          "context": "#include \"gpio.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 58,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 61,
          "context": "struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 64,
          "context": "struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 65,
          "context": "float roll, pitch, yaw; // Целевые углы (градусы)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 67,
          "context": "struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 70,
          "context": "} config;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 72,
          "context": "} CommandPacket;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 75,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 81,
          "context": "} TelemetryPacket;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 85,
          "context": "void ProcessCommands(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 86,
          "context": "void CheckSafety(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 87,
          "context": "void EnterEmergencyMode(const char* reason);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 88,
          "context": "void ExitEmergencyMode(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 4,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 5,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 8,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 16,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 20,
          "context": "bool reached;          // Флаг достижения точки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 24,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 25,
          "context": "GPSPosition current_position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 28,
          "context": "float vertical_speed;       // Вертикальная скорость в м/с"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 29,
          "context": "float distance_to_target;   // Расстояние до целевой точки в метрах"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 31,
          "context": "bool navigation_active;     // Флаг активности навигации"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 35,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 38,
          "context": "Waypoint currentWaypoint;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 40,
          "context": "bool returnToHomeActive;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 58,
          "context": "bool Navigation_IsActive(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 61,
          "context": "bool Navigation_AddWaypoint(const Waypoint* waypoint);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 70,
          "context": "float Navigation_GetDistanceToTarget(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 72,
          "context": "bool Navigation_IsValidPosition(const GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 73,
          "context": "bool Navigation_IsInSafeZone(const GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 76,
          "context": "void Navigation_UpdateHomePosition(const GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 81,
          "context": "void Navigation_EmulateAltitudeChange(float vertical_speed);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 4,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 5,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 7,
          "context": "#pragma pack(push, 4)  // Выравнивание по 4 байта для оптимизации"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 10,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 12,
          "context": "float accel_x;    // Ускорение по оси X"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 13,
          "context": "float accel_y;    // Ускорение по оси Y"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 14,
          "context": "float accel_z;    // Ускорение по оси Z"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 26,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 33,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 35,
          "context": "float pitch;     // Тангаж (в градусах)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 40,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 46,
          "context": "#pragma pack(pop)  // Восстанавливаем стандартное выравнивание"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 4,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 5,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 6,
          "context": "#include \"sensors.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 9,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 20,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 22,
          "context": "float pitch;    // Желаемый тангаж"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 28,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 29,
          "context": "Orientation currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 42,
          "context": "float pitchKp, float pitchKi, float pitchKd,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 47,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 4,
          "context": "#include <stdint.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 5,
          "context": "#include <stdbool.h>"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 6,
          "context": "#include \"navigation.h\""
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\telemetry.h",
          "line_number": 7,
          "context": "#include \"communication.h\"  // Для структуры TelemetryData"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "EARTH_RADIUS *",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_199",
      "name": "heading",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 22,
          "context": "static float ClampHeading(float heading);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 33,
          "context": "nav_state.heading = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 142,
          "context": "return nav_state.heading;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 163,
          "context": "void Navigation_EmulateMovement(float speed, float heading) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 168,
          "context": "float heading_rad = DEG_TO_RAD(heading);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 169,
          "context": "nav_state.current_position.latitude += speed_deg * cosf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 170,
          "context": "nav_state.current_position.longitude += speed_deg * sinf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 173,
          "context": "nav_state.heading = heading;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 294,
          "context": "static float ClampHeading(float heading) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 295,
          "context": "while (heading < 0.0f) heading += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 296,
          "context": "while (heading >= 360.0f) heading -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 297,
          "context": "return heading;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 26,
          "context": "float heading;              // Текущий курс в градусах (0-360)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 80,
          "context": "void Navigation_EmulateMovement(float speed, float heading);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_200",
      "name": "mpu6050_initialized",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 11,
          "context": "bool mpu6050_initialized;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 16,
          "context": ".mpu6050_initialized = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 39,
          "context": "sensor_state.mpu6050_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 52,
          "context": "if (!sensor_state.mpu6050_initialized || data == NULL) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_201",
      "name": "bmp280_initialized",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 12,
          "context": "bool bmp280_initialized;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 17,
          "context": ".bmp280_initialized = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 48,
          "context": "sensor_state.bmp280_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 61,
          "context": "if (!sensor_state.bmp280_initialized || data == NULL) {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_202",
      "name": "current_altitude",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 13,
          "context": "float current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 18,
          "context": ".current_altitude = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 96,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 97,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 98,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f); // Примерное изменение давления с высотой"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 104,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f; // Предполагаем вызов каждые 100мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 107,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 108,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 114,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 115,
          "context": "if (sensor_state.current_altitude < 0.0f) sensor_state.current_altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 118,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 119,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 138,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 139,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 140,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_203",
      "name": "rotation_angle",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 14,
          "context": "float rotation_angle;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 19,
          "context": ".rotation_angle = 0.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 124,
          "context": "sensor_state.rotation_angle += 45.0f * 0.1f; // 45 градусов в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 125,
          "context": "if (sensor_state.rotation_angle >= 360.0f) sensor_state.rotation_angle -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 128,
          "context": "mpu6050_data.accel_x = (float)sin(sensor_state.rotation_angle * 3.14159f / 180.0f) * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 129,
          "context": "mpu6050_data.accel_y = (float)cos(sensor_state.rotation_angle * 3.14159f / 180.0f) * 0.1f;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_204",
      "name": "imu",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 357,
          "context": "if (sensorData.imu.temperature < MIN_BATTERY_VOLTAGE) { // Временно используем temperature как voltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 364,
          "context": "EnterEmergencyMode(\"Maximum altitude exceeded\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 369,
          "context": "if (fabsf(sensorData.imu.accel_x) > MAX_ANGLE ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 370,
          "context": "fabsf(sensorData.imu.accel_y) > MAX_ANGLE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 371,
          "context": "EnterEmergencyMode(\"Maximum angle exceeded\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1046,
          "context": "IMUData imuData = {0};  // Добавляем объявление переменной"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1049,
          "context": "float accel_magnitude = sqrtf(powf(imuData.accelX, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1050,
          "context": "powf(imuData.accelY, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1051,
          "context": "powf(imuData.accelZ, 2));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1053,
          "context": "float gyro_magnitude = sqrtf(powf(imuData.gyroX, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1054,
          "context": "powf(imuData.gyroY, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1055,
          "context": "powf(imuData.gyroZ, 2));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 152,
          "context": "MPU6050_Data imu;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 153,
          "context": "Sensors_GetIMUData(&imu);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 162,
          "context": "float accelRoll = atan2f(imu.accel_y, imu.accel_z) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 163,
          "context": "float accelPitch = atan2f(-imu.accel_x, sqrtf(imu.accel_y * imu.accel_y + imu.accel_z * imu.accel_z)) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 167,
          "context": "filteredRoll = 0.96f * (filteredRoll + imu.gyro_x * dt) + 0.04f * accelRoll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 168,
          "context": "filteredPitch = 0.96f * (filteredPitch + imu.gyro_y * dt) + 0.04f * accelPitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 169,
          "context": "filteredYaw += imu.gyro_z * dt;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 183,
          "context": "data->imu.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 184,
          "context": "data->imu.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 185,
          "context": "data->imu.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 186,
          "context": "data->imu.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 187,
          "context": "data->imu.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 188,
          "context": "data->imu.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 111,
          "context": "MPU6050_Data imuData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 115,
          "context": "Sensors_GetIMUData(&imuData);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 41,
          "context": "MPU6050_Data imu;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "MPU6050_Data",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_205",
      "name": "accelRoll",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 162,
          "context": "float accelRoll = atan2f(imu.accel_y, imu.accel_z) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 167,
          "context": "filteredRoll = 0.96f * (filteredRoll + imu.gyro_x * dt) + 0.04f * accelRoll;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "04f *",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_206",
      "name": "accelPitch",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 163,
          "context": "float accelPitch = atan2f(-imu.accel_x, sqrtf(imu.accel_y * imu.accel_y + imu.accel_z * imu.accel_z)) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 168,
          "context": "filteredPitch = 0.96f * (filteredPitch + imu.gyro_y * dt) + 0.04f * accelPitch;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "04f *",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_207",
      "name": "dt",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 166,
          "context": "float dt = 0.01f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 167,
          "context": "filteredRoll = 0.96f * (filteredRoll + imu.gyro_x * dt) + 0.04f * accelRoll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 168,
          "context": "filteredPitch = 0.96f * (filteredPitch + imu.gyro_y * dt) + 0.04f * accelPitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 169,
          "context": "filteredYaw += imu.gyro_z * dt;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "gyro_z *",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_208",
      "name": "enabled",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 139,
          "context": "if (actState.all_motors_enabled == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 76,
          "context": "actuators_state.all_motors_enabled = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 83,
          "context": "actuators_state.all_motors_enabled = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 27,
          "context": "bool enabled;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 39,
          "context": "stabState.enabled = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 106,
          "context": "if (!stabState.enabled) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 157,
          "context": "stabState.enabled = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 162,
          "context": "stabState.enabled = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 170,
          "context": "return stabState.enabled;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 32,
          "context": "bool all_motors_enabled;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_209",
      "name": "targetSetPoint",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 28,
          "context": "SetPoint targetSetPoint;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 42,
          "context": "stabState.targetSetPoint.roll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 43,
          "context": "stabState.targetSetPoint.pitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 44,
          "context": "stabState.targetSetPoint.yaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 45,
          "context": "stabState.targetSetPoint.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 99,
          "context": "stabState.targetSetPoint.roll = ClampValue(roll, -MAX_ROLL_ANGLE, MAX_ROLL_ANGLE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 100,
          "context": "stabState.targetSetPoint.pitch = ClampValue(pitch, -MAX_PITCH_ANGLE, MAX_PITCH_ANGLE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 101,
          "context": "stabState.targetSetPoint.yaw = yaw;  // Рыскание может быть любым (0-360)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 102,
          "context": "stabState.targetSetPoint.altitude = fmaxf(altitude, 0.0f);  // Высота не может быть отрицательной"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 125,
          "context": "float rollError = stabState.targetSetPoint.roll - stabState.currentOrientation.roll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 126,
          "context": "float pitchError = stabState.targetSetPoint.pitch - stabState.currentOrientation.pitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 127,
          "context": "float yawError = stabState.targetSetPoint.yaw - stabState.currentOrientation.yaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 128,
          "context": "float altitudeError = stabState.targetSetPoint.altitude - altData.altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 152,
          "context": "*setPoint = stabState.targetSetPoint;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 30,
          "context": "SetPoint targetSetPoint;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "SetPoint",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_210",
      "name": "currentOrientation",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 338,
          "context": "Orientation currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 339,
          "context": "Sensors_GetOrientation(&currentOrientation);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 340,
          "context": "telemetry.orientation = currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 29,
          "context": "Orientation currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 48,
          "context": "stabState.currentOrientation.roll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 49,
          "context": "stabState.currentOrientation.pitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 50,
          "context": "stabState.currentOrientation.yaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 113,
          "context": "Orientation currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 117,
          "context": "Sensors_GetOrientation(&currentOrientation);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 120,
          "context": "stabState.currentOrientation.roll = currentOrientation.roll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 121,
          "context": "stabState.currentOrientation.pitch = currentOrientation.pitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 122,
          "context": "stabState.currentOrientation.yaw = currentOrientation.yaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 125,
          "context": "float rollError = stabState.targetSetPoint.roll - stabState.currentOrientation.roll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 126,
          "context": "float pitchError = stabState.targetSetPoint.pitch - stabState.currentOrientation.pitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 127,
          "context": "float yawError = stabState.targetSetPoint.yaw - stabState.currentOrientation.yaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 146,
          "context": "*orientation = stabState.currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 29,
          "context": "Orientation currentOrientation;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "Orientation",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_211",
      "name": "rollPID",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 30,
          "context": "PIDController rollPID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 66,
          "context": "stabState.rollPID.kP = rollKp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 67,
          "context": "stabState.rollPID.kI = rollKi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 68,
          "context": "stabState.rollPID.kD = rollKd;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 69,
          "context": "stabState.rollPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 70,
          "context": "stabState.rollPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 135,
          "context": "float rollOutput = UpdatePID(&stabState.rollPID, rollError);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 175,
          "context": "stabState.rollPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 176,
          "context": "stabState.rollPID.prevError = 0.0f;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "PIDController",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_212",
      "name": "pitchPID",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 31,
          "context": "PIDController pitchPID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 73,
          "context": "stabState.pitchPID.kP = pitchKp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 74,
          "context": "stabState.pitchPID.kI = pitchKi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 75,
          "context": "stabState.pitchPID.kD = pitchKd;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 76,
          "context": "stabState.pitchPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 77,
          "context": "stabState.pitchPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 136,
          "context": "float pitchOutput = UpdatePID(&stabState.pitchPID, pitchError);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 178,
          "context": "stabState.pitchPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 179,
          "context": "stabState.pitchPID.prevError = 0.0f;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "PIDController",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_213",
      "name": "yawPID",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 32,
          "context": "PIDController yawPID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 80,
          "context": "stabState.yawPID.kP = yawKp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 81,
          "context": "stabState.yawPID.kI = yawKi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 82,
          "context": "stabState.yawPID.kD = yawKd;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 83,
          "context": "stabState.yawPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 84,
          "context": "stabState.yawPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 137,
          "context": "float yawOutput = UpdatePID(&stabState.yawPID, yawError);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 181,
          "context": "stabState.yawPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 182,
          "context": "stabState.yawPID.prevError = 0.0f;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "PIDController",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_214",
      "name": "altitudePID",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 33,
          "context": "PIDController altitudePID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 87,
          "context": "stabState.altitudePID.kP = altKp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 88,
          "context": "stabState.altitudePID.kI = altKi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 89,
          "context": "stabState.altitudePID.kD = altKd;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 90,
          "context": "stabState.altitudePID.outputMin = 0.0f;  // Минимальная тяга"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 91,
          "context": "stabState.altitudePID.outputMax = 1.0f;  // Максимальная тяга"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 138,
          "context": "float altitudeOutput = UpdatePID(&stabState.altitudePID, altitudeError);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 184,
          "context": "stabState.altitudePID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 185,
          "context": "stabState.altitudePID.prevError = 0.0f;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "PIDController",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_215",
      "name": "imuData",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1046,
          "context": "IMUData imuData = {0};  // Добавляем объявление переменной"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1049,
          "context": "float accel_magnitude = sqrtf(powf(imuData.accelX, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1050,
          "context": "powf(imuData.accelY, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1051,
          "context": "powf(imuData.accelZ, 2));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1053,
          "context": "float gyro_magnitude = sqrtf(powf(imuData.gyroX, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1054,
          "context": "powf(imuData.gyroY, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1055,
          "context": "powf(imuData.gyroZ, 2));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 111,
          "context": "MPU6050_Data imuData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 115,
          "context": "Sensors_GetIMUData(&imuData);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "MPU6050_Data",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_216",
      "name": "altData",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 112,
          "context": "BMP280_Data altData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 116,
          "context": "Sensors_GetBaroData(&altData);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 128,
          "context": "float altitudeError = stabState.targetSetPoint.altitude - altData.altitude;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "BMP280_Data",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_218",
      "name": "error",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 348,
          "context": "telemetry.errorFlags = (uint8_t)Diagnostics_GetErrorCount();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 43,
          "context": "uint32_t errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 184,
          "context": "commState.errorCount++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 227,
          "context": "commState.errorCount++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 242,
          "context": "bool Communication_SendError(uint8_t errorCode, const char* message) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 246,
          "context": "} errorData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 248,
          "context": "errorData.code = errorCode;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 250,
          "context": "strncpy(errorData.message, message, sizeof(errorData.message) - 1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 251,
          "context": "errorData.message[sizeof(errorData.message) - 1] = '\\0';"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 253,
          "context": "errorData.message[0] = '\\0';"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 256,
          "context": "return Communication_Send(PACKET_TYPE_ERROR, &errorData,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 257,
          "context": "1 + strlen(errorData.message) + 1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 340,
          "context": "return commState.errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 74,
          "context": "uint32_t errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 163,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 545,
          "context": "diagState.errorCount++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 558,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 649,
          "context": "return diagState.errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 653,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 870,
          "context": "SendDebugMessage(\"Error Count: %lu\", diagState.errorCount);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1445,
          "context": "result.error = ADC_ERROR_NOT_INITIALIZED;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1460,
          "context": "result.error = ADC_ERROR_TIMEOUT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1466,
          "context": "result.error = ADC_ERROR_NONE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1477,
          "context": "if (adcResult.error != ADC_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1479,
          "context": "\"ADC conversion error before temperature conversion\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1480,
          "context": "adcResult.error);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1539,
          "context": ".error = ADC_ERROR_NONE"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1543,
          "context": "status.error = ADC_ERROR_NOT_INITIALIZED;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1556,
          "context": "status.error = ADC_ERROR_TIMEOUT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1572,
          "context": ".error = SYSTICK_ERROR_NONE"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1577,
          "context": "result.error = SYSTICK_ERROR_INVALID_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1589,
          "context": "if (startTicks.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1599,
          "context": "if (currentTicks.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1620,
          "context": ".error = SYSTICK_ERROR_NONE"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1625,
          "context": "if (currentTicksResult.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1626,
          "context": "result.error = SYSTICK_ERROR_INVALID_CURRENT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1824,
          "context": "if (adcResult.error != ADC_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1826,
          "context": "\"ADC conversion error before cold junction temperature\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1827,
          "context": "adcResult.error);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 8,
          "context": "static float UpdatePID(PIDController* pid, float error);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 189,
          "context": "static float UpdatePID(PIDController* pid, float error) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 195,
          "context": "float pTerm = pid->kP * error;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 198,
          "context": "pid->integral += error * DT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 202,
          "context": "float dTerm = pid->kD * (error - pid->prevError) / DT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 203,
          "context": "pid->prevError = error;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 71,
          "context": "uint8_t errorFlags;       // Флаги ошибок"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 94,
          "context": "bool Communication_SendError(uint8_t errorCode, const char* message);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 178,
          "context": "uint32_t errorCode;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 199,
          "context": "ADCError error;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 204,
          "context": "SystemTickError error;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 209,
          "context": "SystemTickError error;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 214,
          "context": "ADCError error;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 80,
          "context": "uint32_t errors;              // Флаги ошибок"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "kP *",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_219",
      "name": "DT",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 69,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 671,
          "context": "WATCHDOG0_CTL_R &= ~WDT_CTL_INTEN;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 683,
          "context": "WATCHDOG0_CTL_R |= (WDT_CTL_RESEN | WDT_CTL_INTEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 702,
          "context": "void WDT0_Handler(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 704,
          "context": "WATCHDOG0_ICR_R = WDT_ICR_M;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 718,
          "context": "return (WATCHDOG0_RIS_R & WDT_RIS_WDTRIS) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2006,
          "context": "WATCHDOG0_CTL_R &= ~(WDT_CTL_INTEN | WDT_CTL_RESEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2014,
          "context": "WATCHDOG0_CTL_R |= (WDT_CTL_RESEN | WDT_CTL_INTEN);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 18,
          "context": "#define DT (1.0f / UPDATE_FREQUENCY)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 198,
          "context": "pid->integral += error * DT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 202,
          "context": "float dTerm = pid->kD * (error - pid->prevError) / DT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 287,
          "context": "#define WDT_CTL_INTEN        0x00000001  // Разрешение прерываний"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 288,
          "context": "#define WDT_CTL_RESEN        0x00000002  // Разрешение сброса системы"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 471,
          "context": "#define WDT_RIS_WDTRIS        0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 472,
          "context": "#define WDT_ICR_M             0xFFFFFFFF  // Watchdog Timer Interrupt Clear Mask"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 490,
          "context": "void WDT0_Handler(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 34,
          "context": "#define WDT_TIMEOUT_MS         1000    // Таймаут watchdog (мс)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "error *",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_220",
      "name": "min",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 9,
          "context": "static float ClampValue(float value, float min, float max);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 212,
          "context": "static float ClampValue(float value, float min, float max) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 213,
          "context": "if (value < min) return min;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_221",
      "name": "max",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 98,
          "context": "uint16_t UART_Receive(uint8_t* buffer, uint16_t maxLength) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 101,
          "context": "if (buffer == NULL || maxLength == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 105,
          "context": "while (count < maxLength) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1983,
          "context": "bool ReceiveBackupCommPacket(uint8_t* buffer, uint8_t maxLength) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 9,
          "context": "static float ClampValue(float value, float min, float max);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 102,
          "context": "stabState.targetSetPoint.altitude = fmaxf(altitude, 0.0f);  // Высота не может быть отрицательной"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 212,
          "context": "static float ClampValue(float value, float min, float max) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 214,
          "context": "if (value > max) return max;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 77,
          "context": "uint16_t UART_Receive(uint8_t* buffer, uint16_t maxLength);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 83,
          "context": "uint16_t Communication_Receive(uint8_t* buffer, uint16_t maxLength);  // Изменили возвращаемый тип и имя параметра"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 89,
          "context": "uint16_t Communication_Receive(uint8_t* buffer, uint16_t maxLength);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 487,
          "context": "bool ReceiveBackupCommPacket(uint8_t* buffer, uint8_t maxLength);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_222",
      "name": "value",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 272,
          "context": "UpdatePIDParameters(cmdData.data.config.param, cmdData.data.config.value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 281,
          "context": "void UpdatePIDParameters(SystemParameter param, float value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 291,
          "context": "roll_kp = value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 294,
          "context": "pitch_kp = value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 297,
          "context": "yaw_kp = value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 300,
          "context": "alt_kp = value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 12,
          "context": "static void ClampPWMValue(uint16_t* pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 31,
          "context": "void Actuators_SetMotorPWM(uint8_t motor_index, uint16_t pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 36,
          "context": "ClampPWMValue(&pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 37,
          "context": "actuators_state.motors[motor_index].pwm_value = pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 38,
          "context": "actuators_state.motors[motor_index].is_running = (pwm_value > (uint16_t)PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 41,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 43,
          "context": "Actuators_SetMotorPWM(i, pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 51,
          "context": "return actuators_state.motors[motor_index].pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 66,
          "context": "actuators_state.motors[motor_index].pwm_value = PWM_MIN_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 97,
          "context": "uint16_t pwm_value = (uint16_t)((throttle * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100U + PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 98,
          "context": "Actuators_SetAllMotorsPWM(pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 99,
          "context": "actuators_state.global_throttle = pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 230,
          "context": "float pwm_factor = (float)actuators_state.motors[i].pwm_value / PWM_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 249,
          "context": "static void ClampPWMValue(uint16_t* pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 250,
          "context": "if (*pwm_value > PWM_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 251,
          "context": "*pwm_value = PWM_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 675,
          "context": "uint32_t reload_value = timeout_ms * 1000; // преобразуем мс в тики"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 678,
          "context": "WATCHDOG0_LOAD_R = reload_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1061,
          "context": "status.message = \"IMU values out of range\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1465,
          "context": "result.value = ADC0_SSFIFO3_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1485,
          "context": "if (adcResult.value == 0 || adcResult.value >= ADC_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1487,
          "context": "\"ADC value out of range\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1488,
          "context": "adcResult.value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1493,
          "context": "float voltage = (adcResult.value * 3.3f) / 4096.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1579,
          "context": "\"Invalid system tick value\", result.ticks);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1832,
          "context": "float voltage = (adcResult.value * 3.3f) / 4096.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 9,
          "context": "static float ClampValue(float value, float min, float max);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 212,
          "context": "static float ClampValue(float value, float min, float max) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 213,
          "context": "if (value < min) return min;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 214,
          "context": "if (value > max) return max;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 215,
          "context": "return value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 23,
          "context": "uint16_t pwm_value;     // Текущее значение PWM (0-1000)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 41,
          "context": "void Actuators_SetMotorPWM(uint8_t motor_index, uint16_t pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 42,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 198,
          "context": "uint32_t value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 69,
          "context": "float value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 89,
          "context": "void UpdatePIDParameters(SystemParameter param, float value);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "return",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_223",
      "name": "pwm_value",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 12,
          "context": "static void ClampPWMValue(uint16_t* pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 31,
          "context": "void Actuators_SetMotorPWM(uint8_t motor_index, uint16_t pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 36,
          "context": "ClampPWMValue(&pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 37,
          "context": "actuators_state.motors[motor_index].pwm_value = pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 38,
          "context": "actuators_state.motors[motor_index].is_running = (pwm_value > (uint16_t)PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 41,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 43,
          "context": "Actuators_SetMotorPWM(i, pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 51,
          "context": "return actuators_state.motors[motor_index].pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 66,
          "context": "actuators_state.motors[motor_index].pwm_value = PWM_MIN_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 97,
          "context": "uint16_t pwm_value = (uint16_t)((throttle * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100U + PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 98,
          "context": "Actuators_SetAllMotorsPWM(pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 99,
          "context": "actuators_state.global_throttle = pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 230,
          "context": "float pwm_factor = (float)actuators_state.motors[i].pwm_value / PWM_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 249,
          "context": "static void ClampPWMValue(uint16_t* pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 250,
          "context": "if (*pwm_value > PWM_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 251,
          "context": "*pwm_value = PWM_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 23,
          "context": "uint16_t pwm_value;     // Текущее значение PWM (0-1000)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 41,
          "context": "void Actuators_SetMotorPWM(uint8_t motor_index, uint16_t pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 42,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint16_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_224",
      "name": "is_running",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 38,
          "context": "actuators_state.motors[motor_index].is_running = (pwm_value > (uint16_t)PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 58,
          "context": "actuators_state.motors[motor_index].is_running = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 65,
          "context": "actuators_state.motors[motor_index].is_running = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 90,
          "context": "return actuators_state.motors[motor_index].is_running;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 228,
          "context": "if (actuators_state.motors[i].is_running) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 243,
          "context": "if (actuators_state.motors[i].is_running) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 24,
          "context": "bool is_running;        // Флаг работы мотора"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_225",
      "name": "temperature",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 334,
          "context": "telemetry.temperature = thermalState.mcuTemp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 357,
          "context": "if (sensorData.imu.temperature < MIN_BATTERY_VOLTAGE) { // Временно используем temperature как voltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 20,
          "context": "actuators_state.motors[i].temperature = 25.0f; // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 155,
          "context": "return actuators_state.motors[motor_index].temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 231,
          "context": "actuators_state.motors[i].temperature += pwm_factor * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 234,
          "context": "if (actuators_state.motors[i].temperature > 25.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 235,
          "context": "actuators_state.motors[i].temperature -= 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 359,
          "context": "\"Critical battery temperature\", (uint32_t)(temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 441,
          "context": "\"Critical MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 445,
          "context": "\"High MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 450,
          "context": "\"Critical motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 454,
          "context": "\"High motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 459,
          "context": "\"Critical board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 463,
          "context": "\"High board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 479,
          "context": "\"MCU temperature critical\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 484,
          "context": "\"MCU temperature warning\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 493,
          "context": "\"Motor temperature critical\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 498,
          "context": "\"Motor temperature warning\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 507,
          "context": "\"Board temperature critical\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 512,
          "context": "\"Board temperature warning\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1155,
          "context": "float temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1204,
          "context": "motorData[i].temperature = GetMotorTemperature(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1232,
          "context": "if (motorData[i].temperature > MOTOR_TEST_TEMP_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1235,
          "context": "status.message = \"Motor temperature high\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1479,
          "context": "\"ADC conversion error before temperature conversion\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1495,
          "context": "float temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1501,
          "context": "temperature = (voltage * 100.0f);  // Пример преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1507,
          "context": "\"Unknown temperature sensor type\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1513,
          "context": "if (isnan(temperature)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1515,
          "context": "\"Invalid cold junction temperature\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1516,
          "context": "(uint32_t)temperature);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1520,
          "context": "return temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1826,
          "context": "\"ADC conversion error before cold junction temperature\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1834,
          "context": "float temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1840,
          "context": "temperature = (voltage * 100.0f);  // Пример преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1846,
          "context": "\"Unknown temperature sensor type\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1852,
          "context": "if (isnan(temperature)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1854,
          "context": "\"Invalid cold junction temperature\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1855,
          "context": "(uint32_t)temperature);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1859,
          "context": "return temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1879,
          "context": "float temperature = coeffs->a * thermocoupleVoltage * thermocoupleVoltage * thermocoupleVoltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1885,
          "context": "temperature += coldJunctionTemp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1891,
          "context": "if (temperature < MIN_TEMP || temperature > MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1893,
          "context": "\"Thermocouple temperature out of range\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1894,
          "context": "(uint32_t)(temperature * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1898,
          "context": "return temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 37,
          "context": "mpu6050_data.temperature = 25.0f;  // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 46,
          "context": "bmp280_data.temperature = 25.0f;  // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 199,
          "context": "data->temperature = 25.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 25,
          "context": "float temperature;      // Эмуляция температуры мотора"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 56,
          "context": "float temperature;         // Температура MCU (°C)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 22,
          "context": "float temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 29,
          "context": "float temperature; // Температура в градусах Цельсия"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_226",
      "name": "runtime",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 162,
          "context": "return actuators_state.motors[motor_index].runtime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 244,
          "context": "actuators_state.motors[i].runtime += 10; // Предполагаем вызов каждые 10 мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 26,
          "context": "uint32_t runtime;       // Время работы мотора в миллисекундах"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_227",
      "name": "all_motors_enabled",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 139,
          "context": "if (actState.all_motors_enabled == false) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 76,
          "context": "actuators_state.all_motors_enabled = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 83,
          "context": "actuators_state.all_motors_enabled = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 32,
          "context": "bool all_motors_enabled;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_228",
      "name": "global_throttle",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 99,
          "context": "actuators_state.global_throttle = pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 107,
          "context": "uint16_t base_pwm = actuators_state.global_throttle;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 121,
          "context": "uint16_t base_pwm = actuators_state.global_throttle;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 135,
          "context": "uint16_t base_pwm = actuators_state.global_throttle;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 172,
          "context": "actuators_state.global_throttle = hover_pwm;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 181,
          "context": "actuators_state.global_throttle = ascent_pwm;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 190,
          "context": "actuators_state.global_throttle = descent_pwm;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 33,
          "context": "uint16_t global_throttle;  // Общий уровень газа (0-1000)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint16_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_229",
      "name": "type",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 232,
          "context": "if (rxPacket.type == PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 238,
          "context": "switch (cmdData.type) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 204,
          "context": "bool Communication_Send(PacketType type, const void* data, uint8_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 211,
          "context": "packet.type = type;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 261,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 302,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_CONFIG) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 422,
          "context": "switch (packet->type) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 441,
          "context": "Communication_SendError(0x02, \"Unknown packet type\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1151,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1507,
          "context": "\"Unknown temperature sensor type\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1846,
          "context": "\"Unknown temperature sensor type\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1863,
          "context": "float ConvertThermocoupleVoltageToTemp(float thermocoupleVoltage, ThermocoupleType type, float coldJunctionTemp) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1865,
          "context": "if (type < 0 || type >= THERMOCOUPLE_TYPE_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1867,
          "context": "\"Invalid thermocouple type\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1868,
          "context": "(uint32_t)type);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1875,
          "context": "} *coeffs = &ThermocoupleCoefficients[type];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 22,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 30,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 22,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 33,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 45,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 46,
          "context": "uint8_t type;          // Тип пакета"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 53,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 88,
          "context": "bool Communication_Send(PacketType type, const void* data, uint8_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 10,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 20,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 41,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 49,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 58,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 67,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 74,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 82,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 116,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 123,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 136,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 145,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 154,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 165,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 174,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 197,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 202,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 207,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 212,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 217,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 295,
          "context": "typedef uint32_t ErrorCode;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 350,
          "context": "float ConvertThermocoupleVoltageToTemp(float thermocoupleVoltage, ThermocoupleType type, float coldJunctionTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 409,
          "context": "float ConvertThermocoupleVoltageToTemp(float thermocoupleVoltage, ThermocoupleType type, float coldJunctionTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 500,
          "context": "float ConvertThermocoupleVoltageToTemp(float thermocoupleVoltage, ThermocoupleType type, float coldJunctionTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 19,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 43,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 51,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 58,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 59,
          "context": "DroneCommandType type;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 75,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 8,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 16,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 24,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 35,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 10,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 26,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 33,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 40,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 9,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 20,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 28,
          "context": "typedef struct {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint8_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_230",
      "name": "length",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 234,
          "context": "if (rxPacket.length == sizeof(CommandPacket)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 54,
          "context": "static uint16_t CalculateChecksum(const uint8_t* data, uint16_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 116,
          "context": "bool UART_Send(const uint8_t* data, uint16_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 119,
          "context": "if (data == NULL || length == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 123,
          "context": "for (i = 0; i < length; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 173,
          "context": "uint16_t packetSize = sizeof(CommPacket) - COMM_MAX_PACKET_SIZE + packet->length;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 204,
          "context": "bool Communication_Send(PacketType type, const void* data, uint8_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 205,
          "context": "if (!commState.initialized || length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 212,
          "context": "packet.length = length;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 214,
          "context": "if (data != NULL && length > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 215,
          "context": "memcpy(packet.data, data, (size_t)length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 394,
          "context": "static uint16_t CalculateChecksum(const uint8_t* data, uint16_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 396,
          "context": "for(uint16_t i = 0; i < length; i++) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 408,
          "context": "if (packet->length > COMM_MAX_PACKET_SIZE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 447,
          "context": "void Communication_SendData(uint8_t* data, uint16_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 451,
          "context": "void Communication_Receive(uint8_t* buffer, uint16_t* length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 452,
          "context": "if(length) *length = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1978,
          "context": "bool SendBackupCommPacket(const uint8_t* data, uint8_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 47,
          "context": "uint8_t length;        // Длина данных"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 78,
          "context": "bool UART_Send(const uint8_t* data, uint16_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 82,
          "context": "void Communication_SendData(uint8_t* data, uint16_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 88,
          "context": "bool Communication_Send(PacketType type, const void* data, uint8_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 486,
          "context": "bool SendBackupCommPacket(const uint8_t* data, uint8_t length);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint8_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_231",
      "name": "checksum",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 219,
          "context": "packet.checksum = CalculateChecksum((const uint8_t*)&packet, (uint16_t)(sizeof(CommPacket) - sizeof(uint16_t)));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 395,
          "context": "uint16_t checksum = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 397,
          "context": "checksum += data[i];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 399,
          "context": "return checksum;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 415,
          "context": "sizeof(CommPacket) - sizeof(packet->checksum)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 418,
          "context": "return calculatedChecksum == packet->checksum;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 49,
          "context": "uint16_t checksum;     // Контрольная сумма"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint16_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_232",
      "name": "batteryVoltage",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 333,
          "context": "telemetry.batteryVoltage = powerState.batteryVoltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 217,
          "context": "diagState.powerState.batteryVoltage = voltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 262,
          "context": "state->batteryVoltage = diagState.powerState.batteryVoltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 279,
          "context": "return diagState.powerState.batteryVoltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 334,
          "context": "diagState.powerState.batteryVoltage = voltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 875,
          "context": "diagState.powerState.batteryVoltage,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 950,
          "context": "float batteryVoltage = diagState.powerState.batteryVoltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 951,
          "context": "if (batteryVoltage < POWER_TEST_VOLTAGE_MIN) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 955,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 960,
          "context": "else if (batteryVoltage > POWER_TEST_VOLTAGE_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 964,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 55,
          "context": "float batteryVoltage;      // Напряжение батареи (В)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 155,
          "context": "float batteryVoltage;    // Напряжение батареи"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_233",
      "name": "temperature",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 334,
          "context": "telemetry.temperature = thermalState.mcuTemp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 357,
          "context": "if (sensorData.imu.temperature < MIN_BATTERY_VOLTAGE) { // Временно используем temperature как voltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 20,
          "context": "actuators_state.motors[i].temperature = 25.0f; // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 155,
          "context": "return actuators_state.motors[motor_index].temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 231,
          "context": "actuators_state.motors[i].temperature += pwm_factor * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 234,
          "context": "if (actuators_state.motors[i].temperature > 25.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 235,
          "context": "actuators_state.motors[i].temperature -= 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 359,
          "context": "\"Critical battery temperature\", (uint32_t)(temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 441,
          "context": "\"Critical MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 445,
          "context": "\"High MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 450,
          "context": "\"Critical motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 454,
          "context": "\"High motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 459,
          "context": "\"Critical board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 463,
          "context": "\"High board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 479,
          "context": "\"MCU temperature critical\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 484,
          "context": "\"MCU temperature warning\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 493,
          "context": "\"Motor temperature critical\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 498,
          "context": "\"Motor temperature warning\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 507,
          "context": "\"Board temperature critical\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 512,
          "context": "\"Board temperature warning\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1155,
          "context": "float temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1204,
          "context": "motorData[i].temperature = GetMotorTemperature(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1232,
          "context": "if (motorData[i].temperature > MOTOR_TEST_TEMP_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1235,
          "context": "status.message = \"Motor temperature high\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1479,
          "context": "\"ADC conversion error before temperature conversion\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1495,
          "context": "float temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1501,
          "context": "temperature = (voltage * 100.0f);  // Пример преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1507,
          "context": "\"Unknown temperature sensor type\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1513,
          "context": "if (isnan(temperature)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1515,
          "context": "\"Invalid cold junction temperature\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1516,
          "context": "(uint32_t)temperature);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1520,
          "context": "return temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1826,
          "context": "\"ADC conversion error before cold junction temperature\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1834,
          "context": "float temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1840,
          "context": "temperature = (voltage * 100.0f);  // Пример преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1846,
          "context": "\"Unknown temperature sensor type\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1852,
          "context": "if (isnan(temperature)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1854,
          "context": "\"Invalid cold junction temperature\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1855,
          "context": "(uint32_t)temperature);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1859,
          "context": "return temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1879,
          "context": "float temperature = coeffs->a * thermocoupleVoltage * thermocoupleVoltage * thermocoupleVoltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1885,
          "context": "temperature += coldJunctionTemp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1891,
          "context": "if (temperature < MIN_TEMP || temperature > MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1893,
          "context": "\"Thermocouple temperature out of range\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1894,
          "context": "(uint32_t)(temperature * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1898,
          "context": "return temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 37,
          "context": "mpu6050_data.temperature = 25.0f;  // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 46,
          "context": "bmp280_data.temperature = 25.0f;  // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 199,
          "context": "data->temperature = 25.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 25,
          "context": "float temperature;      // Эмуляция температуры мотора"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 56,
          "context": "float temperature;         // Температура MCU (°C)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 22,
          "context": "float temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 29,
          "context": "float temperature; // Температура в градусах Цельсия"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_234",
      "name": "position",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 243,
          "context": ".position = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 244,
          "context": ".latitude = cmdData.data.position.x,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 245,
          "context": ".longitude = cmdData.data.position.y,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 246,
          "context": ".altitude = cmdData.data.position.z,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 335,
          "context": "telemetry.position = currentPos;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 17,
          "context": "static GPSPosition home_position = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 18,
          "context": "static bool home_position_set = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 32,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 49,
          "context": "if (!Navigation_IsValidPosition(&waypoint->position)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 131,
          "context": "void Navigation_GetCurrentPosition(GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 132,
          "context": "if (position != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 133,
          "context": "*position = nav_state.current_position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 138,
          "context": "return nav_state.current_position.altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 155,
          "context": "nav_state.current_position.latitude = latitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 156,
          "context": "nav_state.current_position.longitude = longitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 157,
          "context": "nav_state.current_position.altitude = altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 158,
          "context": "nav_state.current_position.valid = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 169,
          "context": "nav_state.current_position.latitude += speed_deg * cosf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 170,
          "context": "nav_state.current_position.longitude += speed_deg * sinf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 179,
          "context": "nav_state.current_position.altitude += vertical_speed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 182,
          "context": "if (nav_state.current_position.altitude < NAV_MIN_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 183,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 185,
          "context": "} else if (nav_state.current_position.altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 186,
          "context": "nav_state.current_position.altitude = NAV_MAX_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 227,
          "context": "bool Navigation_IsValidPosition(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 228,
          "context": "if (position == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 233,
          "context": "if (position->latitude < -90.0f || position->latitude > 90.0f ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 234,
          "context": "position->longitude < -180.0f || position->longitude > 180.0f ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 235,
          "context": "position->altitude < NAV_MIN_ALTITUDE || position->altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 242,
          "context": "bool Navigation_IsInSafeZone(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 243,
          "context": "if (!position->valid || !home_position_set) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 248,
          "context": "float distance = Navigation_CalculateDistance(&home_position, position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 252,
          "context": "void Navigation_UpdateHomePosition(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 253,
          "context": "if (position != NULL && Navigation_IsValidPosition(position)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 254,
          "context": "home_position = *position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 255,
          "context": "home_position_set = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 260,
          "context": "if (!home_position_set) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 263,
          "context": "return Navigation_CalculateDistance(&nav_state.current_position, &home_position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 279,
          "context": "&nav_state.current_position, &target->position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 281,
          "context": "&nav_state.current_position, &target->position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 59,
          "context": "GPSPosition position;      // Текущая GPS позиция"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 63,
          "context": "} position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 17,
          "context": "GPSPosition position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 25,
          "context": "GPSPosition current_position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 53,
          "context": "void Navigation_SetHomePosition(GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 67,
          "context": "void Navigation_GetCurrentPosition(GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 72,
          "context": "bool Navigation_IsValidPosition(const GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 73,
          "context": "bool Navigation_IsInSafeZone(const GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 76,
          "context": "void Navigation_UpdateHomePosition(const GPSPosition* position);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "GPSPosition",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_235",
      "name": "orientation",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 340,
          "context": "telemetry.orientation = currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 149,
          "context": "void Sensors_GetOrientation(Orientation* orientation) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 150,
          "context": "if (orientation == NULL) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 175,
          "context": "orientation->roll = filteredRoll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 176,
          "context": "orientation->pitch = filteredPitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 177,
          "context": "orientation->yaw = filteredYaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 144,
          "context": "void Stabilization_GetCurrentOrientation(Orientation* orientation) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 145,
          "context": "if (orientation != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 146,
          "context": "*orientation = stabState.currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 60,
          "context": "Orientation orientation;   // Текущая ориентация"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 48,
          "context": "void Stabilization_GetCurrentOrientation(Orientation* orientation);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "Orientation",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_236",
      "name": "altitude",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 246,
          "context": ".altitude = cmdData.data.position.z,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 323,
          "context": "float altitude = Navigation_GetCurrentAltitude();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 342,
          "context": "telemetry.altitude = altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 363,
          "context": "if (sensorData.baro.altitude > MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 364,
          "context": "EnterEmergencyMode(\"Maximum altitude exceeded\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1079,
          "context": "float altitude = GetBaroAltitude();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1080,
          "context": "if (altitude < BARO_TEST_ALT_MIN || altitude > BARO_TEST_ALT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1084,
          "context": "status.data = (uint32_t)(altitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 32,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 138,
          "context": "return nav_state.current_position.altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 154,
          "context": "void Navigation_EmulateGPSPosition(float latitude, float longitude, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 157,
          "context": "nav_state.current_position.altitude = altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 179,
          "context": "nav_state.current_position.altitude += vertical_speed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 182,
          "context": "if (nav_state.current_position.altitude < NAV_MIN_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 183,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 185,
          "context": "} else if (nav_state.current_position.altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 186,
          "context": "nav_state.current_position.altitude = NAV_MAX_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 235,
          "context": "position->altitude < NAV_MIN_ALTITUDE || position->altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 13,
          "context": "float current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 18,
          "context": ".current_altitude = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 45,
          "context": "bmp280_data.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 82,
          "context": "bmp280_data.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 96,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 97,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 98,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f); // Примерное изменение давления с высотой"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 104,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f; // Предполагаем вызов каждые 100мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 107,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 108,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 114,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 115,
          "context": "if (sensor_state.current_altitude < 0.0f) sensor_state.current_altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 118,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 119,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 138,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 139,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 140,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 190,
          "context": "data->baro.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 198,
          "context": "data->altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 10,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 33,
          "context": "PIDController altitudePID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 45,
          "context": "stabState.targetSetPoint.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 87,
          "context": "stabState.altitudePID.kP = altKp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 88,
          "context": "stabState.altitudePID.kI = altKi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 89,
          "context": "stabState.altitudePID.kD = altKd;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 90,
          "context": "stabState.altitudePID.outputMin = 0.0f;  // Минимальная тяга"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 91,
          "context": "stabState.altitudePID.outputMax = 1.0f;  // Максимальная тяга"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 97,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 102,
          "context": "stabState.targetSetPoint.altitude = fmaxf(altitude, 0.0f);  // Высота не может быть отрицательной"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 128,
          "context": "float altitudeError = stabState.targetSetPoint.altitude - altData.altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 138,
          "context": "float altitudeOutput = UpdatePID(&stabState.altitudePID, altitudeError);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 141,
          "context": "UpdateMotorOutputs(rollOutput, pitchOutput, yawOutput, altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 184,
          "context": "stabState.altitudePID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 185,
          "context": "stabState.altitudePID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 218,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 220,
          "context": "float baseThrust = altitudeOutput;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 63,
          "context": "float altitude;           // Текущая высота (м)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 11,
          "context": "float altitude;   // Высота в метрах"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 79,
          "context": "void Navigation_EmulateGPSPosition(float latitude, float longitude, float altitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 28,
          "context": "float altitude;    // Высота в метрах"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 24,
          "context": "float altitude; // Желаемая высота"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 47,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_237",
      "name": "groundSpeed",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 343,
          "context": "telemetry.groundSpeed = distanceToTarget;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 64,
          "context": "float groundSpeed;        // Скорость относительно земли (м/с)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_238",
      "name": "verticalSpeed",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 344,
          "context": "telemetry.verticalSpeed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 65,
          "context": "float verticalSpeed;      // Вертикальная скорость (м/с)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_239",
      "name": "flightMode",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 345,
          "context": "telemetry.flightMode = (uint8_t)currentState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 68,
          "context": "uint8_t flightMode;       // Режим полета"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint8_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_240",
      "name": "gpsStatus",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 346,
          "context": "telemetry.gpsStatus = (sensorData.isCalibrated ? 1 : 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 69,
          "context": "uint8_t gpsStatus;        // Статус GPS"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint8_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_241",
      "name": "batteryStatus",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 347,
          "context": "telemetry.batteryStatus = powerState.batteryLevel;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 70,
          "context": "uint8_t batteryStatus;    // Уровень заряда батареи (%)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint8_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_242",
      "name": "errorFlags",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 348,
          "context": "telemetry.errorFlags = (uint8_t)Diagnostics_GetErrorCount();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 71,
          "context": "uint8_t errorFlags;       // Флаги ошибок"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint8_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_243",
      "name": "status",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 238,
          "context": "bool Communication_SendStatus(uint8_t status) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 239,
          "context": "return Communication_Send(PACKET_TYPE_STATUS, &status, sizeof(status));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 943,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 944,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 945,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 946,
          "context": "status.message = \"\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 947,
          "context": "status.status = TEST_PASS;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 952,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 953,
          "context": "status.code = POWER_ERR_VOLTAGE_LOW;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 954,
          "context": "status.message = \"Battery voltage too low\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 955,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 957,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 958,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 961,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 962,
          "context": "status.code = POWER_ERR_VOLTAGE_HIGH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 963,
          "context": "status.message = \"Battery voltage too high\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 964,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 966,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 967,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 973,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 974,
          "context": "status.code = POWER_ERR_CURRENT_HIGH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 975,
          "context": "status.message = \"Current too high\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 976,
          "context": "status.data = (uint32_t)(batteryCurrent * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 978,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 979,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 985,
          "context": "status.status = TEST_WARNING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 986,
          "context": "status.code = POWER_ERR_TEMP_HIGH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 987,
          "context": "status.message = \"Battery temp high\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 988,
          "context": "status.data = (uint32_t)(batteryTemp * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 990,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 995,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 996,
          "context": "status.code = POWER_ERR_SUPPLY_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 997,
          "context": "status.message = \"Supply voltage fail\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 998,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1000,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1001,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1004,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1041,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1042,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1043,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1044,
          "context": "status.message = \"\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1045,
          "context": "status.status = TEST_PASS;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1059,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1060,
          "context": "status.code = SENSOR_ERR_IMU_RANGE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1061,
          "context": "status.message = \"IMU values out of range\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1062,
          "context": "status.data = (uint32_t)(accel_magnitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1064,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1065,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1070,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1071,
          "context": "status.code = SENSOR_ERR_BARO_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1072,
          "context": "status.message = \"Barometer failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1073,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1075,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1076,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1081,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1082,
          "context": "status.code = SENSOR_ERR_BARO_RANGE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1083,
          "context": "status.message = \"Baro out of range\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1084,
          "context": "status.data = (uint32_t)(altitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1086,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1087,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1092,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1093,
          "context": "status.code = SENSOR_ERR_MAG_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1094,
          "context": "status.message = \"Magnetometer failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1095,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1097,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1098,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1112,
          "context": "status.status = TEST_WARNING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1113,
          "context": "status.code = SENSOR_ERR_MAG_RANGE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1114,
          "context": "status.message = \"Mag field abnormal\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1115,
          "context": "status.data = (uint32_t)(mag_magnitude * 1000);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1117,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1123,
          "context": "status.status = TEST_WARNING;  // GPS не критичен, поэтому WARNING"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1124,
          "context": "status.code = SENSOR_ERR_GPS_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1125,
          "context": "status.message = \"GPS not ready\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1126,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1128,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1132,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1161,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1162,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1163,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1164,
          "context": "status.message = \"\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1165,
          "context": "status.status = TEST_PASS;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1170,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1171,
          "context": "status.code = MOTOR_ERR_ESC_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1172,
          "context": "status.message = \"ESC initialization failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1173,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1175,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1176,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1186,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1187,
          "context": "status.code = MOTOR_ERR_NOT_RESPONDING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1188,
          "context": "status.message = \"Motor not responding\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1189,
          "context": "status.data = i;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1191,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1192,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1209,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1210,
          "context": "status.code = MOTOR_ERR_HIGH_CURRENT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1211,
          "context": "status.message = \"Motor high current\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1212,
          "context": "status.data = i;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1214,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1216,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1221,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1222,
          "context": "status.code = MOTOR_ERR_NO_ROTATION;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1223,
          "context": "status.message = \"Motor not rotating\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1224,
          "context": "status.data = i;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1226,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1228,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1233,
          "context": "status.status = TEST_WARNING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1234,
          "context": "status.code = MOTOR_ERR_TEMP_HIGH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1235,
          "context": "status.message = \"Motor temperature high\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1236,
          "context": "status.data = i;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1238,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1243,
          "context": "status.status = TEST_WARNING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1244,
          "context": "status.code = MOTOR_ERR_VIBRATION;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1245,
          "context": "status.message = \"Motor high vibration\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1246,
          "context": "status.data = i;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1248,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1258,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1292,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1293,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1294,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1295,
          "context": "status.message = \"\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1296,
          "context": "status.status = TEST_PASS;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1314,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1315,
          "context": "status.code = COMM_ERR_RC_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1316,
          "context": "status.message = \"RC not responding\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1317,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1319,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1320,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1325,
          "context": "status.status = TEST_WARNING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1326,
          "context": "status.code = COMM_ERR_RC_QUALITY;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1327,
          "context": "status.message = \"RC signal weak\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1328,
          "context": "status.data = rcQuality;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1330,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1348,
          "context": "status.status = TEST_WARNING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1349,
          "context": "status.code = COMM_ERR_TELEMETRY_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1350,
          "context": "status.message = \"Telemetry failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1351,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1353,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1358,
          "context": "status.status = TEST_WARNING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1359,
          "context": "status.code = COMM_ERR_BACKUP_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1360,
          "context": "status.message = \"Backup comm failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1361,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1363,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1366,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1371,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1372,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1373,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1374,
          "context": "status.message = \"\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1375,
          "context": "status.status = TEST_PASS;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1379,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1380,
          "context": "status.code = SAFETY_ERR_WATCHDOG;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1381,
          "context": "status.message = \"Watchdog failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1382,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1384,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1385,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1390,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1391,
          "context": "status.code = SAFETY_ERR_EEPROM;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1392,
          "context": "status.message = \"EEPROM failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1393,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1395,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1396,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1401,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1402,
          "context": "status.code = SAFETY_ERR_FLASH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1403,
          "context": "status.message = \"Flash failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1404,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1406,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1407,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1413,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1414,
          "context": "status.code = SAFETY_ERR_PARACHUTE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1415,
          "context": "status.message = \"Parachute failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1416,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1418,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1419,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1425,
          "context": "status.status = TEST_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1426,
          "context": "status.code = SAFETY_ERR_KILLSWITCH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1427,
          "context": "status.message = \"Kill switch failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1428,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1430,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1431,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1434,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1537,
          "context": "ADCConversionStatus status = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1543,
          "context": "status.error = ADC_ERROR_NOT_INITIALIZED;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1544,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1547,
          "context": "status.complete = (ADC0_RIS_R & 0x08) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1553,
          "context": "if (!status.complete) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1556,
          "context": "status.error = ADC_ERROR_TIMEOUT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1563,
          "context": "return status;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1678,
          "context": "if (selfTestResult.powerTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1683,
          "context": "else if (selfTestResult.powerTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1686,
          "context": "selfTestResult.systemStatus.powerSystemOperational = (selfTestResult.powerTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1690,
          "context": "if (selfTestResult.sensorTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1695,
          "context": "else if (selfTestResult.sensorTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1698,
          "context": "selfTestResult.systemStatus.sensorsOperational = (selfTestResult.sensorTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1702,
          "context": "if (selfTestResult.motorTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1707,
          "context": "else if (selfTestResult.motorTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1710,
          "context": "selfTestResult.systemStatus.motorsOperational = (selfTestResult.motorTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1714,
          "context": "if (selfTestResult.commTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1719,
          "context": "else if (selfTestResult.commTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1722,
          "context": "selfTestResult.systemStatus.communicationOperational = (selfTestResult.commTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1726,
          "context": "if (selfTestResult.safetyTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1731,
          "context": "else if (selfTestResult.safetyTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1734,
          "context": "selfTestResult.systemStatus.safetySystemOperational = (selfTestResult.safetyTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 93,
          "context": "bool Communication_SendStatus(uint8_t status);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 117,
          "context": "uint8_t status;     // TEST_PASS, TEST_WARNING, TEST_FAIL, or TEST_NOT_RUN"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint8_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_244",
      "name": "code",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 244,
          "context": "uint8_t code;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 248,
          "context": "errorData.code = errorCode;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 541,
          "context": "entry->code = (ErrorCode)event;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 944,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 953,
          "context": "status.code = POWER_ERR_VOLTAGE_LOW;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 962,
          "context": "status.code = POWER_ERR_VOLTAGE_HIGH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 974,
          "context": "status.code = POWER_ERR_CURRENT_HIGH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 986,
          "context": "status.code = POWER_ERR_TEMP_HIGH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 996,
          "context": "status.code = POWER_ERR_SUPPLY_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1042,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1060,
          "context": "status.code = SENSOR_ERR_IMU_RANGE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1071,
          "context": "status.code = SENSOR_ERR_BARO_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1082,
          "context": "status.code = SENSOR_ERR_BARO_RANGE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1093,
          "context": "status.code = SENSOR_ERR_MAG_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1113,
          "context": "status.code = SENSOR_ERR_MAG_RANGE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1124,
          "context": "status.code = SENSOR_ERR_GPS_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1162,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1171,
          "context": "status.code = MOTOR_ERR_ESC_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1187,
          "context": "status.code = MOTOR_ERR_NOT_RESPONDING;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1210,
          "context": "status.code = MOTOR_ERR_HIGH_CURRENT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1222,
          "context": "status.code = MOTOR_ERR_NO_ROTATION;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1234,
          "context": "status.code = MOTOR_ERR_TEMP_HIGH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1244,
          "context": "status.code = MOTOR_ERR_VIBRATION;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1293,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1315,
          "context": "status.code = COMM_ERR_RC_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1326,
          "context": "status.code = COMM_ERR_RC_QUALITY;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1349,
          "context": "status.code = COMM_ERR_TELEMETRY_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1359,
          "context": "status.code = COMM_ERR_BACKUP_FAIL;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1372,
          "context": "status.code = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1380,
          "context": "status.code = SAFETY_ERR_WATCHDOG;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1391,
          "context": "status.code = SAFETY_ERR_EEPROM;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1402,
          "context": "status.code = SAFETY_ERR_FLASH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1414,
          "context": "status.code = SAFETY_ERR_PARACHUTE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1426,
          "context": "status.code = SAFETY_ERR_KILLSWITCH;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 118,
          "context": "uint32_t code;      // Error or status code"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 141,
          "context": "uint32_t code;          // Код события/ошибки"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_245",
      "name": "message",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 242,
          "context": "bool Communication_SendError(uint8_t errorCode, const char* message) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 245,
          "context": "char message[COMM_MAX_PACKET_SIZE - 1];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 249,
          "context": "if (message != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 250,
          "context": "strncpy(errorData.message, message, sizeof(errorData.message) - 1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 251,
          "context": "errorData.message[sizeof(errorData.message) - 1] = '\\0';"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 253,
          "context": "errorData.message[0] = '\\0';"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 257,
          "context": "1 + strlen(errorData.message) + 1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 533,
          "context": "void Diagnostics_Log(LogLevel level, DiagnosticEvent event, const char* message, uint32_t data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 910,
          "context": "lastEntry.message);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 946,
          "context": "status.message = \"\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 954,
          "context": "status.message = \"Battery voltage too low\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 957,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 963,
          "context": "status.message = \"Battery voltage too high\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 966,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 975,
          "context": "status.message = \"Current too high\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 978,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 987,
          "context": "status.message = \"Battery temp high\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 990,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 997,
          "context": "status.message = \"Supply voltage fail\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1000,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1044,
          "context": "status.message = \"\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1061,
          "context": "status.message = \"IMU values out of range\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1064,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1072,
          "context": "status.message = \"Barometer failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1075,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1083,
          "context": "status.message = \"Baro out of range\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1086,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1094,
          "context": "status.message = \"Magnetometer failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1097,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1114,
          "context": "status.message = \"Mag field abnormal\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1117,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1125,
          "context": "status.message = \"GPS not ready\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1128,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1164,
          "context": "status.message = \"\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1172,
          "context": "status.message = \"ESC initialization failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1175,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1188,
          "context": "status.message = \"Motor not responding\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1191,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1211,
          "context": "status.message = \"Motor high current\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1214,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1223,
          "context": "status.message = \"Motor not rotating\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1226,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1235,
          "context": "status.message = \"Motor temperature high\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1238,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1245,
          "context": "status.message = \"Motor high vibration\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1248,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1295,
          "context": "status.message = \"\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1316,
          "context": "status.message = \"RC not responding\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1319,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1327,
          "context": "status.message = \"RC signal weak\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1330,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1350,
          "context": "status.message = \"Telemetry failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1353,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1360,
          "context": "status.message = \"Backup comm failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1363,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1374,
          "context": "status.message = \"\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1381,
          "context": "status.message = \"Watchdog failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1384,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1392,
          "context": "status.message = \"EEPROM failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1395,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1403,
          "context": "status.message = \"Flash failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1406,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1415,
          "context": "status.message = \"Parachute failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1418,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1427,
          "context": "status.message = \"Kill switch failed\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1430,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1655,
          "context": "strncpy(selfTestResult.message, \"Test not started\", sizeof(selfTestResult.message) - 1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1739,
          "context": "strncpy(selfTestResult.message, \"Self-test failed\", sizeof(selfTestResult.message) - 1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1740,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SYSTEM_ERROR, selfTestResult.message, selfTestResult.totalErrors);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1744,
          "context": "strncpy(selfTestResult.message, \"Self-test passed\", sizeof(selfTestResult.message) - 1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1745,
          "context": "Diagnostics_Log(LOG_INFO, DIAG_EVENT_SELF_TEST, selfTestResult.message, 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 94,
          "context": "bool Communication_SendError(uint8_t errorCode, const char* message);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 119,
          "context": "const char* message;// Status message"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 140,
          "context": "char message[128];       // Текстовое сообщение"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 176,
          "context": "char message[64];        // Общее сообщение о результате"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 346,
          "context": "void Diagnostics_Log(uint8_t level, DiagnosticEvent event, const char* message, uint32_t data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 353,
          "context": "void Diagnostics_Log(LogLevel level, DiagnosticEvent event, const char* message, uint32_t data);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "char*",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_246",
      "name": "data",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 235,
          "context": "memcpy(&cmdData, rxPacket.data, sizeof(CommandPacket));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 244,
          "context": ".latitude = cmdData.data.position.x,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 245,
          "context": ".longitude = cmdData.data.position.y,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 246,
          "context": ".altitude = cmdData.data.position.z,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 263,
          "context": "cmdData.data.attitude.roll,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 264,
          "context": "cmdData.data.attitude.pitch,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 265,
          "context": "cmdData.data.attitude.yaw,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 272,
          "context": "UpdatePIDParameters(cmdData.data.config.param, cmdData.data.config.value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 54,
          "context": "static uint16_t CalculateChecksum(const uint8_t* data, uint16_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 116,
          "context": "bool UART_Send(const uint8_t* data, uint16_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 119,
          "context": "if (data == NULL || length == 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 125,
          "context": "UART0_DR_R = (uint32_t)data[i];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 204,
          "context": "bool Communication_Send(PacketType type, const void* data, uint8_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 214,
          "context": "if (data != NULL && length > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 215,
          "context": "memcpy(packet.data, data, (size_t)length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 265,
          "context": "CommandType cmd = packet->data[0];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 394,
          "context": "static uint16_t CalculateChecksum(const uint8_t* data, uint16_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 397,
          "context": "checksum += data[i];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 447,
          "context": "void Communication_SendData(uint8_t* data, uint16_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 533,
          "context": "void Diagnostics_Log(LogLevel level, DiagnosticEvent event, const char* message, uint32_t data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 542,
          "context": "entry->data = data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 945,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 955,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 957,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 964,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 966,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 976,
          "context": "status.data = (uint32_t)(batteryCurrent * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 978,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 988,
          "context": "status.data = (uint32_t)(batteryTemp * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 990,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 998,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1000,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1043,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1062,
          "context": "status.data = (uint32_t)(accel_magnitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1064,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1073,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1075,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1084,
          "context": "status.data = (uint32_t)(altitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1086,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1095,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1097,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1115,
          "context": "status.data = (uint32_t)(mag_magnitude * 1000);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1117,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1126,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1128,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1163,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1173,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1175,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1189,
          "context": "status.data = i;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1191,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1212,
          "context": "status.data = i;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1214,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1224,
          "context": "status.data = i;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1226,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1236,
          "context": "status.data = i;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1238,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1246,
          "context": "status.data = i;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1248,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1294,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1317,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1319,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1328,
          "context": "status.data = rcQuality;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1330,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1351,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1353,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1361,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1363,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1373,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1382,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1384,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1393,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1395,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1404,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1406,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1416,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1418,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1428,
          "context": "status.data = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1430,
          "context": "status.message, status.data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1978,
          "context": "bool SendBackupCommPacket(const uint8_t* data, uint8_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 23,
          "context": "static MPU6050_Data mpu6050_data = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 24,
          "context": "static BMP280_Data bmp280_data = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 31,
          "context": "mpu6050_data.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 32,
          "context": "mpu6050_data.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 33,
          "context": "mpu6050_data.accel_z = 1.0f;  // 1g в состоянии покоя"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 34,
          "context": "mpu6050_data.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 35,
          "context": "mpu6050_data.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 36,
          "context": "mpu6050_data.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 37,
          "context": "mpu6050_data.temperature = 25.0f;  // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 44,
          "context": "bmp280_data.pressure = 1013.25f;  // Стандартное атмосферное давление (гПа)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 45,
          "context": "bmp280_data.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 46,
          "context": "bmp280_data.temperature = 25.0f;  // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 51,
          "context": "void MPU6050_Read(MPU6050_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 52,
          "context": "if (!sensor_state.mpu6050_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 57,
          "context": "*data = mpu6050_data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 60,
          "context": "void BMP280_Read(BMP280_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 61,
          "context": "if (!sensor_state.bmp280_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 66,
          "context": "*data = bmp280_data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 71,
          "context": "mpu6050_data.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 72,
          "context": "mpu6050_data.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 73,
          "context": "mpu6050_data.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 74,
          "context": "mpu6050_data.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 75,
          "context": "mpu6050_data.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 76,
          "context": "mpu6050_data.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 81,
          "context": "bmp280_data.pressure = 1013.25f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 82,
          "context": "bmp280_data.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 88,
          "context": "mpu6050_data.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 89,
          "context": "mpu6050_data.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 90,
          "context": "mpu6050_data.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 91,
          "context": "mpu6050_data.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 92,
          "context": "mpu6050_data.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 93,
          "context": "mpu6050_data.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 97,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 98,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f); // Примерное изменение давления с высотой"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 106,
          "context": "mpu6050_data.accel_z = 1.2f; // Повышенная нагрузка при наборе высоты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 107,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 108,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 117,
          "context": "mpu6050_data.accel_z = 0.8f; // Пониженная нагрузка при снижении"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 118,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 119,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 127,
          "context": "mpu6050_data.gyro_z = 45.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 128,
          "context": "mpu6050_data.accel_x = (float)sin(sensor_state.rotation_angle * 3.14159f / 180.0f) * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 129,
          "context": "mpu6050_data.accel_y = (float)cos(sensor_state.rotation_angle * 3.14159f / 180.0f) * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 134,
          "context": "mpu6050_data.accel_x = 0.2f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 135,
          "context": "mpu6050_data.gyro_y = -5.0f; // Небольшой наклон вперед"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 139,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 140,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 143,
          "context": "void Sensors_GetIMUData(MPU6050_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 144,
          "context": "if (data == NULL) return;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 146,
          "context": "*data = mpu6050_data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 181,
          "context": "void Sensors_GetAllData(SensorData* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 182,
          "context": "if(data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 183,
          "context": "data->imu.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 184,
          "context": "data->imu.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 185,
          "context": "data->imu.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 186,
          "context": "data->imu.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 187,
          "context": "data->imu.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 188,
          "context": "data->imu.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 189,
          "context": "data->baro.pressure = 1013.25f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 190,
          "context": "data->baro.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 191,
          "context": "data->isCalibrated = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 195,
          "context": "void Sensors_GetBaroData(BMP280_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 196,
          "context": "if(data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 197,
          "context": "data->pressure = 1013.25f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 198,
          "context": "data->altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 199,
          "context": "data->temperature = 25.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 48,
          "context": "uint8_t data[COMM_MAX_PACKET_SIZE];  // Данные"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 78,
          "context": "bool UART_Send(const uint8_t* data, uint16_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 82,
          "context": "void Communication_SendData(uint8_t* data, uint16_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 88,
          "context": "bool Communication_Send(PacketType type, const void* data, uint8_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 120,
          "context": "uint32_t data;      // Additional data"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 142,
          "context": "uint32_t data;          // Дополнительные данные"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 346,
          "context": "void Diagnostics_Log(uint8_t level, DiagnosticEvent event, const char* message, uint32_t data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 353,
          "context": "void Diagnostics_Log(LogLevel level, DiagnosticEvent event, const char* message, uint32_t data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 359,
          "context": "bool Diagnostics_GetIMUData(IMUData* data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 486,
          "context": "bool SendBackupCommPacket(const uint8_t* data, uint8_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 71,
          "context": "} data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 52,
          "context": "void Sensors_GetAllData(SensorData* data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 53,
          "context": "void Sensors_GetBaroData(BMP280_Data* data);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_247",
      "name": "accelX",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1049,
          "context": "float accel_magnitude = sqrtf(powf(imuData.accelX, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 124,
          "context": "float accelX;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_248",
      "name": "accelY",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1050,
          "context": "powf(imuData.accelY, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 125,
          "context": "float accelY;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_249",
      "name": "accelZ",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1051,
          "context": "powf(imuData.accelZ, 2));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 126,
          "context": "float accelZ;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_250",
      "name": "gyroX",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1053,
          "context": "float gyro_magnitude = sqrtf(powf(imuData.gyroX, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 127,
          "context": "float gyroX;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_251",
      "name": "gyroY",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1054,
          "context": "powf(imuData.gyroY, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 128,
          "context": "float gyroY;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_252",
      "name": "gyroZ",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1055,
          "context": "powf(imuData.gyroZ, 2));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 129,
          "context": "float gyroZ;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_253",
      "name": "magX",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1102,
          "context": ".magX = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1107,
          "context": "float mag_magnitude = sqrtf(powf(magData.magX, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1644,
          "context": ".magX = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 130,
          "context": "float magX;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_254",
      "name": "magY",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1103,
          "context": ".magY = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1108,
          "context": "powf(magData.magY, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1645,
          "context": ".magY = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 131,
          "context": "float magY;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_255",
      "name": "magZ",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1104,
          "context": ".magZ = 0.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1109,
          "context": "powf(magData.magZ, 2));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1646,
          "context": ".magZ = 0.0f"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 132,
          "context": "float magZ;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_256",
      "name": "temp",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 334,
          "context": "telemetry.temperature = thermalState.mcuTemp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 357,
          "context": "if (sensorData.imu.temperature < MIN_BATTERY_VOLTAGE) { // Временно используем temperature как voltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 20,
          "context": "actuators_state.motors[i].temperature = 25.0f; // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 155,
          "context": "return actuators_state.motors[motor_index].temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 231,
          "context": "actuators_state.motors[i].temperature += pwm_factor * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 234,
          "context": "if (actuators_state.motors[i].temperature > 25.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 235,
          "context": "actuators_state.motors[i].temperature -= 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 256,
          "context": "\"Attempt to get power state with NULL pointer\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 326,
          "context": "uint32_t temp_raw = ADC0_SSFIFO1_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 331,
          "context": "float temp = ((temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_MV_C;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 336,
          "context": "diagState.powerState.batteryTemp = temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 357,
          "context": "if (temp >= BATTERY_MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 359,
          "context": "\"Critical battery temperature\", (uint32_t)(temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 417,
          "context": "uint32_t mcu_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 418,
          "context": "uint32_t motors_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 419,
          "context": "uint32_t board_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 420,
          "context": "uint32_t ambient_temp_raw = ADC1_SSFIFO0_R & 0xFFF;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 424,
          "context": "float mcu_voltage = (mcu_temp_raw * VREF) / ADC_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 425,
          "context": "float mcu_temp = ((mcu_voltage * 1000.0f) / MCU_TEMP_SLOPE) + MCU_TEMP_OFFSET;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 428,
          "context": "float motors_temp = ((motors_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 429,
          "context": "float board_temp = ((board_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 430,
          "context": "float ambient_temp = ((ambient_temp_raw * VREF / ADC_MAX_VALUE) * 1000.0f) / TEMP_SENSOR_SLOPE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 433,
          "context": "diagState.thermalState.mcuTemp = mcu_temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 434,
          "context": "diagState.thermalState.motorTemps[0] = motors_temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 435,
          "context": "diagState.thermalState.boardTemp = board_temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 436,
          "context": "diagState.thermalState.ambientTemp = ambient_temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 439,
          "context": "if (mcu_temp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 441,
          "context": "\"Critical MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 443,
          "context": "else if (mcu_temp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 445,
          "context": "\"High MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 448,
          "context": "if (motors_temp >= TEMP_MOTORS_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 450,
          "context": "\"Critical motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 452,
          "context": "else if (motors_temp >= TEMP_MOTORS_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 454,
          "context": "\"High motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 457,
          "context": "if (board_temp >= TEMP_BOARD_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 459,
          "context": "\"Critical board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 461,
          "context": "else if (board_temp >= TEMP_BOARD_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 463,
          "context": "\"High board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 479,
          "context": "\"MCU temperature critical\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 484,
          "context": "\"MCU temperature warning\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 493,
          "context": "\"Motor temperature critical\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 498,
          "context": "\"Motor temperature warning\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 507,
          "context": "\"Board temperature critical\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 512,
          "context": "\"Board temperature warning\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 520,
          "context": "float temp = GetMotorTemperature(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 521,
          "context": "if (!isnan(temp)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 522,
          "context": "diagState.thermalState.motorTemps[i] = temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 987,
          "context": "status.message = \"Battery temp high\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1155,
          "context": "float temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1204,
          "context": "motorData[i].temperature = GetMotorTemperature(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1232,
          "context": "if (motorData[i].temperature > MOTOR_TEST_TEMP_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1235,
          "context": "status.message = \"Motor temperature high\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1479,
          "context": "\"ADC conversion error before temperature conversion\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1495,
          "context": "float temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1501,
          "context": "temperature = (voltage * 100.0f);  // Пример преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1507,
          "context": "\"Unknown temperature sensor type\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1513,
          "context": "if (isnan(temperature)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1515,
          "context": "\"Invalid cold junction temperature\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1516,
          "context": "(uint32_t)temperature);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1520,
          "context": "return temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1550,
          "context": "static uint32_t conversionAttempts = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1554,
          "context": "conversionAttempts++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1555,
          "context": "if (conversionAttempts >= MAX_CONVERSION_ATTEMPTS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1557,
          "context": "conversionAttempts = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1560,
          "context": "conversionAttempts = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1826,
          "context": "\"ADC conversion error before cold junction temperature\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1834,
          "context": "float temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1840,
          "context": "temperature = (voltage * 100.0f);  // Пример преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1846,
          "context": "\"Unknown temperature sensor type\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1852,
          "context": "if (isnan(temperature)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1854,
          "context": "\"Invalid cold junction temperature\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1855,
          "context": "(uint32_t)temperature);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1859,
          "context": "return temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1879,
          "context": "float temperature = coeffs->a * thermocoupleVoltage * thermocoupleVoltage * thermocoupleVoltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1885,
          "context": "temperature += coldJunctionTemp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1891,
          "context": "if (temperature < MIN_TEMP || temperature > MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1893,
          "context": "\"Thermocouple temperature out of range\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1894,
          "context": "(uint32_t)(temperature * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1898,
          "context": "return temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 37,
          "context": "mpu6050_data.temperature = 25.0f;  // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 46,
          "context": "bmp280_data.temperature = 25.0f;  // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 199,
          "context": "data->temperature = 25.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 25,
          "context": "float temperature;      // Эмуляция температуры мотора"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 56,
          "context": "float temperature;         // Температура MCU (°C)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 133,
          "context": "float temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 22,
          "context": "float temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 29,
          "context": "float temperature; // Температура в градусах Цельсия"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_257",
      "name": "timestamp",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 539,
          "context": "entry->timestamp = diagState.startTime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 137,
          "context": "uint32_t timestamp;      // Время события"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_258",
      "name": "level",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 104,
          "context": "const char* GetLogLevelString(LogLevel level);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 274,
          "context": "\"Battery level is critically low\", (uint32_t)state->batteryLevel);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 339,
          "context": "float battery_level = (voltage - BATTERY_MIN_VOLTAGE) /"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 341,
          "context": "diagState.powerState.batteryLevel = (battery_level > 100.0f) ? 100.0f :"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 342,
          "context": "(battery_level < 0.0f) ? 0.0f : battery_level;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 533,
          "context": "void Diagnostics_Log(LogLevel level, DiagnosticEvent event, const char* message, uint32_t data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 540,
          "context": "entry->level = level;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 544,
          "context": "if (level >= LOG_ERROR) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 548,
          "context": "if (level == LOG_FATAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 607,
          "context": "const char* GetLogLevelString(LogLevel level) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 608,
          "context": "switch (level) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 909,
          "context": "GetLogLevelString(lastEntry.level),"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 43,
          "context": "void Actuators_SetAllMotors(float power_level);  // Устанавливает одинаковую мощность для всех моторов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 138,
          "context": "LogLevel level;          // Уровень важности"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 346,
          "context": "void Diagnostics_Log(uint8_t level, DiagnosticEvent event, const char* message, uint32_t data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 353,
          "context": "void Diagnostics_Log(LogLevel level, DiagnosticEvent event, const char* message, uint32_t data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 517,
          "context": "const char* GetLogLevelString(LogLevel level);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "LogLevel",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_259",
      "name": "event",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 105,
          "context": "const char* GetEventString(DiagnosticEvent event);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 533,
          "context": "void Diagnostics_Log(LogLevel level, DiagnosticEvent event, const char* message, uint32_t data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 541,
          "context": "entry->code = (ErrorCode)event;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 620,
          "context": "const char* GetEventString(DiagnosticEvent event) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 621,
          "context": "switch (event) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 139,
          "context": "DiagnosticEvent event;   // Тип события"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 345,
          "context": "const char* Diagnostics_GetEventString(DiagnosticEvent event);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 346,
          "context": "void Diagnostics_Log(uint8_t level, DiagnosticEvent event, const char* message, uint32_t data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 353,
          "context": "void Diagnostics_Log(LogLevel level, DiagnosticEvent event, const char* message, uint32_t data);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 518,
          "context": "const char* GetEventString(DiagnosticEvent event);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "DiagnosticEvent",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_262",
      "name": "mcuTemp",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 334,
          "context": "telemetry.temperature = thermalState.mcuTemp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 433,
          "context": "diagState.thermalState.mcuTemp = mcu_temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 476,
          "context": "if (diagState.thermalState.mcuTemp >= TEMP_MCU_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 480,
          "context": "(uint32_t)(diagState.thermalState.mcuTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 481,
          "context": "} else if (diagState.thermalState.mcuTemp >= TEMP_MCU_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 485,
          "context": "(uint32_t)(diagState.thermalState.mcuTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 576,
          "context": "return (diagState.thermalState.mcuTemp >= TEMP_MCU_WARNING ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 883,
          "context": "SendDebugMessage(\"MCU Temp: %.1f°C\", diagState.thermalState.mcuTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 146,
          "context": "float mcuTemp;           // Temperature of the MCU"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_263",
      "name": "ambientTemp",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 436,
          "context": "diagState.thermalState.ambientTemp = ambient_temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 890,
          "context": "SendDebugMessage(\"Ambient Temp: %.1f°C\", diagState.thermalState.ambientTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 147,
          "context": "float ambientTemp;       // Ambient temperature"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_264",
      "name": "boardTemp",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 435,
          "context": "diagState.thermalState.boardTemp = board_temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 504,
          "context": "if (diagState.thermalState.boardTemp >= TEMP_BOARD_CRITICAL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 508,
          "context": "(uint32_t)(diagState.thermalState.boardTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 509,
          "context": "} else if (diagState.thermalState.boardTemp >= TEMP_BOARD_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 513,
          "context": "(uint32_t)(diagState.thermalState.boardTemp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 578,
          "context": "diagState.thermalState.boardTemp >= TEMP_BOARD_WARNING);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 884,
          "context": "SendDebugMessage(\"Board Temp: %.1f°C\", diagState.thermalState.boardTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 149,
          "context": "float boardTemp;         // Temperature of the main board"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_265",
      "name": "isCritical",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 268,
          "context": "state->isCriticalBattery = diagState.powerState.isCriticalBattery;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 472,
          "context": "diagState.thermalState.isCritical = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 477,
          "context": "diagState.thermalState.isCritical = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 491,
          "context": "diagState.thermalState.isCritical = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 505,
          "context": "diagState.thermalState.isCritical = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 150,
          "context": "bool isCritical;         // True if any temperature is critical"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 162,
          "context": "bool isCriticalBattery;  // Флаг критически низкого заряда"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_266",
      "name": "isWarning",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 473,
          "context": "diagState.thermalState.isWarning = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 482,
          "context": "diagState.thermalState.isWarning = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 496,
          "context": "diagState.thermalState.isWarning = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 510,
          "context": "diagState.thermalState.isWarning = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 151,
          "context": "bool isWarning;          // True if any temperature is in warning range"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_267",
      "name": "batteryVoltage",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 333,
          "context": "telemetry.batteryVoltage = powerState.batteryVoltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 217,
          "context": "diagState.powerState.batteryVoltage = voltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 262,
          "context": "state->batteryVoltage = diagState.powerState.batteryVoltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 279,
          "context": "return diagState.powerState.batteryVoltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 334,
          "context": "diagState.powerState.batteryVoltage = voltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 875,
          "context": "diagState.powerState.batteryVoltage,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 950,
          "context": "float batteryVoltage = diagState.powerState.batteryVoltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 951,
          "context": "if (batteryVoltage < POWER_TEST_VOLTAGE_MIN) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 955,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 960,
          "context": "else if (batteryVoltage > POWER_TEST_VOLTAGE_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 964,
          "context": "status.data = (uint32_t)(batteryVoltage * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 55,
          "context": "float batteryVoltage;      // Напряжение батареи (В)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 155,
          "context": "float batteryVoltage;    // Напряжение батареи"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_268",
      "name": "batteryCurrent",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 265,
          "context": "state->batteryCurrent = diagState.powerState.batteryCurrent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 335,
          "context": "diagState.powerState.batteryCurrent = current;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 877,
          "context": "SendDebugMessage(\"Current: %.2fA\", diagState.powerState.batteryCurrent);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 971,
          "context": "float batteryCurrent = diagState.powerState.batteryCurrent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 972,
          "context": "if (batteryCurrent > POWER_TEST_CURRENT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 976,
          "context": "status.data = (uint32_t)(batteryCurrent * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 156,
          "context": "float batteryCurrent;    // Ток батареи"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_269",
      "name": "batteryTemp",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 264,
          "context": "state->batteryTemp = diagState.powerState.batteryTemp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 336,
          "context": "diagState.powerState.batteryTemp = temp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 878,
          "context": "SendDebugMessage(\"Battery Temp: %.1f°C\", diagState.powerState.batteryTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 983,
          "context": "float batteryTemp = diagState.powerState.batteryTemp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 984,
          "context": "if (batteryTemp > POWER_TEST_TEMP_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 988,
          "context": "status.data = (uint32_t)(batteryTemp * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 157,
          "context": "float batteryTemp;       // Температура батареи"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_270",
      "name": "batteryLevel",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 347,
          "context": "telemetry.batteryStatus = powerState.batteryLevel;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 221,
          "context": "diagState.powerState.batteryLevel = 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 223,
          "context": "diagState.powerState.batteryLevel = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 225,
          "context": "diagState.powerState.batteryLevel = (uint8_t)((voltage - 9.0f) * 27.78f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 263,
          "context": "state->batteryLevel = diagState.powerState.batteryLevel;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 272,
          "context": "if (state->batteryLevel < 20.0f) {  // Порог низкого заряда 20%"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 274,
          "context": "\"Battery level is critically low\", (uint32_t)state->batteryLevel);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 283,
          "context": "return diagState.powerState.batteryLevel;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 341,
          "context": "diagState.powerState.batteryLevel = (battery_level > 100.0f) ? 100.0f :"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 876,
          "context": "diagState.powerState.batteryLevel);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 158,
          "context": "float batteryLevel;      // Уровень заряда батареи (0-100%)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_271",
      "name": "uptime",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 269,
          "context": "state->uptime = diagState.powerState.uptime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 345,
          "context": "diagState.powerState.uptime = GetCurrentTime();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 865,
          "context": "SendDebugMessage(\"Uptime: %lu ms\", diagState.powerState.uptime);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 159,
          "context": "uint32_t uptime;         // Время работы системы"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_272",
      "name": "isCharging",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 266,
          "context": "state->isCharging = diagState.powerState.isCharging;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 879,
          "context": "SendDebugMessage(\"Charging: %s\", diagState.powerState.isCharging ? \"Yes\" : \"No\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 160,
          "context": "bool isCharging;         // Флаг зарядки"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_273",
      "name": "isLowBattery",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 267,
          "context": "state->isLowBattery = diagState.powerState.isLowBattery;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 161,
          "context": "bool isLowBattery;       // Флаг низкого заряда"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_274",
      "name": "isCriticalBattery",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 268,
          "context": "state->isCriticalBattery = diagState.powerState.isCriticalBattery;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 162,
          "context": "bool isCriticalBattery;  // Флаг критически низкого заряда"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_275",
      "name": "powerSystemOperational",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1658,
          "context": "selfTestResult.systemStatus.powerSystemOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1686,
          "context": "selfTestResult.systemStatus.powerSystemOperational = (selfTestResult.powerTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 166,
          "context": "bool powerSystemOperational;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_276",
      "name": "sensorsOperational",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1659,
          "context": "selfTestResult.systemStatus.sensorsOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1698,
          "context": "selfTestResult.systemStatus.sensorsOperational = (selfTestResult.sensorTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 167,
          "context": "bool sensorsOperational;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_277",
      "name": "motorsOperational",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1660,
          "context": "selfTestResult.systemStatus.motorsOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1710,
          "context": "selfTestResult.systemStatus.motorsOperational = (selfTestResult.motorTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 168,
          "context": "bool motorsOperational;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_278",
      "name": "communicationOperational",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1661,
          "context": "selfTestResult.systemStatus.communicationOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1722,
          "context": "selfTestResult.systemStatus.communicationOperational = (selfTestResult.commTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 169,
          "context": "bool communicationOperational;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_279",
      "name": "safetySystemOperational",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1662,
          "context": "selfTestResult.systemStatus.safetySystemOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1734,
          "context": "selfTestResult.systemStatus.safetySystemOperational = (selfTestResult.safetyTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 170,
          "context": "bool safetySystemOperational;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_280",
      "name": "result",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 208,
          "context": "uint32_t result = ADC0_SSFIFO3_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 214,
          "context": "float voltage = (result * 3.3f) / 4096.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1441,
          "context": "ADCResult result = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1445,
          "context": "result.error = ADC_ERROR_NOT_INITIALIZED;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1446,
          "context": "return result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1460,
          "context": "result.error = ADC_ERROR_TIMEOUT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1461,
          "context": "return result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1465,
          "context": "result.value = ADC0_SSFIFO3_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1466,
          "context": "result.error = ADC_ERROR_NONE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1471,
          "context": "return result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1570,
          "context": "SystemTickResult result = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1576,
          "context": "if (result.ticks == 0 || result.ticks > NVIC_ST_RELOAD_R) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1577,
          "context": "result.error = SYSTICK_ERROR_INVALID_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1579,
          "context": "\"Invalid system tick value\", result.ticks);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1582,
          "context": "return result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1618,
          "context": "ElapsedTicksResult result = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1626,
          "context": "result.error = SYSTICK_ERROR_INVALID_CURRENT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1627,
          "context": "return result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1633,
          "context": "result.elapsedTicks = startTicks - currentTicks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1636,
          "context": "result.elapsedTicks = (NVIC_ST_RELOAD_R - currentTicks) + startTicks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1639,
          "context": "return result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1775,
          "context": "ADCResult result = Diagnostics_GetADCValue();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1776,
          "context": "return Diagnostics_ConvertADCToTemp(result);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1920,
          "context": "uint32_t result = ADC1_SSFIFO0_R & 0xFFF;  // 12-bit ADC"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1927,
          "context": "float voltage = (result * 3.3f) / 4096.0f;  // Преобразование в вольты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 177,
          "context": "TestResult result;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 341,
          "context": "bool Diagnostics_PerformSelfTest(SelfTestResult* result);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "TestResult",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_281",
      "name": "errorCode",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 242,
          "context": "bool Communication_SendError(uint8_t errorCode, const char* message) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 248,
          "context": "errorData.code = errorCode;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 94,
          "context": "bool Communication_SendError(uint8_t errorCode, const char* message);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 178,
          "context": "uint32_t errorCode;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_282",
      "name": "totalErrors",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1652,
          "context": "selfTestResult.totalErrors = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1679,
          "context": "selfTestResult.totalErrors++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1691,
          "context": "selfTestResult.totalErrors++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1703,
          "context": "selfTestResult.totalErrors++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1715,
          "context": "selfTestResult.totalErrors++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1727,
          "context": "selfTestResult.totalErrors++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1738,
          "context": "if (selfTestResult.totalErrors > 0) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1740,
          "context": "Diagnostics_Log(LOG_ERROR, DIAG_EVENT_SYSTEM_ERROR, selfTestResult.message, selfTestResult.totalErrors);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 181,
          "context": "uint32_t totalErrors;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_283",
      "name": "totalWarnings",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1653,
          "context": "selfTestResult.totalWarnings = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1684,
          "context": "selfTestResult.totalWarnings++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1696,
          "context": "selfTestResult.totalWarnings++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1708,
          "context": "selfTestResult.totalWarnings++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1720,
          "context": "selfTestResult.totalWarnings++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1732,
          "context": "selfTestResult.totalWarnings++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 182,
          "context": "uint32_t totalWarnings;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_284",
      "name": "isTestComplete",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1654,
          "context": "selfTestResult.isTestComplete = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1680,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1692,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1704,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1716,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1728,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1737,
          "context": "selfTestResult.isTestComplete = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 183,
          "context": "bool isTestComplete;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_285",
      "name": "powerTest",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1665,
          "context": "selfTestResult.powerTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1677,
          "context": "selfTestResult.powerTest = TestPowerSystem();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1678,
          "context": "if (selfTestResult.powerTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1683,
          "context": "else if (selfTestResult.powerTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1686,
          "context": "selfTestResult.systemStatus.powerSystemOperational = (selfTestResult.powerTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 186,
          "context": "TestStatus powerTest;    // Тест системы питания"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "TestStatus",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_286",
      "name": "sensorTest",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1666,
          "context": "selfTestResult.sensorTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1689,
          "context": "selfTestResult.sensorTest = TestSensors();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1690,
          "context": "if (selfTestResult.sensorTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1695,
          "context": "else if (selfTestResult.sensorTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1698,
          "context": "selfTestResult.systemStatus.sensorsOperational = (selfTestResult.sensorTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 187,
          "context": "TestStatus sensorTest;   // Тест датчиков"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "TestStatus",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_287",
      "name": "motorTest",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1667,
          "context": "selfTestResult.motorTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1701,
          "context": "selfTestResult.motorTest = TestMotors();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1702,
          "context": "if (selfTestResult.motorTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1707,
          "context": "else if (selfTestResult.motorTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1710,
          "context": "selfTestResult.systemStatus.motorsOperational = (selfTestResult.motorTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 188,
          "context": "TestStatus motorTest;    // Тест моторов"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "TestStatus",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_288",
      "name": "batteryTest",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1668,
          "context": "selfTestResult.batteryTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 189,
          "context": "TestStatus batteryTest;  // Тест батареи"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "TestStatus",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_289",
      "name": "commTest",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1669,
          "context": "selfTestResult.commTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1713,
          "context": "selfTestResult.commTest = TestCommunication();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1714,
          "context": "if (selfTestResult.commTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1719,
          "context": "else if (selfTestResult.commTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1722,
          "context": "selfTestResult.systemStatus.communicationOperational = (selfTestResult.commTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 190,
          "context": "TestStatus commTest;     // Тест коммуникации"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "TestStatus",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_290",
      "name": "safetyTest",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1670,
          "context": "selfTestResult.safetyTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1725,
          "context": "selfTestResult.safetyTest = TestSafetySystems();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1726,
          "context": "if (selfTestResult.safetyTest.status == TEST_FAIL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1731,
          "context": "else if (selfTestResult.safetyTest.status == TEST_WARNING) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1734,
          "context": "selfTestResult.systemStatus.safetySystemOperational = (selfTestResult.safetyTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 191,
          "context": "TestStatus safetyTest;   // Тест системы безопасности"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "TestStatus",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_291",
      "name": "systemStatus",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1658,
          "context": "selfTestResult.systemStatus.powerSystemOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1659,
          "context": "selfTestResult.systemStatus.sensorsOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1660,
          "context": "selfTestResult.systemStatus.motorsOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1661,
          "context": "selfTestResult.systemStatus.communicationOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1662,
          "context": "selfTestResult.systemStatus.safetySystemOperational = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1686,
          "context": "selfTestResult.systemStatus.powerSystemOperational = (selfTestResult.powerTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1698,
          "context": "selfTestResult.systemStatus.sensorsOperational = (selfTestResult.sensorTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1710,
          "context": "selfTestResult.systemStatus.motorsOperational = (selfTestResult.motorTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1722,
          "context": "selfTestResult.systemStatus.communicationOperational = (selfTestResult.commTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1734,
          "context": "selfTestResult.systemStatus.safetySystemOperational = (selfTestResult.safetyTest.status != TEST_FAIL);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 194,
          "context": "SystemStatus systemStatus;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "SystemStatus",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_292",
      "name": "value",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 272,
          "context": "UpdatePIDParameters(cmdData.data.config.param, cmdData.data.config.value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 281,
          "context": "void UpdatePIDParameters(SystemParameter param, float value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 291,
          "context": "roll_kp = value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 294,
          "context": "pitch_kp = value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 297,
          "context": "yaw_kp = value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 300,
          "context": "alt_kp = value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 12,
          "context": "static void ClampPWMValue(uint16_t* pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 31,
          "context": "void Actuators_SetMotorPWM(uint8_t motor_index, uint16_t pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 36,
          "context": "ClampPWMValue(&pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 37,
          "context": "actuators_state.motors[motor_index].pwm_value = pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 38,
          "context": "actuators_state.motors[motor_index].is_running = (pwm_value > (uint16_t)PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 41,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 43,
          "context": "Actuators_SetMotorPWM(i, pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 51,
          "context": "return actuators_state.motors[motor_index].pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 66,
          "context": "actuators_state.motors[motor_index].pwm_value = PWM_MIN_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 97,
          "context": "uint16_t pwm_value = (uint16_t)((throttle * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100U + PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 98,
          "context": "Actuators_SetAllMotorsPWM(pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 99,
          "context": "actuators_state.global_throttle = pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 230,
          "context": "float pwm_factor = (float)actuators_state.motors[i].pwm_value / PWM_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 249,
          "context": "static void ClampPWMValue(uint16_t* pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 250,
          "context": "if (*pwm_value > PWM_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 251,
          "context": "*pwm_value = PWM_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 675,
          "context": "uint32_t reload_value = timeout_ms * 1000; // преобразуем мс в тики"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 678,
          "context": "WATCHDOG0_LOAD_R = reload_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1061,
          "context": "status.message = \"IMU values out of range\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1465,
          "context": "result.value = ADC0_SSFIFO3_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1485,
          "context": "if (adcResult.value == 0 || adcResult.value >= ADC_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1487,
          "context": "\"ADC value out of range\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1488,
          "context": "adcResult.value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1493,
          "context": "float voltage = (adcResult.value * 3.3f) / 4096.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1579,
          "context": "\"Invalid system tick value\", result.ticks);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1832,
          "context": "float voltage = (adcResult.value * 3.3f) / 4096.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 9,
          "context": "static float ClampValue(float value, float min, float max);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 212,
          "context": "static float ClampValue(float value, float min, float max) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 213,
          "context": "if (value < min) return min;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 214,
          "context": "if (value > max) return max;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 215,
          "context": "return value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 23,
          "context": "uint16_t pwm_value;     // Текущее значение PWM (0-1000)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 41,
          "context": "void Actuators_SetMotorPWM(uint8_t motor_index, uint16_t pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 42,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 198,
          "context": "uint32_t value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 69,
          "context": "float value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 89,
          "context": "void UpdatePIDParameters(SystemParameter param, float value);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_293",
      "name": "error",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 348,
          "context": "telemetry.errorFlags = (uint8_t)Diagnostics_GetErrorCount();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 43,
          "context": "uint32_t errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 184,
          "context": "commState.errorCount++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 227,
          "context": "commState.errorCount++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 242,
          "context": "bool Communication_SendError(uint8_t errorCode, const char* message) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 246,
          "context": "} errorData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 248,
          "context": "errorData.code = errorCode;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 250,
          "context": "strncpy(errorData.message, message, sizeof(errorData.message) - 1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 251,
          "context": "errorData.message[sizeof(errorData.message) - 1] = '\\0';"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 253,
          "context": "errorData.message[0] = '\\0';"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 256,
          "context": "return Communication_Send(PACKET_TYPE_ERROR, &errorData,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 257,
          "context": "1 + strlen(errorData.message) + 1);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 340,
          "context": "return commState.errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 74,
          "context": "uint32_t errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 163,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 545,
          "context": "diagState.errorCount++;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 558,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 649,
          "context": "return diagState.errorCount;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 653,
          "context": "diagState.errorCount = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 870,
          "context": "SendDebugMessage(\"Error Count: %lu\", diagState.errorCount);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1445,
          "context": "result.error = ADC_ERROR_NOT_INITIALIZED;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1460,
          "context": "result.error = ADC_ERROR_TIMEOUT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1466,
          "context": "result.error = ADC_ERROR_NONE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1477,
          "context": "if (adcResult.error != ADC_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1479,
          "context": "\"ADC conversion error before temperature conversion\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1480,
          "context": "adcResult.error);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1539,
          "context": ".error = ADC_ERROR_NONE"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1543,
          "context": "status.error = ADC_ERROR_NOT_INITIALIZED;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1556,
          "context": "status.error = ADC_ERROR_TIMEOUT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1572,
          "context": ".error = SYSTICK_ERROR_NONE"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1577,
          "context": "result.error = SYSTICK_ERROR_INVALID_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1589,
          "context": "if (startTicks.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1599,
          "context": "if (currentTicks.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1620,
          "context": ".error = SYSTICK_ERROR_NONE"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1625,
          "context": "if (currentTicksResult.error != SYSTICK_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1626,
          "context": "result.error = SYSTICK_ERROR_INVALID_CURRENT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1824,
          "context": "if (adcResult.error != ADC_ERROR_NONE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1826,
          "context": "\"ADC conversion error before cold junction temperature\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1827,
          "context": "adcResult.error);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 8,
          "context": "static float UpdatePID(PIDController* pid, float error);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 189,
          "context": "static float UpdatePID(PIDController* pid, float error) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 195,
          "context": "float pTerm = pid->kP * error;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 198,
          "context": "pid->integral += error * DT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 202,
          "context": "float dTerm = pid->kD * (error - pid->prevError) / DT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 203,
          "context": "pid->prevError = error;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 71,
          "context": "uint8_t errorFlags;       // Флаги ошибок"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 94,
          "context": "bool Communication_SendError(uint8_t errorCode, const char* message);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 178,
          "context": "uint32_t errorCode;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 199,
          "context": "ADCError error;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 204,
          "context": "SystemTickError error;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 209,
          "context": "SystemTickError error;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 214,
          "context": "ADCError error;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 80,
          "context": "uint32_t errors;              // Флаги ошибок"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "ADCError",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_294",
      "name": "ticks",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1571,
          "context": ".ticks = NVIC_ST_CURRENT_R,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1576,
          "context": "if (result.ticks == 0 || result.ticks > NVIC_ST_RELOAD_R) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1579,
          "context": "\"Invalid system tick value\", result.ticks);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1586,
          "context": "SystemTickError Diagnostics_DelayTicks(uint32_t ticks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1593,
          "context": "uint32_t startValue = startTicks.ticks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1596,
          "context": "while (elapsedTicks < ticks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1604,
          "context": "if (currentTicks.ticks <= startValue) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1605,
          "context": "elapsedTicks = startValue - currentTicks.ticks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1607,
          "context": "elapsedTicks = (NVIC_ST_RELOAD_R - currentTicks.ticks) + startValue;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1630,
          "context": "uint32_t currentTicks = currentTicksResult.ticks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 203,
          "context": "uint32_t ticks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 398,
          "context": "SystemTickError Diagnostics_DelayTicks(uint32_t ticks);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_296",
      "name": "elapsedTicks",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1594,
          "context": "uint32_t elapsedTicks = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1596,
          "context": "while (elapsedTicks < ticks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1605,
          "context": "elapsedTicks = startValue - currentTicks.ticks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1607,
          "context": "elapsedTicks = (NVIC_ST_RELOAD_R - currentTicks.ticks) + startValue;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1619,
          "context": ".elapsedTicks = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1633,
          "context": "result.elapsedTicks = startTicks - currentTicks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1636,
          "context": "result.elapsedTicks = (NVIC_ST_RELOAD_R - currentTicks) + startTicks;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 208,
          "context": "uint32_t elapsedTicks;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_298",
      "name": "complete",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1538,
          "context": ".complete = false,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1547,
          "context": "status.complete = (ADC0_RIS_R & 0x08) != 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1553,
          "context": "if (!status.complete) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 213,
          "context": "bool complete;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_300",
      "name": "thermocopleType",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 220,
          "context": "ThermocoupleType thermocopleType;  // Тип термопары"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "ThermocoupleType",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_301",
      "name": "referenceVoltage",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 221,
          "context": "float referenceVoltage;            // Опорное напряжение"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_302",
      "name": "R0",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 290,
          "context": "SYSCTL_RCGCADC_R |= SYSCTL_RCGCADC_R0;    // ADC0"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 294,
          "context": "while(!(SYSCTL_PRADC_R & SYSCTL_PRADC_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 662,
          "context": "SYSCTL_RCGCWD_R |= SYSCTL_RCGCWD_R0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 665,
          "context": "while(!(SYSCTL_PRWD_R & SYSCTL_PRWD_R0)) {}"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 780,
          "context": "NVIC_EN0_R |= (1 << INT_WTIMER0A);    // WatchDog"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 226,
          "context": "float R0;             // Сопротивление при 0°C"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 309,
          "context": "#define SYSCTL_RCGCWD_R0     0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 310,
          "context": "#define SYSCTL_PRWD_R0       0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 446,
          "context": "#define SYSCTL_RCGCADC_R0     0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 450,
          "context": "#define SYSCTL_PRADC_R0       0x00000001"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 476,
          "context": "#define INT_WTIMER0A          94"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_303",
      "name": "alpha",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 227,
          "context": "float alpha;          // Температурный коэффициент"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_304",
      "name": "ErrorCode",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 541,
          "context": "entry->code = (ErrorCode)event;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 295,
          "context": "typedef uint32_t ErrorCode;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_305",
      "name": "SystemCoreClock",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 14,
          "context": "extern uint32_t SystemCoreClock;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 359,
          "context": "NVIC_ST_RELOAD_R = SystemCoreClock / 1000 - 1;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2000,
          "context": "uint32_t testTimeout = SystemCoreClock / 10;  // 100мс при текущей частоте"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 337,
          "context": "extern uint32_t SystemCoreClock;  // Глобальная переменная тактовой частоты микроконтроллера"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_306",
      "name": "type",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 232,
          "context": "if (rxPacket.type == PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 238,
          "context": "switch (cmdData.type) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 204,
          "context": "bool Communication_Send(PacketType type, const void* data, uint8_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 211,
          "context": "packet.type = type;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 261,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_COMMAND) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 302,
          "context": "if (packet == NULL || packet->type != PACKET_TYPE_CONFIG) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 422,
          "context": "switch (packet->type) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 441,
          "context": "Communication_SendError(0x02, \"Unknown packet type\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1151,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1507,
          "context": "\"Unknown temperature sensor type\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1846,
          "context": "\"Unknown temperature sensor type\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1863,
          "context": "float ConvertThermocoupleVoltageToTemp(float thermocoupleVoltage, ThermocoupleType type, float coldJunctionTemp) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1865,
          "context": "if (type < 0 || type >= THERMOCOUPLE_TYPE_COUNT) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1867,
          "context": "\"Invalid thermocouple type\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1868,
          "context": "(uint32_t)type);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1875,
          "context": "} *coeffs = &ThermocoupleCoefficients[type];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 22,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 30,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 22,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 33,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 45,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 46,
          "context": "uint8_t type;          // Тип пакета"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 53,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 88,
          "context": "bool Communication_Send(PacketType type, const void* data, uint8_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 10,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 20,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 41,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 49,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 58,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 67,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 74,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 82,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 116,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 123,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 136,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 145,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 154,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 165,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 174,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 197,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 202,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 207,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 212,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 217,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 295,
          "context": "typedef uint32_t ErrorCode;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 350,
          "context": "float ConvertThermocoupleVoltageToTemp(float thermocoupleVoltage, ThermocoupleType type, float coldJunctionTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 409,
          "context": "float ConvertThermocoupleVoltageToTemp(float thermocoupleVoltage, ThermocoupleType type, float coldJunctionTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 500,
          "context": "float ConvertThermocoupleVoltageToTemp(float thermocoupleVoltage, ThermocoupleType type, float coldJunctionTemp);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 19,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 43,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 51,
          "context": "typedef enum {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 58,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 59,
          "context": "DroneCommandType type;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 75,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 8,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 16,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 24,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 35,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 10,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 26,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 33,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 40,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 9,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 20,
          "context": "typedef struct {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 28,
          "context": "typedef struct {"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "DroneCommandType",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_307",
      "name": "param",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 272,
          "context": "UpdatePIDParameters(cmdData.data.config.param, cmdData.data.config.value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 281,
          "context": "void UpdatePIDParameters(SystemParameter param, float value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 289,
          "context": "switch (param) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 243,
          "context": "* @param state Указатель на структуру PowerState, которая будет заполнена текущим состоянием"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 68,
          "context": "SystemParameter param;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 89,
          "context": "void UpdatePIDParameters(SystemParameter param, float value);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "SystemParameter",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_308",
      "name": "value",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 272,
          "context": "UpdatePIDParameters(cmdData.data.config.param, cmdData.data.config.value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 281,
          "context": "void UpdatePIDParameters(SystemParameter param, float value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 291,
          "context": "roll_kp = value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 294,
          "context": "pitch_kp = value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 297,
          "context": "yaw_kp = value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 300,
          "context": "alt_kp = value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 12,
          "context": "static void ClampPWMValue(uint16_t* pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 31,
          "context": "void Actuators_SetMotorPWM(uint8_t motor_index, uint16_t pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 36,
          "context": "ClampPWMValue(&pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 37,
          "context": "actuators_state.motors[motor_index].pwm_value = pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 38,
          "context": "actuators_state.motors[motor_index].is_running = (pwm_value > (uint16_t)PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 41,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 43,
          "context": "Actuators_SetMotorPWM(i, pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 51,
          "context": "return actuators_state.motors[motor_index].pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 66,
          "context": "actuators_state.motors[motor_index].pwm_value = PWM_MIN_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 97,
          "context": "uint16_t pwm_value = (uint16_t)((throttle * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100U + PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 98,
          "context": "Actuators_SetAllMotorsPWM(pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 99,
          "context": "actuators_state.global_throttle = pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 230,
          "context": "float pwm_factor = (float)actuators_state.motors[i].pwm_value / PWM_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 249,
          "context": "static void ClampPWMValue(uint16_t* pwm_value) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 250,
          "context": "if (*pwm_value > PWM_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 251,
          "context": "*pwm_value = PWM_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 675,
          "context": "uint32_t reload_value = timeout_ms * 1000; // преобразуем мс в тики"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 678,
          "context": "WATCHDOG0_LOAD_R = reload_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1061,
          "context": "status.message = \"IMU values out of range\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1465,
          "context": "result.value = ADC0_SSFIFO3_R;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1485,
          "context": "if (adcResult.value == 0 || adcResult.value >= ADC_MAX_VALUE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1487,
          "context": "\"ADC value out of range\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1488,
          "context": "adcResult.value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1493,
          "context": "float voltage = (adcResult.value * 3.3f) / 4096.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1579,
          "context": "\"Invalid system tick value\", result.ticks);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1832,
          "context": "float voltage = (adcResult.value * 3.3f) / 4096.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 9,
          "context": "static float ClampValue(float value, float min, float max);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 212,
          "context": "static float ClampValue(float value, float min, float max) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 213,
          "context": "if (value < min) return min;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 214,
          "context": "if (value > max) return max;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 215,
          "context": "return value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 23,
          "context": "uint16_t pwm_value;     // Текущее значение PWM (0-1000)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 41,
          "context": "void Actuators_SetMotorPWM(uint8_t motor_index, uint16_t pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 42,
          "context": "void Actuators_SetAllMotorsPWM(uint16_t pwm_value);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 198,
          "context": "uint32_t value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 69,
          "context": "float value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 89,
          "context": "void UpdatePIDParameters(SystemParameter param, float value);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_309",
      "name": "sensorData",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 76,
          "context": "static SensorData sensorData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 113,
          "context": "Sensors_GetAllData(&sensorData);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 318,
          "context": "Sensors_GetAllData(&sensorData);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 346,
          "context": "telemetry.gpsStatus = (sensorData.isCalibrated ? 1 : 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 357,
          "context": "if (sensorData.imu.temperature < MIN_BATTERY_VOLTAGE) { // Временно используем temperature как voltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 363,
          "context": "if (sensorData.baro.altitude > MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 369,
          "context": "if (fabsf(sensorData.imu.accel_x) > MAX_ANGLE ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 370,
          "context": "fabsf(sensorData.imu.accel_y) > MAX_ANGLE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 76,
          "context": "SensorData sensorData;         // Данные с датчиков"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "SensorData",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_310",
      "name": "navData",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 77,
          "context": "NavigationData navData;        // Навигационные данные"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "NavigationData",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_311",
      "name": "stabData",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 78,
          "context": "StabilizationData stabData;    // Данные стабилизации"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "StabilizationData",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_312",
      "name": "state",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 5,
          "context": "static ActuatorsState actuators_state = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 16,
          "context": "memset(&actuators_state, 0, sizeof(ActuatorsState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 20,
          "context": "actuators_state.motors[i].temperature = 25.0f; // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 37,
          "context": "actuators_state.motors[motor_index].pwm_value = pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 38,
          "context": "actuators_state.motors[motor_index].is_running = (pwm_value > (uint16_t)PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 51,
          "context": "return actuators_state.motors[motor_index].pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 58,
          "context": "actuators_state.motors[motor_index].is_running = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 65,
          "context": "actuators_state.motors[motor_index].is_running = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 66,
          "context": "actuators_state.motors[motor_index].pwm_value = PWM_MIN_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 76,
          "context": "actuators_state.all_motors_enabled = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 83,
          "context": "actuators_state.all_motors_enabled = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 90,
          "context": "return actuators_state.motors[motor_index].is_running;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 99,
          "context": "actuators_state.global_throttle = pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 107,
          "context": "uint16_t base_pwm = actuators_state.global_throttle;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 121,
          "context": "uint16_t base_pwm = actuators_state.global_throttle;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 135,
          "context": "uint16_t base_pwm = actuators_state.global_throttle;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 145,
          "context": "void Actuators_GetState(ActuatorsState* state) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 146,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 147,
          "context": "*state = actuators_state;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 155,
          "context": "return actuators_state.motors[motor_index].temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 162,
          "context": "return actuators_state.motors[motor_index].runtime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 172,
          "context": "actuators_state.global_throttle = hover_pwm;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 181,
          "context": "actuators_state.global_throttle = ascent_pwm;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 190,
          "context": "actuators_state.global_throttle = descent_pwm;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 228,
          "context": "if (actuators_state.motors[i].is_running) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 230,
          "context": "float pwm_factor = (float)actuators_state.motors[i].pwm_value / PWM_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 231,
          "context": "actuators_state.motors[i].temperature += pwm_factor * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 234,
          "context": "if (actuators_state.motors[i].temperature > 25.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 235,
          "context": "actuators_state.motors[i].temperature -= 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 243,
          "context": "if (actuators_state.motors[i].is_running) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 244,
          "context": "actuators_state.motors[i].runtime += 10; // Предполагаем вызов каждые 10 мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 243,
          "context": "* @param state Указатель на структуру PowerState, которая будет заполнена текущим состоянием"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 251,
          "context": "void Diagnostics_GetPowerState(PowerState* state) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 253,
          "context": "if (state == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 256,
          "context": "\"Attempt to get power state with NULL pointer\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 262,
          "context": "state->batteryVoltage = diagState.powerState.batteryVoltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 263,
          "context": "state->batteryLevel = diagState.powerState.batteryLevel;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 264,
          "context": "state->batteryTemp = diagState.powerState.batteryTemp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 265,
          "context": "state->batteryCurrent = diagState.powerState.batteryCurrent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 266,
          "context": "state->isCharging = diagState.powerState.isCharging;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 267,
          "context": "state->isLowBattery = diagState.powerState.isLowBattery;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 268,
          "context": "state->isCriticalBattery = diagState.powerState.isCriticalBattery;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 269,
          "context": "state->uptime = diagState.powerState.uptime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 272,
          "context": "if (state->batteryLevel < 20.0f) {  // Порог низкого заряда 20%"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 274,
          "context": "\"Battery level is critically low\", (uint32_t)state->batteryLevel);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 527,
          "context": "void Diagnostics_GetThermalState(ThermalState* state) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 528,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 529,
          "context": "*state = diagState.thermalState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 13,
          "context": "static NavigationState nav_state = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 25,
          "context": "memset(&nav_state, 0, sizeof(NavigationState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 29,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 32,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 33,
          "context": "nav_state.heading = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 34,
          "context": "nav_state.ground_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 35,
          "context": "nav_state.vertical_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 101,
          "context": "nav_state.navigation_active = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 107,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 112,
          "context": "nav_state.navigation_active = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 117,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 122,
          "context": "return nav_state.navigation_active;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 125,
          "context": "void Navigation_GetCurrentState(NavigationState* state) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 126,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 127,
          "context": "*state = nav_state;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 133,
          "context": "*position = nav_state.current_position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 138,
          "context": "return nav_state.current_position.altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 142,
          "context": "return nav_state.heading;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 146,
          "context": "return nav_state.distance_to_target;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 150,
          "context": "return nav_state.bearing_to_target;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 155,
          "context": "nav_state.current_position.latitude = latitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 156,
          "context": "nav_state.current_position.longitude = longitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 157,
          "context": "nav_state.current_position.altitude = altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 158,
          "context": "nav_state.current_position.valid = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 169,
          "context": "nav_state.current_position.latitude += speed_deg * cosf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 170,
          "context": "nav_state.current_position.longitude += speed_deg * sinf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 172,
          "context": "nav_state.ground_speed = speed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 173,
          "context": "nav_state.heading = heading;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 179,
          "context": "nav_state.current_position.altitude += vertical_speed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 182,
          "context": "if (nav_state.current_position.altitude < NAV_MIN_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 183,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 185,
          "context": "} else if (nav_state.current_position.altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 186,
          "context": "nav_state.current_position.altitude = NAV_MAX_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 190,
          "context": "nav_state.vertical_speed = vertical_speed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 263,
          "context": "return Navigation_CalculateDistance(&nav_state.current_position, &home_position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 271,
          "context": "if (!nav_state.navigation_active || waypoint_count == 0 ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 278,
          "context": "nav_state.distance_to_target = Navigation_CalculateDistance("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 279,
          "context": "&nav_state.current_position, &target->position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 280,
          "context": "nav_state.bearing_to_target = Navigation_CalculateBearing("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 281,
          "context": "&nav_state.current_position, &target->position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 284,
          "context": "if (nav_state.distance_to_target <= NAV_WAYPOINT_RADIUS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 289,
          "context": "nav_state.navigation_active = false; // Достигли последней точки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 15,
          "context": "} sensor_state = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 39,
          "context": "sensor_state.mpu6050_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 48,
          "context": "sensor_state.bmp280_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 52,
          "context": "if (!sensor_state.mpu6050_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 61,
          "context": "if (!sensor_state.bmp280_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 96,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 97,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 98,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f); // Примерное изменение давления с высотой"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 104,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f; // Предполагаем вызов каждые 100мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 107,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 108,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 114,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 115,
          "context": "if (sensor_state.current_altitude < 0.0f) sensor_state.current_altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 118,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 119,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 124,
          "context": "sensor_state.rotation_angle += 45.0f * 0.1f; // 45 градусов в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 125,
          "context": "if (sensor_state.rotation_angle >= 360.0f) sensor_state.rotation_angle -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 128,
          "context": "mpu6050_data.accel_x = (float)sin(sensor_state.rotation_angle * 3.14159f / 180.0f) * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 129,
          "context": "mpu6050_data.accel_y = (float)cos(sensor_state.rotation_angle * 3.14159f / 180.0f) * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 138,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 139,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 140,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 60,
          "context": "void Actuators_GetState(ActuatorsState* state);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 365,
          "context": "void Diagnostics_GetPowerState(PowerState* state); // Обновленный прототип функции"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 371,
          "context": "void Diagnostics_GetThermalState(ThermalState* state);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 519,
          "context": "void Diagnostics_GetPowerState(PowerState* state);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 79,
          "context": "DroneState state;              // Текущее состояние"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 36,
          "context": "NavigationState state;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "DroneState",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_313",
      "name": "errors",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 80,
          "context": "uint32_t errors;              // Флаги ошибок"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint32_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_314",
      "name": "latitude",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 244,
          "context": ".latitude = cmdData.data.position.x,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 154,
          "context": "void Navigation_EmulateGPSPosition(float latitude, float longitude, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 155,
          "context": "nav_state.current_position.latitude = latitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 169,
          "context": "nav_state.current_position.latitude += speed_deg * cosf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 199,
          "context": "float lat1 = DEG_TO_RAD(pos1->latitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 200,
          "context": "float lat2 = DEG_TO_RAD(pos2->latitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 216,
          "context": "float lat1 = DEG_TO_RAD(pos1->latitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 217,
          "context": "float lat2 = DEG_TO_RAD(pos2->latitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 233,
          "context": "if (position->latitude < -90.0f || position->latitude > 90.0f ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 9,
          "context": "float latitude;   // Широта в градусах"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 79,
          "context": "void Navigation_EmulateGPSPosition(float latitude, float longitude, float altitude);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_315",
      "name": "longitude",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 245,
          "context": ".longitude = cmdData.data.position.y,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 154,
          "context": "void Navigation_EmulateGPSPosition(float latitude, float longitude, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 156,
          "context": "nav_state.current_position.longitude = longitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 170,
          "context": "nav_state.current_position.longitude += speed_deg * sinf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 201,
          "context": "float dlon = DEG_TO_RAD(pos2->longitude - pos1->longitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 218,
          "context": "float dlon = DEG_TO_RAD(pos2->longitude - pos1->longitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 234,
          "context": "position->longitude < -180.0f || position->longitude > 180.0f ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 10,
          "context": "float longitude;  // Долгота в градусах"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 79,
          "context": "void Navigation_EmulateGPSPosition(float latitude, float longitude, float altitude);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_316",
      "name": "altitude",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 246,
          "context": ".altitude = cmdData.data.position.z,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 323,
          "context": "float altitude = Navigation_GetCurrentAltitude();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 342,
          "context": "telemetry.altitude = altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 363,
          "context": "if (sensorData.baro.altitude > MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 364,
          "context": "EnterEmergencyMode(\"Maximum altitude exceeded\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1079,
          "context": "float altitude = GetBaroAltitude();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1080,
          "context": "if (altitude < BARO_TEST_ALT_MIN || altitude > BARO_TEST_ALT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1084,
          "context": "status.data = (uint32_t)(altitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 32,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 138,
          "context": "return nav_state.current_position.altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 154,
          "context": "void Navigation_EmulateGPSPosition(float latitude, float longitude, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 157,
          "context": "nav_state.current_position.altitude = altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 179,
          "context": "nav_state.current_position.altitude += vertical_speed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 182,
          "context": "if (nav_state.current_position.altitude < NAV_MIN_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 183,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 185,
          "context": "} else if (nav_state.current_position.altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 186,
          "context": "nav_state.current_position.altitude = NAV_MAX_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 235,
          "context": "position->altitude < NAV_MIN_ALTITUDE || position->altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 13,
          "context": "float current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 18,
          "context": ".current_altitude = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 45,
          "context": "bmp280_data.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 82,
          "context": "bmp280_data.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 96,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 97,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 98,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f); // Примерное изменение давления с высотой"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 104,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f; // Предполагаем вызов каждые 100мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 107,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 108,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 114,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 115,
          "context": "if (sensor_state.current_altitude < 0.0f) sensor_state.current_altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 118,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 119,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 138,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 139,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 140,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 190,
          "context": "data->baro.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 198,
          "context": "data->altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 10,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 33,
          "context": "PIDController altitudePID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 45,
          "context": "stabState.targetSetPoint.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 87,
          "context": "stabState.altitudePID.kP = altKp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 88,
          "context": "stabState.altitudePID.kI = altKi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 89,
          "context": "stabState.altitudePID.kD = altKd;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 90,
          "context": "stabState.altitudePID.outputMin = 0.0f;  // Минимальная тяга"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 91,
          "context": "stabState.altitudePID.outputMax = 1.0f;  // Максимальная тяга"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 97,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 102,
          "context": "stabState.targetSetPoint.altitude = fmaxf(altitude, 0.0f);  // Высота не может быть отрицательной"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 128,
          "context": "float altitudeError = stabState.targetSetPoint.altitude - altData.altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 138,
          "context": "float altitudeOutput = UpdatePID(&stabState.altitudePID, altitudeError);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 141,
          "context": "UpdateMotorOutputs(rollOutput, pitchOutput, yawOutput, altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 184,
          "context": "stabState.altitudePID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 185,
          "context": "stabState.altitudePID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 218,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 220,
          "context": "float baseThrust = altitudeOutput;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 63,
          "context": "float altitude;           // Текущая высота (м)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 11,
          "context": "float altitude;   // Высота в метрах"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 79,
          "context": "void Navigation_EmulateGPSPosition(float latitude, float longitude, float altitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 28,
          "context": "float altitude;    // Высота в метрах"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 24,
          "context": "float altitude; // Желаемая высота"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 47,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_317",
      "name": "valid",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 247,
          "context": ".valid = true"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1515,
          "context": "\"Invalid cold junction temperature\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1579,
          "context": "\"Invalid system tick value\", result.ticks);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1854,
          "context": "\"Invalid cold junction temperature\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1867,
          "context": "\"Invalid thermocouple type\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 158,
          "context": "nav_state.current_position.valid = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 194,
          "context": "if (!pos1->valid || !pos2->valid) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 212,
          "context": "if (!pos1->valid || !pos2->valid) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 243,
          "context": "if (!position->valid || !home_position_set) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 12,
          "context": "bool valid;       // Флаг валидности данных GPS"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_318",
      "name": "position",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 243,
          "context": ".position = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 244,
          "context": ".latitude = cmdData.data.position.x,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 245,
          "context": ".longitude = cmdData.data.position.y,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 246,
          "context": ".altitude = cmdData.data.position.z,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 335,
          "context": "telemetry.position = currentPos;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 17,
          "context": "static GPSPosition home_position = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 18,
          "context": "static bool home_position_set = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 32,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 49,
          "context": "if (!Navigation_IsValidPosition(&waypoint->position)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 131,
          "context": "void Navigation_GetCurrentPosition(GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 132,
          "context": "if (position != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 133,
          "context": "*position = nav_state.current_position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 138,
          "context": "return nav_state.current_position.altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 155,
          "context": "nav_state.current_position.latitude = latitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 156,
          "context": "nav_state.current_position.longitude = longitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 157,
          "context": "nav_state.current_position.altitude = altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 158,
          "context": "nav_state.current_position.valid = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 169,
          "context": "nav_state.current_position.latitude += speed_deg * cosf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 170,
          "context": "nav_state.current_position.longitude += speed_deg * sinf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 179,
          "context": "nav_state.current_position.altitude += vertical_speed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 182,
          "context": "if (nav_state.current_position.altitude < NAV_MIN_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 183,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 185,
          "context": "} else if (nav_state.current_position.altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 186,
          "context": "nav_state.current_position.altitude = NAV_MAX_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 227,
          "context": "bool Navigation_IsValidPosition(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 228,
          "context": "if (position == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 233,
          "context": "if (position->latitude < -90.0f || position->latitude > 90.0f ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 234,
          "context": "position->longitude < -180.0f || position->longitude > 180.0f ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 235,
          "context": "position->altitude < NAV_MIN_ALTITUDE || position->altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 242,
          "context": "bool Navigation_IsInSafeZone(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 243,
          "context": "if (!position->valid || !home_position_set) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 248,
          "context": "float distance = Navigation_CalculateDistance(&home_position, position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 252,
          "context": "void Navigation_UpdateHomePosition(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 253,
          "context": "if (position != NULL && Navigation_IsValidPosition(position)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 254,
          "context": "home_position = *position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 255,
          "context": "home_position_set = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 260,
          "context": "if (!home_position_set) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 263,
          "context": "return Navigation_CalculateDistance(&nav_state.current_position, &home_position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 279,
          "context": "&nav_state.current_position, &target->position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 281,
          "context": "&nav_state.current_position, &target->position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 59,
          "context": "GPSPosition position;      // Текущая GPS позиция"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 63,
          "context": "} position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 17,
          "context": "GPSPosition position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 25,
          "context": "GPSPosition current_position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 53,
          "context": "void Navigation_SetHomePosition(GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 67,
          "context": "void Navigation_GetCurrentPosition(GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 72,
          "context": "bool Navigation_IsValidPosition(const GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 73,
          "context": "bool Navigation_IsInSafeZone(const GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 76,
          "context": "void Navigation_UpdateHomePosition(const GPSPosition* position);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "GPSPosition",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_319",
      "name": "speed",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 249,
          "context": ".speed = NAV_DEFAULT_SPEED,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 200,
          "context": "void Actuators_EmulateForwardFlight(uint16_t speed) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 204,
          "context": "Actuators_SetPitch(-speed); // Отрицательный питч для движения вперед"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2064,
          "context": "void SetMotorSpeed(uint8_t motor, uint16_t speed) { }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 34,
          "context": "nav_state.ground_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 35,
          "context": "nav_state.vertical_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 163,
          "context": "void Navigation_EmulateMovement(float speed, float heading) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 165,
          "context": "float speed_deg = speed / (EARTH_RADIUS * DEG_TO_RAD(1.0f));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 169,
          "context": "nav_state.current_position.latitude += speed_deg * cosf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 170,
          "context": "nav_state.current_position.longitude += speed_deg * sinf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 172,
          "context": "nav_state.ground_speed = speed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 178,
          "context": "void Navigation_EmulateAltitudeChange(float vertical_speed) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 179,
          "context": "nav_state.current_position.altitude += vertical_speed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 184,
          "context": "vertical_speed = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 187,
          "context": "vertical_speed = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 190,
          "context": "nav_state.vertical_speed = vertical_speed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 27,
          "context": "static float vertical_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 103,
          "context": "vertical_speed = 2.0f; // м/с"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 104,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f; // Предполагаем вызов каждые 100мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 113,
          "context": "vertical_speed = -1.5f; // м/с"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 114,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 69,
          "context": "void Actuators_EmulateForwardFlight(uint16_t speed);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 564,
          "context": "void SetMotorSpeed(uint8_t motor, uint16_t speed);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 18,
          "context": "float speed;           // Желаемая скорость в м/с"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 27,
          "context": "float ground_speed;         // Скорость относительно земли в м/с"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 28,
          "context": "float vertical_speed;       // Вертикальная скорость в м/с"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 80,
          "context": "void Navigation_EmulateMovement(float speed, float heading);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 81,
          "context": "void Navigation_EmulateAltitudeChange(float vertical_speed);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_320",
      "name": "hover_time",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 250,
          "context": ".hover_time = 0,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 19,
          "context": "float hover_time;      // Время зависания в секундах"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_321",
      "name": "reached",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 251,
          "context": ".reached = false"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 54,
          "context": "waypoints[waypoint_count].reached = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 285,
          "context": "waypoints[current_waypoint_index].reached = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 20,
          "context": "bool reached;          // Флаг достижения точки"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_322",
      "name": "current_position",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 32,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 133,
          "context": "*position = nav_state.current_position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 138,
          "context": "return nav_state.current_position.altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 155,
          "context": "nav_state.current_position.latitude = latitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 156,
          "context": "nav_state.current_position.longitude = longitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 157,
          "context": "nav_state.current_position.altitude = altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 158,
          "context": "nav_state.current_position.valid = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 169,
          "context": "nav_state.current_position.latitude += speed_deg * cosf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 170,
          "context": "nav_state.current_position.longitude += speed_deg * sinf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 179,
          "context": "nav_state.current_position.altitude += vertical_speed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 182,
          "context": "if (nav_state.current_position.altitude < NAV_MIN_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 183,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 185,
          "context": "} else if (nav_state.current_position.altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 186,
          "context": "nav_state.current_position.altitude = NAV_MAX_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 263,
          "context": "return Navigation_CalculateDistance(&nav_state.current_position, &home_position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 279,
          "context": "&nav_state.current_position, &target->position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 281,
          "context": "&nav_state.current_position, &target->position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 25,
          "context": "GPSPosition current_position;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "GPSPosition",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_323",
      "name": "heading",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 22,
          "context": "static float ClampHeading(float heading);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 33,
          "context": "nav_state.heading = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 142,
          "context": "return nav_state.heading;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 163,
          "context": "void Navigation_EmulateMovement(float speed, float heading) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 168,
          "context": "float heading_rad = DEG_TO_RAD(heading);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 169,
          "context": "nav_state.current_position.latitude += speed_deg * cosf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 170,
          "context": "nav_state.current_position.longitude += speed_deg * sinf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 173,
          "context": "nav_state.heading = heading;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 294,
          "context": "static float ClampHeading(float heading) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 295,
          "context": "while (heading < 0.0f) heading += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 296,
          "context": "while (heading >= 360.0f) heading -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 297,
          "context": "return heading;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 26,
          "context": "float heading;              // Текущий курс в градусах (0-360)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 80,
          "context": "void Navigation_EmulateMovement(float speed, float heading);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_324",
      "name": "ground_speed",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 34,
          "context": "nav_state.ground_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 172,
          "context": "nav_state.ground_speed = speed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 27,
          "context": "float ground_speed;         // Скорость относительно земли в м/с"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_325",
      "name": "vertical_speed",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 35,
          "context": "nav_state.vertical_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 178,
          "context": "void Navigation_EmulateAltitudeChange(float vertical_speed) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 179,
          "context": "nav_state.current_position.altitude += vertical_speed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 184,
          "context": "vertical_speed = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 187,
          "context": "vertical_speed = 0;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 190,
          "context": "nav_state.vertical_speed = vertical_speed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 27,
          "context": "static float vertical_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 103,
          "context": "vertical_speed = 2.0f; // м/с"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 104,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f; // Предполагаем вызов каждые 100мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 113,
          "context": "vertical_speed = -1.5f; // м/с"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 114,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 28,
          "context": "float vertical_speed;       // Вертикальная скорость в м/с"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 81,
          "context": "void Navigation_EmulateAltitudeChange(float vertical_speed);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_326",
      "name": "distance_to_target",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 146,
          "context": "return nav_state.distance_to_target;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 278,
          "context": "nav_state.distance_to_target = Navigation_CalculateDistance("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 284,
          "context": "if (nav_state.distance_to_target <= NAV_WAYPOINT_RADIUS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 29,
          "context": "float distance_to_target;   // Расстояние до целевой точки в метрах"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_327",
      "name": "bearing_to_target",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 150,
          "context": "return nav_state.bearing_to_target;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 280,
          "context": "nav_state.bearing_to_target = Navigation_CalculateBearing("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 30,
          "context": "float bearing_to_target;    // Направление на целевую точку в градусах"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_328",
      "name": "navigation_active",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 29,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 101,
          "context": "nav_state.navigation_active = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 107,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 112,
          "context": "nav_state.navigation_active = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 117,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 122,
          "context": "return nav_state.navigation_active;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 271,
          "context": "if (!nav_state.navigation_active || waypoint_count == 0 ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 289,
          "context": "nav_state.navigation_active = false; // Достигли последней точки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 31,
          "context": "bool navigation_active;     // Флаг активности навигации"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_329",
      "name": "state",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 5,
          "context": "static ActuatorsState actuators_state = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 16,
          "context": "memset(&actuators_state, 0, sizeof(ActuatorsState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 20,
          "context": "actuators_state.motors[i].temperature = 25.0f; // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 37,
          "context": "actuators_state.motors[motor_index].pwm_value = pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 38,
          "context": "actuators_state.motors[motor_index].is_running = (pwm_value > (uint16_t)PWM_MIN_VALUE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 51,
          "context": "return actuators_state.motors[motor_index].pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 58,
          "context": "actuators_state.motors[motor_index].is_running = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 65,
          "context": "actuators_state.motors[motor_index].is_running = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 66,
          "context": "actuators_state.motors[motor_index].pwm_value = PWM_MIN_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 76,
          "context": "actuators_state.all_motors_enabled = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 83,
          "context": "actuators_state.all_motors_enabled = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 90,
          "context": "return actuators_state.motors[motor_index].is_running;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 99,
          "context": "actuators_state.global_throttle = pwm_value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 107,
          "context": "uint16_t base_pwm = actuators_state.global_throttle;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 121,
          "context": "uint16_t base_pwm = actuators_state.global_throttle;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 135,
          "context": "uint16_t base_pwm = actuators_state.global_throttle;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 145,
          "context": "void Actuators_GetState(ActuatorsState* state) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 146,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 147,
          "context": "*state = actuators_state;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 155,
          "context": "return actuators_state.motors[motor_index].temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 162,
          "context": "return actuators_state.motors[motor_index].runtime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 172,
          "context": "actuators_state.global_throttle = hover_pwm;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 181,
          "context": "actuators_state.global_throttle = ascent_pwm;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 190,
          "context": "actuators_state.global_throttle = descent_pwm;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 228,
          "context": "if (actuators_state.motors[i].is_running) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 230,
          "context": "float pwm_factor = (float)actuators_state.motors[i].pwm_value / PWM_MAX_VALUE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 231,
          "context": "actuators_state.motors[i].temperature += pwm_factor * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 234,
          "context": "if (actuators_state.motors[i].temperature > 25.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 235,
          "context": "actuators_state.motors[i].temperature -= 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 243,
          "context": "if (actuators_state.motors[i].is_running) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 244,
          "context": "actuators_state.motors[i].runtime += 10; // Предполагаем вызов каждые 10 мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 243,
          "context": "* @param state Указатель на структуру PowerState, которая будет заполнена текущим состоянием"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 251,
          "context": "void Diagnostics_GetPowerState(PowerState* state) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 253,
          "context": "if (state == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 256,
          "context": "\"Attempt to get power state with NULL pointer\", 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 262,
          "context": "state->batteryVoltage = diagState.powerState.batteryVoltage;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 263,
          "context": "state->batteryLevel = diagState.powerState.batteryLevel;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 264,
          "context": "state->batteryTemp = diagState.powerState.batteryTemp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 265,
          "context": "state->batteryCurrent = diagState.powerState.batteryCurrent;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 266,
          "context": "state->isCharging = diagState.powerState.isCharging;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 267,
          "context": "state->isLowBattery = diagState.powerState.isLowBattery;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 268,
          "context": "state->isCriticalBattery = diagState.powerState.isCriticalBattery;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 269,
          "context": "state->uptime = diagState.powerState.uptime;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 272,
          "context": "if (state->batteryLevel < 20.0f) {  // Порог низкого заряда 20%"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 274,
          "context": "\"Battery level is critically low\", (uint32_t)state->batteryLevel);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 527,
          "context": "void Diagnostics_GetThermalState(ThermalState* state) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 528,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 529,
          "context": "*state = diagState.thermalState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 13,
          "context": "static NavigationState nav_state = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 25,
          "context": "memset(&nav_state, 0, sizeof(NavigationState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 29,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 32,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 33,
          "context": "nav_state.heading = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 34,
          "context": "nav_state.ground_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 35,
          "context": "nav_state.vertical_speed = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 101,
          "context": "nav_state.navigation_active = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 107,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 112,
          "context": "nav_state.navigation_active = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 117,
          "context": "nav_state.navigation_active = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 122,
          "context": "return nav_state.navigation_active;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 125,
          "context": "void Navigation_GetCurrentState(NavigationState* state) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 126,
          "context": "if (state != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 127,
          "context": "*state = nav_state;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 133,
          "context": "*position = nav_state.current_position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 138,
          "context": "return nav_state.current_position.altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 142,
          "context": "return nav_state.heading;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 146,
          "context": "return nav_state.distance_to_target;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 150,
          "context": "return nav_state.bearing_to_target;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 155,
          "context": "nav_state.current_position.latitude = latitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 156,
          "context": "nav_state.current_position.longitude = longitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 157,
          "context": "nav_state.current_position.altitude = altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 158,
          "context": "nav_state.current_position.valid = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 169,
          "context": "nav_state.current_position.latitude += speed_deg * cosf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 170,
          "context": "nav_state.current_position.longitude += speed_deg * sinf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 172,
          "context": "nav_state.ground_speed = speed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 173,
          "context": "nav_state.heading = heading;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 179,
          "context": "nav_state.current_position.altitude += vertical_speed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 182,
          "context": "if (nav_state.current_position.altitude < NAV_MIN_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 183,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 185,
          "context": "} else if (nav_state.current_position.altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 186,
          "context": "nav_state.current_position.altitude = NAV_MAX_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 190,
          "context": "nav_state.vertical_speed = vertical_speed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 263,
          "context": "return Navigation_CalculateDistance(&nav_state.current_position, &home_position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 271,
          "context": "if (!nav_state.navigation_active || waypoint_count == 0 ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 278,
          "context": "nav_state.distance_to_target = Navigation_CalculateDistance("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 279,
          "context": "&nav_state.current_position, &target->position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 280,
          "context": "nav_state.bearing_to_target = Navigation_CalculateBearing("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 281,
          "context": "&nav_state.current_position, &target->position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 284,
          "context": "if (nav_state.distance_to_target <= NAV_WAYPOINT_RADIUS) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 289,
          "context": "nav_state.navigation_active = false; // Достигли последней точки"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 15,
          "context": "} sensor_state = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 39,
          "context": "sensor_state.mpu6050_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 48,
          "context": "sensor_state.bmp280_initialized = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 52,
          "context": "if (!sensor_state.mpu6050_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 61,
          "context": "if (!sensor_state.bmp280_initialized || data == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 96,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 97,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 98,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f); // Примерное изменение давления с высотой"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 104,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f; // Предполагаем вызов каждые 100мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 107,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 108,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 114,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 115,
          "context": "if (sensor_state.current_altitude < 0.0f) sensor_state.current_altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 118,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 119,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 124,
          "context": "sensor_state.rotation_angle += 45.0f * 0.1f; // 45 градусов в секунду"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 125,
          "context": "if (sensor_state.rotation_angle >= 360.0f) sensor_state.rotation_angle -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 128,
          "context": "mpu6050_data.accel_x = (float)sin(sensor_state.rotation_angle * 3.14159f / 180.0f) * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 129,
          "context": "mpu6050_data.accel_y = (float)cos(sensor_state.rotation_angle * 3.14159f / 180.0f) * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 138,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 139,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 140,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 60,
          "context": "void Actuators_GetState(ActuatorsState* state);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 365,
          "context": "void Diagnostics_GetPowerState(PowerState* state); // Обновленный прототип функции"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 371,
          "context": "void Diagnostics_GetThermalState(ThermalState* state);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 519,
          "context": "void Diagnostics_GetPowerState(PowerState* state);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 79,
          "context": "DroneState state;              // Текущее состояние"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 36,
          "context": "NavigationState state;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "NavigationState",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_330",
      "name": "homePosition",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 37,
          "context": "GPSPosition homePosition;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "GPSPosition",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_331",
      "name": "currentWaypoint",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 38,
          "context": "Waypoint currentWaypoint;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "Waypoint",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_332",
      "name": "waypointCount",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 39,
          "context": "uint8_t waypointCount;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "uint8_t",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_333",
      "name": "returnToHomeActive",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 40,
          "context": "bool returnToHomeActive;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_334",
      "name": "accel_x",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 369,
          "context": "if (fabsf(sensorData.imu.accel_x) > MAX_ANGLE ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 31,
          "context": "mpu6050_data.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 71,
          "context": "mpu6050_data.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 88,
          "context": "mpu6050_data.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 128,
          "context": "mpu6050_data.accel_x = (float)sin(sensor_state.rotation_angle * 3.14159f / 180.0f) * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 134,
          "context": "mpu6050_data.accel_x = 0.2f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 163,
          "context": "float accelPitch = atan2f(-imu.accel_x, sqrtf(imu.accel_y * imu.accel_y + imu.accel_z * imu.accel_z)) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 183,
          "context": "data->imu.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 12,
          "context": "float accel_x;    // Ускорение по оси X"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_335",
      "name": "accel_y",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 370,
          "context": "fabsf(sensorData.imu.accel_y) > MAX_ANGLE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 32,
          "context": "mpu6050_data.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 72,
          "context": "mpu6050_data.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 89,
          "context": "mpu6050_data.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 129,
          "context": "mpu6050_data.accel_y = (float)cos(sensor_state.rotation_angle * 3.14159f / 180.0f) * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 162,
          "context": "float accelRoll = atan2f(imu.accel_y, imu.accel_z) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 163,
          "context": "float accelPitch = atan2f(-imu.accel_x, sqrtf(imu.accel_y * imu.accel_y + imu.accel_z * imu.accel_z)) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 184,
          "context": "data->imu.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 13,
          "context": "float accel_y;    // Ускорение по оси Y"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_336",
      "name": "accel_z",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 33,
          "context": "mpu6050_data.accel_z = 1.0f;  // 1g в состоянии покоя"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 73,
          "context": "mpu6050_data.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 90,
          "context": "mpu6050_data.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 106,
          "context": "mpu6050_data.accel_z = 1.2f; // Повышенная нагрузка при наборе высоты"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 117,
          "context": "mpu6050_data.accel_z = 0.8f; // Пониженная нагрузка при снижении"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 162,
          "context": "float accelRoll = atan2f(imu.accel_y, imu.accel_z) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 163,
          "context": "float accelPitch = atan2f(-imu.accel_x, sqrtf(imu.accel_y * imu.accel_y + imu.accel_z * imu.accel_z)) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 185,
          "context": "data->imu.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 14,
          "context": "float accel_z;    // Ускорение по оси Z"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_337",
      "name": "gyro_x",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 34,
          "context": "mpu6050_data.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 74,
          "context": "mpu6050_data.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 91,
          "context": "mpu6050_data.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 167,
          "context": "filteredRoll = 0.96f * (filteredRoll + imu.gyro_x * dt) + 0.04f * accelRoll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 186,
          "context": "data->imu.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 17,
          "context": "float gyro_x;     // Угловая скорость вокруг оси X (крен)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_338",
      "name": "gyro_y",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 35,
          "context": "mpu6050_data.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 75,
          "context": "mpu6050_data.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 92,
          "context": "mpu6050_data.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 135,
          "context": "mpu6050_data.gyro_y = -5.0f; // Небольшой наклон вперед"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 168,
          "context": "filteredPitch = 0.96f * (filteredPitch + imu.gyro_y * dt) + 0.04f * accelPitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 187,
          "context": "data->imu.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 18,
          "context": "float gyro_y;     // Угловая скорость вокруг оси Y (тангаж)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_339",
      "name": "gyro_z",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 36,
          "context": "mpu6050_data.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 76,
          "context": "mpu6050_data.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 93,
          "context": "mpu6050_data.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 127,
          "context": "mpu6050_data.gyro_z = 45.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 169,
          "context": "filteredYaw += imu.gyro_z * dt;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 188,
          "context": "data->imu.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 19,
          "context": "float gyro_z;     // Угловая скорость вокруг оси Z (рыскание)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_340",
      "name": "temperature",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 334,
          "context": "telemetry.temperature = thermalState.mcuTemp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 357,
          "context": "if (sensorData.imu.temperature < MIN_BATTERY_VOLTAGE) { // Временно используем temperature как voltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 20,
          "context": "actuators_state.motors[i].temperature = 25.0f; // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 155,
          "context": "return actuators_state.motors[motor_index].temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 231,
          "context": "actuators_state.motors[i].temperature += pwm_factor * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 234,
          "context": "if (actuators_state.motors[i].temperature > 25.0f) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 235,
          "context": "actuators_state.motors[i].temperature -= 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 359,
          "context": "\"Critical battery temperature\", (uint32_t)(temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 441,
          "context": "\"Critical MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 445,
          "context": "\"High MCU temperature\", (uint32_t)(mcu_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 450,
          "context": "\"Critical motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 454,
          "context": "\"High motors temperature\", (uint32_t)(motors_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 459,
          "context": "\"Critical board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 463,
          "context": "\"High board temperature\", (uint32_t)(board_temp * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 479,
          "context": "\"MCU temperature critical\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 484,
          "context": "\"MCU temperature warning\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 493,
          "context": "\"Motor temperature critical\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 498,
          "context": "\"Motor temperature warning\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 507,
          "context": "\"Board temperature critical\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 512,
          "context": "\"Board temperature warning\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1155,
          "context": "float temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1204,
          "context": "motorData[i].temperature = GetMotorTemperature(i);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1232,
          "context": "if (motorData[i].temperature > MOTOR_TEST_TEMP_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1235,
          "context": "status.message = \"Motor temperature high\";"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1479,
          "context": "\"ADC conversion error before temperature conversion\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1495,
          "context": "float temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1501,
          "context": "temperature = (voltage * 100.0f);  // Пример преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1507,
          "context": "\"Unknown temperature sensor type\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1513,
          "context": "if (isnan(temperature)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1515,
          "context": "\"Invalid cold junction temperature\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1516,
          "context": "(uint32_t)temperature);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1520,
          "context": "return temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1826,
          "context": "\"ADC conversion error before cold junction temperature\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1834,
          "context": "float temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1840,
          "context": "temperature = (voltage * 100.0f);  // Пример преобразования"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1846,
          "context": "\"Unknown temperature sensor type\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1852,
          "context": "if (isnan(temperature)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1854,
          "context": "\"Invalid cold junction temperature\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1855,
          "context": "(uint32_t)temperature);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1859,
          "context": "return temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1879,
          "context": "float temperature = coeffs->a * thermocoupleVoltage * thermocoupleVoltage * thermocoupleVoltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1885,
          "context": "temperature += coldJunctionTemp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1891,
          "context": "if (temperature < MIN_TEMP || temperature > MAX_TEMP) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1893,
          "context": "\"Thermocouple temperature out of range\","
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1894,
          "context": "(uint32_t)(temperature * 100));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1898,
          "context": "return temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 37,
          "context": "mpu6050_data.temperature = 25.0f;  // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 46,
          "context": "bmp280_data.temperature = 25.0f;  // Комнатная температура"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 199,
          "context": "data->temperature = 25.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 25,
          "context": "float temperature;      // Эмуляция температуры мотора"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 56,
          "context": "float temperature;         // Температура MCU (°C)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 22,
          "context": "float temperature;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 29,
          "context": "float temperature; // Температура в градусах Цельсия"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_341",
      "name": "pressure",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 44,
          "context": "bmp280_data.pressure = 1013.25f;  // Стандартное атмосферное давление (гПа)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 81,
          "context": "bmp280_data.pressure = 1013.25f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 98,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f); // Примерное изменение давления с высотой"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 108,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 119,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 140,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 189,
          "context": "data->baro.pressure = 1013.25f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 197,
          "context": "data->pressure = 1013.25f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 27,
          "context": "float pressure;    // Давление в гПа (гектопаскалях)"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_342",
      "name": "altitude",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 246,
          "context": ".altitude = cmdData.data.position.z,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 323,
          "context": "float altitude = Navigation_GetCurrentAltitude();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 342,
          "context": "telemetry.altitude = altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 363,
          "context": "if (sensorData.baro.altitude > MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 364,
          "context": "EnterEmergencyMode(\"Maximum altitude exceeded\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1079,
          "context": "float altitude = GetBaroAltitude();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1080,
          "context": "if (altitude < BARO_TEST_ALT_MIN || altitude > BARO_TEST_ALT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1084,
          "context": "status.data = (uint32_t)(altitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 32,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 138,
          "context": "return nav_state.current_position.altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 154,
          "context": "void Navigation_EmulateGPSPosition(float latitude, float longitude, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 157,
          "context": "nav_state.current_position.altitude = altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 179,
          "context": "nav_state.current_position.altitude += vertical_speed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 182,
          "context": "if (nav_state.current_position.altitude < NAV_MIN_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 183,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 185,
          "context": "} else if (nav_state.current_position.altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 186,
          "context": "nav_state.current_position.altitude = NAV_MAX_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 235,
          "context": "position->altitude < NAV_MIN_ALTITUDE || position->altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 13,
          "context": "float current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 18,
          "context": ".current_altitude = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 45,
          "context": "bmp280_data.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 82,
          "context": "bmp280_data.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 96,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 97,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 98,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f); // Примерное изменение давления с высотой"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 104,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f; // Предполагаем вызов каждые 100мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 107,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 108,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 114,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 115,
          "context": "if (sensor_state.current_altitude < 0.0f) sensor_state.current_altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 118,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 119,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 138,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 139,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 140,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 190,
          "context": "data->baro.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 198,
          "context": "data->altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 10,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 33,
          "context": "PIDController altitudePID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 45,
          "context": "stabState.targetSetPoint.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 87,
          "context": "stabState.altitudePID.kP = altKp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 88,
          "context": "stabState.altitudePID.kI = altKi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 89,
          "context": "stabState.altitudePID.kD = altKd;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 90,
          "context": "stabState.altitudePID.outputMin = 0.0f;  // Минимальная тяга"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 91,
          "context": "stabState.altitudePID.outputMax = 1.0f;  // Максимальная тяга"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 97,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 102,
          "context": "stabState.targetSetPoint.altitude = fmaxf(altitude, 0.0f);  // Высота не может быть отрицательной"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 128,
          "context": "float altitudeError = stabState.targetSetPoint.altitude - altData.altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 138,
          "context": "float altitudeOutput = UpdatePID(&stabState.altitudePID, altitudeError);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 141,
          "context": "UpdateMotorOutputs(rollOutput, pitchOutput, yawOutput, altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 184,
          "context": "stabState.altitudePID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 185,
          "context": "stabState.altitudePID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 218,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 220,
          "context": "float baseThrust = altitudeOutput;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 63,
          "context": "float altitude;           // Текущая высота (м)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 11,
          "context": "float altitude;   // Высота в метрах"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 79,
          "context": "void Navigation_EmulateGPSPosition(float latitude, float longitude, float altitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 28,
          "context": "float altitude;    // Высота в метрах"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 24,
          "context": "float altitude; // Желаемая высота"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 47,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_344",
      "name": "roll",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 263,
          "context": "cmdData.data.attitude.roll,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 283,
          "context": "static float roll_kp = 1.0f, roll_ki = 0.1f, roll_kd = 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 291,
          "context": "roll_kp = value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 306,
          "context": "roll_kp, roll_ki, roll_kd,    // Roll PID"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 130,
          "context": "void Actuators_SetRoll(int16_t roll) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 136,
          "context": "int16_t roll_pwm = roll / 2;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 138,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm + roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 139,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm + roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 140,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 141,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm - roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 175,
          "context": "orientation->roll = filteredRoll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 8,
          "context": "static float UpdatePID(PIDController* pid, float error);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 10,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 30,
          "context": "PIDController rollPID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 31,
          "context": "PIDController pitchPID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 32,
          "context": "PIDController yawPID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 33,
          "context": "PIDController altitudePID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 42,
          "context": "stabState.targetSetPoint.roll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 48,
          "context": "stabState.currentOrientation.roll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 61,
          "context": "void Stabilization_ConfigurePID(float rollKp, float rollKi, float rollKd,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 66,
          "context": "stabState.rollPID.kP = rollKp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 67,
          "context": "stabState.rollPID.kI = rollKi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 68,
          "context": "stabState.rollPID.kD = rollKd;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 69,
          "context": "stabState.rollPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 70,
          "context": "stabState.rollPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 97,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 99,
          "context": "stabState.targetSetPoint.roll = ClampValue(roll, -MAX_ROLL_ANGLE, MAX_ROLL_ANGLE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 120,
          "context": "stabState.currentOrientation.roll = currentOrientation.roll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 125,
          "context": "float rollError = stabState.targetSetPoint.roll - stabState.currentOrientation.roll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 135,
          "context": "float rollOutput = UpdatePID(&stabState.rollPID, rollError);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 141,
          "context": "UpdateMotorOutputs(rollOutput, pitchOutput, yawOutput, altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 175,
          "context": "stabState.rollPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 176,
          "context": "stabState.rollPID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 189,
          "context": "static float UpdatePID(PIDController* pid, float error) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 218,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 229,
          "context": "float m1 = baseThrust - rollOutput - pitchOutput + yawOutput;  // Передний левый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 230,
          "context": "float m2 = baseThrust + rollOutput - pitchOutput - yawOutput;  // Передний правый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 231,
          "context": "float m3 = baseThrust + rollOutput + pitchOutput + yawOutput;  // Задний правый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 232,
          "context": "float m4 = baseThrust - rollOutput + pitchOutput - yawOutput;  // Задний левый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 57,
          "context": "void Actuators_SetRoll(int16_t roll);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 65,
          "context": "float roll, pitch, yaw; // Целевые углы (градусы)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 34,
          "context": "float roll;      // Крен (в градусах)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 17,
          "context": "} PIDController;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 21,
          "context": "float roll;     // Желаемый крен"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 41,
          "context": "void Stabilization_ConfigurePID(float rollKp, float rollKi, float rollKd,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 47,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_345",
      "name": "pitch",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 264,
          "context": "cmdData.data.attitude.pitch,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 284,
          "context": "static float pitch_kp = 1.0f, pitch_ki = 0.1f, pitch_kd = 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 294,
          "context": "pitch_kp = value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 307,
          "context": "pitch_kp, pitch_ki, pitch_kd,  // Pitch PID"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 116,
          "context": "void Actuators_SetPitch(int16_t pitch) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 122,
          "context": "int16_t pitch_pwm = pitch / 2;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 124,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm - pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 125,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 126,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm + pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 127,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm + pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 176,
          "context": "orientation->pitch = filteredPitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 10,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 31,
          "context": "PIDController pitchPID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 43,
          "context": "stabState.targetSetPoint.pitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 49,
          "context": "stabState.currentOrientation.pitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 62,
          "context": "float pitchKp, float pitchKi, float pitchKd,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 73,
          "context": "stabState.pitchPID.kP = pitchKp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 74,
          "context": "stabState.pitchPID.kI = pitchKi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 75,
          "context": "stabState.pitchPID.kD = pitchKd;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 76,
          "context": "stabState.pitchPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 77,
          "context": "stabState.pitchPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 97,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 100,
          "context": "stabState.targetSetPoint.pitch = ClampValue(pitch, -MAX_PITCH_ANGLE, MAX_PITCH_ANGLE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 121,
          "context": "stabState.currentOrientation.pitch = currentOrientation.pitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 126,
          "context": "float pitchError = stabState.targetSetPoint.pitch - stabState.currentOrientation.pitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 136,
          "context": "float pitchOutput = UpdatePID(&stabState.pitchPID, pitchError);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 141,
          "context": "UpdateMotorOutputs(rollOutput, pitchOutput, yawOutput, altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 178,
          "context": "stabState.pitchPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 179,
          "context": "stabState.pitchPID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 218,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 229,
          "context": "float m1 = baseThrust - rollOutput - pitchOutput + yawOutput;  // Передний левый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 230,
          "context": "float m2 = baseThrust + rollOutput - pitchOutput - yawOutput;  // Передний правый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 231,
          "context": "float m3 = baseThrust + rollOutput + pitchOutput + yawOutput;  // Задний правый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 232,
          "context": "float m4 = baseThrust - rollOutput + pitchOutput - yawOutput;  // Задний левый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 56,
          "context": "void Actuators_SetPitch(int16_t pitch);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 65,
          "context": "float roll, pitch, yaw; // Целевые углы (градусы)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 35,
          "context": "float pitch;     // Тангаж (в градусах)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 22,
          "context": "float pitch;    // Желаемый тангаж"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 42,
          "context": "float pitchKp, float pitchKi, float pitchKd,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 47,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_346",
      "name": "yaw",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 265,
          "context": "cmdData.data.attitude.yaw,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 285,
          "context": "static float yaw_kp = 2.0f, yaw_ki = 0.15f, yaw_kd = 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 297,
          "context": "yaw_kp = value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 308,
          "context": "yaw_kp, yaw_ki, yaw_kd,       // Yaw PID"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 102,
          "context": "void Actuators_SetYaw(int16_t yaw) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 108,
          "context": "int32_t pwm_delta = ((int32_t)yaw * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 193,
          "context": "void Actuators_EmulateRotation(int16_t yaw_rate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 197,
          "context": "Actuators_SetYaw(yaw_rate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 177,
          "context": "orientation->yaw = filteredYaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 10,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 32,
          "context": "PIDController yawPID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 44,
          "context": "stabState.targetSetPoint.yaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 50,
          "context": "stabState.currentOrientation.yaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 63,
          "context": "float yawKp, float yawKi, float yawKd,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 80,
          "context": "stabState.yawPID.kP = yawKp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 81,
          "context": "stabState.yawPID.kI = yawKi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 82,
          "context": "stabState.yawPID.kD = yawKd;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 83,
          "context": "stabState.yawPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 84,
          "context": "stabState.yawPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 97,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 101,
          "context": "stabState.targetSetPoint.yaw = yaw;  // Рыскание может быть любым (0-360)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 122,
          "context": "stabState.currentOrientation.yaw = currentOrientation.yaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 127,
          "context": "float yawError = stabState.targetSetPoint.yaw - stabState.currentOrientation.yaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 131,
          "context": "while (yawError > 180.0f) yawError -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 132,
          "context": "while (yawError < -180.0f) yawError += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 137,
          "context": "float yawOutput = UpdatePID(&stabState.yawPID, yawError);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 141,
          "context": "UpdateMotorOutputs(rollOutput, pitchOutput, yawOutput, altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 181,
          "context": "stabState.yawPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 182,
          "context": "stabState.yawPID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 218,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 229,
          "context": "float m1 = baseThrust - rollOutput - pitchOutput + yawOutput;  // Передний левый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 230,
          "context": "float m2 = baseThrust + rollOutput - pitchOutput - yawOutput;  // Передний правый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 231,
          "context": "float m3 = baseThrust + rollOutput + pitchOutput + yawOutput;  // Задний правый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 232,
          "context": "float m4 = baseThrust - rollOutput + pitchOutput - yawOutput;  // Задний левый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 55,
          "context": "void Actuators_SetYaw(int16_t yaw);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 68,
          "context": "void Actuators_EmulateRotation(int16_t yaw_rate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 65,
          "context": "float roll, pitch, yaw; // Целевые углы (градусы)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 36,
          "context": "float yaw;       // Рыскание (в градусах)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 23,
          "context": "float yaw;      // Желаемое рыскание"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 43,
          "context": "float yawKp, float yawKi, float yawKd,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 47,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_347",
      "name": "imu",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 357,
          "context": "if (sensorData.imu.temperature < MIN_BATTERY_VOLTAGE) { // Временно используем temperature как voltage"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 364,
          "context": "EnterEmergencyMode(\"Maximum altitude exceeded\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 369,
          "context": "if (fabsf(sensorData.imu.accel_x) > MAX_ANGLE ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 370,
          "context": "fabsf(sensorData.imu.accel_y) > MAX_ANGLE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 371,
          "context": "EnterEmergencyMode(\"Maximum angle exceeded\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1046,
          "context": "IMUData imuData = {0};  // Добавляем объявление переменной"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1049,
          "context": "float accel_magnitude = sqrtf(powf(imuData.accelX, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1050,
          "context": "powf(imuData.accelY, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1051,
          "context": "powf(imuData.accelZ, 2));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1053,
          "context": "float gyro_magnitude = sqrtf(powf(imuData.gyroX, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1054,
          "context": "powf(imuData.gyroY, 2) +"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1055,
          "context": "powf(imuData.gyroZ, 2));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 152,
          "context": "MPU6050_Data imu;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 153,
          "context": "Sensors_GetIMUData(&imu);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 162,
          "context": "float accelRoll = atan2f(imu.accel_y, imu.accel_z) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 163,
          "context": "float accelPitch = atan2f(-imu.accel_x, sqrtf(imu.accel_y * imu.accel_y + imu.accel_z * imu.accel_z)) * 180.0f / 3.14159f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 167,
          "context": "filteredRoll = 0.96f * (filteredRoll + imu.gyro_x * dt) + 0.04f * accelRoll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 168,
          "context": "filteredPitch = 0.96f * (filteredPitch + imu.gyro_y * dt) + 0.04f * accelPitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 169,
          "context": "filteredYaw += imu.gyro_z * dt;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 183,
          "context": "data->imu.accel_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 184,
          "context": "data->imu.accel_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 185,
          "context": "data->imu.accel_z = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 186,
          "context": "data->imu.gyro_x = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 187,
          "context": "data->imu.gyro_y = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 188,
          "context": "data->imu.gyro_z = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 111,
          "context": "MPU6050_Data imuData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 115,
          "context": "Sensors_GetIMUData(&imuData);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 41,
          "context": "MPU6050_Data imu;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "MPU6050_Data",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_348",
      "name": "baro",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 363,
          "context": "if (sensorData.baro.altitude > MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 189,
          "context": "data->baro.pressure = 1013.25f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 190,
          "context": "data->baro.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 42,
          "context": "BMP280_Data baro;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "BMP280_Data",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_349",
      "name": "isCalibrated",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 346,
          "context": "telemetry.gpsStatus = (sensorData.isCalibrated ? 1 : 0);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 191,
          "context": "data->isCalibrated = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 43,
          "context": "bool isCalibrated;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_350",
      "name": "kP",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 66,
          "context": "stabState.rollPID.kP = rollKp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 73,
          "context": "stabState.pitchPID.kP = pitchKp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 80,
          "context": "stabState.yawPID.kP = yawKp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 87,
          "context": "stabState.altitudePID.kP = altKp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 195,
          "context": "float pTerm = pid->kP * error;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 10,
          "context": "float kP;          // Пропорциональный коэффициент"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_351",
      "name": "kI",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 67,
          "context": "stabState.rollPID.kI = rollKi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 74,
          "context": "stabState.pitchPID.kI = pitchKi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 81,
          "context": "stabState.yawPID.kI = yawKi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 88,
          "context": "stabState.altitudePID.kI = altKi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 199,
          "context": "float iTerm = pid->kI * pid->integral;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 11,
          "context": "float kI;          // Интегральный коэффициент"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_352",
      "name": "kD",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 68,
          "context": "stabState.rollPID.kD = rollKd;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 75,
          "context": "stabState.pitchPID.kD = pitchKd;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 82,
          "context": "stabState.yawPID.kD = yawKd;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 89,
          "context": "stabState.altitudePID.kD = altKd;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 202,
          "context": "float dTerm = pid->kD * (error - pid->prevError) / DT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 12,
          "context": "float kD;          // Дифференциальный коэффициент"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_353",
      "name": "integral",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 175,
          "context": "stabState.rollPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 178,
          "context": "stabState.pitchPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 181,
          "context": "stabState.yawPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 184,
          "context": "stabState.altitudePID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 198,
          "context": "pid->integral += error * DT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 199,
          "context": "float iTerm = pid->kI * pid->integral;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 13,
          "context": "float integral;    // Накопленная интегральная составляющая"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_354",
      "name": "prevError",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 176,
          "context": "stabState.rollPID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 179,
          "context": "stabState.pitchPID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 182,
          "context": "stabState.yawPID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 185,
          "context": "stabState.altitudePID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 202,
          "context": "float dTerm = pid->kD * (error - pid->prevError) / DT;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 203,
          "context": "pid->prevError = error;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 14,
          "context": "float prevError;   // Предыдущая ошибка для вычисления производной"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_355",
      "name": "outputMin",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 69,
          "context": "stabState.rollPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 76,
          "context": "stabState.pitchPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 83,
          "context": "stabState.yawPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 90,
          "context": "stabState.altitudePID.outputMin = 0.0f;  // Минимальная тяга"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 209,
          "context": "return ClampValue(output, pid->outputMin, pid->outputMax);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 15,
          "context": "float outputMin;   // Минимальное значение выхода"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_356",
      "name": "outputMax",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 70,
          "context": "stabState.rollPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 77,
          "context": "stabState.pitchPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 84,
          "context": "stabState.yawPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 91,
          "context": "stabState.altitudePID.outputMax = 1.0f;  // Максимальная тяга"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 209,
          "context": "return ClampValue(output, pid->outputMin, pid->outputMax);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 16,
          "context": "float outputMax;   // Максимальное значение выхода"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_357",
      "name": "roll",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 263,
          "context": "cmdData.data.attitude.roll,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 283,
          "context": "static float roll_kp = 1.0f, roll_ki = 0.1f, roll_kd = 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 291,
          "context": "roll_kp = value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 306,
          "context": "roll_kp, roll_ki, roll_kd,    // Roll PID"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 130,
          "context": "void Actuators_SetRoll(int16_t roll) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 136,
          "context": "int16_t roll_pwm = roll / 2;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 138,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm + roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 139,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm + roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 140,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 141,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm - roll_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 175,
          "context": "orientation->roll = filteredRoll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 8,
          "context": "static float UpdatePID(PIDController* pid, float error);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 10,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 30,
          "context": "PIDController rollPID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 31,
          "context": "PIDController pitchPID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 32,
          "context": "PIDController yawPID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 33,
          "context": "PIDController altitudePID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 42,
          "context": "stabState.targetSetPoint.roll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 48,
          "context": "stabState.currentOrientation.roll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 61,
          "context": "void Stabilization_ConfigurePID(float rollKp, float rollKi, float rollKd,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 66,
          "context": "stabState.rollPID.kP = rollKp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 67,
          "context": "stabState.rollPID.kI = rollKi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 68,
          "context": "stabState.rollPID.kD = rollKd;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 69,
          "context": "stabState.rollPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 70,
          "context": "stabState.rollPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 97,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 99,
          "context": "stabState.targetSetPoint.roll = ClampValue(roll, -MAX_ROLL_ANGLE, MAX_ROLL_ANGLE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 120,
          "context": "stabState.currentOrientation.roll = currentOrientation.roll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 125,
          "context": "float rollError = stabState.targetSetPoint.roll - stabState.currentOrientation.roll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 135,
          "context": "float rollOutput = UpdatePID(&stabState.rollPID, rollError);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 141,
          "context": "UpdateMotorOutputs(rollOutput, pitchOutput, yawOutput, altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 175,
          "context": "stabState.rollPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 176,
          "context": "stabState.rollPID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 189,
          "context": "static float UpdatePID(PIDController* pid, float error) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 218,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 229,
          "context": "float m1 = baseThrust - rollOutput - pitchOutput + yawOutput;  // Передний левый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 230,
          "context": "float m2 = baseThrust + rollOutput - pitchOutput - yawOutput;  // Передний правый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 231,
          "context": "float m3 = baseThrust + rollOutput + pitchOutput + yawOutput;  // Задний правый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 232,
          "context": "float m4 = baseThrust - rollOutput + pitchOutput - yawOutput;  // Задний левый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 57,
          "context": "void Actuators_SetRoll(int16_t roll);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 65,
          "context": "float roll, pitch, yaw; // Целевые углы (градусы)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 34,
          "context": "float roll;      // Крен (в градусах)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 17,
          "context": "} PIDController;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 21,
          "context": "float roll;     // Желаемый крен"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 41,
          "context": "void Stabilization_ConfigurePID(float rollKp, float rollKi, float rollKd,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 47,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_358",
      "name": "pitch",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 264,
          "context": "cmdData.data.attitude.pitch,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 284,
          "context": "static float pitch_kp = 1.0f, pitch_ki = 0.1f, pitch_kd = 0.05f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 294,
          "context": "pitch_kp = value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 307,
          "context": "pitch_kp, pitch_ki, pitch_kd,  // Pitch PID"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 116,
          "context": "void Actuators_SetPitch(int16_t pitch) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 122,
          "context": "int16_t pitch_pwm = pitch / 2;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 124,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_LEFT,  (uint16_t)(base_pwm - pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 125,
          "context": "Actuators_SetMotorPWM(MOTOR_FRONT_RIGHT, (uint16_t)(base_pwm - pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 126,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_LEFT,   (uint16_t)(base_pwm + pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 127,
          "context": "Actuators_SetMotorPWM(MOTOR_BACK_RIGHT,  (uint16_t)(base_pwm + pitch_pwm));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 176,
          "context": "orientation->pitch = filteredPitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 10,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 31,
          "context": "PIDController pitchPID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 43,
          "context": "stabState.targetSetPoint.pitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 49,
          "context": "stabState.currentOrientation.pitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 62,
          "context": "float pitchKp, float pitchKi, float pitchKd,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 73,
          "context": "stabState.pitchPID.kP = pitchKp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 74,
          "context": "stabState.pitchPID.kI = pitchKi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 75,
          "context": "stabState.pitchPID.kD = pitchKd;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 76,
          "context": "stabState.pitchPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 77,
          "context": "stabState.pitchPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 97,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 100,
          "context": "stabState.targetSetPoint.pitch = ClampValue(pitch, -MAX_PITCH_ANGLE, MAX_PITCH_ANGLE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 121,
          "context": "stabState.currentOrientation.pitch = currentOrientation.pitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 126,
          "context": "float pitchError = stabState.targetSetPoint.pitch - stabState.currentOrientation.pitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 136,
          "context": "float pitchOutput = UpdatePID(&stabState.pitchPID, pitchError);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 141,
          "context": "UpdateMotorOutputs(rollOutput, pitchOutput, yawOutput, altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 178,
          "context": "stabState.pitchPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 179,
          "context": "stabState.pitchPID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 218,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 229,
          "context": "float m1 = baseThrust - rollOutput - pitchOutput + yawOutput;  // Передний левый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 230,
          "context": "float m2 = baseThrust + rollOutput - pitchOutput - yawOutput;  // Передний правый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 231,
          "context": "float m3 = baseThrust + rollOutput + pitchOutput + yawOutput;  // Задний правый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 232,
          "context": "float m4 = baseThrust - rollOutput + pitchOutput - yawOutput;  // Задний левый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 56,
          "context": "void Actuators_SetPitch(int16_t pitch);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 65,
          "context": "float roll, pitch, yaw; // Целевые углы (градусы)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 35,
          "context": "float pitch;     // Тангаж (в градусах)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 22,
          "context": "float pitch;    // Желаемый тангаж"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 42,
          "context": "float pitchKp, float pitchKi, float pitchKd,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 47,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_359",
      "name": "yaw",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 265,
          "context": "cmdData.data.attitude.yaw,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 285,
          "context": "static float yaw_kp = 2.0f, yaw_ki = 0.15f, yaw_kd = 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 297,
          "context": "yaw_kp = value;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 308,
          "context": "yaw_kp, yaw_ki, yaw_kd,       // Yaw PID"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 102,
          "context": "void Actuators_SetYaw(int16_t yaw) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 108,
          "context": "int32_t pwm_delta = ((int32_t)yaw * (PWM_MAX_VALUE - PWM_MIN_VALUE)) / 100;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 193,
          "context": "void Actuators_EmulateRotation(int16_t yaw_rate) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 197,
          "context": "Actuators_SetYaw(yaw_rate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 177,
          "context": "orientation->yaw = filteredYaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 10,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 32,
          "context": "PIDController yawPID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 44,
          "context": "stabState.targetSetPoint.yaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 50,
          "context": "stabState.currentOrientation.yaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 63,
          "context": "float yawKp, float yawKi, float yawKd,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 80,
          "context": "stabState.yawPID.kP = yawKp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 81,
          "context": "stabState.yawPID.kI = yawKi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 82,
          "context": "stabState.yawPID.kD = yawKd;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 83,
          "context": "stabState.yawPID.outputMin = -1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 84,
          "context": "stabState.yawPID.outputMax = 1.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 97,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 101,
          "context": "stabState.targetSetPoint.yaw = yaw;  // Рыскание может быть любым (0-360)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 122,
          "context": "stabState.currentOrientation.yaw = currentOrientation.yaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 127,
          "context": "float yawError = stabState.targetSetPoint.yaw - stabState.currentOrientation.yaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 131,
          "context": "while (yawError > 180.0f) yawError -= 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 132,
          "context": "while (yawError < -180.0f) yawError += 360.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 137,
          "context": "float yawOutput = UpdatePID(&stabState.yawPID, yawError);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 141,
          "context": "UpdateMotorOutputs(rollOutput, pitchOutput, yawOutput, altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 181,
          "context": "stabState.yawPID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 182,
          "context": "stabState.yawPID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 218,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 229,
          "context": "float m1 = baseThrust - rollOutput - pitchOutput + yawOutput;  // Передний левый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 230,
          "context": "float m2 = baseThrust + rollOutput - pitchOutput - yawOutput;  // Передний правый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 231,
          "context": "float m3 = baseThrust + rollOutput + pitchOutput + yawOutput;  // Задний правый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 232,
          "context": "float m4 = baseThrust - rollOutput + pitchOutput - yawOutput;  // Задний левый"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 55,
          "context": "void Actuators_SetYaw(int16_t yaw);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 68,
          "context": "void Actuators_EmulateRotation(int16_t yaw_rate);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 65,
          "context": "float roll, pitch, yaw; // Целевые углы (градусы)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 36,
          "context": "float yaw;       // Рыскание (в градусах)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 23,
          "context": "float yaw;      // Желаемое рыскание"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 43,
          "context": "float yawKp, float yawKi, float yawKd,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 47,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_360",
      "name": "altitude",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 246,
          "context": ".altitude = cmdData.data.position.z,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 323,
          "context": "float altitude = Navigation_GetCurrentAltitude();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 342,
          "context": "telemetry.altitude = altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 363,
          "context": "if (sensorData.baro.altitude > MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 364,
          "context": "EnterEmergencyMode(\"Maximum altitude exceeded\");"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1079,
          "context": "float altitude = GetBaroAltitude();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1080,
          "context": "if (altitude < BARO_TEST_ALT_MIN || altitude > BARO_TEST_ALT_MAX) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1084,
          "context": "status.data = (uint32_t)(altitude * 100);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 32,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 138,
          "context": "return nav_state.current_position.altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 154,
          "context": "void Navigation_EmulateGPSPosition(float latitude, float longitude, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 157,
          "context": "nav_state.current_position.altitude = altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 179,
          "context": "nav_state.current_position.altitude += vertical_speed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 182,
          "context": "if (nav_state.current_position.altitude < NAV_MIN_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 183,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 185,
          "context": "} else if (nav_state.current_position.altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 186,
          "context": "nav_state.current_position.altitude = NAV_MAX_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 235,
          "context": "position->altitude < NAV_MIN_ALTITUDE || position->altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 13,
          "context": "float current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 18,
          "context": ".current_altitude = 0.0f,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 45,
          "context": "bmp280_data.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 82,
          "context": "bmp280_data.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 96,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 97,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 98,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f); // Примерное изменение давления с высотой"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 104,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f; // Предполагаем вызов каждые 100мс"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 107,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 108,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 114,
          "context": "sensor_state.current_altitude += vertical_speed * 0.1f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 115,
          "context": "if (sensor_state.current_altitude < 0.0f) sensor_state.current_altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 118,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 119,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 138,
          "context": "sensor_state.current_altitude += (float)((rand() % 10) - 5) / 100.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 139,
          "context": "bmp280_data.altitude = sensor_state.current_altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 140,
          "context": "bmp280_data.pressure = 1013.25f - (sensor_state.current_altitude * 0.12f);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 190,
          "context": "data->baro.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 198,
          "context": "data->altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 10,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 33,
          "context": "PIDController altitudePID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 45,
          "context": "stabState.targetSetPoint.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 87,
          "context": "stabState.altitudePID.kP = altKp;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 88,
          "context": "stabState.altitudePID.kI = altKi;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 89,
          "context": "stabState.altitudePID.kD = altKd;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 90,
          "context": "stabState.altitudePID.outputMin = 0.0f;  // Минимальная тяга"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 91,
          "context": "stabState.altitudePID.outputMax = 1.0f;  // Максимальная тяга"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 97,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 102,
          "context": "stabState.targetSetPoint.altitude = fmaxf(altitude, 0.0f);  // Высота не может быть отрицательной"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 128,
          "context": "float altitudeError = stabState.targetSetPoint.altitude - altData.altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 138,
          "context": "float altitudeOutput = UpdatePID(&stabState.altitudePID, altitudeError);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 141,
          "context": "UpdateMotorOutputs(rollOutput, pitchOutput, yawOutput, altitudeOutput);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 184,
          "context": "stabState.altitudePID.integral = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 185,
          "context": "stabState.altitudePID.prevError = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 218,
          "context": "static void UpdateMotorOutputs(float rollOutput, float pitchOutput, float yawOutput, float altitudeOutput) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 220,
          "context": "float baseThrust = altitudeOutput;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 63,
          "context": "float altitude;           // Текущая высота (м)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 11,
          "context": "float altitude;   // Высота в метрах"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 79,
          "context": "void Navigation_EmulateGPSPosition(float latitude, float longitude, float altitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 28,
          "context": "float altitude;    // Высота в метрах"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 24,
          "context": "float altitude; // Желаемая высота"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 47,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "float",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_361",
      "name": "currentOrientation",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 338,
          "context": "Orientation currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 339,
          "context": "Sensors_GetOrientation(&currentOrientation);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 340,
          "context": "telemetry.orientation = currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 29,
          "context": "Orientation currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 48,
          "context": "stabState.currentOrientation.roll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 49,
          "context": "stabState.currentOrientation.pitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 50,
          "context": "stabState.currentOrientation.yaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 113,
          "context": "Orientation currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 117,
          "context": "Sensors_GetOrientation(&currentOrientation);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 120,
          "context": "stabState.currentOrientation.roll = currentOrientation.roll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 121,
          "context": "stabState.currentOrientation.pitch = currentOrientation.pitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 122,
          "context": "stabState.currentOrientation.yaw = currentOrientation.yaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 125,
          "context": "float rollError = stabState.targetSetPoint.roll - stabState.currentOrientation.roll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 126,
          "context": "float pitchError = stabState.targetSetPoint.pitch - stabState.currentOrientation.pitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 127,
          "context": "float yawError = stabState.targetSetPoint.yaw - stabState.currentOrientation.yaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 146,
          "context": "*orientation = stabState.currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 29,
          "context": "Orientation currentOrientation;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "Orientation",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_362",
      "name": "targetSetPoint",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 28,
          "context": "SetPoint targetSetPoint;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 42,
          "context": "stabState.targetSetPoint.roll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 43,
          "context": "stabState.targetSetPoint.pitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 44,
          "context": "stabState.targetSetPoint.yaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 45,
          "context": "stabState.targetSetPoint.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 99,
          "context": "stabState.targetSetPoint.roll = ClampValue(roll, -MAX_ROLL_ANGLE, MAX_ROLL_ANGLE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 100,
          "context": "stabState.targetSetPoint.pitch = ClampValue(pitch, -MAX_PITCH_ANGLE, MAX_PITCH_ANGLE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 101,
          "context": "stabState.targetSetPoint.yaw = yaw;  // Рыскание может быть любым (0-360)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 102,
          "context": "stabState.targetSetPoint.altitude = fmaxf(altitude, 0.0f);  // Высота не может быть отрицательной"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 125,
          "context": "float rollError = stabState.targetSetPoint.roll - stabState.currentOrientation.roll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 126,
          "context": "float pitchError = stabState.targetSetPoint.pitch - stabState.currentOrientation.pitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 127,
          "context": "float yawError = stabState.targetSetPoint.yaw - stabState.currentOrientation.yaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 128,
          "context": "float altitudeError = stabState.targetSetPoint.altitude - altData.altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 152,
          "context": "*setPoint = stabState.targetSetPoint;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 30,
          "context": "SetPoint targetSetPoint;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "SetPoint",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    },
    {
      "id": "var_363",
      "name": "isStable",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 32,
          "context": "bool isStable;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "type": "bool",
      "scope": "global",
      "is_static": false,
      "valid_range": {}
    }
  ],
  "structures": [
    {
      "id": "struct_001",
      "name": "MotorTestData",
      "description": "234",
      "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1157,
          "context": "} MotorTestData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1166,
          "context": "MotorTestData motorData[4];  // Для четырех моторов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1182,
          "context": "memset(&motorData[i], 0, sizeof(MotorTestData));"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [
        {
          "name": "responding",
          "type": "bool",
          "description": "test"
        },
        {
          "name": "current",
          "type": "float",
          "description": ""
        },
        {
          "name": "rpm",
          "type": "float",
          "description": ""
        },
        {
          "name": "temperature",
          "type": "float",
          "description": ""
        },
        {
          "name": "vibration",
          "type": "float",
          "description": ""
        }
      ],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_002",
      "name": "MotorState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 27,
          "context": "} MotorState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 31,
          "context": "MotorState motors[MOTOR_COUNT];"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_003",
      "name": "ActuatorsState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 137,
          "context": "ActuatorsState actState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 5,
          "context": "static ActuatorsState actuators_state = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 16,
          "context": "memset(&actuators_state, 0, sizeof(ActuatorsState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\actuators.c",
          "line_number": 145,
          "context": "void Actuators_GetState(ActuatorsState* state) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 34,
          "context": "} ActuatorsState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\actuators.h",
          "line_number": 60,
          "context": "void Actuators_GetState(ActuatorsState* state);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [
        {
          "name": "motors[MOTOR_COUNT]",
          "type": "MotorState",
          "description": ""
        },
        {
          "name": "all_motors_enabled",
          "type": "bool",
          "description": ""
        }
      ],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_004",
      "name": "CommPacket",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 226,
          "context": "CommPacket rxPacket;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 55,
          "context": "static bool ValidatePacket(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 56,
          "context": "static void ProcessReceivedPacket(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 169,
          "context": "while (processedIndex + sizeof(CommPacket) <= commState.rxIndex) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 170,
          "context": "CommPacket* packet = (CommPacket*)(commState.rxBuffer + processedIndex);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 173,
          "context": "uint16_t packetSize = sizeof(CommPacket) - COMM_MAX_PACKET_SIZE + packet->length;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 210,
          "context": "CommPacket packet;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 219,
          "context": "packet.checksum = CalculateChecksum((const uint8_t*)&packet, (uint16_t)(sizeof(CommPacket) - sizeof(uint16_t)));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 222,
          "context": "if (UART_Send((const uint8_t*)&packet, (uint16_t)sizeof(CommPacket))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 260,
          "context": "void Communication_HandleCommand(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 301,
          "context": "void Communication_HandleConfig(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 402,
          "context": "static bool ValidatePacket(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 415,
          "context": "sizeof(CommPacket) - sizeof(packet->checksum)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 421,
          "context": "static void ProcessReceivedPacket(const CommPacket* packet) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1955,
          "context": "bool success = SendBackupCommPacket(testPacket, sizeof(testPacket));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1965,
          "context": "if (ReceiveBackupCommPacket(response, sizeof(response))) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1978,
          "context": "bool SendBackupCommPacket(const uint8_t* data, uint8_t length) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1983,
          "context": "bool ReceiveBackupCommPacket(uint8_t* buffer, uint8_t maxLength) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 50,
          "context": "} CommPacket;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 97,
          "context": "void Communication_HandleCommand(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 98,
          "context": "void Communication_HandleConfig(const CommPacket* packet);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 486,
          "context": "bool SendBackupCommPacket(const uint8_t* data, uint8_t length);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 487,
          "context": "bool ReceiveBackupCommPacket(uint8_t* buffer, uint8_t maxLength);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_005",
      "name": "TelemetryData",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 315,
          "context": "TelemetryData telemetry;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 231,
          "context": "bool Communication_SendTelemetry(const TelemetryData* telemetry) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\communication.c",
          "line_number": 235,
          "context": "return Communication_Send(PACKET_TYPE_TELEMETRY, telemetry, sizeof(TelemetryData));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 72,
          "context": "} TelemetryData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 92,
          "context": "bool Communication_SendTelemetry(const TelemetryData* telemetry);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_006",
      "name": "TestStatus",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 110,
          "context": "TestStatus TestPowerSystem(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 112,
          "context": "TestStatus TestSensors(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 113,
          "context": "TestStatus TestMotors(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 114,
          "context": "TestStatus TestCommunication(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 115,
          "context": "TestStatus TestSafetySystems(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 942,
          "context": "TestStatus TestPowerSystem(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 943,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1040,
          "context": "TestStatus TestSensors(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1041,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1160,
          "context": "TestStatus TestMotors(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1161,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1291,
          "context": "TestStatus TestCommunication(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1292,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1370,
          "context": "TestStatus TestSafetySystems(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1371,
          "context": "TestStatus status = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1665,
          "context": "selfTestResult.powerTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1666,
          "context": "selfTestResult.sensorTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1667,
          "context": "selfTestResult.motorTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1668,
          "context": "selfTestResult.batteryTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1669,
          "context": "selfTestResult.commTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1670,
          "context": "selfTestResult.safetyTest = (TestStatus){0, 0, \"Not started\", 0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 121,
          "context": "} TestStatus;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 186,
          "context": "TestStatus powerTest;    // Тест системы питания"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 187,
          "context": "TestStatus sensorTest;   // Тест датчиков"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 188,
          "context": "TestStatus motorTest;    // Тест моторов"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 189,
          "context": "TestStatus batteryTest;  // Тест батареи"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 190,
          "context": "TestStatus commTest;     // Тест коммуникации"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 191,
          "context": "TestStatus safetyTest;   // Тест системы безопасности"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 522,
          "context": "TestStatus TestPowerSystem(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 523,
          "context": "TestStatus TestSensors(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 524,
          "context": "TestStatus TestMotors(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 525,
          "context": "TestStatus TestCommunication(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 526,
          "context": "TestStatus TestSafetySystems(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_007",
      "name": "IMUData",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1046,
          "context": "IMUData imuData = {0};  // Добавляем объявление переменной"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1101,
          "context": "static IMUData magData = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1643,
          "context": "static IMUData magData = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 143,
          "context": "void Sensors_GetIMUData(MPU6050_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 153,
          "context": "Sensors_GetIMUData(&imu);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 115,
          "context": "Sensors_GetIMUData(&imuData);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 134,
          "context": "} IMUData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 359,
          "context": "bool Diagnostics_GetIMUData(IMUData* data);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [
        {
          "name": "accelX",
          "type": "float",
          "description": ""
        },
        {
          "name": "accelY",
          "type": "float",
          "description": ""
        },
        {
          "name": "accelZ",
          "type": "float",
          "description": ""
        },
        {
          "name": "gyroX",
          "type": "float",
          "description": ""
        },
        {
          "name": "gyroY",
          "type": "float",
          "description": ""
        },
        {
          "name": "gyroZ",
          "type": "float",
          "description": ""
        },
        {
          "name": "magX",
          "type": "float",
          "description": ""
        },
        {
          "name": "magY",
          "type": "float",
          "description": ""
        },
        {
          "name": "magZ",
          "type": "float",
          "description": ""
        },
        {
          "name": "temp",
          "type": "float",
          "description": ""
        }
      ],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_008",
      "name": "LogEntry",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 77,
          "context": "LogEntry logBuffer[DIAG_MAX_LOG_ENTRIES];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 538,
          "context": "LogEntry* entry = &diagState.logBuffer[diagState.logCount++];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 566,
          "context": "bool Diagnostics_GetLogEntry(uint32_t index, LogEntry* entry) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 906,
          "context": "LogEntry lastEntry;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 907,
          "context": "Diagnostics_GetLastLogEntry(&lastEntry);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 2065,
          "context": "const char* Diagnostics_GetLastLogEntry(void) { return \"No log\"; }"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 143,
          "context": "} LogEntry;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 356,
          "context": "bool Diagnostics_GetLogEntry(uint32_t index, LogEntry* entry);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 565,
          "context": "const char* Diagnostics_GetLastLogEntry(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_009",
      "name": "ThermalState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 328,
          "context": "ThermalState thermalState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 330,
          "context": "Diagnostics_GetThermalState(&thermalState);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 80,
          "context": "ThermalState thermalState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 170,
          "context": "memset(&diagState.thermalState, 0, sizeof(ThermalState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 470,
          "context": "void Diagnostics_UpdateThermalState(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 527,
          "context": "void Diagnostics_GetThermalState(ThermalState* state) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 152,
          "context": "} ThermalState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 370,
          "context": "void Diagnostics_UpdateThermalState(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 371,
          "context": "void Diagnostics_GetThermalState(ThermalState* state);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_010",
      "name": "PowerState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 327,
          "context": "PowerState powerState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 329,
          "context": "Diagnostics_GetPowerState(&powerState);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 79,
          "context": "PowerState powerState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 169,
          "context": "memset(&diagState.powerState, 0, sizeof(PowerState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 196,
          "context": "void Diagnostics_UpdatePowerState(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 243,
          "context": "* @param state Указатель на структуру PowerState, которая будет заполнена текущим состоянием"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 251,
          "context": "void Diagnostics_GetPowerState(PowerState* state) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 163,
          "context": "} PowerState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 364,
          "context": "void Diagnostics_UpdatePowerState(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 365,
          "context": "void Diagnostics_GetPowerState(PowerState* state); // Обновленный прототип функции"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 519,
          "context": "void Diagnostics_GetPowerState(PowerState* state);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_011",
      "name": "SystemStatus",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 858,
          "context": "void Diagnostics_PrintSystemStatus(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 171,
          "context": "} SystemStatus;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 194,
          "context": "SystemStatus systemStatus;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 389,
          "context": "void Diagnostics_PrintSystemStatus(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [
        {
          "name": "powerSystemOperational",
          "type": "bool",
          "description": ""
        },
        {
          "name": "sensorsOperational",
          "type": "bool",
          "description": ""
        },
        {
          "name": "motorsOperational",
          "type": "bool",
          "description": ""
        },
        {
          "name": "communicationOperational",
          "type": "bool",
          "description": ""
        },
        {
          "name": "safetySystemOperational",
          "type": "bool",
          "description": ""
        }
      ],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_012",
      "name": "SelfTestResult",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 924,
          "context": "static SelfTestResult selfTestResult;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1266,
          "context": "SelfTestResult Diagnostics_GetTestResult(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1651,
          "context": "memset(&selfTestResult, 0, sizeof(SelfTestResult));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 195,
          "context": "} SelfTestResult;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 341,
          "context": "bool Diagnostics_PerformSelfTest(SelfTestResult* result);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [
        {
          "name": "result",
          "type": "TestResult",
          "description": "Общее сообщение о результате"
        },
        {
          "name": "errorCode",
          "type": "uint32_t",
          "description": ""
        },
        {
          "name": "totalErrors",
          "type": "uint32_t",
          "description": "Детальная информация"
        },
        {
          "name": "totalWarnings",
          "type": "uint32_t",
          "description": ""
        },
        {
          "name": "isTestComplete",
          "type": "bool",
          "description": ""
        },
        {
          "name": "systemStatus",
          "type": "SystemStatus",
          "description": "Статус системы"
        }
      ],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_013",
      "name": "ADCResult",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1440,
          "context": "ADCResult Diagnostics_GetADCValue(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1441,
          "context": "ADCResult result = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1475,
          "context": "float Diagnostics_ConvertADCToTemp(ADCResult adcResult) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1775,
          "context": "ADCResult result = Diagnostics_GetADCValue();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1822,
          "context": "ADCResult adcResult = Diagnostics_GetADCValue();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 200,
          "context": "} ADCResult;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 392,
          "context": "ADCResult Diagnostics_GetADCValue(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 393,
          "context": "float Diagnostics_ConvertADCToTemp(ADCResult adcResult); // Обновленный прототип функции преобразования температур"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [
        {
          "name": "value",
          "type": "uint32_t",
          "description": ""
        },
        {
          "name": "error",
          "type": "ADCError",
          "description": ""
        }
      ],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_014",
      "name": "SystemTickResult",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1569,
          "context": "SystemTickResult Diagnostics_GetSystemTicks(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1570,
          "context": "SystemTickResult result = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1587,
          "context": "SystemTickResult startTicks = Diagnostics_GetSystemTicks();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1597,
          "context": "SystemTickResult currentTicks = Diagnostics_GetSystemTicks();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1623,
          "context": "SystemTickResult currentTicksResult = Diagnostics_GetSystemTicks();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 205,
          "context": "} SystemTickResult;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 397,
          "context": "SystemTickResult Diagnostics_GetSystemTicks(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [
        {
          "name": "ticks",
          "type": "uint32_t",
          "description": ""
        },
        {
          "name": "error",
          "type": "SystemTickError",
          "description": ""
        }
      ],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_015",
      "name": "ElapsedTicksResult",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1617,
          "context": "ElapsedTicksResult Diagnostics_GetElapsedTicks(uint32_t startTicks) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1618,
          "context": "ElapsedTicksResult result = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 210,
          "context": "} ElapsedTicksResult;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 399,
          "context": "ElapsedTicksResult Diagnostics_GetElapsedTicks(uint32_t startTicks);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [
        {
          "name": "elapsedTicks",
          "type": "uint32_t",
          "description": ""
        },
        {
          "name": "error",
          "type": "SystemTickError",
          "description": ""
        }
      ],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_016",
      "name": "ADCConversionStatus",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1536,
          "context": "ADCConversionStatus Diagnostics_IsADCConversionComplete(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\diagnostics.c",
          "line_number": 1537,
          "context": "ADCConversionStatus status = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 215,
          "context": "} ADCConversionStatus;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 395,
          "context": "ADCConversionStatus Diagnostics_IsADCConversionComplete(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [
        {
          "name": "complete",
          "type": "bool",
          "description": ""
        },
        {
          "name": "error",
          "type": "ADCError",
          "description": ""
        }
      ],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_017",
      "name": "thermocoupleParams",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\diagnostics.h",
          "line_number": 222,
          "context": "} thermocoupleParams;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_018",
      "name": "position",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 243,
          "context": ".position = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 244,
          "context": ".latitude = cmdData.data.position.x,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 245,
          "context": ".longitude = cmdData.data.position.y,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 246,
          "context": ".altitude = cmdData.data.position.z,"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 335,
          "context": "telemetry.position = currentPos;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 17,
          "context": "static GPSPosition home_position = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 18,
          "context": "static bool home_position_set = false;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 32,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 49,
          "context": "if (!Navigation_IsValidPosition(&waypoint->position)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 131,
          "context": "void Navigation_GetCurrentPosition(GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 132,
          "context": "if (position != NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 133,
          "context": "*position = nav_state.current_position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 138,
          "context": "return nav_state.current_position.altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 155,
          "context": "nav_state.current_position.latitude = latitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 156,
          "context": "nav_state.current_position.longitude = longitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 157,
          "context": "nav_state.current_position.altitude = altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 158,
          "context": "nav_state.current_position.valid = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 169,
          "context": "nav_state.current_position.latitude += speed_deg * cosf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 170,
          "context": "nav_state.current_position.longitude += speed_deg * sinf(heading_rad);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 179,
          "context": "nav_state.current_position.altitude += vertical_speed;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 182,
          "context": "if (nav_state.current_position.altitude < NAV_MIN_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 183,
          "context": "nav_state.current_position.altitude = NAV_MIN_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 185,
          "context": "} else if (nav_state.current_position.altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 186,
          "context": "nav_state.current_position.altitude = NAV_MAX_ALTITUDE;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 227,
          "context": "bool Navigation_IsValidPosition(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 228,
          "context": "if (position == NULL) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 233,
          "context": "if (position->latitude < -90.0f || position->latitude > 90.0f ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 234,
          "context": "position->longitude < -180.0f || position->longitude > 180.0f ||"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 235,
          "context": "position->altitude < NAV_MIN_ALTITUDE || position->altitude > NAV_MAX_ALTITUDE) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 242,
          "context": "bool Navigation_IsInSafeZone(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 243,
          "context": "if (!position->valid || !home_position_set) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 248,
          "context": "float distance = Navigation_CalculateDistance(&home_position, position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 252,
          "context": "void Navigation_UpdateHomePosition(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 253,
          "context": "if (position != NULL && Navigation_IsValidPosition(position)) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 254,
          "context": "home_position = *position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 255,
          "context": "home_position_set = true;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 260,
          "context": "if (!home_position_set) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 263,
          "context": "return Navigation_CalculateDistance(&nav_state.current_position, &home_position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 279,
          "context": "&nav_state.current_position, &target->position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 281,
          "context": "&nav_state.current_position, &target->position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 59,
          "context": "GPSPosition position;      // Текущая GPS позиция"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 63,
          "context": "} position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 17,
          "context": "GPSPosition position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 25,
          "context": "GPSPosition current_position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 53,
          "context": "void Navigation_SetHomePosition(GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 67,
          "context": "void Navigation_GetCurrentPosition(GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 72,
          "context": "bool Navigation_IsValidPosition(const GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 73,
          "context": "bool Navigation_IsInSafeZone(const GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 76,
          "context": "void Navigation_UpdateHomePosition(const GPSPosition* position);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [
        {
          "name": "type",
          "type": "DroneCommandType",
          "description": ""
        }
      ],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_019",
      "name": "TelemetryPacket",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\main.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 81,
          "context": "} TelemetryPacket;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_020",
      "name": "GPSPosition",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 321,
          "context": "GPSPosition currentPos;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 17,
          "context": "static GPSPosition home_position = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 131,
          "context": "void Navigation_GetCurrentPosition(GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 154,
          "context": "void Navigation_EmulateGPSPosition(float latitude, float longitude, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 193,
          "context": "float Navigation_CalculateDistance(const GPSPosition* pos1, const GPSPosition* pos2) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 211,
          "context": "float Navigation_CalculateBearing(const GPSPosition* pos1, const GPSPosition* pos2) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 227,
          "context": "bool Navigation_IsValidPosition(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 242,
          "context": "bool Navigation_IsInSafeZone(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 252,
          "context": "void Navigation_UpdateHomePosition(const GPSPosition* position) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 59,
          "context": "GPSPosition position;      // Текущая GPS позиция"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 13,
          "context": "} GPSPosition;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 17,
          "context": "GPSPosition position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 25,
          "context": "GPSPosition current_position;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 37,
          "context": "GPSPosition homePosition;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 53,
          "context": "void Navigation_SetHomePosition(GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 67,
          "context": "void Navigation_GetCurrentPosition(GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 72,
          "context": "bool Navigation_IsValidPosition(const GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 73,
          "context": "bool Navigation_IsInSafeZone(const GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 76,
          "context": "void Navigation_UpdateHomePosition(const GPSPosition* position);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 79,
          "context": "void Navigation_EmulateGPSPosition(float latitude, float longitude, float altitude);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_021",
      "name": "Waypoint",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 242,
          "context": "Waypoint targetPoint = {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 255,
          "context": "Navigation_ClearWaypoints();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 256,
          "context": "Navigation_AddWaypoint(&targetPoint);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 398,
          "context": "Navigation_ClearWaypoints();    // Очищаем все точки маршрута"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 416,
          "context": "Navigation_ClearWaypoints();    // Очищаем все точки маршрута"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 14,
          "context": "static Waypoint waypoints[MAX_WAYPOINTS];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 40,
          "context": "Navigation_ClearWaypoints();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 44,
          "context": "bool Navigation_AddWaypoint(const Waypoint* waypoint) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 60,
          "context": "bool Navigation_RemoveWaypoint(uint8_t index) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 80,
          "context": "void Navigation_ClearWaypoints(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 86,
          "context": "uint8_t Navigation_GetWaypointCount(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 90,
          "context": "bool Navigation_GetWaypoint(uint8_t index, Waypoint* waypoint) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 277,
          "context": "const Waypoint* target = &waypoints[current_waypoint_index];"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 21,
          "context": "} Waypoint;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 38,
          "context": "Waypoint currentWaypoint;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 61,
          "context": "bool Navigation_AddWaypoint(const Waypoint* waypoint);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 62,
          "context": "bool Navigation_RemoveWaypoint(uint8_t index);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 63,
          "context": "bool Navigation_GetWaypoint(uint8_t index, Waypoint* waypoint);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 64,
          "context": "void Navigation_ClearWaypoints(void);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [
        {
          "name": "position",
          "type": "GPSPosition",
          "description": ""
        }
      ],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_022",
      "name": "NavigationState",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 13,
          "context": "static NavigationState nav_state = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 21,
          "context": "static void UpdateNavigationState(void);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 25,
          "context": "memset(&nav_state, 0, sizeof(NavigationState));"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 125,
          "context": "void Navigation_GetCurrentState(NavigationState* state) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 160,
          "context": "UpdateNavigationState();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 175,
          "context": "UpdateNavigationState();"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\navigation.c",
          "line_number": 270,
          "context": "static void UpdateNavigationState(void) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 32,
          "context": "} NavigationState;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 36,
          "context": "NavigationState state;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [
        {
          "name": "current_position",
          "type": "GPSPosition",
          "description": ""
        }
      ],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_023",
      "name": "NavigationData",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 77,
          "context": "NavigationData navData;        // Навигационные данные"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\navigation.h",
          "line_number": 41,
          "context": "} NavigationData;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [
        {
          "name": "state",
          "type": "NavigationState",
          "description": ""
        },
        {
          "name": "homePosition",
          "type": "GPSPosition",
          "description": ""
        },
        {
          "name": "currentWaypoint",
          "type": "Waypoint",
          "description": ""
        },
        {
          "name": "waypointCount",
          "type": "uint8_t",
          "description": ""
        },
        {
          "name": "returnToHomeActive",
          "type": "bool",
          "description": ""
        }
      ],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_024",
      "name": "MPU6050_Data",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 23,
          "context": "static MPU6050_Data mpu6050_data = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 51,
          "context": "void MPU6050_Read(MPU6050_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 143,
          "context": "void Sensors_GetIMUData(MPU6050_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 152,
          "context": "MPU6050_Data imu;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 111,
          "context": "MPU6050_Data imuData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 23,
          "context": "} MPU6050_Data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 41,
          "context": "MPU6050_Data imu;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [
        {
          "name": "temperature",
          "type": "float",
          "description": "Температура (в градусах Цельсия)"
        }
      ],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_025",
      "name": "BMP280_Data",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 24,
          "context": "static BMP280_Data bmp280_data = {0};"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 60,
          "context": "void BMP280_Read(BMP280_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 195,
          "context": "void Sensors_GetBaroData(BMP280_Data* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 112,
          "context": "BMP280_Data altData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 30,
          "context": "} BMP280_Data;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 42,
          "context": "BMP280_Data baro;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 53,
          "context": "void Sensors_GetBaroData(BMP280_Data* data);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_026",
      "name": "Orientation",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 262,
          "context": "Stabilization_SetTargetOrientation("
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 338,
          "context": "Orientation currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 339,
          "context": "Sensors_GetOrientation(&currentOrientation);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 340,
          "context": "telemetry.orientation = currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 149,
          "context": "void Sensors_GetOrientation(Orientation* orientation) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 29,
          "context": "Orientation currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 48,
          "context": "stabState.currentOrientation.roll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 49,
          "context": "stabState.currentOrientation.pitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 50,
          "context": "stabState.currentOrientation.yaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 97,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 113,
          "context": "Orientation currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 117,
          "context": "Sensors_GetOrientation(&currentOrientation);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 120,
          "context": "stabState.currentOrientation.roll = currentOrientation.roll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 121,
          "context": "stabState.currentOrientation.pitch = currentOrientation.pitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 122,
          "context": "stabState.currentOrientation.yaw = currentOrientation.yaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 125,
          "context": "float rollError = stabState.targetSetPoint.roll - stabState.currentOrientation.roll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 126,
          "context": "float pitchError = stabState.targetSetPoint.pitch - stabState.currentOrientation.pitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 127,
          "context": "float yawError = stabState.targetSetPoint.yaw - stabState.currentOrientation.yaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 144,
          "context": "void Stabilization_GetCurrentOrientation(Orientation* orientation) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 146,
          "context": "*orientation = stabState.currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\communication.h",
          "line_number": 60,
          "context": "Orientation orientation;   // Текущая ориентация"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 37,
          "context": "} Orientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 29,
          "context": "Orientation currentOrientation;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 47,
          "context": "void Stabilization_SetTargetOrientation(float roll, float pitch, float yaw, float altitude);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 48,
          "context": "void Stabilization_GetCurrentOrientation(Orientation* orientation);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_027",
      "name": "SensorData",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\main.c",
          "line_number": 76,
          "context": "static SensorData sensorData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\sensors.c",
          "line_number": 181,
          "context": "void Sensors_GetAllData(SensorData* data) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 76,
          "context": "SensorData sensorData;         // Данные с датчиков"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 44,
          "context": "} SensorData;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\sensors.h",
          "line_number": 52,
          "context": "void Sensors_GetAllData(SensorData* data);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [
        {
          "name": "imu",
          "type": "MPU6050_Data",
          "description": ""
        },
        {
          "name": "baro",
          "type": "BMP280_Data",
          "description": ""
        },
        {
          "name": "isCalibrated",
          "type": "bool",
          "description": ""
        }
      ],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_028",
      "name": "PIDController",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 8,
          "context": "static float UpdatePID(PIDController* pid, float error);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 30,
          "context": "PIDController rollPID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 31,
          "context": "PIDController pitchPID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 32,
          "context": "PIDController yawPID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 33,
          "context": "PIDController altitudePID;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 189,
          "context": "static float UpdatePID(PIDController* pid, float error) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 17,
          "context": "} PIDController;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_029",
      "name": "SetPoint",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 28,
          "context": "SetPoint targetSetPoint;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 42,
          "context": "stabState.targetSetPoint.roll = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 43,
          "context": "stabState.targetSetPoint.pitch = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 44,
          "context": "stabState.targetSetPoint.yaw = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 45,
          "context": "stabState.targetSetPoint.altitude = 0.0f;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 99,
          "context": "stabState.targetSetPoint.roll = ClampValue(roll, -MAX_ROLL_ANGLE, MAX_ROLL_ANGLE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 100,
          "context": "stabState.targetSetPoint.pitch = ClampValue(pitch, -MAX_PITCH_ANGLE, MAX_PITCH_ANGLE);"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 101,
          "context": "stabState.targetSetPoint.yaw = yaw;  // Рыскание может быть любым (0-360)"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 102,
          "context": "stabState.targetSetPoint.altitude = fmaxf(altitude, 0.0f);  // Высота не может быть отрицательной"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 125,
          "context": "float rollError = stabState.targetSetPoint.roll - stabState.currentOrientation.roll;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 126,
          "context": "float pitchError = stabState.targetSetPoint.pitch - stabState.currentOrientation.pitch;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 127,
          "context": "float yawError = stabState.targetSetPoint.yaw - stabState.currentOrientation.yaw;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 128,
          "context": "float altitudeError = stabState.targetSetPoint.altitude - altData.altitude;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 150,
          "context": "void Stabilization_GetSetPoint(SetPoint* setPoint) {"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\core\\stabilization.c",
          "line_number": 152,
          "context": "*setPoint = stabState.targetSetPoint;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 25,
          "context": "} SetPoint;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 30,
          "context": "SetPoint targetSetPoint;"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 49,
          "context": "void Stabilization_GetCurrentSetPoint(SetPoint* setPoint);"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    },
    {
      "id": "struct_030",
      "name": "StabilizationData",
      "description": "",
      "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
      "links_in_code": [
        {
          "file_path": "d:\\keil\\prog\\src\\include\\main.h",
          "line_number": 78,
          "context": "StabilizationData stabData;    // Данные стабилизации"
        },
        {
          "file_path": "d:\\keil\\prog\\src\\include\\stabilization.h",
          "line_number": 33,
          "context": "} StabilizationData;"
        }
      ],
      "comments": "",
      "warnings": "",
      "deprecated": false,
      "tags": [],
      "documentation_link": "",
      "fields": [
        {
          "name": "currentOrientation",
          "type": "Orientation",
          "description": ""
        },
        {
          "name": "targetSetPoint",
          "type": "SetPoint",
          "description": ""
        },
        {
          "name": "motorOutputs[4]",
          "type": "float",
          "description": ""
        },
        {
          "name": "isStable",
          "type": "bool",
          "description": ""
        }
      ],
      "size": 0,
      "alignment": 0,
      "used_in_functions": [],
      "inheritance": "",
      "packed": false
    }
  ]
}